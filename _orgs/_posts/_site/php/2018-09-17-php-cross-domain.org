#+TITLE:  PHP 跨域问题 
#+AUTHOR:    zrg
#+EMAIL:     zrg1390556487@gmail.com
#+LANGUAGE:  cn
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:plain toc:t ltoc:t mouse:underline buttons:0 path:http://cs3.swfc.edu.cn/~20121156044/.org-info.js />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://cs3.swfu.edu.cn/~20121156044/.org-manual.css" />
#+EXPORT_SELECT_TAGS: export
#+HTML_HEAD_EXTRA: <style>body {font-size:14pt} code {font-weight:bold;font-size:12px; color:darkblue}</style>
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT: 

#+STARTUP: showall indent
#+STARTUP: hidestars
#+BEGIN_EXPORT HTML
---
layout: post
title:  PHP 跨域问题解决
author: zrg
description: PHP 跨域问题
excerpt: 
comments: false
categories: 
- php
tags:
- PHP-跨域问题
---
#+END_EXPORT

# (setq org-export-html-use-infojs nil)
感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！
# (setq org-export-html-style nil)

* 问题概述
: 现代浏览器针对不同域名之间的ajax请求，一般情况下会阻止你获取到ajax返回内容（即使是1.a.com和2.a.com也算跨域）。这是浏览器的为安全性考虑实施的非常重要的安全策略。
* 请求跨域问题解决
: 下面通过一个 Ajax 请求示例来说明：
** Client
#+CAPTION: 客户端请求代码
#+BEGIN_SRC emacs-lisp
// 上传文件
function upload_idcard_file(_this,type){
	var formData = new FormData();
	formData.append('type',type);
	formData.append('file',_this.files[0]);
	$.ajax({
		url: '{$upload_file_url}',
	        type: 'POST',
		dataType: 'json',
		data: formData,
		cache: false,
		contentType : false,
		processData : false,
		headers : {"access_token" : "{$access_token}"},
		success:function(d){
			var img_url = d.data;
			img_url = 'http:'+img_url;
			load_img(_this.id,img_url);
	        },
		error:function(err){
			console.log(err);
	        }
	});
}
#+END_SRC
** Server
#+CAPTION: 粗糙解决方式
#+BEGIN_SRC emacs-lisp
// 允许所有跨域请求
header('Access-Control-Allow-Origin: *');

// 只允许 http://www.baidu.com 发来的跨域请求
// header('Access-Control-Allow-Origin: http://www.baidu.com');

// 设置支持的 http 请求方式
header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');

// 允许的响应头字段，请按照自己需求添加
header('Access-Control-Allow-Headers:access_token');
#+END_SRC

#+CAPTION: 动态判断处理跨域问题
#+BEGIN_SRC emacs-lisp
if(isset($_SERVER['HTTP_ORIGIN'])){
	// 请求方法
        $request_method = $_SERVER['REQUEST_METHOD'];
        // 定义一个允许跨域请求接口的域名列表，这里你可以用配置也可以用其它形式，我这里只是用$GLOBALS简单演示一下
        $allow_origin = array(
        'baidu.com',
        'bing.com'
        );
        // 判断是否有origin请求头
        if(in_array($request_method, $allow_origin)
        {
                header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);
                header('Access-Control-Allow-Credentials: true'); // 客户端携带证书式访问。出于安全考虑，该项设置为true时，Access-Control-Allow-Origin 的值不允许为「*」
                header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');
                header('Access-Control-Allow-Headers:x-requested-with,content-type,access_token');
        }
    }
}
#+END_SRC
* Session 跨域问题解决
#+BEGIN_SRC emacs-lisp
ini_set('session.cookie_domain', '.a.com');
header('Access-Control-Allow-Credentials: true');
#+END_SRC
** 参考资料
+ [[https://blog.csdn.net/z69183787/article/details/78954325][跨域Ajax请求时是否带Cookie的设置]]
