#+TITLE:     ACM
#+AUTHOR:    zrg
#+EMAIL:     zrg1390556487@gmail.com
#+LANGUAGE:  cn
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:plain toc:t ltoc:t mouse:underline buttons:0 path:http://cs3.swfc.edu.cn/~20121156044/.org-info.js />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://cs3.swfu.edu.cn/~20121156044/.org-manual.css" />
#+HTML_HEAD_EXTRA: <style>body {font-size:16pt} code {font-weight:bold;font-size:100%; color:darkblue}</style>
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT: 

#+BEGIN_EXPORT HTML
---
layout: post
title: ACM
author: zrg
comments: false
description: ACM (Association for Computing Machinery ) 中文：国际计算机学会。ACM是一个世界性的计算机从业员专业组织，创立于1947年，是世界上第一个科学性及教育性计算机学会，目前在全世界130多个国家和地区拥有超过10万名的会员。ACM是全世界计算机领域影响力最大的专业学术组织。ACM所评选的图灵奖（A.M. Turing Award）被公认为世界计算机领域的诺贝尔奖。
categories:
- algorithms
tags:
- ACM
photos:
---
#+END_EXPORT

# (setq org-export-html-use-infojs nil)
# (setq org-export-html-style nil)

* 1～100
** A+B problem
: 描述
: 	此题为练手用题，请大家计算一下a+b的值.
: 输入
: 	输入两个数，a,b
: 输出
: 	输出a+b的值
#+NAME:C
#+BEGIN_SRC C
#include<stdio.h>
int main(){
	int a,b;
	printf("请输入两个整数(用逗号分隔)：");
	scanf("%d,%d",&a,&b);
	printf("%d\n",a+b);
}
#+END_SRC

#+NAME:C++
#+BEGIN_SRC C++
#include<iostream>
using namespace std;
int main(){
	int a,b;
	cin>>a>>b;
	cout<<a+b<<endl;
}
#+END_SRC
** 括号配对问题
: 描述
: 	现在，有一行括号序列，请你检查这行括号是否配对。
: 输入
: 	第一行输入一个数N（0<N<=100）,表示有N组测试数据。后面的N行输入多组输入数据，每组输入数据都是一个字符串S(S的长度小于10000，且S不是空串），测试数据组数少于5组。数据保证S中只含有"[", "]", "(", ")" 四种字符
: 输出
: 	每组输入数据的输出占一行，如果该字符串中所含的括号是配对的，则输出Yes,如果不配对则输出No
#+NAME:C
#+BEGIN_SRC C

#+END_SRC
** 多边形重心问题
: 描述
: 	在某个多边形上，取n个点，这n个点顺序给出，按照给出顺序将相邻的点用直线连接， （第一个和最后一个连接），所有线段不和其他线段相交，但是可以重合，可得到一个多边形或一条线段或一个多边形和一个线段的连接后的图形； 
: 	如果是一条线段,我们定义面积为0，重心坐标为（0,0）.现在求给出的点集组成的图形的面积和重心横纵坐标的和；
: 输入
: 	第一行有一个整数0<n<11,表示有n组数据；
: 	每组数据第一行有一个整数m<10000,表示有这个多边形有m个顶点；
: 输出
: 	输出每个多边形的面积、重心横纵坐标的和，小数点后保留三位；
#+NAME:C
#+BEGIN_SRC C

#+END_SRC
** ASCII码排序
: 描述
: 	输入三个字符（可以重复）后，按各字符的ASCII码从小到大的顺序输出这三个字符。
: 输入
: 	第一行输入一个数N,表示有N组测试数据。后面的N行输入多组数据，每组输入数据都是占一行，有三个字符组成，之间无空格。
: 输出
: 	对于每组输入数据，输出一行，字符中间用一个空格分开。
#+NAME:
#+BEGIN_SRC C

#+END_SRC
** 
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC
#+NAME:
#+BEGIN_SRC C

#+END_SRC

* 101~200
** 
#+NAME:
#+BEGIN_SRC C

#+END_SRC
* 201~300
* 301~400
* 题目来源
: 南京理工大学 ACM ：http://acm.nyist.edu.cn
