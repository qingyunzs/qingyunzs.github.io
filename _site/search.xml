<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Docker notes]]></title>
      <url>/software/2019/07/11/docker/</url>
      <content type="text"><![CDATA[Docker简介什么是 Docker？Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。为什么要使用 Docker？  更高效的利用系统资源  更快速的启动时间  一致的运行环境  持续交付和部署  更轻松的迁移  更轻松的维护和扩展  对比传统虚拟机总结            特性      容器      虚拟机                  启动      秒级      分钟级              硬盘使用      一般为 MB      一般为 GB              性能      接近原生      弱于              系统支持量      单机支持上千个容器      一般几十个      基本概念  镜像(Image)Docker 镜像，就相当于是一个 root 文件系统。比如官方镜像 ubuntu:18.04 就包含了完整的一套 Ubuntu 18.04 最小系统的 root 文件系统。Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。  分层存储Docker 利用了 Union FS 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。镜像构建时，会一层层构建，前一层是后一层的基础。在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。  容器(Container)容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。  仓库(Repository)Docker RegistryDocker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。Docker Registry 公开服务开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。最常使用的 Registry 公开服务  官方的 Docker Hub  CoreOS  Quay.io  时速云镜像仓库  网易云镜像服务  DaoCloud 镜像市场  阿里云镜像库由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（Registry Mirror），这些镜像服务被称为加速器。常见的有：  阿里云加速器  DaoCloud 加速器Install Docker CEUbuntuInstallation  Uninstall old versions          $ sudo apt remove docker docker-engine docker.io containerd runc        Install packages to allow apt to use a repository over HTTPS:          $ sudo apt update$ sudo apt-get install \apt-transport-https \ca-certificates \curl \gnupg-agent \software-properties-common        Add Docker’s official GPG key:          $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.sudo apt-key fingerprint 0EBFCD88pub   rsa4096 2017-02-22 [SCEA]   9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88uid           [ unknown] Docker Release (CE deb) docker@docker.comsub   rsa4096 2017-02-22 [S]        Use the following command to set up the stable repository.          $ sudo add-apt-repository \“deb [arch=amd64] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) \stable”        Install the latest version of Docker CE and containerd, or go to the next step to install a specific version:          $ sudo apt-get install docker-ce docker-ce-cli containerd.io        To install a specific version of Docker CE, list the available versions in the repo, then select and install:          List the versions available in your repo:                  $ apt-cache madison docker-ce                      Install a specific version using the version string from the second column, for example,          $ sudo apt-get install docker-ce= docker-ce-cli= containerd.io              Verify that Docker CE is installed correctly by running the hello-world image.$ sudo docker run hello-world        Test Docker Version and Installation// List Docker CLI commands$ docker$ docker container –help              // Display Docker version and info$ sudo docker –version$ sudo docker version$ sudo docker info      Uninstall Docker CE// Uninstall the Docker CE package$ sudo apt purge docker-ce// Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes:$ sudo rm -rf /var/lib/docker  Get Started with DockerDefine a container with Dockerfile  Create an empty directory on your local machine. Change directories (cd) into the new directory, create a file called Dockerfile          $ vim Dockerfile      # Use an official Python runtime as a parent imageFROM python:3.7-slim# Set the working directory to /appWORKDIR /app# Copy the current directory contents into the container at /appCOPY . /app# Install any needed packages specified in requirements.txtRUN pip install --trusted-host pypi.python.org -r requirements.txt# Make port 80 available to the world outside this containerEXPOSE 80# Define environment variableENV NAME World# Run app.py when the container launchesCMD ["python", "app.py"]              Create two more files, requirements.txt and app.py          $ vim requirements.txt      FlaskRedis            $ vim app.py```shellfrom flask import Flaskfrom redis import Redis, RedisErrorimport osimport socket      Connect to Redisredis = Redis(host=”redis”, db=0, socket_connect_timeout=2, socket_timeout=2)app = Flask(name)@app.route(“/”)def hello():    try:        visits = redis.incr(“counter”)    except RedisError:        visits = “cannot connect to Redis, counter disabled”html = "&lt;h3&gt;Hello {name}!&lt;/h3&gt;" \       "&lt;b&gt;Hostname:&lt;/b&gt; {hostname}&lt;br/&gt;" \       "&lt;b&gt;Visits:&lt;/b&gt; {visits}"return html.format(name=os.getenv("NAME", "world"), hostname=socket.gethostname(), visits=visits)if name == “main”:    app.run(host=’0.0.0.0’, port=80)3. Installs the Flask and Redis libraries for Python&gt; $ sudo pip install -r requirements.txt4. Build the app&gt; $ ls&gt; // Create image using this directory's Dockerfile&gt; $ sudo docker build --tag=friendlyhello .&gt; // List all images on this machine&gt; $ sudo docker image ls5. Proxy server settings```shell# Proxy server settings# Proxy servers can block connections to your web app once it’s up and running. If you are behind a proxy server, add the following lines to your Dockerfile, using the ENV command to specify the host and port for your proxy servers:# Set proxy server, replace host:port with values for your serversENV http_proxy host:portENV https_proxy host:port  DNS settings    # DNS settings# DNS misconfigurations can generate problems with pip. You need to set your own DNS server address to make pip work properly. You might want to change the DNS settings of the Docker daemon. You can edit (or create) the configuration file at /etc/docker/daemon.json with the dns key, as following:{  "dns": ["your_dns_address", "8.8.8.8"]}        Before proceeding, save daemon.json and restart the docker service.          $ sudo service docker restart        Run the app          // Run the app, mapping your machine’s port 4000 to the container’s published port 80 using -p:$ sudo docker run -p 4000:80 friendlyhello// Let’s run the app in the background, in detached mode:$ sudo docker run -d -p 4000:80 friendlyhello      Go to that URL in a web browser to see the display content served up on a web page.Share your image  Log in with your Docker IDIf you don’t have a Docker account, sign up for one at hub.docker.com. Make note of your username.Log in to the Docker public registry on your local machine.          $ sudo docker login        Tag the image          // Run docker tag image with your username, repository, and tag names so that the image uploads to your desired destination. The syntax of the command is:docker tag &lt;image&gt; username/repository:tag// For example:$ sudo docker tag friendlyhello gordon/get-started:part2        Publish the image          // Upload your tagged image to the repository:$ sudo docker push username/repository:tag// Pull and run the image from the remote repositorydocker run -p 4000:80 username/repository:tag$ sudo docker run -p 4000:80 gordon/get-started:part2      Recap and cheat sheet(optional)docker build -t friendlyhello .  # Create image using this directory's Dockerfiledocker run -p 4000:80 friendlyhello  # Run "friendlyhello" mapping port 4000 to 80docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached modedocker container ls                                # List all running containersdocker container ls -a             # List all containers, even those not runningdocker container stop &lt;hash&gt;           # Gracefully stop the specified containerdocker container kill &lt;hash&gt;         # Force shutdown of the specified containerdocker container rm &lt;hash&gt;        # Remove specified container from this machinedocker container rm $(docker container ls -a -q)         # Remove all containersdocker image ls -a                             # List all images on this machinedocker image rm &lt;image id&gt;            # Remove specified image from this machinedocker image rm $(docker image ls -a -q)   # Remove all images from this machinedocker login             # Log in this CLI session using your Docker credentialsdocker tag &lt;image&gt; username/repository:tag  # Tag &lt;image&gt; for upload to registrydocker run username/repository:tag                   # Run image from a registryReferences  Docker — 从入门到实践  Union FS]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Docker </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[使用 Shadowsocks + SwitchyOmega 科学上网]]></title>
      <url>/network/software/2019/06/23/shadowsocks-switchyOmega-cn/</url>
      <content type="text"><![CDATA[本文内容仅作交流学习和查阅技术资料之用，请勿用于商业用途！如造成任何后果，本文作者概不负责。谢谢您的关注！如果您有任何问题或建议，可以发送邮件到 zrg1390556487@gmail.com1 服务端1.1 服务部署第一步首先，购买一台境外云服务器搬瓦工DigitalOceanAWSVultr1.2 安装和配置 Shadowsocks安装 pip// CentOS# yum install python-pip或者:# curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"# python get-pip.py安装及配置 shadowsocks// 使用 pip 安装 shadowsocks# pip install shadowsocks// 也可以选择自动安装脚本install-shadowsocks.sh// 配置 shadowsocks# vim /etc/shadowsocks.json{  "server": "123.123.123.123",  "server_port": 8388,  "local_address":"127.0.0.1",  "local_port":1080,  "port_password":{          "9001":"password9001",          "9002":"password9002",          "9003":"password9003"     },  "password": "password",  "method": "aes-256-cfb",  "timeout":600}解释: - "server": "123.123.123.123" :: 服务器 IP 地址- "server_port": 8388 :: 服务器端口号- "local_address":"127.0.0.1" :: 本地回环地址- "local_port":1080, :: 本地端口号- "port_password" :: 映射端口和密码- "password": "password" :: 密码- "method": "aes-256-cfb" :: 加密方式，详细可参考 [[http://ucdok.com/project/generate_password.html][password tool]]- "timeout":600 :: 超时时间配置自启动脚本# vim /etc/systemd/system/shadowsocks.service[Unit]Description=Shadowsocks[Service]TimeoutStartSec=0ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json[Install]WantedBy=multi-user.target设置 shadowsocks 自启动# systemctl enable shadowsocks# systemctl start shadowsocks# systemctl status shadowsocks -l1.3 使用 Docker 安装 Shadowsocks安装 docker# yum install docker# systemctl enable docker# systemctl start docker部署 Shadowsocks# docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s "-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open"2 客户端目前支持以下客户端进行连接：LinuxWindowsMac OS XAndroidIOS2.1 Linux2.1.1 安装、配置和使用 Linux Shadowsocks 客户端Linux 系列Debian/Ubuntu:$ sudo apt-get install python-pip$ sudo pip install shadowsocksFedora/Centos:$ sudo yum install python-setuptoolsor$ sudo dnf install python-setuptools$ sudo easy_install pip$ sudo pip install shadowsocksOpenSUSE:$ sudo zypper install python-pip$ sudo pip install shadowsocksArchlinux:$ sudo pacman -S python-pipsudo pip install shadowsockssslocal 是客户端软件，ssserver 是服务端软件，常见于 Linux 发行版，如 Ubuntu。sslocal 在 usr/local/bin 目录下，也有其他发行版在 /usr/bin 目录下，可以使用 whereis 命令找到它的位置。$ whereis sslocalsslocal: /usr/local/bin/sslocal/etc/shadowsocks.json{"server":"server-ip","server_port":8000,"local_address": "127.0.0.1","local_port":1080,"password":"your-password","timeout":600,"method":"aes-256-cfb"}// 启动$ sudo sslocal -c /etc/shadowsocks.json// 后台运行$ sudo sslocal -c /etc/shadowsocks.json -d start/etc/rc.local$ sudo vim /etc/rc.localsudo sslocal -c /etc/shadowsocks.json -d start// 检查是否正常工作# sudo systemctl status rc-local.service2.1.2 开启全局代理安装及配置 polipo$ sudo apt install polipo$ sudo vim /etc/polipo/configlogSyslog = truelogFile = /var/log/polipo/polipo.logproxyAddress = "0.0.0.0"socksParentProxy = "127.0.0.1:1080"socksProxyType = socks5chunkHighMark = 50331648objectHighMark = 16384serverMaxSlots = 64serverSlots = 16serverSlots1 = 32重启 polipo$ sudo systemctl restart polipo设置全局变量 http_proxy and https_proxy$ export http_proxy="http://127.0.0.1:8123/"$ export https_proxy="https://127.0.0.1:8123/"测试$ curl www.google.com2.1.3 问题解决ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup[原因分析]openssl 1.1.0 "EVP_CIPHER_CTX_cleanup" is old.[解决办法]$ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.pyVIM Command&#65306;:%s/cleanup/reset/:xnot support "chacha20"[解决办法]$ apt install m2crypto gcc -y$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz$ tar zxvf libsodium-1.0.8.tar.gz$ cd libsodium-1.0.8$ sudo ./configure$ sudo make &amp;&amp; make install$ sudo echo "include ld.so.conf.d/*.conf" &gt; /etc/ld.so.conf$ sudo echo "/lib" &gt;&gt; /etc/ld.so.conf$ sudo echo "/usr/lib64" &gt;&gt; /etc/ld.so.conf$ sudo echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf$ sudo ldconfig2.2 Windows2.2.1 下载发送邮件至 zrg1390556487@gmail.com，索取 Windows Shadowsocks 客户端。2.2.2 配置解压运行配置设置代理2.3 Android2.3.1 下载发送邮件至 zrg1390556487@gmail.com，索取 Android Shadowsocks 客户端。2.3.2 配置2.4 IOS打开 Apple 应用市场, 搜索 "shadowrocket"。我记得不错的话，标价应该是：￥12配置2.5 Mac OS Xhttps://github.com/shadowsocks/ShadowsocksX-NG3 浏览器插件：SwitchyOmega该插件用于调节代理，方便快速切换代理上网模式。根据目前使用经验，Linux 必装，Windows 可选。3.1 下载发送邮件至 zrg1390556487@gmail.com，索取 Mac OS X Shadowsocks 客户端。3.2 配置设置代理设定规则可选规则rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txtorhttps://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt4 参考资料https://zh.wikipedia.org/zh-hans/Shadowsockshttps://shadowsocks.comhttp://shadowsocks.org/在 CentOS 7 下安装配置 shadowsocksInstall And Use Shadowsocks Command Line Client on LinuxShadowsocksR 客户端 小白使用教程ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanupSwitchyOmegaIOS系统推荐几款支持Shadowsocks的代理软件各种系统下Shadowsocks客户端的安装与配置linux 配置shadowsocks代理全局代理linux ubuntu下使用ss设置全局代理,命令行也走代理]]></content>
      <categories>
        
          <category> network </category>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Shadowsocks </tag>
        
          <tag> SwitchyOmega </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Learning Markdown]]></title>
      <url>/software/2019/06/05/markdown/</url>
      <content type="text"><![CDATA[标题#,一级标题 ##,二级标题###,三级标题 列表1. 有序列表 2. 有序列表 3. 无序列表引用&gt; 有的人活着，他已经死了；有的人死了，他还活着  有的人活着，他已经死了；有的人死了，他还活着图片![Google Logo](https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png)链接[Google](https://www.google.com/)Google分割线***粗体/斜体**作者***张三*作者张三代码```sh#/bin/shecho "hello world"```#/bin/shecho "hello world"区块标识这是一个区块数学公式上标、下标与组合  上标符号，符号：^  下标符号，符号：_  组合符号，符号：{}汉字、字体与格式  汉字形式，符号：\mbox{}  字体控制，符号：\displaystyle  下划线符号，符号：\underline  标签，符号\tag{数字}  上大括号，符号：\overbrace{算式}  下大括号，符号：\underbrace{算式}  上位符号，符号：\stacrel{上位符号}{基位符号}占位符  两个quad空格，符号：\qquad  quad空格，符号：\quad  大空格，符号\  中空格，符号:  小空格，符号\,  没有空格，符号``  紧贴，符号!定界符与组合  括号，符号：（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)  中括号，符号：[]  大括号，符号：{ }  自适应括号，符号：\left \right  组合公式，符号：{上位公式 \choose 下位公式}  组合公式，符号：{上位公式 \atop 下位公式}四则运算  加法运算，符号：+  减法运算，符号：-  加减运算，符号：\pm  减甲运算，符号：\mp  乘法运算，符号：\times  点乘运算，符号：\cdot  星乘运算，符号：\ast  除法运算，符号：\div  斜法运算，符号：/  分式表示，符号：\frac{分子}{分母}  分式表示，符号：{分子} \voer {分母}                              绝对值表示，符号：                               高级运算  平均数运算，符号：\overline{算式}  开二次方运算，符号：\sqrt  开方运算，符号：\sqrt[开方数]{被开方数}  对数运算，符号：\log  极限运算，符号：\lim  极限运算，符号：\displaystyle \lim  求和运算，符号：\sum  求和运算，符号：\displaystyle \sum  积分运算，符号：\int  积分运算，符号：\displaystyle \int  微分运算，符号：\partial  矩阵表示，符号：\begin{matrix} \end{matrix}逻辑运算  等于运算，符号：=  大于运算，符号：&gt;  小于运算，符号：&lt;  大于等于运算，符号：\geq  小于等于运算，符号：\leq  不等于运算，符号：\neq  不大于等于运算，符号：\ngeq  不大于等于运算，符号：\not\geq  不小于等于运算，符号：\nleq  不小于等于运算，符号：\not\leq  约等于运算，符号：\approx  恒定等于运算，符号：\equiv集合运算  属于运算，符号：\in  不属于运算，符号：\notin  不属于运算，符号：\not\in  子集运算，符号：\subset  子集运算，符号：\supset  真子集运算，符号：\subseteq  非真子集运算，符号：\subsetneq  真子集运算，符号：\supseteq  非真子集运算，符号：\supsetneq  非子集运算，符号：\not\subset  非子集运算，符号：\not\supset  并集运算，符号：\cup  交集运算，符号：\cap  差集运算，符号：\setminus  同或运算，符号：\bigodot  同与运算，符号：\bigotimes  实数集合，符号：\mathbb{R}  自然数集合，符号：\mathbb{Z}  空集，符号：\emptyset数学符号  无穷，符号：\infty  虚数，符号：\imath  虚数，符号：\jmath  数学符号，符号\hat{a}  数学符号，符号\check{a}  数学符号，符号\breve{a}  数学符号，符号\tilde{a}  数学符号，符号\bar{a}  矢量符号，符号\vec{a}  数学符号，符号\acute{a}  数学符号，符号\grave{a}  数学符号，符号\mathring{a}  一阶导数符号，符号\dot{a}  二阶导数符号，符号\ddot{a}  上箭头，符号：\uparrow  上箭头，符号：\Uparrow  下箭头，符号：\downarrow  下箭头，符号：\Downarrow  左箭头，符号：\leftarrow  左箭头，符号：\Leftarrow  右箭头，符号：\rightarrow  右箭头，符号：\Rightarrow  底端对齐的省略号，符号：\ldots  中线对齐的省略号，符号：\cdots  竖直对齐的省略号，符号：\vdots  斜对齐的省略号，符号：\ddots希腊字母            字母      实现      字母      实现                  A      A      α      \alhpa              B      B      β      \beta              Γ      \Gamma      γ      \gamma              Δ      \Delta      δ      \delta              E      E      ϵ      \epsilon              Z      Z      ζ      \zeta              H      H      η      \eta              Θ      \Theta      θ      \theta              I      I      ι      \iota              K      K      κ      \kappa              Λ      \Lambda      λ      \lambda              M      M      μ      \mu              N      N      ν      \nu              Ξ      \Xi      ξ      \xi              O      O      ο      \omicron              Π      \Pi      π      \pi              P      P      ρ      \rho              Σ      \Sigma      σ      \sigma              T      T      τ      \tau              Υ      \Upsilon      υ      \upsilon              Φ      \Phi      ϕ      \phi              X      X      χ      \chi              Ψ      \Psi      ψ      \psi              Ω      \v      ω      \omega      表格            姓名      性别      毕业学校      工资                  张三      男      重庆交通大学      3200              李四      男      贵州大学      5000              王五      女      北京大学      2000                  name      description                  :---      左对齐              ---:      右对齐              ---      居中      使用 sequence 画时序图注意: GitHub 暂不支持，或者说作者没有找到可用的第三方组件提供支持，所以在这你是看不到效果啦！title: 时序图例子A-&gt;B: 实线实箭头 B--&gt;C: 虚线实箭头 C-&gt;&gt;C: 实线虚箭头 note right of C: 自通知 note over B,C:横跨通知 C-&gt;A:长通知 note left of A:左通知使用 flow 画流程图注意: GitHub 暂不支持，或者说作者没有找到可用的第三方组件提供支持，所以在这你是看不到效果啦！start=&gt;start: 开始isLogin=&gt;condition: 是否登录login=&gt;operation: 登录check=&gt;subroutine: 校验用户信息view=&gt;operation: 浏览end=&gt;end: 结束start-&gt;isLoginisLogin(no)-&gt;login(right)-&gt;check-&gt;viewisLogin(yes)-&gt;viewview-&gt;endmermaid简介Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。Mermaid 作为一个使用 JS 渲染的库，生成的不是一个“图片”，而是一段 HTML 代码图表方向| name | description ||——|————-|| TB   | 从上到下    || BT   | 从下到上    || RL   | 从右到左    || LR   | 从左到右    |节点定义            name      description                  id[文字]      矩形节点              id(文字)      圆角矩形节点              id((文字))      圆形节点              id&gt;文字]      右向旗帜状节点              id{文字}      菱形节点      节点之间的连接线            name      description                  &gt;      添加尾部箭头              -      不添加尾部箭头              –      单线              –text–      单线上加文字              ==      粗线              ==text==      粗线加文字              -.-      虚线              -.text.-      虚线加文字              -&gt;      无箭头的实线              –&gt;      无箭头的虚线              -&gt;&gt;      有箭头的实线              –&gt;&gt;      有箭头的虚线              -x      末端为叉的实线（表示异步）              –x      末端为叉的虚线（表示异步）      mermaid: 流程图graph TBA(开始) --&gt; B[Round edge]B --&gt; C{Decision}C --&gt;|Y| D[Result one]C --&gt;|N| E[Result two]E --&gt;Fsubgraph 子图表名称F -- This is the text ---&gt; HH --&gt; I((H-I))I --&gt; J&gt;I-J]endH --&gt; Z(结束)D --&gt; Zgraph TB;A(开始) --&gt;B[Round edge]B --&gt; C{Decision}C --&gt;|Y| D[Result one]C --&gt;|N| E[Result two]E --&gt;Fsubgraph 子图表名称	F --&gt; H	H --&gt; I((H-I))	I --&gt; J&gt;I-J]endH --&gt; Z(结束)D --&gt; Zmermaid: 序列图sequenceDiagram    participant Alice    participant Bob    Alice-&gt;John: Hello John, how are you?    loop Healthcheck        John-&gt;John: Fight against hypochondria    end    Note right of John: Rational thoughts &lt;br/&gt;prevail...    John--&gt;Alice: Great!    John-&gt;Bob: How about you?    Bob--&gt;John: Jolly good!sequenceDiagram    participant Alice    participant Bob    Alice-&gt;John: Hello John, how are you?    loop Healthcheck        John-&gt;John: Fight against hypochondria    end    Note right of John: Rational thoughts &lt;br/&gt;prevail...    John--&gt;Alice: Great!    John-&gt;Bob: How about you?    Bob--&gt;John: Jolly good!mermaid: 甘特图gantt        dateFormat  YYYY-MM-DD        title Adding GANTT diagram functionality to mermaid        section A section        Completed task            :done,    des1, 2014-01-06,2014-01-08        Active task               :active,  des2, 2014-01-09, 3d        Future task               :         des3, after des2, 5d        Future task2               :         des4, after des3, 5d        section Critical tasks        Completed task in the critical line :crit, done, 2014-01-06,24h        Implement parser and jison          :crit, done, after des1, 2d        Create tests for parser             :crit, active, 3d        Future task in critical line        :crit, 5d        Create tests for renderer           :2d        Add to mermaid                      :1dgantt	dateFormat  YYYY-MM-DD	title Adding GANTT diagram functionality to mermaid	section A section	Completed task            :done,    des1, 2014-01-06,2014-01-08	Active task               :active,  des2, 2014-01-09, 3d	Future task               :         des3, after des2, 5d	Future task2               :         des4, after des3, 5d	section Critical tasks	Completed task in the critical line :crit, done, 2014-01-06,24h	Implement parser and jison          :crit, done, after des1, 2d	Create tests for parser             :crit, active, 3d	Future task in critical line        :crit, 5d	Create tests for renderer           :2d	Add to mermaid                      :1d]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Markdown </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[vue实例属性之el-template-render]]></title>
      <url>/javascript/2018/12/29/vue%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7%E4%B9%8Bel_template_render/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！优先级优先级-示例&lt;div class="vapp-1"&gt;&lt;/div&gt;&lt;div class="vapp-2"&gt;&lt;/div&gt;&lt;div class="vapp-3"&gt;&lt;/div&gt;new Vue({  el: '.vapp-1',  data: {    info: '&#36825;&#26159;&#36890;&#36807;el&#23646;&#24615;&#33719;&#21462;&#25346;&#36733;&#20803;&#32032;&#30340;outerHTML&#26041;&#24335;&#28210;&#26579;&#12290;'  },  template: '&lt;div&gt;&#36825;&#26159;template&#23646;&#24615;&#27169;&#26495;&#28210;&#26579;&#12290;&lt;/div&gt;',  render: function(h){    return h('div', {}, '&#36825;&#26159;render&#23646;&#24615;&#26041;&#24335;&#28210;&#26579;&#12290;')  }})new Vue({  el: '.vapp-2',  data: {    info: '&#36825;&#26159;&#36890;&#36807;el&#23646;&#24615;&#33719;&#21462;&#25346;&#36733;&#20803;&#32032;&#30340;outerHTML&#26041;&#24335;&#28210;&#26579;&#12290;'  },  template: '&lt;div&gt;&#36825;&#26159;template&#23646;&#24615;&#27169;&#26495;&#28210;&#26579;&#12290;&lt;/div&gt;'})new Vue({  el: '.vapp-3',  data: {    info: '&#36825;&#26159;&#36890;&#36807;el&#23646;&#24615;&#33719;&#21462;&#25346;&#36733;&#20803;&#32032;&#30340;outerHTML&#26041;&#24335;&#28210;&#26579;&#12290;'  }})独立构建和运行时构建ue.js 1.0，编译器需要依赖浏览器的DOM，所以无法将编译器和运行时分开。因此在Vue.js 1.0分发包中，编译器和运行时是打包在一起，都在浏览器端执行。Vue.js 2.0，为了支持服务端渲染(server-side rendering)，编译器不能依赖浏览器的DOM，所以必须将编译器和运行时分开。于是形成了独立构建（编译器 + 运行时）和运行时构建（仅运行时）。显而易见，运行时构建体积要小于独立构建。1. 模板编译器模板编译器的职责是将模板字符串编译为纯JavaScript的渲染函数，即将&lt;template&gt;编译成render函数。2. Vue.js的执行过程包含编译过程和运行过程，在编译过程，编译器将字符串模板(template)编译为渲染函数(render)，在运行过程，调用渲染函数。3. 运行时构建运行时构建指不能进行模板编译的Vue库。运行时构建不包含模板编译器，即不支持template选项，如果使用vue-loader和vueify预编译模板，只需要打包运行时，而不需要打包编译器。运行时构建，可以用render选项，但它只在单文件组件中起作用，因为单文件组件的模板是在构建时预编译到render函数中，运行时构建只有独立构建大小的30%，只有16Kb min+gzip大小。// &#19981;&#38656;&#35201;&#32534;&#35793;&#22120;new Vue({  render (h) {    return h('div', this.hello)  }})4. 独立构建独立构建指能够将template模板或者从el挂载元素提取的模板编译成渲染函数的Vue库，独立构建包含模板编译器，可以用template选项实时编译模板。// &#38656;&#35201;&#32534;&#35793;&#22120;new Vue({  template: '&lt;div&gt;&lt;/div&gt;'})使用vue-cli生成项目时，会提醒使用哪种构建方式，npm包默认导出的是运行时构建，即runtime版本vue.runtime.common.js，如果想使用独立构建，需要在webpack.config.js中配置alias。Referencesel，template，render属性优先性]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> Vue.js </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 调用新浪API生成短链接]]></title>
      <url>/php/2018/09/19/php-sina-short-url/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！APIhttp://api.t.sina.com.cn/short_url/shorten.json (返回结果是JSON格式)http://api.t.sina.com.cn/short_url/shorten.xml （返回结果是XML格式）请求参数source 申请应用时分配的AppKey，调用接口时代表应用的唯一身份。url_long 需要转换的长链接，需要URLencoded，最多不超过20个。创建source方法进入http://open.weibo.com/ ，选择菜单 微连接-&gt;网站接入。点击立即接入，创建新应用，随便填写应用名称，点击创建。创建成功后，AppKey就是source参数的值，可以用于请求创建短链接。测试代码Listing 1: 测试代码&lt;?php$api = 'http://api.t.sina.com.cn/short_url/shorten.json'; // json// $api = 'http://api.t.sina.com.cn/short_url/shorten.xml'; // xml$source = '&#24744;&#30003;&#35831;&#30340;AppKey';$url_long = 'http://blog.csdn.net/fdipzone';$request_url = sprintf($api.'?source=%s&amp;url_long=%s', $source, $url_long);$data = file_get_contents($request_url);echo $data;Referencesphp 调用新浪API生成短链接]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-新浪-短链接 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Php Cross Domain]]></title>
      <url>/2018/09/17/php-cross-domain/</url>
      <content type="text"><![CDATA[问题概述现代浏览器针对不同域名之间的ajax请求，一般情况下会阻止你获取到ajax返回内容（即使是1.a.com和2.a.com也算跨域）。这是浏览器的为安全性考虑实施的非常重要的安全策略。请求跨域问题解决下面通过一个 Ajax 请求示例来说明：ClientServerListing 1: 服务端处理：粗糙解决方式// &#26381;&#21153;&#31471;&#22788;&#29702;&#65306;&#31895;&#31961;&#35299;&#20915;&#26041;&#24335;// &#20801;&#35768;&#25152;&#26377;&#36328;&#22495;&#35831;&#27714;header('Access-Control-Allow-Origin: *');// &#21482;&#20801;&#35768; http://www.baidu.com &#21457;&#26469;&#30340;&#36328;&#22495;&#35831;&#27714;// header('Access-Control-Allow-Origin: http://www.baidu.com');// &#35774;&#32622;&#25903;&#25345;&#30340; http &#35831;&#27714;&#26041;&#24335;header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');// &#20801;&#35768;&#30340;&#21709;&#24212;&#22836;&#23383;&#27573;&#65292;&#35831;&#25353;&#29031;&#33258;&#24049;&#38656;&#27714;&#28155;&#21152;header('Access-Control-Allow-Headers:access_token');Listing 2: 服务端处理：动态判断处理跨域问题if(isset($_SERVER['HTTP_ORIGIN'])){    // &#35831;&#27714;&#26041;&#27861;    $request_method = $_SERVER['REQUEST_METHOD'];    // &#23450;&#20041;&#19968;&#20010;&#20801;&#35768;&#36328;&#22495;&#35831;&#27714;&#25509;&#21475;&#30340;&#22495;&#21517;&#21015;&#34920;&#65292;&#36825;&#37324;&#20320;&#21487;&#20197;&#29992;&#37197;&#32622;&#20063;&#21487;&#20197;&#29992;&#20854;&#23427;&#24418;&#24335;&#65292;&#25105;&#36825;&#37324;&#21482;&#26159;&#29992;$GLOBALS&#31616;&#21333;&#28436;&#31034;&#19968;&#19979;    $allow_origin = array(    'baidu.com',    'bing.com'    );    // &#21028;&#26029;&#26159;&#21542;&#26377;origin&#35831;&#27714;&#22836;    if(in_array($request_method, $allow_origin)    {        header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);        header('Access-Control-Allow-Credentials: true'); // &#23458;&#25143;&#31471;&#25658;&#24102;&#35777;&#20070;&#24335;&#35775;&#38382;&#12290;&#20986;&#20110;&#23433;&#20840;&#32771;&#34385;&#65292;&#35813;&#39033;&#35774;&#32622;&#20026;true&#26102;&#65292;Access-Control-Allow-Origin &#30340;&#20540;&#19981;&#20801;&#35768;&#20026;&#12300;*&#12301;        header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');        header('Access-Control-Allow-Headers:x-requested-with,content-type,access_token');    }    }}Session 跨域问题解决ini_set('session.cookie_domain', '.a.com');header('Access-Control-Allow-Credentials: true');参考资料跨域Ajax请求时是否带Cookie的设置]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 跨域问题解决]]></title>
      <url>/php/2018/09/17/php-cross-domain/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！问题概述现代浏览器针对不同域名之间的ajax请求，一般情况下会阻止你获取到ajax返回内容（即使是1.a.com和2.a.com也算跨域）。这是浏览器的为安全性考虑实施的非常重要的安全策略。请求跨域问题解决下面通过一个 Ajax 请求示例来说明：ClientListing 1: 客户端请求代码// &#19978;&#20256;&#25991;&#20214;function upload_idcard_file(_this,type){        var formData = new FormData();        formData.append('type',type);        formData.append('file',_this.files[0]);        $.ajax({                url: '{$upload_file_url}',                type: 'POST',                dataType: 'json',                data: formData,                cache: false,                contentType : false,                processData : false,                headers : {"access_token" : "{$access_token}"},                success:function(d){                        var img_url = d.data;                        img_url = 'http:'+img_url;                        load_img(_this.id,img_url);                },                error:function(err){                        console.log(err);                }        });}ServerListing 2: 粗糙解决方式// &#20801;&#35768;&#25152;&#26377;&#36328;&#22495;&#35831;&#27714;header('Access-Control-Allow-Origin: *');// &#21482;&#20801;&#35768; http://www.baidu.com &#21457;&#26469;&#30340;&#36328;&#22495;&#35831;&#27714;// header('Access-Control-Allow-Origin: http://www.baidu.com');// &#35774;&#32622;&#25903;&#25345;&#30340; http &#35831;&#27714;&#26041;&#24335;header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');// &#20801;&#35768;&#30340;&#21709;&#24212;&#22836;&#23383;&#27573;&#65292;&#35831;&#25353;&#29031;&#33258;&#24049;&#38656;&#27714;&#28155;&#21152;header('Access-Control-Allow-Headers:access_token');Listing 3: 动态判断处理跨域问题if(isset($_SERVER['HTTP_ORIGIN'])){        // &#35831;&#27714;&#26041;&#27861;        $request_method = $_SERVER['REQUEST_METHOD'];        // &#23450;&#20041;&#19968;&#20010;&#20801;&#35768;&#36328;&#22495;&#35831;&#27714;&#25509;&#21475;&#30340;&#22495;&#21517;&#21015;&#34920;&#65292;&#36825;&#37324;&#20320;&#21487;&#20197;&#29992;&#37197;&#32622;&#20063;&#21487;&#20197;&#29992;&#20854;&#23427;&#24418;&#24335;&#65292;&#25105;&#36825;&#37324;&#21482;&#26159;&#29992;$GLOBALS&#31616;&#21333;&#28436;&#31034;&#19968;&#19979;        $allow_origin = array(        'baidu.com',        'bing.com'        );        // &#21028;&#26029;&#26159;&#21542;&#26377;origin&#35831;&#27714;&#22836;        if(in_array($request_method, $allow_origin)        {                header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);                header('Access-Control-Allow-Credentials: true'); // &#23458;&#25143;&#31471;&#25658;&#24102;&#35777;&#20070;&#24335;&#35775;&#38382;&#12290;&#20986;&#20110;&#23433;&#20840;&#32771;&#34385;&#65292;&#35813;&#39033;&#35774;&#32622;&#20026;true&#26102;&#65292;Access-Control-Allow-Origin &#30340;&#20540;&#19981;&#20801;&#35768;&#20026;&#12300;*&#12301;                header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');                header('Access-Control-Allow-Headers:x-requested-with,content-type,access_token');        }    }}Session 跨域问题解决ini_set('session.cookie_domain', '.a.com');header('Access-Control-Allow-Credentials: true');参考资料跨域Ajax请求时是否带Cookie的设置]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-跨域问题 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Ajax]]></title>
      <url>/javascript/2018/09/17/ajax/</url>
      <content type="text"><![CDATA[感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！AJAX 简介全称：Asynchronous Javascript and XML，由 Javascript+CSS+DOM+XMLHttpRequest+XSTL+XHTML+XML 七种技术组成，其中技术核心是 XMLHttpRequest。同步和异步同步：发送方发出数据后，等接收方发回响应以后才发下一个数据包的通讯方式。异步：发送方发出数据后，不等接收方发回响应，接着发送下个数据包的通讯方式。XMLHttpRequestListing 1: Ajax 原生代码示例var ajax = {        get:function(url,func){        // XMLHttpRequest &#29992;&#20110;&#22312;&#21518;&#21488;&#19982;&#26381;&#21153;&#22120;&#20132;&#25442;&#25968;&#25454;           var xhr = new XMLHttpRequest();        xhr.open('GET', url, true);        xhr.onreadystatechange = function() {        // readyState == 4 &#35828;&#26126;&#35831;&#27714;&#24050;&#23436;&#25104;        if (xhr.readyState == 4 &amp;&amp; xhr.status == 200 || xhr.status == 304) {                 // &#20174;&#26381;&#21153;&#22120;&#33719;&#24471;&#25968;&#25454;              fn.call(this, xhr.responseText);          }    };    xhr.send();  },  // data &#24212;&#20026; 'a=a1&amp;b=b1' &#36825;&#31181;&#23383;&#31526;&#20018;&#26684;&#24335;&#65292;&#22312; jquery &#37324;&#22914;&#26524; data &#20026;&#23545;&#35937;&#20250;&#33258;&#21160;&#23558;&#23545;&#35937;&#36716;&#25104;&#36825;&#31181;&#23383;&#31526;&#20018;&#26684;&#24335;  post: function (url, data, fn) {    var xhr = new XMLHttpRequest();    xhr.open("POST", url, true);    // &#28155;&#21152; http &#22836;&#65292;&#21457;&#36865;&#20449;&#24687;&#33267;&#26381;&#21153;&#22120;&#26102;&#20869;&#23481;&#32534;&#30721;&#31867;&#22411;    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");      xhr.onreadystatechange = function() {      if (xhr.readyState == 4 &amp;&amp; (xhr.status == 200 || xhr.status == 304)) {        fn.call(this, xhr.responseText);      }    };    xhr.send(data);  }};jQuery AjaxAjax 参数详解Listing 2: jQuery Ajax 代码格式示例$.ajax({        url: URL, // &#21457;&#36865;&#35831;&#27714;&#30340;&#22320;&#22336;&#65288;&#40664;&#35748;&#20026;&#24403;&#21069;&#39029;&#22320;&#22336;)  type: "POST", // &#35831;&#27714;&#26041;&#24335;&#65306;post/get/put/delete&#65288;&#40664;&#35748;&#20026;get)  timeout: 600, // &#35831;&#27714;&#36229;&#26102;&#26102;&#38388;&#65292;&#21333;&#20301;&#27627;&#31186;  async:true, // true&#65292;&#24322;&#27493;&#35831;&#27714;&#65307;false&#65292;&#21516;&#27493;&#35831;&#27714;&#12290;  cache:false, // true&#65292;&#20174;&#27983;&#35272;&#22120;&#21152;&#36733;&#32531;&#23384;&#65307;false&#65292;&#19981;&#20174;&#27983;&#35272;&#22120;&#21152;&#36733;&#32531;&#23384;  data: JSON.stringify(stream), // &#21457;&#36865;&#21040;&#26381;&#21153;&#22120;&#30340;&#25968;&#25454;&#65292;&#35201;&#27714;&#20026;Object&#25110;String&#31867;&#22411;&#30340;&#21442;&#25968;&#12290;  dataType: "json",// &#39044;&#26399;&#26381;&#21153;&#22120;&#36820;&#22238;&#30340;&#25968;&#25454;&#31867;&#22411;&#12290;&#21487;&#29992;&#30340;&#31867;&#22411;&#26377;:xml,html,script,json,jsonp,text  contentType: "application/json; charset=utf-8", // &#24403;&#21457;&#36865;&#20449;&#24687;&#33267;&#26381;&#21153;&#22120;&#26102;&#65292;&#20869;&#23481;&#32534;&#30721;&#31867;&#22411;&#12290;&#40664;&#35748;&#20026;"application/x-www-form-urlencoded"&#65292;multipart/form-data&#65306;&#26377;&#26102;&#20505;&#20063;&#20250;&#36825;&#20010;&#65292;&#19978;&#20256;&#19979;&#36733;&#21487;&#33021;&#20250;&#29992;&#21040;&#12290;  beforeSend: function(XMLHttpRequest){        // &#35774;&#32622;&#35831;&#27714;&#22836;,&#21152;&#36733;loading&#30028;&#38754;  },  dataFilter:function(){ //&#32473;Ajax&#36820;&#22238;&#30340;&#21407;&#22987;&#25968;&#25454;&#36827;&#34892;&#39044;&#22788;&#29702;&#30340;&#20989;&#25968;&#12290;&#25552;&#20379;data&#21644;type&#20004;&#20010;&#21442;&#25968;&#12290;data&#26159;Ajax&#36820;&#22238;&#30340;&#21407;&#22987;&#25968;&#25454;&#65292;type&#26159;&#35843;&#29992;jQuery.ajax&#26102;&#25552;&#20379;&#30340;dataType&#21442;&#25968;&#12290;        //   },  global:false, //&#34920;&#31034;&#26159;&#21542;&#35302;&#21457;&#20840;&#23616;ajax&#20107;&#20214;&#12290;&#40664;&#35748;&#20026;true&#12290;  ifModified:false, //&#20165;&#22312;&#26381;&#21153;&#22120;&#25968;&#25454;&#25913;&#21464;&#26102;&#33719;&#21462;&#26032;&#25968;&#25454;&#12290;&#26381;&#21153;&#22120;&#25968;&#25454;&#25913;&#21464;&#21028;&#26029;&#30340;&#20381;&#25454;&#26159;Last-Modified&#22836;&#20449;&#24687;&#12290;&#40664;&#35748;&#20540;&#26159;false&#65292;&#21363;&#24573;&#30053;&#22836;&#20449;&#24687;&#12290;  jsonP:"",// &#22312;&#19968;&#20010;jsonp&#35831;&#27714;&#20013;&#37325;&#20889;&#22238;&#35843;&#20989;&#25968;&#30340;&#21517;&#23383;&#12290;   username:"zrg", //&#29992;&#20110;&#21709;&#24212;HTTP&#35775;&#38382;&#35748;&#35777;&#35831;&#27714;&#30340;&#29992;&#25143;&#21517;&#12290;  password:"123456", //&#29992;&#20110;&#21709;&#24212;HTTP&#35775;&#38382;&#35748;&#35777;&#35831;&#27714;&#30340;&#23494;&#30721;&#12290;  processData:false, // &#40664;&#35748;&#24773;&#20917;&#19979;&#65292;&#21457;&#36865;&#30340;&#25968;&#25454;&#23558;&#34987;&#36716;&#25442;&#20026;&#23545;&#35937;&#65288;&#20174;&#25216;&#26415;&#35282;&#24230;&#26469;&#35762;&#24182;&#38750;&#23383;&#31526;&#20018;&#65289;&#20197;&#37197;&#21512;&#40664;&#35748;&#20869;&#23481;&#31867;&#22411;"application/x-www-form-urlencoded"&#12290;&#22914;&#26524;&#35201;&#21457;&#36865;DOM&#26641;&#20449;&#24687;&#25110;&#32773;&#20854;&#20182;&#19981;&#24076;&#26395;&#36716;&#25442;&#30340;&#20449;&#24687;&#65292;&#35831;&#35774;&#32622;&#20026;false&#12290;  scriptCharset:"", //&#21482;&#26377;&#24403;&#35831;&#27714;&#26102;dataType&#20026;"jsonp"&#25110;&#32773;"script"&#65292;&#24182;&#19988;type&#26159;GET&#26102;&#25165;&#20250;&#29992;&#20110;&#24378;&#21046;&#20462;&#25913;&#23383;&#31526;&#38598;(charset)&#12290;&#36890;&#24120;&#22312;&#26412;&#22320;&#21644;&#36828;&#31243;&#30340;&#20869;&#23481;&#32534;&#30721;&#19981;&#21516;&#26102;&#20351;&#29992;&#12290;  complete: function(XMLHttpRequest, textStatus){ // &#35831;&#27714;&#23436;&#25104;&#21518;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;&#65288;&#35831;&#27714;&#25104;&#21151;&#25110;&#22833;&#36133;&#26102;&#22343;&#35843;&#29992;&#65289;        //   },  success: function (data,textStatus) { // &#35831;&#27714;&#25104;&#21151;&#21518;&#35843;&#29992;&#30340;&#22238;&#35843;&#20989;&#25968;&#65292;&#26377;&#20004;&#20010;&#21442;&#25968;: (1)&#30001;&#26381;&#21153;&#22120;&#36820;&#22238;&#65292;&#24182;&#26681;&#25454;dataType&#21442;&#25968;&#36827;&#34892;&#22788;&#29702;&#21518;&#30340;&#25968;&#25454;;(2)&#25551;&#36848;&#29366;&#24577;&#30340;&#23383;&#31526;&#20018;&#12290;        if (data.success) {                //      } else {        //      }  },  error: function(XMLHttpRequest, textStatus, errorThrown){ // &#35831;&#27714;&#22833;&#36133;&#26102;&#34987;&#35843;&#29992;&#30340;&#20989;&#25968;&#12290;&#26377;3&#20010;&#21442;&#25968;&#65292;&#21363;XMLHttpRequest&#23545;&#35937;&#12289;&#38169;&#35823;&#20449;&#24687;&#12289;&#25429;&#33719;&#30340;&#38169;&#35823;&#23545;&#35937;(&#21487;&#36873;)&#12290;        //  }});常见的 POST 提交数据方式application/x-www-form-urlencoded浏览器的原生 &lt;form&gt; 表单，如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。multipart/form-data一般用来上传文件application/json该方案可以方便的提交复杂的数据结构，特别适合 RESTful 的接口。text/xmlXML 结构传输。XML-RPC（XML Remote Procedure Call），它是一种使用 HTTP 作为传输协议，XML 作为编码方式的远程调用规范。它的使用也很广泛，如 WordPress 的 XML-RPC Api，搜索引擎的 ping 服务等等。提交 Form 表单(包括文件上传)常规方法Listing 3: 一般是这样的$.ajax({        url:"${pageContext.request.contextPath}/public/testupload",    type:"post",    data:{username:username},    success:function(data){        window.clearInterval(timer);        //    },    error:function(e){        //    }});// &#25110;&#32773;&#21333;&#19968;&#33719;&#21462;var username = $("#username").val();var password = $("#password").val();...// 以上方式，如果数量少的话，那还没有什么，但是如果数据十分大的话，那就十分的麻烦。使用 FormData 对象// 下面就介绍提高开发效率的方法Listing 4: 使用 FormData 对象（XMLHttpRequest）// FormData&#23545;&#35937;&#26159;html5&#30340;&#19968;&#20010;&#23545;&#35937;&#65292;&#30446;&#21069;&#30340;&#19968;&#20123;&#20027;&#27969;&#30340;&#27983;&#35272;&#22120;&#37117;&#24050;&#32463;&#20860;&#23481;&#12290;var form = new FormData();form.append("username","zxj");form.append("password",123456);var req = new XMLHttpRequest();req.open("post", "${pageContext.request.contextPath}/public/testupload", false);req.send(form);Listing 5: 使用 FormData 对象（jQuery Ajax）var form = new FormData();form.append("username","zxj");form.append("password",123456);$.ajax({        url:"${pageContext.request.contextPath}/public/testupload",    type:"post",    data:form,    processData:false,    contentType:false,    success:function(data){        window.clearInterval(timer);            //    }});使用 jQuery.form.js具体参考https://github.com/jquery-form/formReferencesAjax 百度百科$.ajax({});的各个参数的理解使用ajax提交form表单，包括ajax文件上传]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> Ajax </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Over the wall with Shadowsocks+SwitchyOmega]]></title>
      <url>/network/software/2018/08/10/shadowsocks-switchyOmega-en/</url>
      <content type="text"><![CDATA[If you have any questions abount this article, or if you have found any errors in this article, email me, please. This is my email address: zrg1390556486@gmail.comThis article is for communication only, please do not use for business! The author of this article is not responsible for any consequences. thanks for your attention!1 Server1.1 Buy a Cloud HostDigitalOceanAWSVultr1.2 Solution 1: Using Original ShadowsocksInstalling pip# yum install python-pipor# curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"# python get-pip.py// update# pip install --upgrade pipInstalling shadowsocks# pip install shadowsocks# vim /etc/shadowsocks.json{  "server": "server_ip",//server ip address  "server_port": 8388,//server port  "local_address":"127.0.0.1",//local address  "local_port":1080,//local port  "port_password":{ //multiple port          "9001":"password9001",          "9002":"password9002",          "9003":"password9003",     },  "password": "password",//password  "method": "aes-256-cfb",//encryption  "timeout":600 //timeout  }explanation:- "server": "123.123.123.123" :: server ip address- "server_port": 8388 :: server port- "local_address":"127.0.0.1" :: local ip address- "local_port":1080, :: local port- "port_password" :: port and password- "password": "password" :: password                                                                                                         - "method": "aes-256-cfb" :: encrypt method, more detail:[[http://ucdok.com/project/generate_password.html][password tool]]- "timeout":600 :: over timeConfiguring auto-start script#vim /etc/systemd/system/shadowsocks.service[Unit]Description=Shadowsocks[Service]TimeoutStartSec=0ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json[Install]WantedBy=multi-user.targetStart shadowsocks#systemctl enable shadowsocks#systemctl start shadowsocks#systemctl status shadowsocks -lAuto install script$ vim install-shadowsocks.sh, content of file from install-shadowsocks.sh# chmod +x install-shadowsocks.sh# ./install-shadowsocks.sh1.3 Solution 2: Using dockerInstalling docker# yum install docker# systemctl enable docker# systemctl start dockerDeploy shadowsocks# docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s "-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open"2 Client2.1 Linux2.1.1 Command Line Client on LinuxLinux seriesDebian/Ubuntu:$ sudo apt-get install python-pip$ sudo pip install shadowsocksFedora/Centos:$ sudo yum install python-setuptools   or   sudo dnf install python-setuptools$ sudo easy_install pip$ sudo pip install shadowsocksOpenSUSE:$ sudo zypper install python-pip$ sudo pip install shadowsocksArchlinux:$ sudo pacman -S python-pip$ sudo pip install shadowsockssslocal is the client software and ssserver is the server software. On some Linux distros such as ubuntu, the shadowsocks client sslocal is installed under usr/local/bin. On Others such as Arch sslocal is installed under /usr/bin. Your can use whereis command to find the exact location.$ whereis sslocalsslocal: /usr/local/bin/sslocal/etc/shadowsocks.json{"server":"server-ip","server_port":8000,"local_address": "127.0.0.1","local_port":1080,"password":"your-password","timeout":600,"method":"aes-256-cfb"}// start$ sudo sslocal -c /etc/shadowsocks.json// To run in the background$ sudo sslocal -c /etc/shadowsocks.json -d start/etc/rc.local$ sudo vim /etc/rc.localsudo sslocal -c /etc/shadowsocks.json -d start// Check if It Works# sudo systemctl status rc-local.service2.1.2 Global ProxyInstall and Configure polipo$ sudo apt install polipo$ sudo vim /etc/polipo/configlogSyslog = truelogFile = /var/log/polipo/polipo.logproxyAddress = "0.0.0.0"socksParentProxy = "127.0.0.1:1080"socksProxyType = socks5chunkHighMark = 50331648objectHighMark = 16384serverMaxSlots = 64serverSlots = 16serverSlots1 = 32Restart polipo$ sudo systemctl restart polipoExport http_proxy and https_proxy$ export http_proxy="http://127.0.0.1:8123/"$ export https_proxy="https://127.0.0.1:8123/"testing$ curl www.google.com2.1.3 Solving ProblemShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup[Reason]openssl 1.1.0 "EVP_CIPHER_CTX_cleanup" is old.[Solving]$ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.pyVIM Command&#65306;:%s/cleanup/reset/:xnot support "chacha20"[Solving]$ apt install m2crypto gcc -y$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz$ tar zxvf libsodium-1.0.8.tar.gz$ cd libsodium-1.0.8$ sudo ./configure$ sudo make &amp;&amp; make install$ sudo echo "include ld.so.conf.d/*.conf" &gt; /etc/ld.so.conf$ sudo echo "/lib" &gt;&gt; /etc/ld.so.conf$ sudo echo "/usr/lib64" &gt;&gt; /etc/ld.so.conf$ sudo echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf$ sudo ldconfig2.2 Windows2.2.1 DownloadGet shadowsocks client by sending email to zrg1390556487@gmail.com2.2.2 Configureunziprunningconfiguringproxy2.3 Android2.3.1 DownloadGet shadowsocks client by sending email to zrg1390556487@gmail.com2.3.2 Configure2.4 IOSOpen "App Store", To search "shadowrocket". Current price: ￥12Add server configure. Okay.2.5 Mac OS Xhttps://github.com/shadowsocks/ShadowsocksX-NG3 Browser Plugin: SwitchyOmega3.1 DownloadGet shadowsocks client by sending email to zrg1390556487@gmail.com3.2 Configureset proxyset rulerule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txtorhttps://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt4 Referenceshttps://zh.wikipedia.org/zh-hans/Shadowsockshttps://shadowsocks.comhttp://shadowsocks.org/在 CentOS 7 下安装配置 shadowsocksInstall And Use Shadowsocks Command Line Client on LinuxShadowsocksR 客户端 小白使用教程ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanupSwitchyOmegaIOS系统推荐几款支持Shadowsocks的代理软件各种系统下Shadowsocks客户端的安装与配置linux 配置shadowsocks代理全局代理linux ubuntu下使用ss设置全局代理,命令行也走代理]]></content>
      <categories>
        
          <category> network </category>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Shadowsocks </tag>
        
          <tag> SwitchyOmega </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Debian GNU/Linux]]></title>
      <url>/linux/2018/08/06/using-debian/</url>
      <content type="text"><![CDATA[本文题目应该是“Linux 操作系统”，只因平时都是使用 Debian，所以 Title 就是“Debian GNU/Linu”）。以下就是我从开始接触 Linux 到现在的一些使用笔记。1 Preface欢迎阅读本册子，和其他大全图书不一样，本册子以实践的方式介绍 Linux 基础、Linux 服务架构和 Linux 实用技巧，涵盖了详尽的动手教程和实践信息，还提供了与内容相关的参考资料。本册子可以作为 Linux 的操作参考工具书。作者会持续更新与完善内容，血不流干，死不休战。1.1 读者对象Linux 系统管理员如果你是 Linux 环境下的系统管理员，那么本册子也许能为你提供一定的帮助。Linux 爱好者如果你是 Linux 爱好者，本册子将告诉你部分问题的解决办法及原因。1.2 内容结构本册子分为五大部分。第一部分，获取和安装 Linux 系统，Linux 系统的初步设置，Linux 介绍。第二部分，介绍 Linux 文件、目录及磁盘的常见操作。第三部分，学习及应用 shell 脚本(script)。第四部分，Linux 进阶篇，对于 Linux 系统管理员比较实用，主要介绍 Linux 帐号管理及 ACL 权限控制，Linux 定时任务，Linux 网络，一些常见服务软件的架设。第五部分，问题解决篇，聚集常见开发、运维中遇到的各种问题的解决办法，该部分可理解为本书的附录或问题解决参考手册。编写规范章节编码级别限制为 3 级。列表中标题与描述内容分开。保持各部分有序顺序，不能随意变更。阅读提示阅读本文时，每个知识章节都会有「参考资料」或「References」的章节，部分实际操作章节除外。所有内容以笔记的形式编写，非权威指南类型，仅供参考。本文将会省去一些有关 Linux 的常识性介绍，比如 Unix/Linux 发展史等，更多的是以过往的经验来介绍学习 Linux 的方法或建议，试图对一些 Linux 常见、实用的实践操作进行更详尽的说明，便于后来者学习。1.3 作者zrg 的 Linux 学习之路（My road of learning Linux）第一次接触 Linux 是由于大二上学期的 Linux 基础课，但是，我并没有喜欢上这个系统，因为关于 Linux 的一切，对我来说都是陌生的，我在想我既然已经对 Windows 操作系统，又何必去瞎折腾呢，况且 Windows 可以完成 Linux 上的所有事情（后来，我发现我错了）；另一方面，可能是由于授课老师的坚毅个性，让我不想再去学习它，尽管当时我自己是多么幼稚，多么可笑。后来，当我在听说 Linux 用来当服务器使用很好的时候，我开始尝试使用它来完成一些工作的时候，开始我有点喜欢 Linux 操作系统，不断的尝试（学习）使用 Linux，发现使用 Linux 来完成编程开发越来越完美了。再后来，就是现在了，能使用它搭建一些服务，使我的生活更加方便，并将一些网站之类的放在上面，下面就是平时使用 Linux 的总结，仅供参考！尽管工作的大部分时间都在用 Windows 操作系统，但是对 Linux 系列的折腾从未停止过。现在好了，今年（2018年）1月换了一份工作，公司使用的技术基本都是 Linux 上构建的，除了正常必要性开发，使用 Windows，使用 Linux 的时间将占据工作时间的 1/3。今年5月（2019年），来深圳入职了，团队比较开放，现在我的大部分开发工作都在 Linux 下完成。#2019-06-07，持续更新中……jsf 的 Linux 学习之路（My road of learning Linux）那些年用过的 Linux 操作系统Ubuntu 12.04/14.04/16.04/18.04;CentOS 6.x/7.x;RedHat 7;Debian 7/8/9;SUSE Linux Enterprise server 11/12;Raspberry pi Debian;1.4 英文太差，能学好 Linux 吗？关于这个问题，可以参考一下两个链接，或许能让你收获点什么！Linux很有趣，可我的英文太差了，怎么办？解谜英语语法2 Get Started2.1 安装(Installation)2.1.1 安装过程安装准备首先，准备一个U盘，用来刻录系统（刻录命令：dd，用法格式：sudo dd if=xxx.iso of=/dev/sdb），到 https://www.debian.org/ 下载 iso 镜像，注意有最小版和完整版。Windows 下的刻录软件推荐使用 UltraISO（对于新手，建议在 Windows 下完成刻录）。插入U盘，开机，开始选择安装。2.1.2 主机规划与磁盘分区2.1.3 安装后的常用操作查看 Linux 发行版名称及版本号查看 Linux 内核版本// 方式一$ cat /proc/version// 方式二$ uname -a查看 Linux 系统版本// 方式一$ lsb_release -a //这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。// 方式二$ cat /etc/redhat-release //这种方法只适合Redhat系的Linux// 方式三$ cat /etc/issue //使用所有Linux版本Linux 上挂载NTFS格式文件系统方案A（Scheme A）：使用linux-ntfs获取安装$ wget http://prdownloads.sourceforge.net/linux-ntfs/kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm$ sudo rpm -ivh kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm检查 ntfs 模块是否被加载进系统$ /sbin/modprobe ntfs[没有输出则代表存在；否则（otherwise）将会有错误信息（error message）报出（report）]$ cat /proc/filesystems[ntfs应该出现在列表中]查看NTFS系统的编号/sbin/fdisk -l |grep NTFS 创建目录$ sudo mkdir -p /mnt/win_ntfs$ sudo mount -t ntfs /dev/sda1 /mnt/win_ntfs方案B（Scheme B）：使用fuse和ntfs-3g获取$ wget http://downloads.sourceforge.net/project/fuse/fuse-2.X/2.7.4/fuse-2.7.4.tar.gz?use_mirror=ncu$ wget http://www.ntfs-3g.org/ntfs-3g-2009.4.4.tgz编译安装$ tar -zxf fuse-2.7.4.tar.gz$ ./configure --prefix=/usr/local/fuse-2.7.4$ sudo make $ sudo make install$ tar -zxf ntfs-3g-2009.4.4.tgz$ ./configure --prefix=/usr/local/ntfs-3$ sudo make $ sudo make install 检查fuse模块是否被加载进系统$ /sbin/modprobe fuse[没有输出则代表存在；否则将会有错误信息报出]$ cat /proc/filesystems[fuse应该出现在列表中]查看NTFS系统的编号 $ sudo fdisk -l |grep NTFS 挂载$ mount ntfs-3g /dev/sda1 /mnt/win_ntfs自动挂载 NTFS 格式硬盘安装 ntfs-3g$ sudo apt-get install ntfs-3g步骤1：编辑/etc/fstab$ sudo vim /etc/fstab/dev/sdb1 /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0    #Notice:# If /dev/sdb1 path will change due to system configuration, I recommend that you use the UUID (Universally Unique Identifier) of the partition. To find the UUID of /dev/sdb1, enter:#&#32763;&#35793;&#65306;/dev/sdb1 &#36335;&#24452;&#20250;&#38543;&#30528;&#31995;&#32479;&#37197;&#32622;&#32780;&#25913;&#21464;&#65292;&#24314;&#35758;&#20351;&#29992; UUID &#65288;&#36890;&#29992;&#21807;&#19968;&#26631;&#35782;&#31526;&#65289;# Note down the UUID value and update /etc/fstab as follows:# &#32763;&#35793;&#65306;&#35760;&#24405;&#19979; UUID&#65292;&#26356;&#26032; /etc/fstab &#25991;&#20214;&#12290;# syntax# UUID="YOUR-UID-HERE" /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0UUID="c2dbc0c5-a8fc-439e-aa93-51b0a61372e8" /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0# Owning entire file systemUUID="c2dbc0c5-a8fc-439e-aa93-51b0a61372e8" /mnt/ntfs/ ntfs uid-1000,gid-1000 0 0下面是查看 UUID 的命令。$ sudo /sbin/blkid /dev/sda1保存关闭文件步骤2：创建目录$ sudo mkdir -p /mnt/ntfs步骤3：测试（Test）可用性$ sudo mount -a$ df -h$ cd /mnt/ntfs$ ls -l步骤4：卸载NTFS分区$ sudo umount /mnt/ntfs// or$ sudo umount /dev/sda1注意错误信息：“Read-only file system”提示$ sudo  mv 05Music/ /mnt/sda/sda2//bin/mv: inter-device move failed: '05Music/' to '/mnt/sda/sda2/05Music'; unable to remove target: Read-only file system解决（Solving）：配置 /etc/fstab参考资料How To Debian/Ubuntu Linux Auto Mount Windows NTFS File SystemNTFS-3Gfstab (简体中文)NTFS-3G (简体中文)boot 加载选项修改$ sudo chmod +w /boot/grub/grub.cfg$ sudo vim /boot/grub/grub.cfg注释不需要的加载项！改变 Home 目录下的目录中文名称为英文方法1$ vim ~/.config/user-dirs.dirsXDG_DESKTOP_DIR="$HOME/Desktop"XDG_DOWNLOAD_DIR="$HOME/Download"XDG_TEMPLATES_DIR="$HOME/Template"XDG_PUBLICSHARE_DIR="$HOME/Public"XDG_DOCUMENTS_DIR="$HOME/Document"XDG_MUSIC_DIR="$HOME/Music"XDG_PICTURES_DIR="$HOME/Picture"XDG_VIDEOS_DIR="$HOME/Video"方法2$ export LANG=en_USxdg-user-dirs-gtk-update电脑没有声音问题解决安装驱动软件$ sudo apt-get install alsa-utils$ sudo apt-get install alsa-oos$ sudo apt-get install esound$ sudo apt-get install gnome-audio检查声卡驱动$ lspci |grep Audio检查内核模块$ lsmod |grep snd检查系统音量$ alsamixeralsamixer 是 alsa 驱动的一个插件,是一个命令行下的图形设置工具。alsamixer 命令，00 表示音量正常，MM表示此声道静音。可以通过M键切换。初始化声卡$ sudo alsactl init参考资料解決 Ubuntu Linux 16.04 耳機輸出沒有聲音的問題关机和重启命令shutdown关机、重启计算机(Halt, power-off or reboot the machine)$ sudo shutdown -r now// 其他重启命令$ sudo reboot$ sudo init 6Table 1: 系统运行级别级别描述0关机，不允许设置为初始化默认值1单用户模式2不完全多用户，不含NFS服务3完全多用户4未分配5图形界面6重启，不允许设置为初始化默认值$ cat /etc/initable// 查看系统运行级别$ sudo runlevel其他关机/注销命令haltpoweroffinit 0logout2.2 配置(Configuration)2.2.1 用户身份切换: su &amp; sudoLinux 系统当中的身份变换，可能有以下几个原因：使用一般账号：系统平日操作的好习惯用较低权限启动系统服务软件本身的限制su 是最简单的身份切换命令。-：单纯使用 - 如『 su - 』代表使用 login-shell 的变量文件读取方式来登陆系统；若使用者名称没有加上去，则代表切换为 root 的身份。-l：与 - 类似，但后面需要加欲切换的使用者账号！也是 login-shell 的方式。-m：-m 与 -p 是一样的，表示『使用目前的环境配置，而不读取新使用者的配置文件』-c：仅进行一次命令，所以 -c 后面可以加上命令喔！并非所有人都能够运行 sudo，而是仅有规范到 /etc/sudoers 内的用户才能够运行 sudo 这个命令。同时， /etc/sudoers 可以修改默认的 timeout。Defaults        env_resetDefaults        timestamp_timeout=60...root    ALL=(ALL:ALL) ALLzrg     ALL=(ALL:ALL) ALL# &#25351;&#23450;&#29992;&#25143;&#19981;&#29992;&#36755;&#20837;&#23494;&#30721;zrg     ALL=(ALL:ALL)NOPASSWD: ALL# &#25480;&#26435; zrg_test &#29992;&#25143;&#25191;&#34892;&#37325;&#21551;&#21629;&#20196;zrg_test ALL=/sbin/shutdown -r now# Allow members of group sudo to execute any command%sudo   ALL=(ALL:ALL) ALL2.2.2 Wifi连接配置(configure)完成安装第一步，当然是先解决网络。查看无线（wireless）网卡（LAN）驱动（driver）$ sudo lsmod | grep iw安装（Installing）无线网卡驱动$ sudo apt-get install firmware-iwlwifi wireless-tools向内核（kernel）中加载/移除模块（modules）$  modprobe iwl4965重启系统$ reboot配置无线网络//查看无线网口（nerwork port）$ sudo iwconfig//开启无线网口$ sudo ifconfig wlan0 up//扫描（scaning）无线网络$ sudo iwlist wlan0 scan//连接无线网络$ sudo iwconfig wlan0 ESSID "wifi-name" KEY "password" open//执行上面的命令（command）后，发现并不能成功！！！//于是，通过如下命令继续配置//格式：wpa_passphrase &lt;ssid&gt; [passphrase]$ sudo wpa_passphrase "wifi-name" "passowrd"&gt;/etc/wpa_supplicant.conf$ sudo wpa_passphrase -B -i wlan0 -Dwext -c /etc/wpa_supplicant.conf//查看wlan0无线网口$ sudo iwconfig wlan0//执行命令获取到IP地址，成功连上WiFi$ sudo dhclient wlan0开机自动连接WiFi配置$ sudo vim /etc/network/interfaces.d/wlan0auto wlan0allow-hotplug wlan0iface wlan0 inet dhcp wpa-conf /etc/wpa_supplicant.conf 2.2.3 配置安装源(source)以配置163源举例说明访问域名:mirrors.163.com，找到镜像名为debian的目录，点击debian使用帮助。根据最新的debian版本进行选择jessie，wheezy，squeeze。从最新版本到最低版本选择源复制安装源文本到 /etc/apt/source.list 中。# mirrors.163.comdeb http://mirrors.163.com/debian/ jessie main non-free contribdeb http://mirrors.163.com/debian/ jessie-updates main non-free contribdeb http://mirrors.163.com/debian/ jessie-backports main non-free contribdeb-src http://mirrors.163.com/debian/ jessie main non-free contribdeb-src http://mirrors.163.com/debian/ jessie-updates main non-free contribdeb-src http://mirrors.163.com/debian/ jessie-backports main non-free contribdeb http://mirrors.163.com/debian-security/ jessie/updates main non-free contribdeb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib其他安装源中国科学技术大学开源软件镜像站清华大学开源软件镜像站华中科技大学开源镜像站阿里云开源镜像站2.2.4 配置系统支持中文(support chinese)安装及配置查看并设置环境变量$ echo $LANG$ export LANG=en_US.UTF-8没有安装 locales,先安装 locales$ sudo aptitude install locales配置中文编码$ sudo dpkg-reconfigure locales//选择编码（encode），space选择en_US.UTF-8zh_CN.GB2312zh_CN.GB18030zh_CN.GBKzh_CN.UTF-8文件配置$ sudo vim /etc/default/locate# LANG="zh_CN.UTF-8"# LANGUAGE="zh_CN:zh"LANG="en_US.UTF-8"LANGUAGE="en_US:en"安装中文输入法ibus &amp; UIM &amp; SCIM &amp; Fcitxgnome-chinese-inputi18n ibusFcitx 输入法补充Ubuntu安装Fcitx以及Fcitx输入中文不显示候选词框的解决办法安装 fcitx 组件（module）$ sudo apt-get install fcitx-tools fcitx-config* fcitx-data fcitx-frontend* fcitx-libs fcitx-module* fcitx-ui* presage安装 fcitx 输入法$ sudo apt install fcitx-pinyin$ sudo apt install fcitx-googlepinyin$ sudo apt install fcitx-table //五笔设置并运行$ export LANG=zh_CN.utf8$ export LC_CTYPE=zh_CN.utf8$ export LC_ALL=zh_CN.utf8$ export XMODIFIERS=@im=fcitx$ fcitx &amp;ui 动态库的支持:$ sudo apt install fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-ui-classic重启可用参考资料Locale debian wiki2.3 介绍(Instroduction)首先，明确一点：GNU Not's Unix.2.3.1 入门第一步，理解 Linux首先，以 Linux 的思维方式系统性思考问题。Linux 是一个面向文件的操作系统。所有的应用、管理是基于文件的。Linux 是一个以命令行为主要的管理方式的 OS。Linux 的日志非常完善，也至关重要。Linux 是一个以配置文件为管理基础的 OS。Linux 的所有应用、管理和配置，都有很多程序来辅助完成。2.3.2 Linux 内容划分Linux 可划分为以下四部分Linux 内核GNU 工具图形化桌面环境应用软件深入探究 Linux 内核Linus Torvalds：Linux 内核开发者。Linux 内核主要负责一下四种功能：系统内存管理内核不仅管理服务器上的可用物理内存，还可以创建和管理虚拟内存。内核通过硬盘上的存储空间来实现虚拟内存，这块区域称为交换空间（swap space）。内核不断地交换空间和实际的物理内存之间反复交换虚拟内存中的内容。这使得系统以为它拥有比物理内存更多的可用内存。内存存储单元按组划分成很多块，这些块称作页面（page）。内核将每个内存页面放在物理内存或交换空间。然后，内核会维护一个内存页面表，指明哪些页面位于物理内存内，哪些页面被换到了磁盘上。内核会记录哪些内存页面正在使用中，并自动把一段时间未访问的内存页面复制到交换空间区域（称为换出，swapping out）——即使还有可用内存。软件程序管理Linux 操作系统将运行中的程序称为进程。内核控制着 Linux 系统如何管理运行在系统上的所有进程。内核创建了第一个进程（称为 init 进程）来启动系统上所有其他进程。Linux 操作系统的 init 系统采用了运行级。Linux 操作系统有 5个启动运行级。运行级为 1 时，只启动基本的系统进程以及一个控制台终端进程，我们称之为单用户模式。单用户模式通常用来在系统有问题时进行紧急的文件系统维护。显然，这种模式下，仅有一个人（通常是系统管理员）能登录到系统上操作数据。运行级为 3 时，大多数应用软件，比如网络支持程序，都会启动。运行级为 5 时，系统会启动 X Window 系统，允许用户通过图形化桌面窗口登录系统。Linux 系统可以通过调整启动运行级来控制整个系统的功能。硬件设备管理内核的另一职责是管理硬件设备。任何 Linux 系统需要与之通信的设备，都需要在内核代码中加入驱动程序代码。在 Linux 内核中有两种方法用于插入设备驱动程序代码：编译进内核的设备驱动代码可插入内核的设备驱动模块以前，插入设备驱动代码的唯一途径是重新编译内核。随着 Linux 内核支持的硬件设备越来越多，这个过程变得越来越低效。后来，开发人员提出了内核模块的概念。它允许将驱动代码插入到运行中的内核而无需重新编译内核。Linux 系统将硬件设备当成特殊的文件，称为设备文件。设备文件有3种分类字符型设备文件：指处理数据时每次只能处理一个字符的设备。大多数类型的调制解调器和终端都是作为字符型设备文件创建的。块设备文件：指处理数据时每次能处理大块大数据的设备，比如硬盘。网络设备文件：指采用数据包发送和接受数据的设备，包括各种网卡和一个特殊的回环设备。这个回环设备允许 Linux 系统使用常见的网络编程协议同自身通讯。Linux 为系统上的每个设备都创建一种称为节点的特殊文件。与设备的所有通信都通过设备节点完成。每个节点都有唯一的数值对供 Linux 内核标识它。数值对包括一个主设备号和一个次设备号。类似的设备被划分到同样的主设备号下。次设备号用于标识主设备组下的某个特定设备。文件系统管理Linux 内核支持通过不同类型的文件系统从硬盘中读写数据。内核必须在编译时就加入对所有可能用到的文件系统的支持。下表是 Linux 系统用来读写数据的标准文件系统Table 2: 文件系统类型文件系统描述extLinux 扩展文件系统，最早的 Linux 文件系统ext2第二扩展文件系统，在ext的基础上提供更多的功能ext3第三扩展文件系统，支持日志功能ext4第四扩展文件系统，支持高级日志功能hpfsOS/2高性能文件系统jfsIBM日志文件系统iso9660ISO 9660文件系统（CD-ROM）mimixMINIX文件系统msdos微软的FAT16ncpNetware文件系统nfs网络文件系统ntfs支持Microsoft NT文件系统proc访问系统信息ReiserFS高级Linux文件系统，能提供更好的性能和硬盘恢复功能smb支持网络访问的Samba SMB文件系统sysv较早期的Unix文件系统ufsBSD文件系统umsdos建立在msdos上的类Unix文件系统vfatWindows95文件系统（FAT32）XFS高性能64位日志文件系统Linux 内核采用虚拟文件系统（Virtual File System,VFS）作为和每个文件系统交互的接口。     GNU工具核心 GNU 工具：coreutils(coreutilities)软件包GNU coreutils 软件包由三部分构成：用以处理文件的工具用以操作文本的工具用以管理进程的工具shellTable 3: Linux 中常见的shellshell描述bashbash shell 是 Bourne shell 的一个免费版本，它是最早的 Unix shell，bash还有一个特点，可以通过help命令来查看帮助。包含的功能几乎可以涵盖shell所具有的功能，所以一般的shell脚本都会指定它为执行路径。ash一种运行在内存受限环境中简单的轻量级shell，但与bash shell完全兼容。korn一种与 Bourne shell，但支持如关联数组和浮点运算等一些高级的编程特性。tcsh一种将C语言中的一些元素引入到shell脚本中的shell。zsh一种结合了bash、tcsh和korn的特性，同时提供高级编程特性、共享历史文件和主题化提示符的高级shell。Linux 桌面环境X WindowKDE 桌面（K Desktop Environment，K 桌面系统）GNOME 桌面（the GNU Network Object Model Environment，GNU 网络对象模型桌面）Unity 桌面其他桌面Table 4: 其他桌面桌面描述Fluxbox&#xa0;Xfce&#xa0;JWM&#xa0;Fvwm&#xa0;fvwm95&#xa0;Linux 发行版不同的 Linux 发行版通常归类为3种：完整的核心 Linux 发行版Table 5: 完整的核心 Linux 发行版Slackware最早的 Linux 发行版之一Red Hat商业发行版FedoraRed Hat 分离出的家用发行版Gentoo为高级 Linux 用户设计的发行版，仅包含 Linux 源代码openSuse商用和家用的发行版DebianLinux 专家和商用 Linux 产品中流行的发行版特定用途的发行版Table 6: 特定用途的发行版CentOS一款基于 Red Hat 企业版 Linux 源代码构建的免费发行版Ubuntu一款用于学校和家庭的免费发行版PCLinuxOS一款用于学校和办公的免费发行版Mint一款用于家庭娱乐的免费发行版dyne:bolic一款用于音频和MIDI应用的免费发型版Puppy Linux一款适用于老旧PC的小型免费发行版LiveCD 测试发行版。Table 7: LiveCD 测试发行版。Knoppix最早的 LiveCD LinuxPCLinuxOS一款成熟的 LiveCDUbuntu为多种语言设计的世界级 Linux 项目Slax基于 Slackware LinuxPubby Linux为老旧 PC 设计的一款全功能 Linux2.3.3 Linux 基本网络配置安装网络工具$ sudo apt-get install net-tools配置网络在 Linux 中，以太网接口被命名为：eth0、eth1等。lspci 命令可以查看网卡硬件信息（如果是 usb 网卡，则需要使用 lsusb 命令）ifconfig 命令：查看接口信息$ ifconfig -a$ ifconfig eth0ifup,ifdown 命令：启用、禁用一个接口$ ifup eth0$ ifdown eth0相关配置文件网卡配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0DNS 配置文件：/etc/resolv.conf主机名配置文件：/etc/sysconfig/network静态主机名配置文件：/etc/hosts网络测试测试网路连通性：ping 命令测试DNS解析：host,dig 命令显示路由表：ip route 命令追踪到达目标地址的网络路径：traceroute 命令mtr 命令进行网络质量测试2.3.4 Linux 日期时间设置Linux 时钟分为系统时钟（System Clock）和硬件时钟（Real Time Clock，简称 RTC）。系统时钟指当前 Linux Kernel 中的时钟;硬件时钟指主板上由电池供电的时钟，可在 BIOS 中进行设置。date 命令hwclock 命令，查看硬件时间//设置硬件时间$ sudo hwclock -set -date='07/17/2017 20:00'硬件时间与系统时钟同步$ sudo hwclock --hctosys(hc 代表硬件时间，sys 代表系统时间)$ sudo hwclock -systohc2.3.5 获取帮助 &amp; 问题解决出现问题，先保护现场。（问题一种是已正确运行的系统出问题，另一种是新的操作或配置造成了问题）当怀疑有黑客入侵或病毒的情况，马上做日志备份。检查相关日志。对于新的操作或配置造成的问题，最好是养成定期备份重要文件的习惯。使用网络使用搜索命令：find，locate，whereis。。。man查看在线帮助手册(an interface to the on-line reference manuals)，如果不记得命令名怎么办？可以使用关键字搜索手册页。$ man -k terminalTable 8: Linux 手册页惯用的节名节描述Name显示命令和一段简短的描述Synopsis命令的语法Configuration命令配置信息Description命令的一般性描述Options命令选项描述Exit Status命令的推出状态指示Return Value命令的返回值Errors命令的错误信息Environment描述所使用的环境变量Files命令用到的文件Versions命令的版本信息Conforming To命令所遵从的标准Notes其他有帮助的资料Bugs提供提交Bug的途径Example展示命令的用法Authors命令开发人员的信息Copyright命令源代码的版权状况See Also与该命令类似的其他命令Table 9: Linux 手册页的内容区域区域号所涵盖的内容1可执行程序或shell命令2系统调用3库调用4特殊文件5文件格式与约定6游戏7概览、约定及杂项8超级用户和系统管理员命令9内核例程help查看命令帮助信息(Display information about builtin commands.)type查看命令类型(Display information about command type)3 Linux File, Directory, and Disk format3.1 Linux File Permission3.1.1 理解文件权限使用文件权限符$ ls -lhdrwxr-xr-x 3 zrg zrg 4.0K Apr 21 16:24 练手项目-rw-r&#x2013;r&#x2013; 1 zrg zrg 2.5M Apr 21 11:51 练手项目.rarTable 10: 解释drwxr-xr-x3zrgzrg4.0KApr 21 16:24练手项目文件类型。文件权限。对于普通文件：链接数用户名组名文件大小，单位：字节最后修改日期时间文件名d 目录文件从左往右分别代表所有者权限、组用户权限和其他用户权限对于目录文件：第一级子目录数&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;- 普通文件r 可读&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l 链接文件w 可写&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;c 字符型设备文件x 可执行&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;b 块设备文件- 无执行权限&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n 网络设备文件&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;s 套接字文件&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;默认文件权限umask 命令用来设置所创建文件和目录的默认权限。3.1.2 Share FileLinux 为每个文件和目录存储了3个额外的信息位。设置用户ID（SUID）设置组ID（GID）粘着位：进程结束后文件还驻留（粘着）在内存中。Table 11: chmod SUID、SGID和粘着位的八进制值二进制值八进制值描述0000所有位都清零0011粘着位置位0102SGID位置位0113SGID位和粘着位都置位1004SUID位置位1015SUID位和粘着位都置位1106SUID位和SGID都置位1117所有位都置位创建一个共享目录$ mkdir testdir$ chgrp shared testdir$ chmod g+s testdir$ umask 002$ cd testdir$ touch testfile3.2 Linux Directory3.3 Linux File Search3.3.1 find 命令find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。示例根据文件名查找格式：find [搜索范围][匹配条件]// 默认在当前目录下搜索$ find -name "MyCProgram.c"// 忽略大小写$ find -iname "MyCProgram.c"// 查找以my开头，后面包含三个字符的文件$ find -name my??? // 深度查找：// 在 root 目录及其子目录下查找 passwd 文件。$ sudo find / -maxdepth 2 -name passwd// 在第二层子目录和第四层子目录之间查找 passwd 文件。$ sudo find / -mindepth 3 -maxdepth 5 -name passwd// 找到 home 目录及子目录下所有的空文件(0字节文件) // 下面命令的输出文件绝大多数都是锁定文件盒其他程序创建的 place hoders$ find ~/ -empty//列出你 home 目录里的空文件。$ find ~/ -maxdepth 1 -empty//列出 home目录下的非隐藏空文件。$ find ~/ -maxdepth 1 -empty -not -name ".*"// 相反匹配// 显示所有的名字不是 MyCProgram.c 的文件或者目录。$ find -maxdepth 1 -not -iname "MyCProgram.c"// 在查找到的文件上执行命令// 在查找到名为“MyCProgram.c”的文件上计算 MD5 验证和。$ find -iname "MyCProgram.c" -exec md5sum {} \;// 在 /etc 目录下查找 inittab 文件并显示其详细属性$ sudo find /etc -name initab -exec ls -l {} \;注意：{} 将会被当前文件名取代。-exec/-ok &lt;command&gt; {} \; 对搜索结果执行操作，使用 -ok 会询问是否确认。文件大小查找// 格式：+n 大于；-n 小于；n 等于// 在 root 目录下查找大于100MB的文件$ sudo find / -size +204800注意：在 Linux 里面，1 数据块 = 512 byte = 0.5 KB，100 MB = 102400 KB = 204800 数据块// 在 /etc 目录下查找大于 80MB 小于 100MB 的文件$ sudo find /etc -size +163840 -a size -204800-a 表示两个条件同时满足-o 表示两个条件满足一个即可//列出当前目录及子目录下的 5个最大的文件。这会需要一点时间，取决于命令需要处理的文件数量。$ find . -type f -exec ls -s {} \; | sort -n -r | head -5//查找 5个最小的文件$ find . -type f -exec ls -s {} \; | sort -n  | head -5//上面的命令中，很可能你看到的只是空文件(0字节文件)。因此，你可以使用下面的命令列出最小的文件，而不是 0字节文件。$ find . -not -empty -type f -exec ls -s {} \; | sort -n  | head -5//查找并删除大于 100M 的 *.zip 文件。$ find / -type f -name *.zip -size +100M -exec rm -i {} \;注意：{} 和 \ 之间是有空格的！根据文件变动情况查找// 在/etc目录下查找5分钟内被修改过属性的文件和目录$ sudo /etc -cmin -5-amin 访问时间 access-cmin 文件属性 change-mmin 文件内容 modify// 显示所有的在 ordinary_file 之后创建修改的文件。$ ls -lrt$ find -newer ordinary_file根据文件类型查找f 文件，d 目录，l 软链接，s socket文件//查找所有的一般文件$ find ./ -type f//查找所有的隐藏文件和目录$ find ./ -type f -name ".*"$ find ./ -type d -name ".*"根据文件权限、所属关系查找$ find /home -user zrg$ find /home -group zrg// 查到当前目录下对同组用户具有读权限的文件$ find ./ -perm -g=r -type f -exec ls -l {} \;// 找到对组用户具有只读权限的文件。$find ./ -perm g=r -type f -exec ls -l {} \;  // 找到对组用户具有只读权限的文件(使用八进制权限形式)。$ find ./ -perm 040 -type f -exec ls -l {} \;使用 inode 编号查找//任何一个文件都有一个独一无二的 inode 编号，借此我们可以区分文件。//使用选项 -i，可以看到文件的 inode 编号，借此可以区分这两个文件。$ ls -i1 test*16187429 test-file-name16187430 test-file-name//使用 inode 编号来删除那些具有特殊符号的文件名。$ find -inum 16187430 -exec rm {} \;3.3.2 locate 命令该命令建立了一个文件资料库，查找文件时直接在资料库中查找。类似 Windows 下的 Everything 工具。// 安装：$ sudo apt install mlocate// 使用$ locate init注意：locate 命令不会查找/tmp目录下内容。// 更新文件资料库：$ updatedb3.3.3 which 和 where 命令用于查找某个命令(Locate a command)$ which ls$ where useradd3.3.4 grep 命令语法格式：grep -iv [指定字符串][文件]-i 不区分大小写-v 排除指定字符串// 查找指定字符串的行并显示$ grep 123 test.txt// 去掉# 注释行$ grep -v ^# config.txt3.4 Linux Compression and Packaging另外还有不常见的，但时有遇到的：.tar.xz$ tar xpvf file.tar.xz.tgz$ tar zxf  name.tgz//解压到指定目录$ unzip name.zip -d ./dir3.5 Linux Disk and File System3.5.1 格式化分区命令将 /dev/sda7 硬盘格式化为 ext3 格式。$ mkfs -t ext3 -c /dev/sda73.6 ～～～3.6.1 网络命令write描述给指定用户发送信息(send a message to another user)，Ctrl+D 保存结束格式: write user [tty]实践wall描述发送广播信息(write a message to all users)格式: wall [-n] [-t timeout] [message | file]实践ping描述测试网络联通性(send ICMP ECHO_REQUEST to network hosts)实践指定ping次数$ ping -c 4 baidu.comifconfig描述configure a network interface实践mail描述查看/发送电子邮件实践last &amp; lastlog描述列出目前/过去登入系统的用户信息last, lastb - show a listing of last logged in userslast [options] [username...] [tty...]lastb [options] [username...] [tty...]列出用户最后一次登录系统的信息lastlog - reports the most recent login of all users or of a given userlastlog [options]实践traceroute描述追踪数据包到主机间的路径traceroute - print the route packets trace to network host实践netstat描述显示网络相关信息netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships实践查看主机对外开放端口$ netstat -ntlp查看本机监听的端口$ netstat -tlun查看本机所有的网络连接$ netstat -ano查看本机路由表$ netstat -rnsetup描述配置网络实践4 Shell Scripts Programming4.1 Learning Shell4.1.1 学习 Shell 的疑惑如何启动命令行以及接下来做什么？如何使用 shell脚本来自动处理系统管理任务，包括从检测系统统计数据和数据文件到为你的老板生成报表？4.1.2 认识常见的 Shell 类型/bin/bash/bin/tcsh/bin/dash/bin/csh/bin/sh&#x2026;4.1.3 Shell 的父子关系$ ps -fUID        PID  PPID  C STIME TTY          TIME CMDzrg      25305  4834  8 23:51 pts/4    00:00:00 -bashzrg      25317 25305  0 23:51 pts/4    00:00:00 ps -f$ bash$ ps -fUID        PID  PPID  C STIME TTY          TIME CMDzrg      25305  4834  0 23:51 pts/4    00:00:00 -bashzrg      25347 25305  0 23:53 pts/4    00:00:00 bashzrg      25352 25347  0 23:54 pts/4    00:00:00 ps -f输入命令之后，一个子 shell 就出现了。第二个 ps -f 是在子 shell 中执行的。可以从显示结果中看到两个 bash shell 程序在运行。$ bash$ bash$ bash$ ps --forestPID TTY          TIME CMD25305 pts/4    00:00:00 bash25347 pts/4    00:00:00  \_ bash25372 pts/4    00:00:00      \_ bash25377 pts/4    00:00:00          \_ bash25382 pts/4    00:00:00              \_ ps在上面例子中，bash 命令被输入了三次。实际上创建了三个子 shell。ps &#x2013;forest 命令展示了这些子 shell 间的嵌套结构。可以使用 exit 命令退出子 shell$ exit进程列表$ pwd;ls;cd /etc;pwd/home/zrg/zhaorengui.github.io404.html  archives  categories  _config.yml  _drafts  Gemfile.lock  index.html  _orgs   README.en.md  _sass       _site  tagsabout     assets    category    _data        Gemfile  _includes     _layouts    _posts  README.md     search.xml  tag/etc在命令之间加入“;，指定要依次执行的一系列命令$ (pwd;ls;cd /etc;pwd)/home/zrg/zhaorengui.github.io404.html  archives  categories  _config.yml  _drafts  Gemfile.lock  index.html  _orgs   README.en.md  _sass       _site  tagsabout     assets    category    _data        Gemfile  _includes     _layouts    _posts  README.md     search.xml  tag/etc使用括号包含命令，成为进程列表查看是否生成了子 shell，使用：$ echo $BASH_SUBSHELL子shell用法// 在后台睡眠10s$ sleep 10&amp;// 查看后台进程$ ps -for$ jobs -l//将进程列表置入后台$ (sleep 2;echo $BASH_SUBSHELL;sleep 2)&amp;// 创建备份$ (tar -cf Rich.rar /home/rich;tar -cf My.tar /home/christine)&amp;//协程：在后台生成一个子shell，同时在这个子shell中执行命令。// 进行协程处理，使用 coproc 命令$ coproc sleep 10$ coproc My_Job{sleep 10;}4.1.4 理解 shell 的内建命令外部命令 ::也被称为文件系统命令，是存在于bash shell之外的程序。ps 就是一个外部命令，可以使用 which 和 type 命令找到$ which ps$ type -a ps当外部命令执行时，会创建一个子进程，这种操作叫做衍生（forking）。内建命令 ::内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和 shell 编译成一体，作为 shell 工具的组成部分存在。可以利用 type 命令来了解某个命令是否是内建的。$ type cdcd is a shell builtin要注意，有些命令有多种实现。既有内建命令也有外部命令。$ type -a echoecho is a shell builtinecho is /bin/echo$ type -a pwdpwd is a shell builtinpwd is /bin/pwd 4.2 Shell Basic4.2.1 第一个 shell 程序：Hello World!首先，新建并编辑一个名为 hello.sh 的文件$ vim hello.sh#!/bin/bash  #&#21578;&#35785;shell&#29992;/bin/bash&#26469;&#36816;&#34892;&#33050;&#26412;&#12290;# This script displays the date and who's #&#33050;&#26412;&#29992;&#36884;&#35828;&#26126;&#21450;&#20316;&#32773;&#31561;&#20449;&#24687;&#25551;&#36848; echo "This's is a shell script." #&#26174;&#31034;&#28040;&#24687;echo -n "The time and date are: " #n&#34920;&#31034;&#22312;&#19968;&#34892;&#26174;&#31034;echo "Hello,World!" # print "Hello,World!"date # print date.echo "User info for userid: $USER" #&#29615;&#22659;&#21464;&#37327;&#65292;&#29992;set&#21629;&#20196;&#21487;&#20197;&#26597;&#30475;&#19968;&#20221;&#23436;&#25972;&#30340;&#24403;&#21069;&#29615;&#22659;&#21464;&#37327;&#21015;&#34920;&#12290;echo UID: $UIDecho HOME: $HOMEecho "The cost of the item is \$15." #&#32654;&#20803;&#38656;&#35201;&#20351;&#29992;\&#36716;&#20041;days = 10 #&#29992;&#25143;&#33258;&#23450;&#20041;&#21464;&#37327;echo $days# &#26377;&#20004;&#31181;&#26041;&#27861;&#21487;&#20197;&#23558;&#21629;&#20196;&#36171;&#32473;&#21464;&#37327;test = `date` #&#29992;&#19968;&#23545;&#21453;&#24341;&#21495;&#25226;&#25972;&#20010;&#21629;&#20196;&#22260;&#36215;&#26469;test = $(date) #&#20351;&#29992;$()&#26684;&#24335;today = $(date+%y%m%d) #today&#21464;&#37327;&#34987;&#36171;&#20104;&#26684;&#24335;&#21270;&#21518;&#30340;date&#21629;&#20196;&#30340;&#36755;&#20986;&#12290;此时，我们想看看运行效果，需要给 hello.sh 可执行(x)权限$ sudo chmod +x hello.sh执行，查看效果$ ./hello.sh4.2.2 历史命令与补全(tab键)历史命令的调用查看历史命令$ history使用上、下箭头调用之前的命令使用“!n”重复执行第 n条历史命令使用“!!”重复执行上一条命令使用“!&lt;string&gt;”重复执行最后一条以某个字符串开头的命令使用 &lt;tab&gt; 键可以对命令、文件、目录等进行自动补全。4.2.3 设置命令别名：alias//利用别名代替长命令$ vim ~/.bashrc                                                                                                                                    : //存在这样的三行代码，意思就是检查是否存在 .bash_aliases 文件，存在就加载                 if [ -f ~/.bash_aliases ]; then. ~/.bash_aliasesfi//于是,新建并编辑$ vim .bash_aliases#shadowsocksalias shadowsocks="sudo sslocal -c /etc/shadowsocks.json -d start"4.2.4 重定向输入和输出Table 12: 重定向字符0标准输入1标准输出2标准错误输出&gt;默认为标准输出重定向，与 &gt;1 相同2&gt;&amp;1把标准输出重定向到标准输出&amp;&gt;file把标准输出和标准错误输出都重定向到 file 中/dev/null是一个特殊文件，所有重定向到它的东西都丢弃掉输出重定向// 标准输出重定向$ date &gt; test$ date &gt;&gt; test// 标准错误输出重定向$ date 2&gt;test$ date 2&gt;&gt;test// 正确输出和错误输出同时保存$ date &gt; test 2&gt;&amp;1$ date &gt;&gt; test 2&gt;&amp;1$ date &amp;&gt;test$ date &amp;&gt;&gt;test$ date &gt;&gt;test1 2&gt;&gt;test2输入重定向// 输入重定向$ wc &lt; test//wc 命令，默认情况下，会输出3个值：文本的行数文本的词数文本的字节数// 内联输入重定向(inline input redirection)$ wc &lt;&lt; EOFshell 会用PS2环境变量中定义的次提示符来提示输入数据4.2.5 多命令顺序执行与管道符// 同时执行$ ls -lht;less test.txt$ cd ~/test &amp;&amp; touch hello.sh// 管道运算符$ rpm -qa | sort4.2.6 通配符shell通配符(wildcard)Table 13: shell 常见通配符字符含义实例&lowast;匹配 0 或多个字符a*b  a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。?匹配任意一个字符a?b  a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。[list]匹配 list 中的任意单一字符a[xyz]b   a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。[!list]匹配 除list 中的任意单一字符a[!0-9]b  a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。[c1-c2]匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]a[0-9]b  0与9之间必须也只能有一个字符 如a0b, a1b&#x2026; a9b。{string1,string2,&#x2026;}匹配 sring1 或 string2 (或更多)其一字符串a{abc,xyz,123}b    a与b之间只能是abc或xyz或123这三个字符串之一。shell 特殊字符shell 除了有通配符之外，由shell 负责预先先解析后，将处理结果传给命令行之外，shell还有一系列自己的其他特殊字符。Table 14: shell 特殊字符字符说明IFS由 &lt;space&gt; 或 &lt;tab&gt; 或 &lt;enter&gt; 三者之一组成(我们常用 space )。CR由 &lt;enter&gt; 产生。=设定变量。$作变量或运算替换(请不要与 shell prompt 搞混了)。&gt;重导向 stdout。 *&lt;重导向 stdin。 *&#xa0;命令管线。 *&amp;重导向 file descriptor ，或将命令置于背境执行。 *( )将其内的命令置于 nested subshell 执行，或用于运算或命令替换。 *{ }将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围。;在前一个命令结束时，而忽略其返回值，继续执行下一个命令。 *&amp;&amp;在前一个命令结束时，若返回值为 true，继续执行下一个命令。 *两个竖线在前一个命令结束时，若返回值为 false，继续执行下一个命令。 *&iexcl;执行 history 列表中的命令。*shell 转义符Table 15: shell 转义符号字符说明‘’(单引号)又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)。“”(双引号)又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替\(反斜杠)又叫转义，去除其后紧跟的元字符或通配符的特殊意义。shell 解析脚本过程4.2.7 环境变量概念：环境变量（environment variable），用来存储有关 shell 会话和工作环境的信息。全局环境变量和局部环境变量:// 查看全局变量$ envor$ printenv// 查看某个全局环境变量$ env HOMEor$ echo $HOME// set 命令会显示为某个特定进程设置的所有环境变量，包括全局变量、局部变量以及用户自定义变量。$ set设置用户自定义变量$ my_variable=Hello注意：所有环境变量名均使用大写字母，这是 bash shell 的标准惯例。自己创建的局部变量或是 shell 脚本，请使用小写字母。变量名区分大小写。$ my_variable="Hello World"// 设置全局变量$ export my_variable="I am Global now"// 删除环境变量$ unset my_variable注意：如果要用到变量，使用$；如果要操作变量，不使用$。PATH、PS1 环境变量// 全局环境变量$ PATH=$PATH:/opt/test/scripts// 自定义用户命令行的字符显示PS1 默认提示符变量，如动态显示当前目录：$ export PS1="[\u@\h \w]"Table 16: PS1 变量可使用的参数值\d代表日期，格式为weekday month date，例如："Mon Aug 1"\H完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux\h仅取主机的第一个名字，如上例，则为fc4，.linux则被省略\t显示时间为24小时格式，如：HH：MM：SS\T显示时间为12小时格式\A显示时间为24小时格式：HH：MM\u当前用户的账号名称\vBASH的版本信息\w完整的工作目录名称。家目录会以 ~代替\W利用basename取得工作目录名称，所以只会列出最后一个目录\#下达的第几个命令\$提示字符，如果是root时，提示符为：# ，普通用户则为：$\[字符"["\]字符"]"\!命令行动态统计历史命令次数PS2 是副提示符变量，默认值是''&gt; ''。PS2一般使用于命令行里较长命令的换行提示信息。可自定义设置如下：$ export PS2="PS2 =&gt; "另外，还有 PS3 和 PS4，因为这两个环境变量可能用得不多，所以在这就不介绍了，感兴趣的小伙伴可自行研究。定位系统环境变量登录时作为默认登录 shell登录 shell 会从5个不同的启动文件里读取命令，其中 /etc/profile 是默认的 bash shell 主启动文件。$HOME/.bash_profile$HOME/.bashrc$HOME/.bash_login$HOME/.profile作为非登录 shell 的交互式 shell作为非登录 shell 的交互式启动的，它不会访问 /etc/profile 文件，只会检查 HOME 目录中的 .bashrc 文件。.bashrc 文件有两个作用：一是查看/etc目录下通用的 bashrc 文件；二是为用户提供一个定制自己的命名别名和私有脚本函数的地方。作为运行脚本的非交互式shell系统执行 shell 脚本时使用，不同的地方在于它没有命令提示符。bash shell 提供了 BASH_ENV 环境变量，当 shell 启动一个非交互式 shell 进程时，它会检查这个环境变量来查看要执行的启动文件。在大多数发行版中，存储个人用户永久性 bash shell 变量的地方是 $HOME/.bashrc 文件。但如果设置了 BASH_ENV 变量，那么记住，除非它指向的是 $HOME/.bashrc，否则应该将非交互式 shell 的用户变量放在别的地方。数组变量// 环境变量作为数组使用$ mytest=(one two three four five)$ echo ${mytest[2]}three$ echo ${mytest[*]}one two three four five//改变某个索引的值$ mytest[2] = seven//删除某个索引的值和删除整个数组$ unset mytest[2]$ unset mytest环境变量配置文件/etc/profile/etc/profile.d/*.sh~/.bash_profile~/.bashrc/etc/bashrc~/.bash_logout~/.bash_history本地终端欢迎信息登录后的欢迎信息4.2.8 位置参数(positional parameter)Table 17: 位置参数位置参数变量说明$nn为自然数。0代表命令本身，0代表命令本身，1到9代表第1到第9个参数（参数的值是执行该命令时，从9代表第1到第9个参数（参数的值是执行该命令时，从1开始依次输入的），十以上的参数要用大括号包含，如${10}。$*这个变量代表命令行中所有的参数（不包括$0），它把所有的参数当做一个整体对待。对其进行for循环遍历时，只会循环一次。$@这个变量也代表命令行中所有的参数（不包括$0），它把所有的参数当做独立的个体对待。对其进行for循环遍历时，可循环多次。$#这个变量代表命令行中所有参数的个数（不包括$0）。#!/bin/bash# using one command line parameter#factorial=1for ((number=1; number&lt;=$1; number++))dofactorial=$[$factorial * $number]doneecho "The factorial of $1 is $factorial"4.2.9 预定义变量常见的预定义变量Table 18: 常见的预定义变量预定义常量作用0存当前程序或脚本的名称$*保存传递给脚本或进程的所有参数$$当前进程给脚本的PID号$!后台运行的最后一个进程的PID号$?用于返回上一条命令是否成功执行。如果成功执行，将返回数字0，否则返回非零数字（通常情况下都返回数字1）。$#用于保存脚本的参数个数从键盘输入read 命令选项-p等待输入时的提示信息-t等待秒数-n允许输入的字符数-s隐藏输入的数据，适用于机密信息的输入示例#!/bin/bash# Date: 2019/07/27# Author: zrg## Enter a variable nameread -p "Please enter a variable name:" -t 15 varNameecho "\n"echo $varName4.2.10 执行数学运算和运算符方法1：declare$ declare -i c=$a+$b$ echo $c方法2：expr 或 let 运算工具$ c=$(expr $a +$b)$ echo c方法3：$((表达式)) 或 $[表达式]$ var1=$((1+5))$ var2=$[$var1*2]// 使用 $ 和 [] 将数学表达式围起来注意：bash shell数学运算符支持整数运算。z shell（zsh）提供了完整的浮点数算术操作。浮点运算解决方案使用内建的bash计算器：bc$ bc3.44 / 50scale = 4 // 浮点运算由scale控制，默认值为0注意：-q 选项可以不显示冗长的欢迎信息$ bc -q#!/bin/bashvar1 = $(echo "scale=4;3.44 / 5" | bc)echo The answer is $var1#!/bin/bashvar1= 10.46var2= 43.67var3= 33.2var4= 71var5= $(bc &lt;&lt; EOFscale= 4a1= ($var1*$var2)a2= ($var3*var4)a1+b1EOF)echo "The final answer for this mess is $var5"运算符算术运算符Table 19: 算术运算符运算符说明举例+加法`expr $a + $b` 结果为 30。-减法`expr $a - $b` 结果为 -10。&lowast;乘法`expr $a \* $b` 结果为  200。/除法`expr $b / $a` 结果为 2。%取余`expr $b % $a` 结果为 0。=赋值a=$b 将把变量 b 的值赋给 a。==相等。用于比较两个数字，相同则返回 true。[ $a == $b ] 返回 false。!=不相等。用于比较两个数字，不相同则返回 true。[ $a != $b ] 返回 true。注意：条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。关系运算符Table 20: 关系运算符运算符说明举例-eq检测两个数是否相等，相等返回 true。[ $a -eq $b ] 返回 false。-ne检测两个数是否不相等，不相等返回 true。[ $a -ne $b ] 返回 true。-gt检测左边的数是否大于右边的，如果是，则返回 true。[ $a -gt $b ] 返回 false。-lt检测左边的数是否小于右边的，如果是，则返回 true。[ $a -lt $b ] 返回 true。-ge检测左边的数是否大于等于右边的，如果是，则返回 true。[ $a -ge $b ] 返回 false。-le检测左边的数是否小于等于右边的，如果是，则返回 true。[ $a -le $b ] 返回 true。布尔运算符Table 21: 布尔运算符运算符说明举例&iexcl;非运算，表达式为 true 则返回 false，否则返回 true。[ ! false ] 返回 true。-o或运算，有一个表达式为 true 则返回 true。[ $a -lt 20 -o $b -gt 100 ] 返回 true。-a与运算，两个表达式都为 true 才返回 true。[ $a -lt 20 -a $b -gt 100 ] 返回 false。逻辑运算符Table 22: 逻辑运算符运算符说明举例&amp;&amp;逻辑的 AND[ $a -lt 100 &amp;&amp; $b -gt 100 ] 返回 false||逻辑的 OR[ $a -lt 100 || $b -gt 100 ] 返回 true注意：“|”，可通过 M-x org-entities-help &lt;RET&gt; 查看，Other &gt; Misc字符串运算符Table 23: 字符串运算符运算符说明举例=检测两个字符串是否相等，相等返回 true。[ $a = $b ] 返回 false。!=检测两个字符串是否相等，不相等返回 true。[ $a != $b ] 返回 true。-z检测字符串长度是否为0，为0返回 true。[ -z $a ] 返回 false。-n检测字符串长度是否为0，不为0返回 true。[ -n "$a" ] 返回 true。$检测字符串是否为空，不为空返回 true。[ $a ] 返回 true。文件测试运算符Table 24: 文件测试运算符操作符说明举例-b file检测文件是否是块设备文件，如果是，则返回 true。[ -b $file ] 返回 false。-c file检测文件是否是字符设备文件，如果是，则返回 true。[ -c $file ] 返回 false。-d file检测文件是否是目录，如果是，则返回 true。[ -d $file ] 返回 false。-f file检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。[ -f $file ] 返回 true。-g file检测文件是否设置了 SGID 位，如果是，则返回 true。[ -g $file ] 返回 false。-k file检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。[ -k $file ] 返回 false。-p file检测文件是否是有名管道，如果是，则返回 true。[ -p $file ] 返回 false。-u file检测文件是否设置了 SUID 位，如果是，则返回 true。[ -u $file ] 返回 false。-r file检测文件是否可读，如果是，则返回 true。[ -r $file ] 返回 true。-w file检测文件是否可写，如果是，则返回 true。[ -w $file ] 返回 true。-x file检测文件是否可执行，如果是，则返回 true。[ -x $file ] 返回 true。-s file检测文件是否为空（文件大小是否大于0），不为空返回 true。[ -s $file ] 返回 true。-e file检测文件（包括目录）是否存在，如果是，则返回 true。[ -e $file ] 返回 true。-S判断某文件是否 socket。&#xa0;-L检测文件是否存在并且是一个符号链接。&#xa0;4.2.11 变量测试变量测试主要在 Shell 中使用，其它绝大多数语言是没有这个概念的，通用度不高。而且变量测试比较复杂，在实际写脚本的过程中完全可以用其它方式来取代变量测试。Table 25: 变量测试表变量置换方式y 没有设置y 为空y 设置值x=${y-变量}x=newValuex为空x=$yx=${y:-变量}x=newValuex=newValuex=$yx=${y+变量}x为空x=newValuex=newValuex=${y:-变量}x为空x为空x=newValuex=${y=变量}x=newValuex为空x=$y&#xa0;y=newValuey值不变y值不变x=${y:=变量}x=newValuex=newValuex=$y&#xa0;y=newValuey=newValuey值不变x=${y?变量}newValue 输出到标准错误输出x为空x=$yx=${y:?变量}newValue 输出到标准错误输出newValue 输出到标准错误输出x=$yx=${y-4}// 表示如果y不存在，那么x=4；如果y为空值，那么x为空值；如果y有值，那么x被赋y的值。4.2.12 退出脚本退出状态码       Table 26: 退出状态码状态码描述0命令成功结束1一般性未知错误2不适合的shell命令126命令不可执行127没找到命令128无效的退出参数128+x与Linux信号x相关的严重错误130通过Ctrl+C终止的命令255正常范围之外的退出状态码$ echo $?0exitecho 'Hello, World'exit 5 $ ./test Hello, World$ echo $?54.3 Shell Programming4.3.1 正则表达式Table 27: 正则表达式的基本组成部分正则表达式描述示例\转义符，将特殊字符进行转义，忽略其特殊意义a\.b匹配a.b，但不能匹配ajb，.被转义为特殊意义^匹配行首，awk中，^则是匹配字符串的开始^tux匹配以tux开头的行$匹配行尾，awk中，$则是匹配字符串的结尾tux$匹配以tux结尾的行.匹配除换行符\n之外的任意单个字符，awk则中可以ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符[]匹配包含在[字符]之中的任意一个字符coo[kl]可以匹配cook或cool[^]匹配[^字符]之外的任意一个字符123[^45]不可以匹配1234或1235，1236、1237都可以[-]匹配[]中指定范围内的任意一个字符，要写成递增[0-9]可以匹配1、2或3等其中任意一个数字?匹配之前的项1次或者0次colou?r可以匹配color或者colour，不能匹配colouur不支持+匹配之前的项1次或者多次sa-6+匹配sa-6、sa-666，不能匹配sa-不支持&lowast;匹配之前的项0次或者多次co*l匹配cl、col、cool、coool等()匹配表达式，创建一个用于匹配的子串ma(tri)?匹配max或maxtrix不支持()()(){n}匹配之前的项n次，n是可以为0的正整数[0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]不支持{n,}之前的项至少需要匹配n次[0-9]{2,}匹配任意一个两位数或更多位数不支持{n,m}指定之前的项至少匹配n次，最多匹配m次，n&lt;=m[0-9]{2,5}匹配从两位数到五位数之间的任意一个数字不支持|交替匹配 | 两边的任意一项ab(cd)匹配abc或abd不支持参考：https://man.linuxde.net/docs/shell_regex.html4.3.2 字符操作sed一款几乎包括所有 UNIX 体系的轻量级流编辑器，主要用来进行数据的提取、替换、删除、新增。// 查看文件的第2行$ sed -n '2p' test.txt// 删除从第2行到第4行的数据$ sed '2,4d' test.txt// 在第2行追加hello$ sed '2a hello' test.txt// 在第2行前插入两行数据$ sed '2i hello \wold' test.txt// 数据替换$ sed '2c No such person' test.txt字符串替换$ sed 's/oldStr/newStr/g' fileName// 将某个目录下的所有文件中的某个字符进行替换成新字符串，格式如下：$ sed -i 's/oldStr/newStr/g' `grep oldStr -rl /path`awksortwc4.3.3 结构化命令if-then#!/bin/bashtestuser = zrg#if grep $testuser /etc/passwdthen        echo "The bash files for user $testuser are:"    ls -a /home/$testuser/.b*    echoelif ls -d /home/$testuserthen        echo "The user $testuser has a directory"else        echo "The user $testuser does not exist on this system."    echofi#test&#21629;&#20196;&#25552;&#20379;&#20102;&#22312;if-then&#35821;&#21477;&#20013;&#27979;&#35797;&#19981;&#21516;&#26465;&#20214;&#30340;&#36884;&#24452;&#12290;#test&#21629;&#20196;&#21487;&#20197;&#21028;&#26029;&#19977;&#31867;&#26465;&#20214;&#65306;&#25968;&#20540;&#27604;&#36739;&#65307;&#23383;&#31526;&#20018;&#27604;&#36739;&#65307;&#25991;&#20214;&#27604;&#36739;test 命令格式：if test conditionthencommandsfi如果 test 命令中列出的条件成立，退出并返回退出状态码0；如果条件不成立，退出并返回非零的退出状态码。#!/bin/bash$var = 10if [$var -eq 5]then         echo "The value $var are equal."else        echo "The value $var are different."fi$var1 = baduserif [$USER != $var1]then        echo "This is not $var1"else        echo "Welcome $var"fi$var2 = baseall$var3 = hockeyif [$var2 \&gt; $var3] #&gt;&#31526;&#21495;&#38656;&#35201;&#36716;&#20041;&#65292;&#38450;&#27490;&#35299;&#37322;&#25104;&#36755;&#20986;&#37325;&#23450;&#21521;then        echo "$var2 is greater than $var3"else        echo "$var2 is less than $var3"fi特别说明：1.test命令和测试表达式使用标准的数学比较符号来表示字符串比较，而用文本代码来表示数值比较。2.比较测试时，大写字母被认为是小于小写字母，但sort命令恰好相反。#!/bin/bashvar1 = testingvar2 =''if [-n $var1]then        echo "The string '$var1' is not empty."else        echo "The string '$var1' is empty."fiif [-z $var2]then        echo "The string '$var2' is empty."else        echo "The string '$var2' is not empty."fi#!/bin/bashjump_directory=/home/arthurif [-d $jump_directory]then        echo "The $jump_directory directory exists."else        echo "The $jump_directory directory does not exists."fi比较描述-d file检查file是否存在并是一个目录-e file检查file是否存在-f file检查file是否存在并是一个文件-r file检查file是否存在并可读-s file检查file是否存在并非空-w file检查file是否存在并可写-x file检查file是否存在并可执行-O file检查file是否存在并属当前用户所有-G file检查file是否存在并且默认组与当前用户相同file1 -nt file2检查file是否比file2file1 -ot file2检查file是否比file2旧复合条件格式：[condition1] &amp;&amp; [condition2][condition1] || [condition2]#!/bin/bash# testing compound comparisons#if [-d $HOME] &amp;&amp; [-w $HOME/testing]then        echo "The file exists and you can write to it."else        echo "I cannot write to the file."fiif-then 的高级特性#!/bin/bash# (( expression )) expression &#21487;&#20197;&#26159;&#20219;&#24847;&#30340;&#25968;&#23398;&#36171;&#20540;&#25110;&#27604;&#36739;&#34920;&#36798;&#24335;&#12290;var1=10if(( $var1 ** 2 &gt; 90))then        (( $var2 = $var1 ** 2))        echo "The square of $var1 is $var2."fi  #!/bin/bash  # [[ expression ]]  if[[ $USER == r* ]]  then          echo "Hello $USER"else        echo "Sorry, I do not know you."  ficase 命令格式：case $变量名 in模式1)命令序列1;;模式2)命令序列2;;*)默认执行的命令序列;;esac   #!/bin/bash  case $action in        start | begin)                echo "start something"                echo "begin something";;        stop | end)                echo "stop something"                echo "end something";;        *)        echo "Ignorant.";;esacfor 命令格式：for var in listdocommandsdone#!/bin/bash## basic for commandfor country in China America India Japendo        echo "The next state is $country"done# another example of how not to use the for command# 1.&#20351;&#29992;&#36716;&#20041;&#23383;&#31526;&#65288;&#21453;&#26012;&#32447;&#65289;# 2.&#20351;&#29992;&#21452;&#24341;&#21495;for test in I don\'t know if "this'll" workdo        echo "word:$test"done# using a variable to hold the listlist="China America India Japen"list=$list" Connecticut"for country in $listdo        echo "Welcome to $country"done# reading values from a filefile="states"# &#20462;&#25913;IFS&#29615;&#22659;&#21464;&#37327;&#30340;&#20540;&#65292;&#20351;&#20854;&#21482;&#33021;&#35782;&#21035;&#25442;&#34892;&#31526;IFS=$'\n'for state in $(cat $file)do        echo "Visit beautiful $state"done# iterate through all the files in a directoryfor file in $HOME/* /etc/nginx/*do        if [-d "$file"]        then                echo "$file is a directory."        elif [-f "$file"]        then                echo "$file is a file."        fidone# C-style for loop#for (( i=1; i &lt;= 10; i++))do        echo "The next number is $i"done# multiple variablefor (( a=1; b=10;a &lt;= 10; a++, b++))do        echo "$a - $b"donewhile 命令格式：while test commanddoother commandsdone# while command testvar1=10while [ $var1 -gt 0 ]do        echo $var1        var1=$[ $var1 - 1 ]doneuntil 命令until 命令和 while 命令完全相反。格式：until test commanddoother commandsdone1: #!/bin/bash2: # using the until command3: var1=1004: until [ $var1 -eq 0 ]5: do6:         echo $var17:         var1=$[ $var1 -25 ]8: done应用循环处理文件数据-处理 1: #!/bin/bash 2: # changing the IFS value 3: IFS.OLD=$IFS 4: IFS=$'\n' 5: for entry in $(cat /etc/passwd) 6: do 7:         echo "Values in $entry -" 8:         IFS=: 9:         for value in $entry10:         do11:                 echo "$value"12:         done13: done14: # &#35813;&#33050;&#26412;&#20351;&#29992;&#20102;&#20004;&#20010;&#19981;&#21516;&#30340; IFS &#30340;&#20540;&#26469;&#35299;&#26512;&#25968;&#25454;&#65292;&#31532;&#19968;&#20010; IFS &#20540;&#35299;&#26512;&#20986; /etc/passwd &#25991;&#20214;&#20013;&#30340;&#21333;&#29420;&#30340;&#34892;&#65292;&#20869;&#37096; for &#24490;&#29615;&#25509;&#30528;&#23558; IFS &#30340;&#20540;&#20462;&#25913;&#20026;&#20882;&#21495;&#65292;&#20801;&#35768;&#20320;&#20174; /etc/passwd &#30340;&#34892;&#20013;&#35299;&#26512;&#20986;&#21333;&#29420;&#30340;&#20540;&#12290;break 命令 1: #!/bin/bash 2: # -------------------------------- 3: # &#36339;&#20986;&#21333;&#20010;&#24490;&#29615; 4: # 1.breaking out of a for loop 5: for var1 in 1 2 3 4 5 6: do 7:         if [ $var1 -eq 5] 8:         then 9:                 break10:         fi11:         echo "Iteration number: $var1"12: done13: echo "The for loop is completed"14: # 2.breaking out of a while loop15: var1=116: while [ $var1 -lt 10 ]17: do18:         if [ $var1 -eq 5]19:         then20:                 break21:         fi22:         echo "Iteration number: $var1"23: done24: echo "The while loop is completed"25: # --------------------------------26: # &#36339;&#20986;&#20869;&#37096;&#24490;&#29615;27: # 3.breaking out of an inner loop28: for(( a = 1; a&lt;4; a++))29: do30:         echo "Outer loop: $a"31:         for((b = 1; b&lt;100; b++))32:         do33:                 if [ $var1 -eq 5]34:                 then35:                         break36:                 fi37:                 echo "Inner loop: $b"38:         done39: done40: # ---------------------------------41: # &#36339;&#20986;&#22806;&#37096;&#24490;&#29615;42: # 4.breaking out of an outer loop43: for(( a = 1; a&lt;4; a++))44: do45:         echo "Outer loop: $a"46:         for((b = 1; b&lt;100; b++))47:         do48:                 if [ $var1 -eq 5]49:                 then50:                         break 251:                 fi52:                 echo "Inner loop: $b"53:         done54: donecontinue 命令 1: # 1.using the continue command 2: for((var1 = 1; var1&lt;15; var1++)) 3: do 4:         if [$var1 -gt 5] &amp;&amp; [$var1 -lt 10] 5:         then 6:                 continue 7:         fi 8:         echo "Iteration number: $var1" 9: done10: # 2.improperly using the continue command in a while loop11: var1=112: while echo "while iteration: $var1"13:         [ $var1 -lt 15 ]14: do15:         if [ $var1 -gt 5] &amp;&amp; [$var1 -lt 10]16:         then17:                 continue18:         fi19:         echo "Inside iteration number: $var1"20:         var1 = $[$var1 +1]21: done22: # 3.continuing an outer loop23: for(( a = 1; a&lt;5; a++))24: do25:         echo "Interation : $a"26:         for((b = 1; b&lt;3; b++))27:         do28:                 if [ $b -gt 2] &amp;&amp; [$a -lt 4]29:                 then30:                         continue 231:                 fi32:                 var3=$[$a+$b]33:                 echo "The result of $a * $b is $var3"34:         done35: done处理循环的输出可以对循环的输出使用管道或进行重定向，通过在 done 命令之后添加一个处理命令来实现：for file in /home/zrg/*do...done &gt; output.txt实例#!/bin/bash# finding files in the PATHIF=:for folder in $PATHdo        echo "$folder:"        for file in $folder/*        do                if [-x $file]                then                        echo "$file"                fi        donedone#!/bin/bash# process new user accountsinput = "users.csv"while IFS=',' read -r userid namedo        echo "adding $userid"        useradd -c "$name" -m $useriddone &lt; "$input"4.3.4 控制脚本4.3.5 创建函数4.3.6 使用其他 shell4.4 实用的脚本示例4.4.1 编写简单的脚本实用工具归档管理用户账户检测磁盘空间4.4.2 创建与数据库、Web及E-Mail相关的脚本4.4.3 一些小意思的脚本发送消息获取格言编造借口在当前目录及指定子目录深度下创建.gitignore文件#!/bin/shfor dir in `find ./ -mindepth 2 -maxdepth 4 -type d`do        echo $dir        `touch $dir/.gitignore`        echo "*"&gt;$dir/.gitignoredone解决 dpkg: warning: files list file for package 'x' missingListing 1: for package in $(sudo apt install catdoc 2&amp;1 |grep "warning: files list file for package'" |grep -Po "[^'\n ]+'" |grep -Po "[^']+");do        sudo apt install --reinstall "$package"done4.4.4 删除大文件的前n行Listing 2: 示例：删除前10行tail -n +10 old_file&gt;new_filemv new_file old_file5 Linux Advanced5.1 Linux User5.1.1 Linux User/etc/passwd$ cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologin...zrg:x:1000:1000:zrg,,,:/home/zrg:/bin/bash/etc/passwd 文件的字段包含如下信息：登录用户名用户密码UIDGroup ID描述HOME目录位置默认shell/etc/passwd 文件中的密码字段都被设置成了x，多数Linux系统都将用户密码保存在/etc/shadow文件中，只有特定的程序（比如登录程序）才能访问这个文件。一般情况下，不建议直接手动在/etc/passwd文件里进行用户管理（比如添加、修改或删除用户账户）。用标准的Linux用户管理工具去执行这些操作就会安全许多。/etc/shadow/etc/shadow 文件的每条记录都有9个字段：与/etc/passwd文件对应的登录名加密后的密码自上次修改密码后过去的天数密码（自1970年1月1日开始计算）多少天后才能更改密码多少天后必须更改密码密码过期前提前多少天提醒用户更改密码密码过期后多少天禁用用户帐目用户账户被禁用的日期（用自1970年1月1日到当天的天数表示）预留字段给将来使用用户管理文件Home 目录超级用户：/root/普通用户：/home/zrg/var/spool/mail/zrg用户邮箱目录/etc/skel在创建用户时，默认复制该目录下的文件到用户的家目录。新增、删除和修改用户//新增用户$ sudo useradd -Dor$ sudo less /etc/default/useraddSee below, the subsection "Changing the default values".GROUP=100 //用户默认组，新用户被添加到GID为100的公共组HOME=/home //HOME目录位置INACTIVE=-1 //密码过期宽限天数，密码过期后不会被禁用EXPIRE= //密码失效时间，未被设置过期日期，密码失效与 /etc/login.defs 默认文件相关。SHELL=/bin/sh //将sh作为默认shellSKEL=/etc/skel //模板目录，会将/etc/skel目录下的内容复制到用户的HOME目录下CREATE_MAIL_SPOOL=no //是否为该用户账户在mail目录下创建一个用于接收邮件的文件//用上面的默认系统参数创建一个新用户账户$ sudo useradd test//要想在创建用户时改变默认值或默认行为，可以使用命令参数，比如:$ sudo useradd -u 666 -G root,bin -c "test user" -d /home/test -s /bin/bash test//删除用户默认情况下，userdel命令只会删除/etc/passwd文件中的用户信息，而不会删除系统中属于该账户的任何文件。$ userdel -r test加上-r参数，userdel会删除用户的HOME目录以及邮件目录，但必须在删除之前检查清楚（比如是否存放了其他用户或其他程序要使用的重要文件）//修改用户Table 28: 用户账户修改工具命令描述usermod修改用户账户的字段，指定主要组以及附加组的所属关系passwd修改已有用户的密码chpasswd从文件中读取登录名密码对，并更新密码chage修改密码的过期时间chfn修改用户账户的备注信息chsh修改用户账户的默认登录shell修改密码修改用户密码的命令：passwd-S 查询用户密码的状态，仅root用户可用。-l 暂时锁定用户。仅root用户可用。-u 解锁用户。仅root用户可用。&#x2013;stdin 通过管道符输出的数据作为用户的密码。5.1.2 Linux Group/etc/group/etc/group文件有4个字段：组名组密码GID属于该组的用户列表，当一个用户在/etc/passwd文件中指定某个组作为默认组时，用户账户不会作为该组成员再出现在/etc/group文件中。/etc/gshadow/etc/group的加密资讯文件，比如用户组（Group）管理密码就是存放在这个文件。/etc/gshadow和/etc/group是互补的两个文件；对于大型服务器，针对很多用户和组，定制一些关系结构比较复杂的权限模型，设置用户组密码是极有必要的。比如我们不想让一些非用户组成员永久拥有用户组的权限和特性，这时我们可以通过密码验证的方式来让某些用户临时拥有一些用户组特性，这时就要用到用户组密码。$ sudo less /etc/gshadow组名：用户组的名称，由字母或数字构成。口令：用户组密码，这个段可以是空的或!，如果是空的或有!，表示没有密码。组管理者：这个字段也可为空，如果有多个用户组管理者，用,号分割。组内用户列表：如果有多个成员，用,号分割 ;创建、修改和删除组$ sudo groupadd shared$ sudo groupmod -n sharing shared$ sudo groupdel shared加入组和从组里删除$ sudo gpasswd -a test tests$ sudo gpasswd -d test tests5.2 Linux Access Control5.2.1 Linux 细部权限规划：ACL 权限控制什么是 ACL？ACL 是 Access Control List 的缩写，主要的目的是在提供传统的 owner,group,others 的 read,write,execute 权限之外的细部权限配置。ACL 主要可以针对哪些方面来控制权限呢？它主要可以针对以下几个项目：使用者 (user)：可以针对使用者来配置权限；群组 (group)：针对群组为对象来配置其权限；默认属性 (mask)：还可以针对在该目录下在创建新文件/目录时，规范新数据的默认权限；如何开启 ACL？查看 /dev/sdb1 分区 ACL 权限是否开启。$ sudo dumpe2fs -h /dev/sdb1//找到"Default mount options"，查看是否有临时开启分区 ACL 权限重新挂载根分区，并挂载加入 acl 权限。$ sudo mount -o remount,acl /永久开启分区 ACL 权限$ sudo vim /etc/fstabUUID=e50dea0a-bcb6-4921-8762-dd96782846dd / ext4 defaults,acl 0 1     注意：目前多数 Linux 系统 defaults 默认已经支持 acl 开启了，所以只需要添加 defaults 选项就可以了。重新挂载文件系统或重启系统，使修改生效。$ sudo mount -o remount /设定 ACL 权限使用 setfacl 命令设定 ACL 权限示例：构建听课权限组，为特定用户设定 ACL 权限# useradd wang# useradd li# useradd zhao# groupadd coursegroup# mkdir /project# chown root:coursegroup /project/# chmod 770 /project# setfacl -m u:zhao:rwx /project使用 getfacl 命令获取 ACL 设定信息格式: getfacl filename# getfacl abc.txt针对有效权限(effective permission) mask 的设定有效权限 : 使用者或群组所配置的权限必须要存在于 mask 的权限配置范围内才会生效。配置规范：『 m:[rwx] 』，例如针对某个文件规范为仅有 rx ：# setfacl -m m:rx /project/testfile针对默认权限和递归(针对目录/子目录下的所有文件)权限的设定配置规范：『 d:[ug]:使用者列表:[rwx] 』# setfacl -m d:u:zhao:rx -R /project5.2.2 Linux 文件特殊权限SetUIDSetUID 介绍只有可执行的二进制程序才能设定 SUID 权限；用户拥有该程序的可执行权限；在执行该程序时,获得该程序文件所属用户的身份；SetUID 只在该程序执行过程中有效.设定和取消 SetUID// 查看 passwd 命令的 SetUID$ ll /usr/bin/passwd-rwsr-xr-x 1 root root 59640 3月  23 03:05 /usr/bin/passwd*// 设定$ sudo chmod 4755 abc.txtor$ sudo chmod u+s abc.txt// 取消$ sudo chmod 755 abc.txt$ sudo chmod u-s abc.txt注意事项关键目录应严格控制写权限.如"/","/usr"对系统中默认应该具有 SetUID 权限的文件的统一列表,定期检查.SetGIDSetGID 介绍只有可执行的二进制程序才能设定 SUID 权限；用户拥有该程序的可执行权限；在执行该程序时,获得该程序文件所属组的身份；SetGID 只在该程序执行过程中有效.设定 SetGID$ sudo chmod 2755 abc.txt$ sudo chmod g+s abc.txtSetGID 针对目录的作用普通用户必须对此目录拥有r和x权限,才能进入次目录；普通用户在此目录中的有效组会变成次目录的属组；若普通用户对此目录拥有w权限,新建的文件默认属组是这个目录的属组.Stiky BITStiky BIT 粘着位粘着位只对目录有效普通用户对该目录有w和x权限如果没有粘着位,普通用户可以删除此目录下所有文件, 一旦赋予了粘着位,除了root用户可以删除所有文件,普通用户只能删除自己建立的文件设定 Stiky BIT$ ll /tmpdrwxrwxrwt 20 root    root    12288 7月   6 18:02 ./$ sudo chmod 1755 /tmp$ sudo chmod o+t /tmp$ sudo chmod 777 /tmp$ sudo chmod o-t /tmpchattr命令格式chattr [+-=] 选项 file/directory+ 新增权限- 删除权限= 等于某权限// 查看文件chattr属性格式: lsattr 选项 file/directory$ lsattr abc.txt选项i对文件: 不允许进行删除或改名, 也不能添加或修改数据; 对目录: 只能修改目录下文件的数据, 但不允许建立和删除文件.a对文件: 只能在文件中添加数据, 但不能删除或修改数据; 对目录: 只允许创建或修改文件, 但不允许删除文件.5.3 Linux Server5.4 Linux System Resource5.4.1 进程管理常见进程管理命令top	       list the processes running on the system// 查看$ ps -efsend a signal to one or more processes (usually to "kill" a process)an alternate way of listing your own processesput a process in the backgroundput a process in the forground5.4.2 系统资源监控5.4.3 例行性工作排程：系统定时任务对于 Linux 用户你肯定希望：     每一天早上 8:00 钟，让电脑连接上音响，并播放音乐来唤你起床；     而中午 12:00 希望 Linux 可以发一封信到你的邮件信箱，提醒你可以去吃午餐了；     另外，在每年你爱人生日的前一天，先发封信提醒你，以免忘记这么重要的一天。crontab 简单介绍 crontab 命令的功能是在一定的时间间隔调度一些命令的执行。/etc/crontab 文件在 /etc 目录下有一个 crontab 文件，这里存放有系统运行的一些调度程序。每个用户可以建立自己的调度 crontab(在 /var/spool/cron 目录下)。cron 服务每分钟不仅要读一次 /var/spool/cron 内的所有文件，还需要读一次 /etc/crontab，因此我们配置这个文件也能运用 cron 服务做一些事情。用 crontab 配置是针对某个用户的，而编辑 /etc/crontab 是针对系统的任务。crontab 文件格式如下：SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root       #&#22914;&#26524;&#20986;&#29616;&#38169;&#35823;&#65292;&#25110;&#32773;&#26377;&#25968;&#25454;&#36755;&#20986;&#65292;&#25968;&#25454;&#20316;&#20026;&#37038;&#20214;&#21457;&#32473;&#36825;&#20010;&#24080;&#21495;HOME=/            #&#20351;&#29992;&#32773;&#36816;&#34892;&#30340;&#36335;&#24452;,&#36825;&#37324;&#26159;&#26681;&#30446;&#24405;# run-parts注意到"run-parts"这个参数，后面可以写要运行的某个脚本。另外：/usr/lib/cron/cron.allow 表示谁能使用 crontab 命令。如果它是一个空文件表明没有一个用户能安排作业。如果这个文件不存在，而有另外一个文件。/usr/lib/cron/cron.deny,则只有不包括在这个文件中的用户才可以使用 crontab 命令。如果它是一个空文件表明任何用户都可安排作业。两个文件同时存在时，cron.allow 优先，如果都不存在，只有超级用户可以安排作业。crontab 基本格式Table 29: 格式\*****commond代表意思分时日月周&#xa0;范    围(0-59)(0-23)(1-31)(1-12)(0-6)&#xa0;“ * ”表示任意时刻“ , ”表示分割“ - ”表示一个段“ /n ”表示每 n 的单位执行一次命令后面加上 &gt;/dev/null 2&gt;&amp;1  ,标准错误重定向到标准输出实例1：实现两个周备份一次 /var/ftp 目录下的内容具体实现方法如下:   a.先新建一个 txt 文件，这里是 ftp-back-shell.txt，文件内容：* * 14 * * cd /back/ftp-back/ &amp;&amp; rsync -avzc /var/ftp ./b.将 ftp-back.txt 文件放到 /opt/ftp-back/ 目录下 c.运行：     $ crontab /opt/ftp-back/ftp-back.txt     $ crontab -ld.需要进行重启，配置文件生效： sudo systemctl restart crond.service实例2：实现定时插入数据新建 crontab.sh 脚本文件$ vim crontab.sh#!/bin/sh/usr/bin/php /home/zrg/.crontab/crontab.php编辑 php 文件设置定时任务$ crontab -e*/2 * * * * /bin/bash /home/zrg/.crontab/crontab.sh查看定时任务$ crontab -l重启服务使生效：sudo systemctl restart cron.service移除定时服务$ crontab -r示例3：备份 mysql 数据$ sudo vim cron.sh#!/bin/shfilename=`date +%Y%m%d%H%M%S`mysqldump -u root -proot testdb&gt;/home/zrg/crontab/$filename.sql$ crontab -e0 2 * * *  /bin/bash /home/zrg/crontab/cron.sh$rccron reload一些简单示例43 21 * * * 21:43 执行0 17 * * 1 每周一的 17:00 执行0,10 17 * * 0,2,3 每周日,周二,周三的 17:00和 17:10 执行0-10 17 1 * * 毎月1日从 17:00到17:10 毎隔1分钟 执行*/10 * * * * 　　　　　　 每隔10分 执行0,10,20,30,40,50 * * * *　每隔10分 执行2 8-20/3 * * *　　　　　　8:02,11:02,14:02,17:02,20:02 执行5.4.4 远程管理：SSH、VNCSSH &amp; OpenSSH &amp; SSL &amp; OpenSSLSSL(Secure Sockets Layer)，是网络通信提供安全及数据完整性的一种安全协议，它涉及所有TC/IP应用程序。SSL协议使用通讯双方的客户证书以及CA根证书，允许客户/服务器应用以一种不能被偷听的方式通讯，在通讯双方间建立起了一条安全的、可信任的通讯通道。它具备以下基本特征：信息保密性、信息完整性、相互鉴定。 主要用于提高应用程序之间数据的安全系数。OpenSSL，对SSL的实现。SSH(Secure Shell)，意为“安全外壳协议”，是一种可以为远程登录提供安全保障的协议。使用SSH，可以把所有传输的数据进行加密，“中间人”攻击方式就不可能实现，能防止DNS欺骗和IP欺骗。OpenSSH，对SSH的实现。依赖于OpenSSL，没有OpenSSL的话OpenSSH就编译不过去，也运行不了。HTTPS(Hypertext Transfer Protocol Secure，超文本传输安全协议)，是一种透过计算器网上进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。ssh 配置配置持久连接服务端$ sudo vim /etc/ssh/sshd_config#server&#27599;&#38548;60&#31186;&#21457;&#36865;&#19968;&#27425;&#35831;&#27714;&#32473;client&#65292;&#28982;&#21518;client&#21709;&#24212;&#65292;&#20174;&#32780;&#20445;&#25345;&#36830;&#25509;ClientAliveInterval 60  #server&#21457;&#20986;&#35831;&#27714;&#21518;&#65292;&#23458;&#25143;&#31471;&#27809;&#26377;&#21709;&#24212;&#24471;&#27425;&#25968;&#36798;&#21040;3&#65292;&#23601;&#33258;&#21160;&#26029;&#24320;&#36830;&#25509;&#65292;&#27491;&#24120;&#24773;&#20917;&#19979;&#65292;client&#19981;&#20250;&#19981;&#21709;&#24212;&#12290;ClientAliveCountMax 3客户端$ sudo vim /etc/ssh/ssh_config#server&#27599;&#38548;60&#31186;&#21457;&#36865;&#19968;&#27425;&#35831;&#27714;&#32473;client&#65292;&#28982;&#21518;client&#21709;&#24212;&#65292;&#20174;&#32780;&#20445;&#25345;&#36830;&#25509;ServerAliveInterval 60  #server&#21457;&#20986;&#35831;&#27714;&#21518;&#65292;&#23458;&#25143;&#31471;&#27809;&#26377;&#21709;&#24212;&#24471;&#27425;&#25968;&#36798;&#21040;3&#65292;&#23601;&#33258;&#21160;&#26029;&#24320;&#36830;&#25509;&#65292;&#27491;&#24120;&#24773;&#20917;&#19979;&#65292;client&#19981;&#20250;&#19981;&#21709;&#24212;&#12290;ServerAliveCountMax 3使用OpenSSL生成密钥对生成私钥$ openssl genrsa -out rsa_private_key.pem 1024参数:genrsa 生成密钥   -out 输出到文件  rsa_private_key.pem 文件名  1024 长度从私钥中提取公钥$ openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem参数: rsa 提取公钥  -in 从文件中读入  rsa_private_key.pem 文件名   -pubout  输出   -out 到文件  rsa_public_key.pem  文件名修改ssh默认端口号首先修改配置文件：$ vim /etc/ssh/sshd_configPort 22 Port 6666   注意：这里添加6666端口，测试成功连接后，再去除22端口配置。这样可以避免修改不成功无法正常登录。所修改的端口需要事先查明未被其他服务占用，以免造成不可估计的后果！重启ssh和防火墙$ systemctl restart iptables$ systemctl restart sshd假如要限制SSH登陆的IP，那么可以如下做：首先：修改/etc/hosts.deny，在其中加入sshd:ALL然后：修改：/etc/hosts.allow，在其中进行如下设置：sshd:192.168.1.1：deny  （192.168.1.*）这样就可以限制只有192.168.1.1的IP通过SSH登陆上LINUX机器了。通过密钥登录服务器生成密钥对$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/zrg/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/zrg/.ssh/id_rsa.Your public key has been saved in /home/zrg/.ssh/id_rsa.pub.The key fingerprint is:SHA256:OEEJVicOORWU5awcPz7oYPtldQwQXdwuPFyUcVY0umU zrg@DESKTOP-5IIDIKQThe key's randomart image is:+---[RSA 2048]----+|    +*B==o o.oo=*||   .o+o= .. . =o.||     .+ o .o + E ||     . *   o= =  ||      = S . o+   ||       + o .     ||    o . =        ||   . + o .       ||    ..o          |+----[SHA256]-----+在服务器上配置上公钥$ cat ~/.ssh/id_rsa.pub &gt;&gt; authorized_keys$ chmod 600 ~/.ssh/authorized_keys$ chmod 700 ~/.ssh配置ssh，打开密钥登录功能$ vim /etc/ssh/sshd_configRSAAuthentication yesPubkeyAuthentication yesPermitRootLogin yes //root &#29992;&#25143;&#33021;&#21542;&#36890;&#36807; SSH &#30331;&#24405;PasswordAuthentication no //&#24403;&#23436;&#25104;&#20840;&#37096;&#35774;&#32622;&#65292;&#20197;&#23494;&#38053;&#26041;&#24335;&#30331;&#24405;&#25104;&#21151;&#21518;&#65292;&#21487;&#20197;&#31105;&#29992;&#23494;&#30721;&#30331;&#24405;&#65306;重启ssh服务$ systemctl restart sshd.service使用scp上传或下载文件从服务器上下载文件$ scp username@servername:/path/filename /var/www/local_dir（本地目录）示例：scp root@192.168.0.101:/var/www/test.txt  把 192.168.0.101 上的 /var/www/test.txt 的文件下载到 /var/www/local_dir（本地目录）上传本地文件到服务器$ scp /path/filename username@servername:/path   例如 scp /var/www/test.php  root@192.168.0.101:/var/www/  把本机 /var/www/ 目录下的 test.php 文件上传到 192.168.0.101 这台服务器上的 /var/www/ 目录中从服务器下载整个目录$ scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）例如：scp -r root@192.168.0.101:/var/www/test  /var/www/  上传目录到服务器$ scp  -r local_dir username@servername:remote_dir例如：scp -r test  root@192.168.0.101:/var/www/ 把当前目录下的test目录上传到服务器的 /var/www/ 目录5.4.5 防火墙：iptables &amp; firewalld 工具防火墙管理工具众所周知，企业内网和外部公网相比，外部的公网环境更加恶劣，罪恶丛生。在公网与企业内网之间充当保护屏障的防火墙（见下图所示）虽然有软件或硬件之分，但主要功能都是依据策略对穿越防火墙自身的流量进行过滤。防火墙策略可以基于流量的源地址、端口号、协议、应用等信息来定制，然后防火墙使用预先定制的策略规则监控出入的流量，若流量与某一条策略规则相匹配，则执行相应的处理，反之则丢弃。这样一来，就可以保证仅有合法的流量在企业内网和外部公网之间流动了。目前在RHEL 7系统中，firewalld防火墙取代了iptables防火墙。其实，iptables与firewalld都不是真正的防火墙，它们都只是用来定义防火墙策略的防火墙管理工具而已，或者说，它们只是一种服务。与 Linux 内核集成的 IP 信息包过滤系统。防火墙在做数据包过滤决定时，有一套遵循和组成的规则，这些规则存储在专用的数据包过滤表中，而这些表集成在 Linux 内核中。iptables服务会把配置好的防火墙策略交由内核层面的netfilter网络过滤器来处理，而firewalld服务则是把配置好的防火墙策略交由内核层面的nftables包过滤框架来处理。换句话说，当前在Linux系统中其实存在多个防火墙管理工具，旨在方便运维人员管理Linux系统中的防火墙策略，我们只需要配置妥当其中的一个就足够了。虽然这些工具各有优劣，但它们在防火墙策略的配置思路上是保持一致的。netfilter 组件也称为内核空间（kernelspace），是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。iptables 组件是一种工具，也称为用户空间（userspace），它使插入、修改和除去信息包过滤表中的规则变得容易。iptables在早期的Linux系统中，默认使用的是iptables防火墙管理服务来配置防火墙。尽管新型的firewalld防火墙管理服务已经被投入使用多年，但是大量的企业在生产环境中依然出于各种原因而继续使用iptables。策略与规则链防火墙会从上至下的顺序来读取配置的策略规则，在找到匹配项后就立即结束匹配工作并去执行匹配项中定义的行为（即放行或阻止）。如果在读取完所有的策略规则之后没有匹配项，就去执行默认的策略。防火墙策略规则的设置有两种：一种是“通”（即放行），一种是“堵”（即阻止iptables服务把用于处理或过滤流量的策略条目称之为规则，多条规则可以组成一个规则链，而规则链则依据数据包处理位置的不同进行分类，具体如下：在进行路由选择前处理数据包（PREROUTING）；处理流入的数据包（INPUT）；处理流出的数据包（OUTPUT）；处理转发的数据包（FORWARD）；在进行路由选择后处理数据包（POSTROUTING）。一般来说，从内网向外网发送的流量一般都是可控且良性的，因此我们使用最多的就是INPUT规则链，该规则链可以增大黑客人员从外网入侵内网的难度。iptables 服务的术语:ACCEPT（允许流量通过）、REJECT（拒绝流量通过，拒绝流量后再回复一条"您的信息已经收到，但是被扔掉了"）、LOG（记录日志信息）、DROP（拒绝流量通过，直接将流量丢弃不响应）。当把Linux系统中的防火墙策略设置为REJECT拒绝动作后，流量发送方会看到端口不可达的响应：把Linux系统中的防火墙策略修改成DROP拒绝动作后，流量发送方会看到响应超时的提醒。但是流量发送方无法判断流量是被拒绝，还是接收方主机当前不在线基本的命令参数规则功能说明1. Table 30: 表filter主要和主机自身有关，主要负责防火墙功能 过滤本机流入流出的数据包是默认使用的表input负责过滤所有目标地址是本机地址的数据包，就是过滤进入主机的数据包forward负责转发流经主机但不进入本机的数据包，和NAT关系很大output负责处理源地址的数据包，就是对本机发出的数据包;2. NAT 表，负责网络地址转换，即来源于目的IP地址和端口的转换，一般用于共享上网或特殊端口的转换服务Table 31: NATsnat地址转换dnat标地址转换pnat标端口转换3. mangle 表将报文拆开来并修改报文标志位，最后封装起来4. 5个检查点（内置链）PREROUTINGINPUTFORWORDOUTPUTPOSTROUTINGiptables中常用的参数以及作用Table 32: iptables中常用的参数以及作用参数作用-P设置默认策略-F清空规则链-L查看规则链-A在规则链的末尾加入新规则-I num在规则链的头部加入新规则-D num删除某一条规则-s匹配来源地址IP/MASK，加叹号“!”表示除这个IP外-d匹配目标地址-i 网卡名称匹配从这块网卡流入的数据-o 网卡名称匹配从这块网卡流出的数据-p匹配协议，如TCP、UDP、ICMP&#x2013;dport num匹配目标端口号&#x2013;sport num匹配来源端口号查看已有的防火墙规则链$ iptables -L$ iptables -nvL –line-number-L 查看当前表的所有规则，默认查看的是filter表，如果要查看NAT表，可以加上-t NAT参数-n 不对ip地址进行反查，加上这个参数显示速度会快很多-v 输出详细信息，包含通过该规则的数据包数量，总字节数及相应的网络接口–line-number 显示规则的序列号，这个参数在删除或修改规则时会用到清空已有的防火墙规则链$ iptables -F添加规则把INPUT规则链的默认策略设置为拒绝$ iptables -P INPUT DROP规则链的默认策略拒绝动作只能是DROP，而不能是REJECT。向INPUT链中添加允许ICMP流量进入的策略规则$ iptables -I INPUT -p icmp -j ACCEPT在日常运维工作中，经常会使用ping命令来检查对方主机是否在线，而向防火墙的INPUT规则链中添加一条允许ICMP流量进入的策略规则就默认允许了这种ping命令检测行为。删除INPUT规则链中刚刚加入的那条策略（允许ICMP流量），并把默认策略设置为允许$ iptables -D INPUT 1$ iptables -P INPUT ACCEPT将INPUT规则链设置为只允许指定网段的主机访问本机的22端口，拒绝来自其他所有主机的流量$ iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT$ iptables -A INPUT -p tcp --dport 22 -j REJECT向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则$ iptables -I INPUT -p tcp --dport 12345 -j REJECT$ iptables -I INPUT -p udp --dport 12345 -j REJECT向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口（Web服务）的策略规则$ iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT向INPUT规则链中添加拒绝所有主机访问本机1000～1024端口的策略规则$ iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT$ iptables -A INPUT -p udp --dport 1000:1024 -j REJECT保存防火墙策略命令，使其永久生效$ service iptables saveFirewalldFirewalld(Dynamic Firewall Manager of Linux systems, Linux系统的动态防火墙管理器)，服务是默认的防火墙配置管理工具，它拥有基于CLI（命令行界面）和基于GUI（图形用户界面）的两种管理方式。相较于传统的防火墙管理配置工具，firewalld支持动态更新技术并加入了区域（zone）的概念。简单来说，区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。firewalld中常见的区域名称（默认为public）以及相应的策略规则如下表所示。Table 33: firewalld中常用的区域名称及策略规则区域默认规则策略trusted允许所有的数据包home拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量internal等同于home区域work拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量public拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量external拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量dmz拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量block拒绝流入的流量，除非与流出的流量相关drop拒绝流入的流量，除非与流出的流量相关终端管理工具firewall-cmd是firewalld防火墙配置管理工具的CLI（命令行界面）版本Table 34: firewall-cmd命令中使用的参数以及作用参数作用&#x2013;get-default-zone查询默认的区域名称&#x2013;set-default-zone=&lt;区域名称&gt;设置默认的区域，使其永久生效&#x2013;get-zones显示可用的区域&#x2013;get-services显示预先定义的服务&#x2013;get-active-zones显示当前正在使用的区域与网卡名称&#x2013;add-source=将源自此IP或子网的流量导向指定的区域&#x2013;remove-source=不再将源自此IP或子网的流量导向某个指定区域&#x2013;add-interface=&lt;网卡名称&gt;将源自该网卡的所有流量都导向某个指定区域&#x2013;change-interface=&lt;网卡名称&gt;将某个网卡与区域进行关联&#x2013;list-all显示当前区域的网卡配置参数、资源、端口以及服务等信息&#x2013;list-all-zones显示所有区域的网卡配置参数、资源、端口以及服务等信息&#x2013;add-service=&lt;服务名&gt;设置默认区域允许该服务的流量&#x2013;add-port=&lt;端口号/协议&gt;设置默认区域允许该端口的流量&#x2013;remove-service=&lt;服务名&gt;设置默认区域不再允许该服务的流量&#x2013;remove-port=&lt;端口号/协议&gt;设置默认区域不再允许该端口的流量&#x2013;reload让“永久生效”的配置规则立即生效，并覆盖当前的配置规则&#x2013;panic-on开启应急状况模式&#x2013;panic-off关闭应急状况模式使用firewalld配置的防火墙策略默认为运行时（Runtime）模式，又称为当前生效模式，而且随着系统的重启会失效。如果想让配置策略一直存在，就需要使用永久（Permanent）模式了，方法就是在用firewall-cmd命令正常设置防火墙策略时添加&#x2013;permanent参数，这样配置的防火墙策略就可以永久生效了。但是，永久生效模式有一个“不近人情”的特点，就是使用它设置的策略只有在系统重启之后才能自动生效。如果想让配置的策略立生效，需要手动执行firewall-cmd &#x2013;reload命令。使用示例查看firewalld服务当前所使用的区域# firewall-cmd --get-default-zone查询eno16777728网卡在firewalld服务中的区域# firewall-cmd --get-zone-of-interface=eno16777728把firewalld服务中eno16777728网卡的默认区域修改为external，并在系统重启后生效。分别查看当前与永久模式下的区域名称# firewall-cmd --permanent --zone=external --change-interface=eno16777728# firewall-cmd --get-zone-of-interface=eno16777728# firewall-cmd --permanent --get-zone-of-interface=eno16777728把firewalld服务的当前默认区域设置为public# firewall-cmd --set-default-zone=public# firewall-cmd --get-default-zone启动/关闭firewalld防火墙服务的应急状况模式，阻断一切网络连接（当远程控制服务器时请慎用）# firewall-cmd --panic-on# firewall-cmd --panic-off查询public区域是否允许请求SSH和HTTPS协议的流量# firewall-cmd --zone=public --query-service=ssh# firewall-cmd --zone=public --query-service=https把firewalld服务中请求HTTPS协议的流量设置为永久允许，并立即生效# firewall-cmd --zone=public --add-service=https# firewall-cmd --permanent --zone=public --add-service=https# firewall-cmd --reload把firewalld服务中请求HTTP协议的流量设置为永久拒绝，并立即生效：# firewall-cmd --permanent --zone=public --remove-service=http# firewall-cmd --reload 把在firewalld服务中访问8080和8081端口的流量策略设置为允许，但仅限当前生效# firewall-cmd --zone=public --add-port=8080-8081/tcp# firewall-cmd --zone=public --list-ports把原本访问本机888端口的流量转发到22端口，要且求当前和长期均有效流量转发命令格式为:# firewall-cmd --permanent --zone=&lt;区域&gt; --add-forward-port=port=&lt;源端口号&gt;:proto=&lt;协议&gt;:toport=&lt;目标端口号&gt;:toaddr=&lt;目标IP地址&gt;# firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.10# firewall-cmd --reloadfirewalld中的富规则表示更细致、更详细的防火墙策略配置，它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更有针对性的策略配置。它的优先级在所有的防火墙策略中也是最高的。比如，我们可以在firewalld服务中配置一条富规则，使其拒绝192.168.10.0/24网段的所有用户访问本机的ssh服务（22端口）：$ sudo firewall-cmd --permanent --zone=public --add-rich-rule="rule family="ipv4" source address="192.168.10.0/24" service name="ssh" reject"图形化管理工具服务的访问控制列表TCP Wrappers是RHEL 7系统中默认启用的一款流量监控程序，它能够根据来访主机的地址与本机的目标服务程序作出允许或拒绝的操作。换句话说，Linux系统中其实有两个层面的防火墙，第一种是前面讲到的基于TCP/IP协议的流量过滤工具，而TCP Wrappers服务则是能允许或禁止Linux系统提供服务的防火墙，从而在更高层面保护了Linux系统的安全运行。TCP Wrappers服务的防火墙策略由两个控制列表文件所控制。系统将会先检查允许控制列表文件（/etc/hosts.allow），如果匹配到相应的允许策略则放行流量；如果没有匹配，则去进一步匹配拒绝控制列表文件（/etc/hosts.deny），若找到匹配项则拒绝该流量。如果这两个文件全都没有匹配到，则默认放行流量。Table 35: TCP Wrappers服务的控制列表文件中常用的参数客户端类型示例满足示例的客户端列表单一主机192.168.10.10IP地址为192.168.10.10的主机指定网段192.168.10.IP段为192.168.10.0/24的主机指定网段192.168.10.0/255.255.255.0IP段为192.168.10.0/24的主机指定DNS后缀.linuxprobe.com所有DNS后缀为.linuxprobe.com的主机指定主机名称www.linuxprobe.com主机名称为www.linuxprobe.com的主机指定所有客户端ALL所有主机全部包括在内在配置TCP Wrappers服务时需要遵循两个原则：编写拒绝策略规则时，填写的是服务名称，而非协议名称；建议先编写拒绝策略规则，再编写允许策略规则，以便直观地看到相应的效果。参考资料iptables wikiiptables 百度百科iptables debian wiki5.5 Linux Logs5.6 Linux Start5.7 Linux Backup and Restore5.8 Linux Software5.8.1 在服务器上启用HTTPS创建一个 2048 位 RSA 公钥/私钥对。生成一个嵌入您的公钥的证书签名请求 (CSR)将 CSR 与证书颁发机构 (CA) 共享以接收最终证书或证书链。将最终证书安装在非网络可访问的位置，例如 /etc/ssl（Linux 和 Unix）或 IIS 需要它的位置 (Windows)。1. 生成密钥和证书签名请求此部分使用 openssl 命令行程序（大部分 Linux、BSD 和 Mac OS X 系统均附带此程序）来生成私钥/公钥和 CSR。参考资料：在服务器上启用 HTTPS5.8.2 神奇的 nc 命令介绍netcat是网络工具中的瑞士军刀，它能通过TCP和UDP在网络中读写数据。通过与其他工具结合和重定向。netcat所做的就是在两台电脑之间建立链接并返回两个数据流。你能建立一个服务器，传输文件，与朋友聊天，传输流媒体或者用它作为其它协议的独立客户端。安装// Redhat/CentOS/Fedora$ yum install nc// Debian/Ubuntu$ sudo apt-get install netcat常见使用端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。$ nc -z -v -n 172.31.100.7 21-25可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.z 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换(谢谢@jxing 指点)v 参数指使用冗余选项（译者注：即详细输出）n 参数告诉netcat 不要使用DNS反向查询IP地址的域名Banner是一个文本，Banner是一个你连接的服务发送给你的文本信息。一旦你发现开放的端口，你可以容易的使用netcat 连接服务抓取他们的banner。$ nc -v 172.31.100.7 21聊天工具// Server$ nc -l 1234// Client$ nc 172.168.100.7 1234文件传输// Server &gt; Client$ nc -l 1234 &gt; file.txt$ nc 172.168.100.7 1234 &lt;file.txt目录传输// Server &gt; Client$ tar -cvf - dir_name | nc -l 1234$ nc -n 172.168.100.7 1234 | tar -xvf -这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。在客户端我们下载该压缩包通过netcat 管道然后打开文件。如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。// Server$ tar -cvf – dir_name| bzip2 -z | nc -l 1234// Client$ nc -n 172.31.100.7 1234 | bzip2 -d |tar -xvf -加密网络传输数据// Server$ nc localhost 1234 | mcrypt –flush –bare -F -q -d -m ecb &gt; file.txt// Client$ mcrypt –flush –bare -F -q -m ecb &lt; file.txt | nc -l 1234流视频// Server$ cat video.avi | nc -l 1234从一个视频文件中读入并重定向输出到netcat客户端// Client$ nc 172.31.100.7 1234 | mplayer -vo x11 -cache 3000 -从socket中读入数据并重定向到mplayer。克隆一个设备已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器，而你不想在重复配置一遍。假如你的系统在磁盘/dev/sda上:// Server$ dd if=/dev/sda | nc -l 1234// Client$ nc -n 172.31.100.7 1567 | dd of=/dev/sdadd是一个从磁盘读取原始数据的工具，我通过netcat服务器重定向它的输出流到其他机器并且写入到磁盘中，它会随着分区表拷贝所有的信息。但是如果我们已经做过分区并且只需要克隆root分区，我们可以根据我们系统root分区的位置，更改sda 为sda1，sda2.等等。参考资料https://blog.csdn.net/zhangxiao93/article/details/527056425.8.3 GCC简单编译$ gcc test.c -o test实质上，以上这条命令编译过程分为四个阶段进行的，即预处理（预编译，Preprocessing）、编译（Compilation）、汇编（Assembly）和连接（Linking）。1.Preprocessing$ gcc -E test.c -o test.i或$ gcc -E test.cgcc 的 -E 选项，可以让编译器在预处理后停止，并输出预处理结果。在本例中，预处理结果就是将 stdio.h 文件中的内容插入到 test.c 中了。2.Compilation$ gcc -S test.i -o test.sgcc 的 -S 选项，表示在程序编译期间，在生成汇编代码后，停止，-o 输出汇编代码文件。3.Assembly$ gcc -c test.s -o test.o对于上一小节中生成的汇编代码文件 test.s，gas 汇编器负责将其编译为目标文件4.Linkinggcc 连接器是 gas 提供的，负责将程序的目标文件与所需的所有附加的目标文件连接起来，最终生成可执行文件。附加的目标文件包括静态连接库和动态连接库。对于上一小节中生成的 test.o，将其与 Ｃ 标准输入输出库进行连接，最终生成程序 test$ gcc test.o -o test多个程序文件的编译$ gcc test1.c test2.c -o test检错$ gcc -pedantic test.c -o test//警告信息$ gcc -Wall test.c -p test//-Werror 选项，那么 GCC 会在所有产生警告的地方停止编译，迫使程序员对自己的代码进行修改$ gcc -Werror test.c -o test库文件连接1.编译可执行文件。首先我们要进行编译 test.c 为目标文件，这个时候需要执行$ gcc  –c –I /usr/dev/mysql/include test.c –o test.o2.链接。最后我们把所有目标文件链接成可执行文件:$ gcc –L /usr/dev/mysql/lib –lmysqlclient test.o –o test3.强制链接时使用静态链接库。默认情况下， GCC 在链接时优先使用动态链接库，只有当动态链接库不存在时才考虑使用静态链接库，如果需要的话可以在编译时加上 -static 选项，强制使用静态链接库。$ gcc –L /usr/dev/mysql/lib –static –lmysqlclient test.o –o test其他静态库链接时搜索路径顺序：1. ld 会去找GCC命令中的参数 -L2. 再找 gcc 的环境变量 LIBRARY_PATH3. 再找内定目录 /lib /usr/lib /usr/local/lib 这是当初 compile gcc 时写在程序内的动态链接时、执行时搜索路径顺序:1. 编译目标代码时指定的动态库搜索路径2. 环境变量 LD_LIBRARY_PATH 指定的动态库搜索路径3. 配置文件 /etc/ld.so.conf 中指定的动态库搜索路径4. 默认的动态库搜索路径 /lib5. 默认的动态库搜索路径 /usr/lib有关环境变量：LIBRARY_PATH 环境变量：指定程序静态链接库文件搜索路径LD_LIBRARY_PATH 环境变量：指定程序动态链接库文件搜索路径Referencehttp://www.cnblogs.com/ggjucheng/archive/2011/12/14/2287738.html5.8.4 系统状态监视命令：top &amp; htoptophtop下载及安装$ git clone https://github.com/hishamhm/htop $ tar zxvf htop-2.0.2.tar.gz$ cd htop-2.0.2$ ./configure# make &amp;&amp; make install错误解决configure: error: missing libraries: libncursesSolving:$ sudo apt-get install nucurses-dev5.8.5 网络监视命令：iftop$ sudo apt-get install iftop5.8.6 wget vs axel官方地址: http://axel.alioth.debian.org/描述: 替换wget命令5.8.7 VIM&amp;Emacs两个神器软件单独介绍，这里不重复叙写。5.8.8 MPlayer// official：http://www.mplayerhq.hu/design7/news.html$ tar -Jxf MPlayer-1.1.1.tar.xz$ cd MPlayer-1.1.1$ sudo ./configure// 发现，需要安装一个依赖包:yasm$ wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz// 安装完成后，重新配置、编译和安装$ sudo ./configure$ sudo make &amp;&amp; make install5.8.9 google-chrome &amp; chromium添加安装源$ sudo vim /etc/apt/sources.listdeb http://dl.google.com/linux/chrome/deb/ stable main添加公钥验证下载$ wget https://dl-ssl.google.com/linux/linux_signing_key.pub$ apt-key add linux_signing_key.pub执行安装$ sudo apt update// stable ersion$ sudo apt install google-chrome-stable// beta or unstable ersion$ sudo apt install google-chrome-beta$ sudo apt install google-chrome-unstable安装 chromium$ sudo apt-get update$ sudo apt-get install chromium chromium-l10n（chromium-l10n 是用于本地化界面的，是可选的软件包）注意：chromium不支持PDF查看5.8.10 Scrot：截图工具安装$ sudo apt-get install scrot使用方法整个桌面截图(Full desktop)$ scrot$ scrot ~/Downloads/my_desktop.png //Saving to specified directory.特定区域截图（选择截取）(Specific area)$ scrot -s延迟截图(temporize screenshot)$ scrot -s -d 5截图调整质量(Adjust the quality of screenshots)$ scrot -q 50截图调整大小(Adjust the screen size)$ scrot -t 10将截图发送给其他命令(Deliver the intercepted screenshots to other commands)$ scrot -e 'mv $f ~/screenshots'参考资料(References)https://linux.cn/article-3197-1.html5.8.11 rarcrack（压缩包密码破解工具）支持格式：rar,7z,zip// install$ sudo apt-get install libxml2-dev build-essential$ sudo apt-get install rarcrack// use$ rarcrack --threads 10 --type rar test.rar5.8.12 宝塔面板一款使用方便、功能强大且终身免费的服务器管理软件。详见官网:http://www.bt.cn/5.8.13 Cisco AnyConnect VPN Client问题解决$ sudo systemctl enable vpnagentd_initvpnagentd_init.service is not a native service, redirecting to systemd-sysv-install.Executing: /lib/systemd/systemd-sysv-install enable vpnagentd_initinsserv: warning: script 'vpnagentd_init' missing LSB tags and overridesinsserv: There is a loop between service bt and vpnagentd_init if stoppedinsserv:  loop involving service vpnagentd_init at depth 2insserv:  loop involving service bt at depth 1insserv: Stopping vpnagentd_init depends on bt and therefore on system facility `$all' which can not be true!insserv: exiting now without changing boot order!update-rc.d: error: insserv rejected the script header[solve]：$ sudo vim /etc/init.d/vpnagentd_init#!/bin/sh### BEGIN INIT INFO# Provides: vpnagentd_init# Required-Start: $remote_fs $syslog# Required-Stop: $remote_fs $syslog# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: Start Cisco vpn agent daemon at boot time# Description: Cisco vpn agent daemon### END INIT INFO5.8.14 Bind：DNS工具安装# yum install -y bind配置1)# vim /etc/named.conf修改内容如下： 将下面 listen-on port 53 { 127.0.0.1; }; allow-query { localhost; }; 改为 listen-on port 53 { any; }; allow-query { any; };2)# vim named.rfc1912.zones注意改动位置：zone "zrg.com.cn" IN {type master;file "named.zrg";allow-update { none; };};3)# cp /var/named/named.localhost /var/named/named.zrg//修改文件所属群组#chgrp named /var/named/named.zrg4)# vim /var/named/named.zrg注意改动位置：$TTL 1D@ IN SOA @ dns.zrg.com.cn. root(0 ; serial1D ; refresh1H ; retry1W ; expire3H ) ; minimumNS dns.zrg.com.cn.DNS A 192.168.120.166A 127.0.0.1AAAA ::15)# /etc/init.d/named restart# chkconfig named on6)# vim /etc/sysconfig/networkNetwork=yesHostname=dns.zrg.com.cn7)# vim /etc/resolv.confSearch zrg.com.cnNameserver 192.168.120.1668)# /etc/init.d/named restart# ping zrg.com.cn# reboot5.8.15 Composer安装1.Download composer.phar file.2.Excute:# php composer.phar3.Global:# mv composer.phar /usr/local/bin/composer4.Permission:# chmod 744 composer问题解决error: /usr/bin/env: php: No such file or directory solve:Configuring php to become global variables5.8.16 vsftpdDownload and Installhttps://security.appspot.com/vsftpd.html#download//yumyum install -y vsftpdChange default dir#local userlocal_root=/usr/share/nginx/html#is_enable local view,default_setting is NOchroot_local_user=NO#anonymous useranon_root=/var/ftp/pubConfiguring directory of accesschroot_local_user=YESchroot_list_enable=NOallow_writeable_chroot=YES&#25253;&#22914;&#19979;&#38169;&#35823;&#65292;&#26159;&#22240;&#20026;&#27809;&#26377;&#28155;&#21152;&#19978;&#38754;&#30340;&#31532;&#19977;&#26465;&#35821;&#21477;&#65292;&#23548;&#33268;&#29992;&#25143;&#26080;&#27861;&#38145;&#23450;&#33258;&#24049;&#30340;&#30446;&#24405;&#12290;   500 OOPS: vsftpd: refusing to run with writable root inside chroot()notice: &#37197;&#32622;&#20855;&#20307;&#24773;&#20917;&#26377;&#20197;&#19979;&#20960;&#31181;&#65306;1&#65289;&#24403; chroot_list_enable=yes&#65292;chroot_local_user=yes&#26102;&#65292;&#22312;/etc/vsftpd/chroot_list&#25991;&#20214; &#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#65307;&#26410;&#22312;&#25991;&#20214;&#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#19981;&#33021;&#20999;&#25442;&#21040;&#31449;&#28857;&#26681;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;&#12290;2&#65289;&#24403; chroot_list_enable=yes&#65292;chroot_local_user=no&#26102;&#65292;&#22312;/etc/vsftpd/chroot_list&#25991;&#20214;&#20013; &#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#19981;&#33021;&#20999;&#25442;&#21040;&#31449;&#28857;&#26681;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;&#65307;&#26410;&#22312;&#25991;&#20214;&#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;3&#65289;&#24403; chroot_list_enable=no&#65292;chroot_local_user=yes&#26102;&#65292;&#25152;&#26377;&#29992;&#25143;&#22343;&#19981;&#33021;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;4&#65289;&#24403; chroot_list_enable=no&#65292;chroot_local_user=no&#26102;&#65292;&#25152;&#26377;&#29992;&#25143;&#22343;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;5&#65289;&#24403;&#29992;&#25143;&#19981;&#20801;&#35768;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#26102;&#65292;&#30331;&#24405;&#21518;ftp&#31449;&#28857;&#30340;&#26681;&#30446;&#24405;&#8220;/&#8221;&#26159;&#35813;ftp&#36134;&#25143;&#30340;&#20027;&#30446;&#24405;&#65292;&#21363;&#25991;&#20214;&#30340;&#31995;&#32479;&#30340;/var/ftp&#30446;&#24405;&#12290;my vsftpd.conf//CentOS 7, /etc/vsftpd/vsftpd.conf.# Example config file /etc/vsftpd/vsftpd.conf# Allow anonymous FTP? (Beware - allowed by default if you comment this out).anonymous_enable=NO#local_root=/srv/www/## Uncomment this to allow local users to log in.# When SELinux is enforcing check for SE bool ftp_home_dirlocal_enable=YES## Uncomment this to enable any form of FTP write command.write_enable=YES## Default umask for local users is 077. You may wish to change this to 022,# if your users expect that (022 is used by most other ftpd's)local_umask=022## Uncomment this to allow the anonymous FTP user to upload files. This only# has an effect if the above global write enable is activated. Also, you will# obviously need to create a directory writable by the FTP user.# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access#anon_upload_enable=YES## Uncomment this if you want the anonymous FTP user to be able to create# new directories.#anon_mkdir_write_enable=YES## Activate directory messages - messages given to remote users when they# go into a certain directory.dirmessage_enable=YES## Activate logging of uploads/downloads.xferlog_enable=YES## Make sure PORT transfer connections originate from port 20 (ftp-data).connect_from_port_20=YES## If you want, you can arrange for uploaded anonymous files to be owned by# a different user. Note! Using "root" for uploaded files is not# recommended!#chown_uploads=YES#chown_username=whoever## You may override where the log file goes if you like. The default is shown# below.#xferlog_file=/var/log/xferlog## If you want, you can have your log file in standard ftpd xferlog format.# Note that the default log file location is /var/log/xferlog in this case.xferlog_std_format=YES## You may change the default value for timing out an idle session.#idle_session_timeout=600## You may change the default value for timing out a data connection.#data_connection_timeout=120## It is recommended that you define on your system a unique user which the# ftp server can use as a totally isolated and unprivileged user.#nopriv_user=ftpsecure## Enable this and the server will recognise asynchronous ABOR requests. Not# recommended for security (the code is non-trivial). Not enabling it,# however, may confuse older FTP clients.#async_abor_enable=YES## By default the server will pretend to allow ASCII mode but in fact ignore# the request. Turn on the below options to have the server actually do ASCII# mangling on files when in ASCII mode.# Beware that on some FTP servers, ASCII support allows a denial of service# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd# predicted this attack and has always been safe, reporting the size of the# raw file.# ASCII mangling is a horrible feature of the protocol.#ascii_upload_enable=YES#ascii_download_enable=YES## You may fully customise the login banner string:#ftpd_banner=Welcome to blah FTP service.## You may specify a file of disallowed anonymous e-mail addresses. Apparently# useful for combatting certain DoS attacks.#deny_email_enable=YES# (default follows)#banned_email_file=/etc/vsftpd/banned_emails## You may specify an explicit list of local users to chroot() to their home# directory. If chroot_local_user is YES, then this list becomes a list of# users to NOT chroot().# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that# the user does not have write access to the top level directory within the# chroot)chroot_local_user=YESchroot_list_enable=YESallow_writeable_chroot=YES# (default follows)chroot_list_file=/etc/vsftpd/chroot_list## You may activate the "-R" option to the builtin ls. This is disabled by# default to avoid remote users being able to cause excessive I/O on large# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume# the presence of the "-R" option, so there is a strong case for enabling it.#ls_recurse_enable=YES## When "listen" directive is enabled, vsftpd runs in standalone mode and# listens on IPv4 sockets. This directive cannot be used in conjunction# with the listen_ipv6 directive.listen=NO## This directive enables listening on IPv6 sockets. By default, listening# on the IPv6 "any" address (::) will accept connections from both IPv6# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6# sockets. If you want that (perhaps because you want to listen on specific# addresses) then you must run two copies of vsftpd with two configuration# files.# Make sure, that one of the listen options is commented !!listen_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YESReferenceshttps://security.appspot.com/vsftpd.htmlhttps://en.wikipedia.org/wiki/Vsftpdhttp://baike.baidu.com/item/vsftpd5.8.17 Cygwin：windows 下 Linux 模拟软件安装Cygwin略提示：安装软件时，可使用中国科技大学软件源mirrors.ustc.edu.cn/cygwin// 举例说明：安装及配置ssh1.运行安装文件2.搜索ssh，在Net类别下选上OpenSSH和OpenSSL两项3.安装完成后，打开Cygwin，输入ssh-host-config当询问if privilege separation should be used 时输入 no . 当询问if sshd should be installed as a service 时输入yes . 当询问about the value of CYGWIN environment variable enter 时输入 ntsec .其余询问均输入 no4.在cygwin中输入 cygrunsrv --start sshd 启动sshd5.打开cygwin，输入 ssh-keygen，当询问要filenames 和 pass phrases 的时候都点回车，接受默认的值6.命令结束后输入 cd ~/.ssh 转到.ssh目录，输入 ls –l 应该包含两个文件：id_rsa.pub 和 id_rsa7.在第8步的窗口（当前目录在.ssh）中输入 cat id_rsa.pub &gt;&gt; authorized_keys8.输入 ssh localhost 启动SSH参考资料1.Cygwin-Official Site:http://cygwin.com/2.Cygwin-Wikipedia:https://en.wikipedia.org/wiki/Cygwin3.Cygwin-百度百科：http://baike.baidu.com/view/3968.htm4.Cygwin在线安装指南：http://www.crifan.com/files/doc/docbook/cygwin_intro/release/htmls/install_cygwin_setup_exe.html5.8.18 Wps for Linux1. 从官网下载安装包，网址：http://www.wps.cn/2. 安装$ sudo dpkg -i wps_office_10.xxx.deb3. 安装完成后，提示“系统缺失字体symbol、wingdings、wingdings 2、wingdings 3、webding”的解决办法：1) 下载缺失的字体文件，然后复制到Linux系统中的/usr/share/fonts文件夹中。国外下载地址：https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip国内下载地址：http://pan.baidu.com/s/1mh0lcbY或者直接 在win 中（C/WINDOWS/FONTS）2) 执行以下命令,生成字体的索引信息：$ sudo mkfontscale$ sudo mkfontdir3) 运行fc-cache命令更新字体缓存$ sudo fc-cache5.8.19 gnome-screenshots常用快捷键Prt Scrn to take a screenshot of the desktop.Alt+Prt Scrn to take a screenshot of a window.Shift+Prt Scrn to take a screenshot of an area you select.参考资料(References)Screenshots and screencasts6 Problem6.1 命令行下不能输入中文标点符号使用快捷键 Ctrl+. 一个是lation 符号，一个是全角符号。6.2 不能在 Sublime 编辑器（Editor）中输入中文下载（Download）$ git clone https://github.com/lyfeyaj/sublime-text-imfix.git配置（Configure）$ cd ~/sublime-text-imfix$ sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/$ sudo cp ./src/subl /usr/bin/ $ LD_PRELOAD=./libsublime-imfix.so subl新建Shell脚本$ vim /home/zrg/sublime#!/bin/bashLD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl参考资料http://www.jianshu.com/p/bf05fb3a47096.3 解决系统不能支持加密算法：chacha20$ sudo apt-get install m2crypto gcc -y$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz$ tar zxvf libsodium-1.0.8.tar.gz$ cd libsodium-1.0.8$ ./configure$ sudo make &amp;&amp; make install$ sudo echo "include ld.so.conf.d/*.conf"&gt;/etc/ld.so.conf$ sudo echo "/lib"&gt;&gt;/etc/ld.so.conf$ sudo echo "/usr/lib64"&gt;&gt;/etc/ld.so.conf$ sudo echo "/usr/local/lib"&gt;&gt;/etc/ld.so.conf$ ldconfig6.4 软件源配置不全，导致软件不能安装//Error: Can't fix the error because you are asking some packages to stay the same, that is they break the dependencies between the packages.//翻译：无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系//解决：检查安装源，进行重新配置，必要时添加debian官方安装源$ vim /etc/apt/sources.list$ sudo apt-get update6.5 .deb 转换为 .rpm6.5.1 下载及安装 alien1.下载:$ wget https://packages.debian.org/unstable/source/alien2.安装:$ tar xpvf alien_8.95.tar.xz $ cd alien-8.95$ make &amp;&amp; make install6.5.2 转换(Conversion)$ alien -r kuaipan4uk_2.0.0.5_amd64.deb6.6 软件自启动脚本实例6.6.1 实例：php-fpm 服务启动脚本$ sudo vim /etc/init.d/php-fpm#!/bin/sh# DateTime:2017-03-09# Author:zrg# chkconfig: - 84 16. /etc/rc.d/init.d/functions# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ "$NETWORKING" = "no" ] &amp;&amp; exit 0phpfpm="/usr/local/php/sbin/php-fpm"prog=$(basename ${phpfpm})lockfile=/var/lock/subsys/phpfpmstart() {    [ -x ${phpfpm} ] || exit 5    echo -n $"Starting $prog: "    daemon ${phpfpm}    retval=$?    echo    [ $retval -eq 0 ] &amp;&amp; touch $lockfile    return $retval}stop() {    echo -n $"Stopping $prog: "    killproc $prog -QUIT    retval=$?    echo    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile    return $retval}restart() {    configtest || return $?    stop    start}reload() {    configtest || return $?    echo -n $"Reloading $prog: "killproc ${phpfpm} -HUP    RETVAL=$?    echo}force_reload() {    restart}configtest() {  ${phpfpm} -t}rh_status() {    status $prog}rh_status_q() {    rh_status &gt;/dev/null 2&gt;&amp;1}case "$1" in    start)        rh_status_q &amp;&amp; exit 0        $1        ;;    stop)        rh_status_q || exit 0        $1        ;;    restart|configtest)        $1        ;;    reload)        rh_status_q || exit 7        $1        ;;    status)        rh_status        ;;     *)        echo $"Usage: $0 {start|stop|status|restart|reload|configtest}"        exit 2esac脚本说明：# Source function library.  . /etc/rc.d/init.d/functions  //类似于include,require，引入文件。# Source networking configuration.  . /etc/sysconfig/network   //同理。//引入后，用到的daemon、statusNETWORKING=yes HOSTNAME=E10162//将他们作为变量赋值,判断网卡是否启动，如果你的 nginx 不走网卡，其实网络这段可以去掉//daemon便是实现上图漂亮的【 OK 】的函数.2.设置自启动# php-fpm 加入服务chkconfig --add php-fpm# php-fpm 234 级别下设置为启动chkconfig php-fpm on# 查看 php-fpm 服务当前配置chkconfig --list php-fpmphp-fpm         0:off   1:off   2:on    3:on    4:on    5:on    6:off3.php-fpm操作# 启动/关闭/重启/重载service php-fpm start/stop/restart/reload# 检查配置文件#service php-fpm configtest6.6.2 Referenceshttp://www.ttlsa.com/php/php-fpm-service-scripts/6.7 解决 dpkg: warning: files list file for package 'x' missing 问题Listing 3: for package in $(apt-get upgrade 2&gt;&amp;1 |\                 grep "warning: files list file for package '" |\                 grep -Po "[^'\n ]+'" | grep -Po "[^']+"); do    apt-get install --reinstall "$package";done6.8 dpkg: error: failed to open package info file `/var/lib/dpkg/available' for reading$ sudo dpkg --configure -a$ sudo apt-get -f install$ sudo apt-get --fix-missing install$ sudo apt-get clean$ sudo apt-get update$ sudo apt-get upgrade$ sudo apt-get dist-upgrade$ sudo apt-get clean$ sudo apt-get autoremove6.9 CentOS 7关闭firewall，安装iptables1. 查看安装和状态$ yum installed firewalld iptables$ systemctl list-unit-files firewalld.service iptables.service2. 停止并禁止自启动firewall和安装iptables防火墙$ systemctl stop firewalld.service$ systemctl disable firewalld.service$ yum install iptables-service$ systemctl enable iptables.service3. 编辑并修改配置文件/etc/sysconfig/iptables，使用如下配置*filter:INPUT ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT ACCEPT [0:0]:TEST - [0:0]-A INPUT -j TEST-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --rcheck --seconds 1 --hitcount 15 -j DROP-A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --set-A INPUT -i eth1 -p tcp -m tcp -d 192.168.1.100 --syn -m connlimit --connlimit-above 50 --connlimit-mask 32 --connlimit-saddr -j DROP#-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG SYN -m length --length 0:128 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT... ...-A INPUT -j DROP-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j TEST-A FORWARD -j REJECT --reject-with icmp-host-prohibited-A OUTPUT -j TEST-A TEST -j RETURNCOMMIT4. 查看防火墙规则是否启用。$ iptables -L]]></content>
      <categories>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> Debian </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Customize my own theme tutorial with Next Theme]]></title>
      <url>/jekyll/2018/08/05/next-tutorial/</url>
      <content type="text"><![CDATA[PrefaceNexT theme from Hexo NexT, and this site build  with org-mode. The following are some references:  Jekyll Official Site  NexT theme  Live Preview  Yitao’s Blog  NexT 使用文档   Setting up your GitHub Pages site locally with Jekyll    Installation          Check whether you have Ruby 2.1.0 or higher installed:          $ ruby --version                    Install Bundler and Jekyll:          $ gem install bundler jekyll                    Clone:          $ git clone https://github.com/zhaorengui/zhaorengui.github.io.git  $ cd jekyll-theme-next                    Install dependencies packages:          $ bundle install                    Running your Jekyll site locally:          $ bundle exec jekyll server                Access http://localhost:4000 on browser.        Diretory Structure        ├─_data		数据目录│  ├─languages	语言目录├─_drafts	(预发布)草稿目录├─_include	固定文件模板引用目录├─_orgs		org文件目录│  ├─_assets	资源目录，img,js,css,...│  ├─_drafts	org草稿目录│  ├─_posts	org发布目录├─_posts	文章目录，皆是html文件├─_sass		scss文件目录├─_site		站点访问目录├─about		关于目录├─archives	归档目录├─assets	资源目录├─categories	分类目录├─tag		标签目录├─tags		标签目录├─404.html	404页面├─Gemfile	jekyll文件	├─Gemfile.lock	jekyll文件├─README.en.md	英文说明文件├─README.md	说明文件├─_config.yml	配置文件├─index.html	入口文件└─search.xml	搜索配置文件                Name            分类命名：英文名称全部小写，如algorithms，c#，javascript等。两个单词以上组成，采用-字符连接。分类名称不能重名。      标签命名：与实际常见命名一致，如MySQL，PHP，Jekyll等。另外一些两个单词以上组成的术语，建议采用-字符连接，如Design-Pattern。      org 源文件命名：日期+文件描述名称，文件描述名称采用-字符连接，如2018-12-12-vue-iview.org。      org 发布目录命名：采用驼峰法命名。        .org            ScreenshotsBrowser supportContributingWelcome you submit issues.]]></content>
      <categories>
        
          <category> jekyll </category>
        
      </categories>
      <tags>
        
          <tag> jekyll </tag>
        
          <tag> NexT </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 常见函数]]></title>
      <url>/php/2018/05/04/php-built-in-functions/</url>
      <content type="text"><![CDATA[String  addcslashes — 以 C 语言风格使用反斜线转义字符串中的字符  addslashes()，字符串转义，使用反斜线引用字符串。如I’m Zhao中的’。  bin2hex — 函数把包含数据的二进制字符串转换为十六进制值  chop — rtrim 的别名  chr — 返回指定的字符  chunk_split — 将字符串分割成小块  convert_cyr_string — 将字符由一种 Cyrillic 字符转换成另一种  convert_uudecode — 解码一个 uuencode 编码的字符串  convert_uuencode — 使用 uuencode 编码一个字符串  count_chars — 返回字符串所用字符的信息  crc32 — 计算一个字符串的 crc32 多项式  crypt — 单向字符串散列  echo — 输出一个或多个字符串  fprintf — 将格式化后的字符串写入到流  print_r — 以易于理解的格式打印变量。  var_dump — 打印变量的相关信息  var_export — 输出或返回一个变量的字符串表示```php// print_r ( mixed $expression [, bool $return = FALSE ] ) : mixed// var_dump ( mixed $expression [, mixed $… ] ) : void// var_export ( mixed $expression [, bool $return ] ) : mixed+ get_html_translation_table — 返回使用 htmlspecialchars 和 htmlentities 后的转换表+ hebrev — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）+ hebrevc — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符+ hex2bin — 转换十六进制字符串为二进制字符串+ html_entity_decode — Convert HTML entities to their corresponding characters+ htmlentities — 将字符转换为 HTML 转义字符+ htmlspecialchars_decode — 将特殊的 HTML 实体转换回普通字符+ htmlspecialchars — 将特殊字符转换为 HTML 实体~~~htmlentities 和 htmlspecialchars 的区别:	这两个函数的功能都是转换字符为 HTML 字符编码，特别是 url 和代码字符串。htmlentities 转换所有的 html 标记；htmlspecialchars 只格式化&amp; ' " &lt; 和 \&gt; 这几个特殊符号。 ~~~+ lcfirst — 使一个字符串的第一个字符小写+ levenshtein — 计算两个字符串之间的编辑距离+ localeconv — Get numeric formatting information+ ltrim — 删除字符串开头的空白字符（或其他字符）+ md5_file — 计算指定文件的 MD5 散列值+ md5 — 计算字符串的 MD5 散列值+ metaphone — Calculate the metaphone key of a string+ money_format — 将数字格式化成货币字符串+ nl_langinfo — Query language and locale information+ nl2br — 在字符串所有新行之前插入 HTML 换行标记+ number_format — 以千位分隔符方式格式化一个数字```php// 无论值是否为0，都保留小数点后两位echo number_format((float)round($a,2,PHP_ROUND_HALF_ODD),2,'.','');// 整数部分以千位分隔符方式分隔echo number_format((float)round($a,2,PHP_ROUND_HALF_ODD),2,'.',',');  ord — 转换字符串第一个字节为 0-255 之间的值  parse_str — 将字符串解析成多个变量  print — 输出字符串  printf — 输出格式化字符串  quoted_printable_decode — 将 quoted-printable 字符串转换为 8-bit 字符串  quoted_printable_encode — 将 8-bit 字符串转换成 quoted-printable 字符串  quotemeta — 转义元字符集  rtrim — 删除字符串末端的空白字符（或者其他字符）  setlocale — 设置地区信息  sha1_file — 计算文件的 sha1 散列值  sha1 — 计算字符串的 sha1 散列值  similar_text — 计算两个字符串的相似度  soundex — Calculate the soundex key of a string  sprintf — Return a formatted string  sscanf — 根据指定格式解析输入的字符  str_getcsv — 解析 CSV 字符串为一个数组  str_ireplace — str_replace 的忽略大小写版本  str_pad — 使用另一个字符串填充字符串为指定长度  str_repeat — 重复一个字符串  str_rot13 — 对字符串执行 ROT13 转换  str_shuffle — 随机打乱一个字符串  str_split — 将字符串转换为数组  str_word_count — 返回字符串中单词的使用情况  strcasecmp — 二进制安全比较字符串（不区分大小写）  strcmp — 二进制安全字符串比较  strcoll — 基于区域设置的字符串比较  strcspn — 获取不匹配遮罩的起始子字符串的长度  strip_tags — 从字符串中去除 HTML 和 PHP 标记  stripcslashes — 反引用一个使用 addcslashes 转义的字符串  strpos()，查找字符串首次出现的位置。strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int，如果没找到 needle，将返回 FALSE，此函数可能返回布尔值 FALSE，但也可能返回等同于 FALSE 的非布尔值。应使用 === 运算符来测试此函数的返回值。缺点：对中文支持不好    // 判断是否包含某字符串$pos = strpos($str,$needle);if($pos !== false){  echo 'exist';}        stripslashes — 反引用一个引用字符串  strlen()，获取字符串长度。  strnatcasecmp — 使用“自然顺序”算法比较字符串（不区分大小写）  strnatcmp — 使用自然排序算法比较字符串  strncasecmp — 二进制安全比较字符串开头的若干个字符（不区分大小写）  strncmp — 二进制安全比较字符串开头的若干个字符  strpbrk — 在字符串中查找一组字符的任何一个字符  substr()，字符串截取。substr(字符串变量,开始截取的位置，截取个数） 。如：  mb_substr() ，字符串截取。mb_substr ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] ) : string  strstr()，返回字符串从查找字符串出现的位置开始到字符串结尾的字符串。    // 去除字符串后3位substr($tempStr,0,strlen($tempStr)-3); // 截取某个字符之后的字符串substr($str,strpos($str,"_");// 判断是否包含某字符串，没有返回值，则不包含echo strstr($str,'@');        stristr()，与 strstr() 的使用方法一样，区别是 stristr 不区分大小写。  strchr — strstr 的别名  strrchr — 查找指定字符在字符串中的最后一次出现  strrev — 反转字符串  strripos — 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）  strspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。  strspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。  strstr — 查找字符串的首次出现  strtok — 标记分割字符串  strtolower — 将字符串转化为小写  strtoupper — 将字符串转化为大写  strtr — 转换指定字符  substr_compare — 二进制安全比较字符串（从偏移位置比较指定长度）  substr_count — 计算字串出现的次数  str_replace()，搜索替换字符串。substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] ) : mixed  trim — 去除字符串首尾处的空白字符（或者其他字符）  ucfirst — 将字符串的首字母转换为大写  ucwords — 将字符串中每个单词的首字母转换为大写  vfprintf — 将格式化字符串写入流  vprintf — 输出格式化字符串  vsprintf — 返回格式化字符串  wordwrap — 打断字符串为指定数量的字串                              preg_replace()，搜索匹配替换字符串。Eg：搜索匹配到，,\n\r\s的使用          替换：preg_replace(‘/[,，\s\r\n]+/’, ‘          ’, $ids);                      sprintf()，格式化字符串。sprintf(格式,要转化的字符串)，Eg：Sprintf(‘%01.2f’,$str);  Implode()，字符串的合并（array-&gt;string）。  explode()，字符串的分割（string-&gt;array）。  join — implode() 的别名    // 判断是否包含某字符串$tempArr = explode(',',$str);if(count($tempArr) &gt; 1){  return true;}        htmlentities/htmlspecialchars/addslashes/stripslashes/strip_tags、mysql_real_escape_strin。  json_decode()，对 JSON 格式的字符串进行解码。  json_encode()，对变量进行 JSON 编码 。  strtolower()，把所有字符转换为小写  strtoupper(), 把所有字符转换为大写  strncmp() ， 二进制安全比较字符串开头的若干个字符（区分大小写）ArrayPHP Array  curl_setopt_array — 为 cURL 传输会话批量设置选项  array_change_key_case — 将数组中的所有键名修改为全大写或小写  array_chunk — 将一个数组分割成多个  array_column — 返回数组中指定的一列  array_combine — 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值      array_count_values — 统计数组中所有的值    array_diff_assoc — 带索引检查计算数组的差集  array_diff_key — 使用键名比较计算数组的差集  array_diff_uassoc — 用用户提供的回调函数做索引检查来计算数组的差集  array_diff_ukey — 用回调函数对键名比较计算数组的差集  array_diff — 计算数组的差集```php// array_diff_assoc ( array $array1 , array $array2 [, array $… ] ) : array//  返回一个数组，该数组包括了所有在 array1 中但是不在任何其它参数数组中的值。键名也用于比较。// array_diff_key ( array $array1 , array $array2 [, array $… ] ) : array// 使用键名比较计算数组的差集// array_diff_uassoc ( array $array1 , array $array2 [, array $… ], callable $key_compare_func ) : array// 用用户提供的回调函数做索引检查来计算数组的差集// array_diff_ukey ( array $array1 , array $array2 [, array $… ], callable $key_compare_func ) : array//  返回一个数组，该数组包括了所有出现在 array1 中但是未出现在任何其它参数数组中的键名的值。// array_diff ( array $array1 , array $array2 [, array $… ] ) : array// 返回在 array1 中但是不在其他 array 里的值。+ array_intersect_assoc — 带索引检查计算数组的交集+ array_intersect_key — 使用键名比较计算数组的交集+ array_intersect_uassoc — 带索引检查计算数组的交集，用回调函数比较索引+ array_intersect_ukey — 用回调函数比较键名来计算数组的交集+ array_intersect — 计算数组的交集```php// array_intersect ( array $array1 , array $array2 [, array $... ] ) : array// 去除空元素foreach($arr as $k=&gt;$v){	if(!$v) unset($arr[$k]);}### 扩展学习：PHP从数组中删除元素的四种方法实例$array = array(0 =&gt; "a", 1 =&gt; "b", 2 =&gt; "c");// 1. 删除一个元素，且保持原有索引不变unset($array[1]);        //↑ 你想删除的key// 重排索引// 使用 array_values 函数：$array = array_values($array);// 2. 删除一个元素，不保持索引array_splice($array, 1, 1);            //↑ 你想删除的元素的Offset// 3. 按值删除多个元素，保持索引$array = array_diff($array, ["a", "c"]);               //└────────┘→ 你想删除的数组元素值values// 4. 按键删除多个元素，保持索引$array = array_diff_key($array, [0 =&gt; "xy", "2" =&gt; "xy"]);                  //↑      ↑ 你想删除的数组键keys  array_fill — 用给定的值填充数组  array_fill_keys — 使用指定的键和值填充数组  array_filter — 用回调函数过滤数组中的单元。```php// array_filter ( array $array [, callable $callback [, int $flag = 0 ]] ) : array+ array_flip — 交换数组中的键和值+ array_key_exists — 检查数组里是否有指定的键名或索引+ array_key_first — Gets the first key of an array+ array_key_last — Gets the last key of an array+ array_keys — 返回数组中部分的或所有的键名```php// array_flip ( array $array ) : array//  array_map — 为数组的每个元素应用回调函数  array_walk_recursive — 对数组中的每个成员递归地应用用户函数  array_walk — 使用用户自定义函数对数组中的每个元素做回调处理// array_map ( callable $callback , array $array1 [, array $... ] ) : array      array_merge_recursive — 递归地合并一个或多个数组        array_merge — 合并一个或多个数组        array_multisort — 对多个数组或多维数组进行排序        array_reverse — 返回单元顺序相反的数组        array_pad — 以指定长度将一个值填充进数组        array_pop — 弹出数组最后一个单元（出栈）        array_product — 计算数组中所有值的乘积        array_push — 将一个或多个单元压入数组的末尾（入栈）        array_rand — 从数组中随机取出一个或多个单元        array_reduce — 用回调函数迭代地将数组简化为单一的值        array_replace_recursive — 使用传递的数组递归替换第一个数组的元素        array_replace — 使用传递的数组替换第一个数组的元素        array_search — 在数组中搜索给定的值，如果成功则返回首个相应的键名        array_slice — 从数组中取出一段        array_splice — 去掉数组中的某一部分并用其它值取代        array_sum — 对数组中所有值求和        array_udiff_assoc — 带索引检查计算数组的差集，用回调函数比较数据        array_udiff_uassoc — 带索引检查计算数组的差集，用回调函数比较数据和索引        array_udiff — 用回调函数比较数据来计算数组的差集        array_uintersect_assoc — 带索引检查计算数组的交集，用回调函数比较数据        array_uintersect_uassoc — 带索引检查计算数组的交集，用单独的回调函数比较数据和索引        array_uintersect — 计算数组的交集，用回调函数比较数据        array_unique — 移除数组中重复的值        array_shift — 将数组开头的单元移出数组        array_unshift — 在数组开头插入一个或多个单元        array_values — 返回数组中所有的值        array — 新建一个数组        arsort — 对数组进行逆向排序并保持索引关系        asort — 对数组进行排序并保持索引关系        compact — 建立一个数组，包括变量名和它们的值        count — 计算数组中的单元数目，或对象中的属性个数        current — 返回数组中的当前单元        each — 返回数组中当前的键／值对并将数组指针向前移动一步        end — 将数组的内部指针指向最后一个单元        extract — 从数组中将变量导入到当前的符号表        in_array — 检查数组中是否存在某个值        key_exists — 别名 array_key_exists        key — 从关联数组中取得键名        krsort — 对数组按照键名逆向排序        ksort — 对数组按照键名排序        list — 把数组中的值赋给一组变量        natcasesort — 用“自然排序”算法对数组进行不区分大小写字母的排序        natsort — 用“自然排序”算法对数组排序        next — 将数组中的内部指针向前移动一位        pos — current 的别名        prev — 将数组的内部指针倒回一位        range — 根据范围创建数组，包含指定的元素        reset — 将数组的内部指针指向第一个单元        rsort — 对数组逆向排序        shuffle — 打乱数组        sizeof — count 的别名    sort — 对数组排序  uasort — 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联  uksort — 使用用户自定义的比较函数对数组中的键名进行排序  usort — 使用用户自定义的比较函数对数组中的值进行排序// uksort ( array &amp;$array , callable $key_compare_func ) : booluksort(&amp;$arr, function ($a, $b) use ($seq) {	$seq = array_flip($seq);	$idx1 = $seq[$a] ?? -1;	$idx2 = $seq[$b] ?? -1;	return $idx1 - $idx2;});Date/DatetimeMath  bcadd — [加]2个任意精度数字的加法计算  bcsub — [减]2个任意精度数字的减法  bcmul — [乘]2个任意精度数字乘法计算  bcdiv — [除]2个任意精度的数字除法计算$a = '1.234';$b = '5';echo bcadd($a,$b, 4);  // 6.2340echo bcsub($a, $b, 4);  // -3.7660echo bcmul('1.34747474747', '35', 3); // 47.161  bcmod — 对一个任意精度数字取模  bccomp — 比较两个任意精度的数字  bcpow — 任意精度数字的乘方  bcpowmod — Raise an arbitrary precision number to another, reduced by a specified modulus  bcscale — 设置所有bc数学函数的默认小数点保留位数PHP 高精度计算问题1. 引入javascript0.1 + 0.2 //为啥不等于 0.3 ? （正确结果：0.30000000000000004）0.8 * 7 //为啥不等于 5.6 ? （正确结果：5.6000000000000005）phpvar_dump(intval(0.58 * 100)); // 正确结果是 57，而不是 582. 原因分析浮点运算惹的祸，并非语言的 bug，但和语言的实现原理有关，不管什么语言，只要涉及浮点运算，都是存在类似的问题，使用时一定要注意。浮点数的表示(IEEE 754)：浮点数, 以64位的长度(双精度)为例, 会采用1位符号位(E), 11指数位(Q), 52位尾数(M)表示(一共64位)。符号位：最高位表示数据的正负，0表示正数，1表示负数。指数位：表示数据以2为底的幂，指数采用偏移码表示。尾数：表示数据小数点后的有效数字。0.58的二进制表示是: 0.100101000111101011100001010001111010111000010100011110.57的二进制表示是: 0.1001000111101011100001010001111010111000010100011111如果只是通过这52位计算的话,分别是:0.58 -&gt; 0.57999999999999996，0.57 -&gt; 0.5699999999999999。PHP浮点型在进行+-*%/存在不准确的问题，例如，floor((0.1+0.7)*10) 通常会返回 7 而不是预期中的 8，因为该结果内部的表示其实是类似 7.9999999999...。3. 结论永远不要相信浮点数结果精确到了最后一位，也永远不要比较两个浮点数是否相等。如果确实需要更高的精度，应该使用任意精度数学函数或者 gmp 函数。浮点数精确位数取决于 PHP 配置参数 precision，默认 14 位，计算方式：从左第一个非0数就是精度的开始。  floatval(), 转换为浮点型  intval(),转换为整型  fmod — 返回除法的浮点数余数  intdiv — 对除法结果取整  bcsqrt — 任意精度数字的二次方根  sqrt — 平方根  is_finite — 判断是否为有限值  is_infinite — 判断是否为无限值  is_nan — 判断是否为合法数值  lcg_value — 组合线性同余发生器  log10 — 以 10 为底的对数  log1p — 返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果  log — 自然对数  max — 找出最大值  min — 找出最小值  exp — 计算 e 的指数  expm1 — 返回 exp(number) - 1，甚至当 number 的值接近零也能计算出准确结果  pi — 得到圆周率值  pow— 指数表达式，pow ( number $base , number $exp ) : number  cos — 余弦  cosh — 双曲余弦  sin — 正弦  sinh — 双曲正弦  tan — 正切  tanh — 双曲正切  acos — 反余弦  acosh — 反双曲余弦  asin — 反正弦  asinh — 反双曲正弦  atan2 — 两个参数的反正切  atan — 反正切  atanh — 反双曲正切  deg2rad — 将角度转换为弧度  rad2deg — 将弧度数转换为相应的角度数  mt_getrandmax — 显示随机数的最大可能值  mt_rand — 生成更好的随机数  mt_srand — 播下一个更好的随机数发生器种子  rand — 产生一个随机整数  srand — 播下随机数发生器种子  intval(), 直接取整，intval ( mixed $var [, int $base = 10 ] ) : int  round(), 四舍五入  ceil()，向上取整  floor(), 向下取整// intval()echo intval(3.14); // 3// round()// 格式：round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] ) : float//  PHP_ROUND_HALF_UP、 PHP_ROUND_HALF_DOWN PHP_ROUND_HALF_EVEN 或 PHP_ROUND_HALF_ODD$number = 1346.21;var_dump(round($number, 2)); //float(1346.21)var_dump(round($number, 0)); //float(1346)var_dump(round($number, -1)); //float(1350)var_dump(round($number, -2)); //float(1300)var_dump(round(9.5, 0, PHP_ROUND_HALF_UP)); //10,四舍六入,遇5进1var_dump(round(9.5, 0, PHP_ROUND_HALF_DOWN)); //9,四舍六入,遇5不舍弃var_dump(round(9.5, 0, PHP_ROUND_HALF_EVEN)); //10,四舍六入,整数部分为奇数则进1var_dump(round(9.5, 0, PHP_ROUND_HALF_ODD)); //9,四舍六入,整数部分为偶数则进1var_dump(round(8.5, 0, PHP_ROUND_HALF_UP)); //9var_dump(round(8.5, 0, PHP_ROUND_HALF_DOWN)); //8var_dump(round(8.5, 0, PHP_ROUND_HALF_EVEN)); //8var_dump(round(8.5, 0, PHP_ROUND_HALF_ODD)); //9// ceil()// 格式：ceil ( float $value ) : floatecho ceil(3.14); // 4// floor()// 格式：floor ( float $value ) : floatecho floor(3.14); // 3var_dump(floor(3.157*100)/100));// 保留两位小数,不四舍五入  bindec — 二进制转换为十进制  decbin — 十进制转换为二进制  dechex — 十进制转换为十六进制  decoct — 十进制转换为八进制  octdec — 八进制转换为十进制  hexdec — 十六进制转换为十进制  base_convert — 在任意进制之间转换数字    // decbin ( int $number ) : string        hypot — 计算一直角三角形的斜边长度文件  basename — 返回路径中的文件名部分  chgrp — 改变文件所属的组  chmod — 改变文件模式  chown — 改变文件的所有者  clearstatcache — 清除文件状态缓存  copy — 拷贝文件      delete — 参见 unlink 或 unset    dirname — 返回路径中的目录部分  disk_free_space — 返回目录中的可用空间  disk_total_space — 返回一个目录的磁盘总大小  file_exists — 检查文件或目录是否存在  is_dir — 判断给定文件名是否是一个目录  mkdir — 新建目录  readlink — 返回符号连接指向的目标  realpath_cache_get — 获取真实目录缓存的详情  realpath_cache_size — 获取真实路径缓冲区的大小  realpath — 返回规范化的绝对路径名  rename — 重命名一个文件或目录  rmdir — 删除目录  glob — 寻找与模式匹配的文件路径      pathinfo — 返回文件路径的信息    diskfreespace — disk_free_space 的别名  fclose — 关闭一个已打开的文件指针  feof — 测试文件指针是否到了文件结束的位置  fflush — 将缓冲内容输出到文件  fgetc — 从文件指针中读取字符  fgetcsv — 从文件指针中读入一行并解析 CSV 字段  fgets — 从文件指针中读取一行  fgetss — 从文件指针中读取一行并过滤掉 HTML 标记  fputcsv — 将行格式化为 CSV 并写入文件指针  fputs — fwrite 的别名```php// fputcsv ( resource $handle , array $fields [, string $delimiter = ‘,’ [, string $enclosure = ‘”’ ]] ) : int// fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = ‘,’ [, string $enclosure = ‘”’ [, string $escape = ‘\’ ]]]] ) : array+ file_get_contents — 将整个文件读入一个字符串+ file_put_contents — 将一个字符串写入文件```php&lt;?php// 格式:file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] ) : int// FILE_USE_INCLUDE_PATH	在 include 目录里搜索 filename。 更多信息可参见 include_path。// FILE_APPEND	如果文件 filename 已经存在，追加数据而不是覆盖。// LOCK_EX	在写入时获得一个独占锁。file_put_contents('../test.json', json_encode($data), FILE_APPEND, null);file_put_contents('../test.json', json_encode($data));// 格式:file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] ) : string  file — 把整个文件读入一个数组中  fileatime — 取得文件的上次访问时间  filectime — 取得文件的 inode 修改时间  filegroup — 取得文件的组  fileinode — 取得文件的 inode  filemtime — 取得文件修改时间  fileowner — 取得文件的所有者  fileperms — 取得文件的权限  filesize — 取得文件大小  filetype — 取得文件类型  flock — 轻便的咨询文件锁定  fnmatch — 用模式匹配文件名  fopen — 打开文件或者 URL      fpassthru — 输出文件指针处的所有剩余数据    fread — 读取文件（可安全用于二进制文件）  fscanf — 从文件中格式化输入  fseek — 在文件指针中定位  fstat — 通过已打开的文件指针取得文件信息  ftell — 返回文件指针读/写的位置  ftruncate — 将文件截断到给定的长度      fwrite — 写入文件（可安全用于二进制文件）    is_executable — 判断给定文件名是否可执行  is_file — 判断给定文件名是否为一个正常的文件  is_link — 判断给定文件名是否为一个符号连接  is_readable — 判断给定文件名是否可读  is_uploaded_file — 判断文件是否是通过 HTTP POST 上传的  is_writable — 判断给定的文件名是否可写  is_writeable — is_writable 的别名  lchgrp — 修改符号链接的所有组  lchown — 修改符号链接的所有者  link — 建立一个硬连接  linkinfo — 获取一个连接的信息      lstat — 给出一个文件或符号连接的信息    move_uploaded_file — 将上传的文件移动到新位置  parse_ini_file — 解析一个配置文件  parse_ini_string — 解析配置字符串  pclose — 关闭进程文件指针  popen — 打开进程文件指针  readfile — 输出文件      rewind — 倒回文件指针的位置    set_file_buffer — stream_set_write_buffer 的别名  stat — 给出文件的信息  symlink — 建立符号连接  tempnam — 建立一个具有唯一文件名的文件  tmpfile — 建立一个临时文件  touch — 设定文件的访问和修改时间  umask — 改变当前的 umask  unlink — 删除文件&gt;PHP Options/Info  assert_options — 设置/获取断言的各种标志  assert — 检查一个断言是否为 FALSE  cli_get_process_title — Returns the current process title  cli_set_process_title — Sets the process title  dl — 运行时载入一个 PHP 扩展  extension_loaded — 检查一个扩展是否已经加载  gc_collect_cycles — 强制收集所有现存的垃圾循环周期  gc_disable — 停用循环引用收集器  gc_enable — 激活循环引用收集器  gc_enabled — 返回循环引用计数器的状态  gc_mem_caches — Reclaims memory used by the Zend Engine memory manager  gc_status — Gets information about the garbage collector  get_cfg_var — 获取 PHP 配置选项的值  get_current_user — 获取当前 PHP 脚本所有者名称  get_defined_constants — 返回所有常量的关联数组，键是常量名，值是常量值  get_extension_funcs — 返回模块函数名称的数组  get_include_path — 获取当前的 include_path 配置选项  get_included_files — 返回被 include 和 require 文件名的 array  get_loaded_extensions — 返回所有编译并加载模块名的 array  get_magic_quotes_gpc — 获取当前 magic_quotes_gpc 的配置选项设置  get_magic_quotes_runtime — 获取当前 magic_quotes_runtime 配置选项的激活状态  get_required_files — 别名 get_included_files  get_resources — Returns active resources  getenv — 获取一个环境变量的值  getlastmod — 获取页面最后修改的时间  getmygid — 获取当前 PHP 脚本拥有者的 GID  getmyinode — 获取当前脚本的索引节点（inode）  getmypid — 获取 PHP 进程的 ID  getmyuid — 获取 PHP 脚本所有者的 UID  getopt — 从命令行参数列表中获取选项  getrusage — 获取当前资源使用状况  ini_alter — 别名 ini_set  ini_get_all — 获取所有配置选项  ini_get — 获取一个配置选项的值  ini_restore — 恢复配置选项的值  ini_set — 为一个配置选项设置值  magic_quotes_runtime — 别名 set_magic_quotes_runtime  main — 虚拟的main  memory_get_peak_usage — 返回分配给 PHP 内存的峰值  memory_get_usage — 返回分配给 PHP 的内存量  php_ini_loaded_file — 取得已加载的 php.ini 文件的路径  php_ini_scanned_files — 返回从额外 ini 目录里解析的 .ini 文件列表  php_logo_guid — 获取 logo 的 guid  php_sapi_name — 返回 web 服务器和 PHP 之间的接口类型  php_uname — 返回运行 PHP 的系统的有关信息  phpcredits — 打印 PHP 贡献者名单  phpinfo — 输出关于 PHP 配置的信息  phpversion — 获取当前的PHP版本  putenv — 设置环境变量的值  restore_include_path — 还原 include_path 配置选项的值  set_include_path — 设置 include_path 配置选项  set_magic_quotes_runtime — 设置当前 magic_quotes_runtime 配置选项的激活状态  set_time_limit — 设置脚本最大执行时间  sys_get_temp_dir — 返回用于临时文件的目录  version_compare — 对比两个「PHP 规范化」的版本数字字符串  zend_logo_guid — 获取 Zend guid  zend_thread_id — 返回当前线程的唯一识别符  zend_version — 获取当前 Zend 引擎的版本魔术方法  __call() ，在一个对象的上下文中，如果调用的方法不能访问，它将被触发。  __callStatic() ，在一个静态的上下文中，如果调 用的方法不能访问，它将被触发。```php// public __call ( string $name , array $arguments ) : mixed// public static __callStatic ( string $name , array $arguments ) : mixed// 当调用当前环境下未定义或不可见的类属性或方法时，重载方法会被调用。## 函数处理-函数+ call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数+ call_user_func — 把第一个参数作为回调函数调用```php// call_user_func_array ( callable $callback , array $param_arr ) : mixed// call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] ) : mixed  create_function — Create an anonymous (lambda-style) function  forward_static_call_array — Call a static method and pass the arguments as array  forward_static_call — Call a static method  func_get_arg — 返回参数列表的某一项  func_get_args — 返回一个包含函数参数列表的数组  func_num_args — Returns the number of arguments passed to the function  function_exists — 如果给定的函数已经被定义就返回 TRUE  get_defined_functions — 返回所有已定义函数的数组  register_shutdown_function — 注册一个会在php中止时执行的函数  register_tick_function — Register a function for execution on each tick  unregister_tick_function — De-register a function for execution on each tick其他  connection_aborted — 检查客户端是否已经断开  connection_status — 返回连接的状态位  constant — 返回一个常量的值  define — 定义一个常量  defined — 检查某个名称的常量是否存在  die — 等同于 exit  eval — 把字符串作为PHP代码执行  exit — 输出一个消息并且退出当前脚本  get_browser — 获取浏览器具有的功能  __halt_compiler — 中断编译器的执行  highlight_file — 语法高亮一个文件  highlight_string — 字符串的语法高亮  hrtime — Get the system’s high resolution time  ignore_user_abort — 设置客户端断开连接时是否中断脚本的执行  pack — 将数据打包成二进制字符串  php_check_syntax — 检查PHP的语法（并执行）指定的文件  php_strip_whitespace — 返回删除注释和空格后的PHP源码  sapi_windows_cp_conv — Convert string from one codepage to another  sapi_windows_cp_get — Get process codepage  sapi_windows_cp_is_utf8 — Indicates whether the codepage is UTF-8 compatible  sapi_windows_cp_set — Set process codepage  sapi_windows_vt100_support — Get or set VT100 support for the specified stream associated to an output buffer of a Windows console.  show_source — 别名 highlight_file  sleep — 延缓执行  sys_getloadavg — 获取系统的负载（load average）  time_nanosleep — 延缓执行若干秒和纳秒  time_sleep_until — 使脚本睡眠到指定的时间为止。  uniqid — 生成一个唯一ID  unpack — Unpack data from binary string  usleep — 以指定的微秒数延迟执行  instanceof 判断是否变量是某个类型或对象]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP </tag>
        
          <tag> LTS </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[MySQL 使用笔记]]></title>
      <url>/database/2017/12/14/mysql-notes/</url>
      <content type="text"><![CDATA[MySQL 数据类型数据字段属性  UNSIGNED  ZEROFILL  AUTO_INCREMENT  NULL &amp; NOT NULL  DEFAULT      Char vs Varchar vs Text    TEXT的最大长度:              type      size(bytes)      size(MB)                  TINYTEXT      256 bytes      /              TEXT      65,535 bytes      ~64KB              MEDIMUMTEXT      16,777,215 bytes      ~16MB              LONGTEXT      4,294,967,295 bytes      ~4GB      MySQL 默认字符集  MySQL的字符集支持(Character Set Support)有两个方面： 字符集(Character set)和排序方式(Collation)。  对于字符集的支持细化到四个层次: 服务器(server)，数据库(database)，数据表(table)和连接(connection)。相当于一个优先级，7最高，1最低 (1)编译MySQL 时，指定了一个MySQL默认的字符集，这个字符集是 latin1；  (2)安装MySQL 时，可以在配置文件 (my.ini) 中指定一个默认的的字符集，如果没指定，这个值继承自编译时指定的；  (3)启动mysql 时，可以在命令行参数中指定一个默认的的字符集，如果没指定，这个值继承自配置文件中的配置,此时 character_set_server 被设定为这个默认的字符集； (4)当创建一个新的数据库时，除非明确指定，这个数据库的字符集被缺省设定为character_set_server；  (5)当选定了一个数据库时，character_set_database 被设定为这个数据库默认的字符集；  (6)在这个数据库里创建一张表时，表默认的字符集被设定为 character_set_database，也就是这个数据库默认的字符集； (7)当在表内设置一栏时，除非明确指定，否则此栏缺省的字符集就是表默认的字符集。  查看系统的字符集和排序方式    mysql&gt; show variables like 'character%'mysql&gt; show variables like 'collation_%'        MySQL 备份与还原          $ mysqldump -u username -p dbname&gt;filename.sql输入密码//单独备份指定表$ mysqldump -u username -p dbname table1 table2&gt;filename.sql输入密码//加条件备份指定表(注意单引号和双引号问题)$ mysqldump -u username -p dbname table1 table2 -w “id&lt;10”&gt;filename.sql//执行SQL语句将查到的数据导出到文件$ mysql -u gcoin -p -Ne “use gold;select * from ecs_user” &gt; ~/outfile.txt      windows  $ mysql -u username -p 输入密码&gt;create database dbname&gt;use dbname&gt;source filename.sqlLinux  $mysql -u username -p dbname&lt;filename.sql当没有备份数据库(mysql)时,恢复数据库办法描述: 	一次误操作导致系统崩溃了，数据库没来得及备份，重装系统后，进入D盘发现mysql/data目录下仍然存留frm文件和ibd文件（注意：我的www目录存在了D盘，也就是非系统盘）。具体步骤:	a. 进入mysql/data目录下，将存留的frm和ibd文件拷贝。	b. 放到同样环境的mysql/data目录下。启动msyql，查看结果。MySQL 用户与权限  ** 新建用户  示例：新建一个名为admin密码为123456的用户，建议方式2：  –方法1：            insert into mysql.user(Host,User,Password)values(“192.168.120.110”,”sa”,password(“123456”));                  flush privileges;        –方法2：            create user admin@localhost identified by ‘admins_password’; ** 修改指定用户的密码                  update mysql.user set password=password(‘123456’) where User=”admin” and Host=”localhost”;//适用于mysql5.7.6以前版本                  update mysql.user set authentication_string=password(‘密码’) where user=’admin’ and Host = ‘localhost’; 或者 set password for ‘admin’@’localhost’=password(‘密码’);//适用于5.7.6以后版本                  flush privileges;        下面是另一种方法：            mysqladmin -u root -p password ‘root’                  history -c //清除历史 ** 给用户授权        示例：授予用户admin全部权限，并允许该用户通过外部访问            GRANT ALL PRIVILEGES ON . TO ‘admin’@’%’ identified by ‘123456’ with grant option;                  flush privileges;  //刷新系统权限表        示例：授权用户admin仅拥有数据库estep的所有权限允许本地访问：            GRANT ALL PRIVILEGES ON estep.* TO ‘admin’@’127.0.0.1’ identified by ‘123456’ with grant option;                  flush privileges;  //刷新系统权限表        示例：指定数据库estep的部分权限给用户admin：            grant select,update on estep.* to ‘admin’@’localhost’ identified by ‘123456’;                  flush privileges;  //刷新系统权限表      MySQL 函数(Functions)String Functions  ASCII，returns the ASCII value for the specific character.  char_length，return the length of a string (in characters).  char  concat，多个字段拼接  concat_ws，代表 concat with separator，是concat()的特殊形式。    -- Syntax: ASCII(character)SELECT ASCII(CustomerName) AS NumCodeOfFirstChar FROM Customers;-- Syntax: CHAR_LENGTH(string)SELECT CHAR_LENGTH(CustomerName) AS LengthOfName FROM Customers;-- Syntax: CHARACTER_LENGTH(string)SELECT CHARACTER_LENGTH(CustomerName) AS LengthOfName FROM Customers;-- Syntax: CONCAT(expression1, expression2, expression3,...)-- Syntax: CONCAT(expression1, expression2, expression3,...)-- Syntax: CONCAT(expression1, expression2, expression3,...)SELECT CONCAT("SQL ", "Tutorial ", "is ", "fun!") AS ConcatenatedString;SELECT CONCAT(Address, " ", PostalCode, " ", City) AS Address FROM Customers;-- Syntax: CONCAT_WS(separator, expression1, expression2, expression3,...)-- 第一个参数是其它参数的分隔符。SELECT CONCAT_WS(" ", Address, PostalCode, City) AS Address FROM Customers;              https://dev.mysql.com/doc/refman/8.0/en/string-functions.html      Numeric FunctionsDate FunctionsAdvanced Functions  case    SELECT OrderID, Quantity,CASE  WHEN Quantity &gt; 30 THEN "The quantity is greater than 30"  WHEN Quantity = 30 THEN "The quantity is 30"  ELSE "The quantity is under 30"ENDFROM OrderDetails;        cast    --  converts a value (of any type) into the specified datatype.-- syntax: CAST(value AS datatype)SELECT CAST("14:06:10" AS TIME);SELECT CAST(150 AS CHAR);      ]]></content>
      <categories>
        
          <category> database </category>
        
      </categories>
      <tags>
        
          <tag> MySQL </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Mainstream Browsers]]></title>
      <url>/2017/06/13/browsers/</url>
      <content type="text"><![CDATA[Google-Chrome下载离线安装包  最新稳定版：https://www.google.com/intl/zh-CN/chrome/browser/?standalone=1  最新测试版：https://www.google.com/intl/zh-CN/chrome/browser/?standalone=1&amp;extra=betachannel  最新开发版：https://www.google.com/intl/zh-CN/chrome/browser/?standalone=1&amp;extra=devchannel  下载历史版本：http://dl.google.com/chrome/install/[版本号后两位]/chrome_installer.exe，比如：4.0.266.0》266.0搜索技巧  完整匹配          “mysql foreign key”：返回完整匹配的结果。        筛选          “mysql foreign key” - “nodejs”：要求Google返回含有mysql foreign key但不存在nodejs的文章。        通配符          “mysql connect error *“：返回所有已知的关于MySQL连接错误的文章。        站内搜索          site:stackoverflow.com “mysql foreign key”：返回对应网站内所有关于mysql foreign key的文章。      常用快捷键Extensions  Nimbus Screenshot &amp; Screen Video Recorder  Nimbus Notes  Vimium  广告终结者  Wappalyzer: 网站技术分析工具  达达划词翻译  沙拉查词  SwitchyOmega  Google Translate  Charset  Google Dictionary  XDebug  EverHelper: 标签/应用同步工具常见问题处理  浏览器存在缓存，修改的js不会重新加载          解决: F12进入调试模式》Network》勾选 Disable cache 项        Chrome安装错误： 错误代码 0xa04303721          解决：完全卸载chrome1）清理注册表，可以通过新建注册文件来清理注册表内容，参考资料： http://blog.csdn.net/libaineu2004/article/details/45533299 2）删除chrome目录 3）重启计算机 4）再次运行安装，问题得到解决        Chrome 调试模式下，network模块preview，中文乱码问题分析          原因分析：查阅资料后，得知chrome 61版本以后，根据你的响应头判断格式，看Response Headers响应头 Content-type 是否是application/json ，不是的话就会乱码。解决方式：后台响应代码，设置Response Headers》 Content-type。如php语言，header(“Content-Type: application/json; charset=UTF-8”);        按F12调试js代码，在sources中看不到代码          把鼠标移到要调试的页面上 –&gt; 右键 –&gt; 在弹窗中选择“重新加载”即可。      Firefox利器  Firebug，开发JavaScript、HTML、CSS和Ajax的得力助手，一个出错工具  HttpRequester，可以模拟各种请求，并且可以自定义添加需要提交的请求报文和请求头信息。开发WCF和WebAPI程序的时候，这个插件非常有用。  Firesizer 视口调试工具常见问题处理  去除Firefox不安全密码警示          1) 地址栏输入：about:config2) 在加载的搜索栏中输入：security.insecure_field_warning.contextual.enabled 3) 双击，使值变为false      OperaSafari扩展  ResizeMe 视口调试工具  IE扩展  Microsoft Internet Explorer Developer Toolbar 视口调试工具]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET 公共函数]]></title>
      <url>/c%23/2017/03/28/c-list/</url>
      <content type="text"><![CDATA[如果您遇到任何问题，请发送邮件至zrg1390556487@gmail.com。Model 处理类using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Linq;using System.Reflection;using System.Text;using System.Threading.Tasks;namespace ZCKJ.Common{    public class ModelHandler    {        /// &lt;summary&gt;        ///     &#20174; reader &#23545;&#35937;&#20013;&#36880;&#34892;&#35835;&#21462;&#35760;&#24405;&#24182;&#23558;&#35760;&#24405;&#36716;&#21270;&#20026; T &#31867;&#22411;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;typeparam name="T"&gt;&#30446;&#26631;&#31867;&#22411;&#21442;&#25968;&lt;/typeparam&gt;        /// &lt;param name="reader"&gt;&#23454;&#29616; IDataReader &#25509;&#21475;&#30340;&#23545;&#35937;&#12290;&lt;/param&gt;        /// &lt;returns&gt;&#25351;&#23450;&#31867;&#22411;&#30340;&#23545;&#35937;&#38598;&#21512;&#12290;&lt;/returns&gt;        public static List&lt;T&gt; ConvertToObject&lt;T&gt;(IDataReader reader)            where T : class        {            List&lt;T&gt; list = new List&lt;T&gt;();            T obj = default(T);            Type t = typeof(T);            Assembly ass = t.Assembly;            Dictionary&lt;string, PropertyInfo&gt; propertys = ModelHandler.GetFields&lt;T&gt;(reader);            PropertyInfo p = null;            if (reader != null)            {                while (reader.Read())                {                    obj = ass.CreateInstance(t.FullName) as T;                    foreach (string key in propertys.Keys)                    {                        p = propertys[key];                        p.SetValue(obj, ModelHandler.ChangeType(reader[key], p.PropertyType), null);                    }                    list.Add(obj);                }            }            return list;        }        /// &lt;summary&gt;        ///     &#20174; DataTale &#23545;&#35937;&#20013;&#36880;&#34892;&#35835;&#21462;&#35760;&#24405;&#24182;&#23558;&#35760;&#24405;&#36716;&#21270;&#20026; T &#31867;&#22411;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;typeparam name="T"&gt;&#30446;&#26631;&#31867;&#22411;&#21442;&#25968;&lt;/typeparam&gt;        /// &lt;param name="reader"&gt;DataTale &#23545;&#35937;&#12290;&lt;/param&gt;        /// &lt;returns&gt;&#25351;&#23450;&#31867;&#22411;&#30340;&#23545;&#35937;&#38598;&#21512;&#12290;&lt;/returns&gt;        public static List&lt;T&gt; ConvertToObject&lt;T&gt;(DataTable table)            where T : class        {            return table == null                ? new List&lt;T&gt;()                : ModelHandler.ConvertToObject&lt;T&gt;(table.CreateDataReader() as IDataReader);        }        /// &lt;summary&gt;        ///     &#23558;&#25968;&#25454;&#36716;&#21270;&#20026; type &#31867;&#22411;        /// &lt;/summary&gt;        /// &lt;param name="value"&gt;&#35201;&#36716;&#21270;&#30340;&#20540;&lt;/param&gt;        /// &lt;param name="type"&gt;&#30446;&#26631;&#31867;&#22411;&lt;/param&gt;        /// &lt;returns&gt;&#36716;&#21270;&#20026;&#30446;&#26631;&#31867;&#22411;&#30340; Object &#23545;&#35937;&lt;/returns&gt;        private static object ChangeType(object value, Type type)        {            if (type.FullName == typeof(string).FullName)            {                return Convert.ChangeType(Convert.IsDBNull(value) ? null : value, type);            }            else if (type.FullName == typeof(DateTime).FullName)            {                if (value != null &amp;&amp; value != DBNull.Value)                {                    NullableConverter convertor = new NullableConverter(type);                    return Convert.IsDBNull(value) ? null : convertor.ConvertFrom(value);                }                else                {                    return null;                }            }            if (type.IsGenericType &amp;&amp; type.GetGenericTypeDefinition().Equals(typeof(Nullable&lt;&gt;)))            {                NullableConverter convertor = new NullableConverter(type);                return Convert.IsDBNull(value) ? null : convertor.ConvertFrom(value);            }            return value;        }        /// &lt;summary&gt;        ///     &#33719;&#21462;reader&#23384;&#22312;&#24182;&#19988;&#22312; T &#31867;&#20013;&#21253;&#21547;&#21516;&#21517;&#21487;&#20889;&#23646;&#24615;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;param name="reader"&gt;        ///     &#21487;&#20889;&#22495;&#30340;&#38598;&#21512;        /// &lt;/param&gt;        /// &lt;returns&gt;        ///     &#20197;&#23646;&#24615;&#21517;&#20026;&#38190;&#65292;PropertyInfo &#20026;&#20540;&#24471;&#23383;&#20856;&#23545;&#35937;        /// &lt;/returns&gt;        private static Dictionary&lt;string, PropertyInfo&gt; GetFields&lt;T&gt;(IDataReader reader)        {            Dictionary&lt;string, PropertyInfo&gt; result = new Dictionary&lt;string, PropertyInfo&gt;();            int columnCount = reader.FieldCount;            Type t = typeof(T);            PropertyInfo[] properties = t.GetProperties();            if (properties != null)            {                List&lt;string&gt; readerFields = new List&lt;string&gt;();                for (int i = 0; i &lt; columnCount; i++)                {                    readerFields.Add(reader.GetName(i));                }                //IEnumerable&lt;PropertyInfo&gt; resList =                //    (from PropertyInfo prop in properties                //     where prop.CanWrite &amp;&amp; readerFields.Contains(prop.Name.ToUpper())                //     select prop);                IEnumerable&lt;PropertyInfo&gt; resList =                    (from PropertyInfo prop in properties                     where prop.CanWrite &amp;&amp; readerFields.Contains(prop.Name)                     select prop);                foreach (PropertyInfo p in resList)                {                    result.Add(p.Name, p);                }            }            return result;        }    }}]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C# </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET 之浅拷贝与深拷贝]]></title>
      <url>/c%23/2016/11/20/asp.net-clone/</url>
      <content type="text"><![CDATA[写在前面最近两天，对"树（tree）"进行搜索，将搜索到的结果进行简单处理，并相应的改变样式。因为tree从session中取值，故而每次搜索后处理的结果都会都会改变原有session值。此时，不得不使用“深度复制”的方式去解原数据被修改的问题。关于浅拷贝与深拷贝定义浅拷贝(Shallow Copy)只复制对象的基本类型、对象类型，仍属于原来的引用。深拷贝(Deep Copy)不仅复制对象的基本类型，同时也复制对象的数据，完全产生新对象，是克隆的过程。区别浅表复制只复制值类型的值，而对于实例所包含的对象依然指向原有实例。浅拷贝1.浅拷贝codepublic Person ShallowCopy(){    return this.MemberwiseClone() as Person;//MemberwiseClone:将当前对象浅拷贝一份。}2.调用Person person=new Person();person.name="张三";person.age=18;person.email="1234567890@qq.com;//浅拷贝Person person2=person.ShallowCopy();深拷贝1.深拷贝code：public static IList&lt;T&gt; Clone&lt;T&gt;(IList&lt;VehicleTreeModel&gt; list){    BinaryFormatter formatter = new BinaryFormatter();    using (MemoryStream memorystream = new MemoryStream())    {	formatter.Serialize(memorystream, list);	memorystream.Position = 0;	return formatter.Deserialize(memorystream) as List&lt;T&gt;;    }}2.序列化标识#+BEGIN_SRC[Serializable]public class VehicleTreeModel : CompanyModel{   ...}[Serializable]public class CompanyModel{   ...}3.调用IList&lt;VehicleTreeModel&gt; deepCopyList = Clone&lt;VehicleTreeModel&gt;(list);参考资料http://blog.csdn.net/flyingdream123/article/details/9294973http://blog.csdn.net/xjavasunjava/article/details/7648242https://en.wikipedia.org/wiki/Object_copy结语此次完全理解了浅度复制和深度复制，并应用于实际当中。]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C#-深拷贝 </tag>
        
          <tag> C#-浅拷贝 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[jQuery-EasyUI 开发笔记]]></title>
      <url>/javascript/2016/09/03/jquery-easyui/</url>
      <content type="text"><![CDATA[EasyUI分页点击查询按钮，查询数据，分页//C# Code&#30053;//javascript//&#29992;&#25143;&#36710;&#36742;&#31649;&#29702;function DataManage() {        var _this = this;// _this &#20026; DataManage&#23545;&#35937;        //&#21021;&#22987;&#39029;&#38754;&#20998;&#39029;&#25968;        _this.initPageSize = 20;        _this.initpageIndex = 1;        _this.Init = function () {                $('#vehicle_pp').pagination({                      total: 0,                      pageSize: _this.initPageSize,                      onSelectPage: function (pageNumber, pageSize) {                        _this.initpageIndex = pageNumber;                        _this.initPageSize = pageSize;                        _this.getVehicleInfo_PageChnage(pageNumber, pageSize);                      }                });        }        //&#31532;&#19968;&#27425;&#26597;&#35810;&#65288;&#20256;&#20837;&#26465;&#20214;&#21363;&#21487;&#65289;        _this.getVehicleInfo_First = function () {               var companyId = $('#company_code').combobox("getValue");               var onlineState = $('#online_state').combobox("getValue");               var forwardingFlag = $('#forwarding_flag').combobox("getValue");               var licensePlate = $('#license_plate').val();               var simcardNo = $('#simcard_no').val();               var deviceId = $('#device_id').val();               var ownerName = $('#owner_name').val();               //&#27880;&#24847;&#65306;div #user_vehicle_data&#20043;&#38388;&#26377;&#20010;&#31354;&#26684;               $.getJSON("/Data/GetUserVehicleData", { pageIndex: _this.initpageIndex, pageSize: _this.initPageSize, companyId: companyId, onlineState: onlineState, forwardingFlag: forwardingFlag, licensePlate: licensePlate, simcardNo: simcardNo, deviceId: deviceId, ownerName: ownerName }, function (data) {               $('div #user_vehicle_data').datagrid({                 collapsible: true,                 data: data.uservehiclelist,               });               $('#vehicle_pp').pagination({                 total: data.count,                 pageSize: 20,                 onSelectPage: function (pageNumber, pageSize) {                 _this.getVehicleInfo_PageChnage(pageNumber, pageSize);               }            });         });     }     //&#39029;&#38754;page&#25913;&#21464;&#26102;&#26597;&#35810;     _this.getVehicleInfo_PageChnage = function (pageNumber, pageSize) {        var companyId = $('#company_code').combobox("getValue");        var onlineState = $('#online_state').combobox("getValue");        var forwardingFlag = $('#forwarding_flag').combobox("getValue");        var licensePlate = $('#license_plate').val();        var simcardNo = $('#simcard_no').val();        var deviceId = $('#device_id').val();        var ownerName = $('#owner_name').val();        $.getJSON("/Data/GetUserVehicleData", { pageIndex: pageNumber, pageSize: pageSize, companyId: companyId, onlineState: onlineState, forwardingFlag: forwardingFlag, licensePlate: licensePlate, simcardNo: simcardNo, deviceId: deviceId, ownerName: ownerName }, function (data) {                $('div #user_vehicle_data').datagrid({                        collapsible: true,                        total: data.count,                        data: data.uservehiclelist,                });        });     }}//调用$(function () {        p_dataManage=new DataManage();        p_dataManage.Init(); //&#21021;&#22987;&#21270;&#21152;&#36733;});&lt;td&gt;&lt;a href="#" class="easyui-linkbutton" style="border:1px #95B8E7 solid" iconcls="icon-search" plain="true" onclick="p_dataManage.getVehicleInfo_First()"&gt;&#26597;&#35810;&lt;/a&gt;&lt;/td&gt;DataGridDataGrid实现行编辑功能//效果图：//html code：&lt;table id="SearchDrawRect" class="easyui-datagrid"data-options="rownumbers:false,singleSelect:true,method:'get',fit:true"&gt;&lt;thead&gt;        &lt;tr&gt;                &lt;th data-options="field:'vehicle_id',width:40,checkbox:true"&gt;&#36712;&#36857;&lt;/th&gt;                &lt;th data-options="field:'company_name',width:150"&gt;&#20844;&#21496;&lt;/th&gt;                &lt;th data-options="field:'license_plate',width:80"&gt;&#36710;&#29260;&lt;/th&gt;                &lt;th data-options="field:'owner_name',width:100"&gt;&#32852;&#31995;&#20154;&lt;/th&gt;                &lt;th data-options="field:'owner_telephone',width:120"&gt;&#32852;&#31995;&#30005;&#35805;&lt;/th&gt;                &lt;th data-options="field:'load_seat',width:80,editor:{type:'numberbox',options:{precision:2}}"&gt;&#36733;&#37325;(&#21544;)&lt;/th&gt;                &lt;th data-options="field:'second_contact_phone',width:80,editor:{type:'textbox',options:{validType:'length[1,10]'}}"&gt;&#36710;&#38271;(&#31859;)&lt;/th&gt;                &lt;th data-options="field:'traction',width:80,editor:{type:'numberbox',options:{precision:2}}"&gt;&#36816;&#20215;&lt;/th&gt;                &lt;th data-options="field:'location_time',width:125"&gt;&#23450;&#20301;&#26102;&#38388;&lt;/th&gt;        &lt;/tr&gt;&lt;/thead&gt;&lt;/table&gt;//JavaScript code：&lt;script type="text/javascript"&gt;        $('#SearchDrawRect').datagrid({                data: data,                rowStyler: function (index, row) {                        if (row.is_online == "0") {                                return 'color:gray;';                        }                        if (row.is_online == "1") {                                var a = 'color:purple';                                if (row.speed &gt; 0) {                                        a = 'color:green;';                                }                                if (row.alarm_desc != '' &amp;&amp; row.alarm_desc != null) {                                        a = 'color:red;';                                }                                                            return a;                        }                },                onCheck: function (rowIndex, rowData) {                        var x = rowData.real_x;                        var y = rowData.real_y;                        _this.Map.SetCenterRect(x + "|" + y, rowData.vehicle_id);                },                onDblClickCell: function (index, field, value) {                        if (editIndex != index) {                                if (_this.endEditing()) {                                        $("#SearchDrawRect").datagrid('selectRow', index).datagrid('beginEdit', index);                                        var ed = $('#SearchDrawRect').datagrid('getEditor', { index: index, field: "load_seat" });                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();//&#33719;&#21462;&#28966;&#28857;                    editIndex = index;                } else {                        $("#SearchDrawRect").datagrid('endEdit', editRow);                }            }        },        toolbar: [{                text: '&#20445;&#23384;',                iconCls: 'icon-save',                handler: function () {                        var row = $('#SearchDrawRect').datagrid('getSelected');                        if (row != null) {                    var rowIndex = $('#SearchDrawRect').datagrid('getRowIndex', row);//&#34892;Index                    //&#33719;&#21462;&#24403;&#21069;&#32534;&#36753;&#34892;&#23545;&#35937;                    var loadSeatEditor = $('#SearchDrawRect').datagrid('getEditor', { index: rowIndex, field: "load_seat" });                    var secondContactPhoneEditor = $('#SearchDrawRect').datagrid('getEditor', { index: rowIndex, field: "second_contact_phone" });                    var tractionEditor = $('#SearchDrawRect').datagrid('getEditor', { index: rowIndex, field: "traction" });                    if (loadSeatEditor == null || secondContactPhoneEditor == null || tractionEditor==null) {                        AlertInfo("&#35831;&#36873;&#20013;&#24403;&#21069;&#32534;&#36753;&#30340;&#34892;&#65281;");                        return;                    }                    var updateData = {                        vehicleId: row.vehicle_id,                        loadSeat: $(loadSeatEditor.target).textbox('getValue'),                        secondContactPhone: $(secondContactPhoneEditor.target).textbox('getValue'),                        traction: $(tractionEditor.target).textbox('getValue')                    };                    $.post("/Data/UpdateVehicle", { vehicleId: updateData.vehicleId, loadSeat: updateData.loadSeat, secondContactPhone: updateData.secondContactPhone, traction: updateData.traction }, function (data) {                        if (data == "1") {                                AlertInfo("&#30331;&#24405;&#24050;&#22833;&#25928;&#65292;&#35831;&#37325;&#26032;&#30331;&#24405;&#31995;&#32479;&#65281;");                        } else if (data == "2") {                                AlertInfo("&#27809;&#26377;&#20445;&#23384;&#25104;&#21151;&#65292;&#35831;&#37325;&#26032;&#20445;&#23384;&#65281;");                        }                        else {                                if (data != "") {                                        AlertInfo(data);                                } else {                                        AlertInfo("&#20462;&#25913;&#25104;&#21151;");                                $("#SearchDrawRect").datagrid('selectRow', rowIndex).datagrid('endEdit', rowIndex);//&#32467;&#26463;&#32534;&#36753;&#34892;                            }                        }                    });                } else {                        AlertInfo("&#35831;&#36873;&#20013;&#38656;&#35201;&#20445;&#23384;&#30340;&#25968;&#25454;&#65281;");                }            }        }]});&lt;/script&gt;DataGrid，点击表头进行排序//JavaScript code：///&#25490;&#24207;//obj &#25490;&#24207;&#23545;&#35937;//sortName &#25490;&#24207;&#21015;&#21517;//sortOrder &#25490;&#24207;acs&#65292;desc_this.sort = function (obj, sortName, sortOrder) {        var queryParams = $('#' + obj).datagrid('options').queryParams;        queryParams.sortName = sortName;        queryParams.sortOrder = sortOrder;        $('#' + obj).datagrid('reload');}$('div #user_vehicle_data').datagrid({      collapsible: true,      queryParams: { "sortName": "", "sortOrder": "" },      remoteSort: false,      onSortColumn: function (sort, order) {            _this.sort('user_vehicle_data', sort, order);//&#35843;&#29992;&#25490;&#24207;&#26041;&#27861;&#12290;      },      sortable: true,      total: data.count,      data: data.uservehiclelist,});DataGrid Filter效果图实现关键代码//&#24341;&#20837;filter&#25991;&#20214;//datagrid-filter-zh_CN.js&#20869;&#23481;&#26159;&#33258;&#23450;&#20041;&#30340;&#65292;&#26412;&#23567;&#33410;&#32467;&#23614;&lt;script src="~/Content/EasyUI1.4.5/datagrid-filter/datagrid-filter.js"&gt;&lt;/script&gt;&lt;script src="~/Content/EasyUI1.4.5/datagrid-filter/datagrid-filter-zh_CN.js"&gt;&lt;/script&gt;//&#24320;&#21551;&#36807;&#28388;&#65292;&#23454;&#29616;&#36807;&#28388;&#26041;&#27861;$('#SearchDrawRect').datagrid('enableFilter');$('#SearchDrawRect').datagrid('enableFilter', [{    field: 'vehicle_type_name',    type: 'combobox',    options: {        url: '/Monitor/GetVehicleType',        valueField: 'vehicle_type_name',//&#21407;vehicle_type_code        textField: 'vehicle_type_name',        multiple: false,        panelHeight: '200px',        editable: false,        onChange: function (value) {             var vehicleTypeName="";             if (value == '') {                 $('#SearchDrawRect').datagrid('removeFilterRule', 'vehicle_type_name');             } else {                 $('#SearchDrawRect').datagrid('addFilterRule', {                    field: 'vehicle_type_name',                    op: 'equal',                    value: value                 });             }             $('#SearchDrawRect').datagrid('doFilter');        }    }}, {    field: 'load_seat',//&#36710;&#38271;    type: 'numberbox',    options: {        precision: 2,        onChange: function (value) {            if (value == '') {                dg.datagrid('removeFilterRule', 'load_seat');            } else {                $('#SearchDrawRect').datagrid('addFilterRule', {                    field: 'load_seat',                    op: 'greaterorequal',                    value: value                });            }                                $('#SearchDrawRect').datagrid('doFilter');       }   }}datagrid-filter-zh_CN.js//Add by 20170510,zrgif ($.fn.datagrid) {    $.fn.datagrid.defaults.operators.nofilter.text = '&#19981;&#36807;&#28388;';    $.fn.datagrid.defaults.operators.contains.text = '&#21253;&#21547;';    $.fn.datagrid.defaults.operators.equal.text = '&#31561;&#20110;';    $.fn.datagrid.defaults.operators.notequal.text = '&#19981;&#31561;&#20110;';    $.fn.datagrid.defaults.operators.beginwith='&#24320;&#22836;';    $.fn.datagrid.defaults.operators.endwith.text = '&#32467;&#23614;';    $.fn.datagrid.defaults.operators.less.text = '&#23567;&#20110;';    $.fn.datagrid.defaults.operators.lessorequal.text = '&#23567;&#20110;&#25110;&#31561;&#20110;';    $.fn.datagrid.defaults.operators.greater.text = '&#22823;&#20110;';    $.fn.datagrid.defaults.operators.greaterorequal.text = '&#22823;&#20110;&#25110;&#31561;&#20110;';}参考资料http://www.jeasyui.com/documentation/index.phphttp://46aae4d1e2371e4aa769798941cef698.devproxy.yunshipei.com/frightingforambition/article/details/50457407http://blog.csdn.net/hanchangning19890201/article/details/40786587http://www.cnblogs.com/sword-successful/p/3386861.htmlhttp://www.jeasyui.com/extension/datagrid_filter.phphttp://www.cnblogs.com/ckaifeng/p/5006569.htmlhttp://blog.csdn.net/hongping626/article/details/16856191Window居中var easyuiPanelOnOpen = function (left, top) {        var iframeWidth = $(this).parent().parent().width();        var iframeHeight = $(this).parent().parent().height();        var windowWidth = $(this).parent().width();        var windowHeight = $(this).parent().height();        var setWidth = (iframeWidth - windowWidth) / 2;        var setHeight = (iframeHeight - windowHeight) / 2;        $(this).parent().css({/* &#20462;&#27491;&#38754;&#26495;&#20301;&#32622; */                left: setWidth,                top: setHeight        });        if (iframeHeight &lt; windowHeight)        {                $(this).parent().css({/* &#20462;&#27491;&#38754;&#26495;&#20301;&#32622; */                        left: setWidth,                        top: 0                });        }        $(".window-shadow").hide();};$.fn.window.defaults.onOpen = easyuiPanelOnOpen;EasyUI-textbox，点击回车键，执行某个方法html code:&lt;input id="tb" type="text" style="width:300px"&gt;方法一：//&#36825;&#31181;&#26041;&#27861;&#33539;&#22260;&#22826;&#24191;&#65292;&#22914;&#26524;&#39029;&#38754;&#26377;&#22810;&#20010;&#25991;&#26412;&#26694;&#23601;&#19981;&#22909;&#29992;&#20102;$(window).keydown(function(event) {     if(event.keyCode == 13) {          alert('111');     }});方法二：//&#25353;&#29031;id&#30417;&#21548;&#26576;&#20010;&#25991;&#26412;&#26694;&#30340;&#22238;&#36710;&#20107;&#20214;$('#clientID').textbox({    inputEvents: $.extend({},$.fn.textbox.defaults.inputEvents,{        keyup: function(event){             if(event.keyCode == 13) {                alert('OK');            }        }    });}); 方法三：$('#clientID').textbox('textbox').keydown(function (e) {    if (e.keyCode == 13) {        alert('000');    }});]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> EasyUI </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GNU Emacs]]></title>
      <url>/software/2016/06/06/using-emacs/</url>
      <content type="text"><![CDATA[1 IntroductionENGNU Emacs is the most popular and most ported Emacs text editor. It was created by GNU Project founder Richard Stallman. In common with other varieties of Emacs, GNU Emacs is extensible using a Turing complete programming language.CNEMACS，即 Editor MACroS（编辑器宏）的缩写，最初由 Richard Stallman(理查德·马修·斯托曼)于 1975 年在 MIT 协同 Guy Steele 共同完成。这一创意的灵感来源于 TECMAC 和 TMACS，它们是由 Guy Steele、Dave Moon、Richard Greenblatt、Charles Frankston 等人编写的宏文本编辑器。Emacs 使用 Emacs Lisp，这种有着极强扩展性的编程语言，从而实现了包括编程、编译乃至网络浏览等等功能的扩展。2 Keyboard2.1 Open Emacs on terminal$ emacs -nw filename2.2 Don't know how to use emacs?2.2.1 Default PrefixTable 1: PrefixPrefixDescriptionCCtrlMAltSShiftRETEnterup/down/left/right上/下/左/右 方向键C-c当前编辑模式特有的命令C-x文件和缓冲区命令C-h获取帮助命令M-x键入函数名称前缀快捷键2.2.2 General KeyboardTable 2: general shotkeys快捷键描述快捷键描述C-x  C-c退出C-g退出一个正在运行的命令C-v查看下一屏M-v查看上一屏C-l重绘屏幕，并将光标所在行置于屏幕的中央&#xa0;&#xa0;C-f向右移（forward,前进）C-b向左移（backward，回退）C-p上一行（previous）C-n下一行（next）M-f向右移（以单词为一个单位）M-b向左移（以单词为一个单位）M-&lt;移动到所有文字最开头M-&gt;移动到所有文字的最末尾C-a移动到行首C-e移动到行尾M-a移动到句首M-e移动到句尾C-k删除光标后的内容C-y粘贴C-/撤销C-x u撤销C-d删除光标后的字符M-w复制C-SPACE选择内容模式C-w剪切C-x C-f新建/打开文件C-x C-s保存C-x 2分屏C-x 0切换到窗口1C-x o切换窗口C-h t查看帮助2.2.3 FileTable 3: FileKeyboardDescriptionC-x C-fOpen/New fileC-x C-sSaveC-x C-wSave asC-x C-vClose the current buffer file, and open fileC-x iInsert file at current positionC-x bNew/Switch bufferC-x C-bShow buffer listsC-x kClose bufferC-x C-cExit emacs2.2.4 Custor MoveTable 4: MoveKeyboardDescriptionC-f光标向后移动C-b光标向前移动C-pPrevious lineC-nNext lineM-f光标移动到单词尾部M-b光标移动到单词头部C-aHead of lineC-eEnd of lineC-v向下翻页M-v向上翻页M-&lt;到文件开头M-&gt;到文件结尾2.2.5 Text EditTable 5: Text EditKeyboardDescriptionM-n/C-u n重复执行后一个命令n次C-d删除后一个字符M-d删除前一个字符Del删除前一个字符M-Del删除前一个单词C-k移除一行C-@设定标志位(主要是为了粘贴剪切以及删除使用)C-w移除标记区域的内容（剪切）M-w复制标记区域的内容（复制）C-y粘贴M-y召回更早的内容 (在kill缓冲区内循环)C-t交换两个字符的位置M-t交换两个单词的位置C-x C-t交换两行的位置M-u使从光标位置到单词结尾处的字母变成大写M-l与M-u相反M-c使从光标位置开始的单词的首字母变为大写M-x mark-whole-buffer or C-x h, M-x indent-region or C-M-\选中整个文件，然后格式化M-x mark-defun or C-M-h, M-x indent-region or C-M-\选中函数，格式化2.2.6 SearchTable 6: SearchKeyboardDescriptionC-s向前搜索C-r向前搜索M-%查找及替换:首先按下快捷键，输入要替换的词，RET，然后输入要替换的词，RET2.2.7 WindowTable 7: WindowKeyboardDescriptionC-x 2水平分割窗格C-x 3垂直分割窗格C-x o切换至其他窗格C-x 0关闭窗格C-x 1关闭除了光标所在窗格外所有窗格2.2.8 HelpTable 8: HelpKeyboardDescriptionC-h m查看当前模式C-h c显示快捷键绑定的命令C-h k显示快捷键绑定的命令和它的作用C-h f显示函数的功能C-h b显示当前缓冲区所有可用的快捷键C-h t打开emacs教程M-x quit退出help3 Problems3.1 Don't input chinese character编辑~/.bashrc文件，加入如下内容：$ vim ~/.bashrcLCCTYPE="zhCN.utf8"编辑/etc/environment文件，加入如下内容：$ sudo vim /etc/environmentLCCTYPE="zhCN.utf8"3.2 Warning (server): Unable to start the Emacs server问题描述Warning (server): Unable to start the Emacs server There is an existing Emacs server, named "server". To start the server in this Emacs process, stop the existing server or call ‘M-x server-force-delete’ to forcibly disconnect it.问题解决打开 init.el 或 .emacs 文件，注释以下代码：（这只是临时解决办法，肯定有更好的解决方式，暂时未找到）(server-start)(setq server-socket-dir "~/.emacs.d/server")参考资料39 Using Emacs as a Server* Customize3.3 Basic Customizeinit.elEmacs 快速设置生效命令: M-x eval-buffer3.4 Advanced Customize3.4.1 Plugins &amp; Themes安装示例：安装 plantuml 插件M+x package-install &lt;RET&gt;plantuml-mode &lt;RET&gt;示例：安装 monokai-pro 主题（手动安装）// &#23558;&#28155;&#21152;&#21040; ~/.emacs &#25110; ~/.emacs.d/init.el &#25991;&#20214;(add-to-list 'load-path "~/.emacs.d/lisp/")(require 'plugin-name)packages manager查看所有安装包M+x list-packages &lt;RET&gt;自动卸载无效的包M+x package-autoremove &lt;RET&gt;修改主题M-x customize-themes &lt;RET&gt; 3.4.2 General PluginsTable 9: General pluginsNameDescriptionhtmlizeexport to html.org&#xa0;org-plus-contrib&#xa0;planuml-modePlanUMLemmet-modeEmmet plugin4 org-modeOrg mode is for keeping notes, maintaining TODO lists, planning projects, and authoring documents with a fast and effective plain-text system.4.1 Installationread more: https://orgmode.org/4.2 Org-mode KeyboardTable 10: org-mode keyboardKeyboardDescriptionTAB  (org-cycle)Cycle visibility. 循环切换光标所在大纲的状态RETenter,Select this location.C-c C-n (org-next-visible-heading)Next heading.C-c C-p (org-previous-visible-heading)Previous heading.C-c C-f (org-forward-same-level)Next heading same level.C-c C-b (org-backward-same-level)Previous heading same level.C-c C-u (outline-up-heading)Backward to higher level heading.C-c C-j切换到大纲浏览状态C-c C-'源码编辑或源码编辑完成退出M-RET (org-meta-return)Insert a new heading, item or row.  插入一个同级标题C-RET (org-insert-heading-respect-content)Insert a new heading at the end of the current subtree.M-LEFT/RIGHT将当前标题升/降级M-S-LEFT/RIGHT将子树升/降级M-S-UP/DOWN将子树上/下移4.3 一些快捷操作// 快速输入 #+BEGIN_SRC ... #+END_SRC&lt;s &lt;TAB&gt;// 快速输入 #+BEGIN_EXAMPLE ... #+END_EXAMPLE&lt;e &lt;TAB&gt;// 快速输入 #+BEGIN_EXPORT html ... #+END_EXPORT输入&lt;h &lt;TAB&gt;// 快速输入 #+BEGIN_EXPORT latex ... #+END_EXPORT&lt;l &lt;TAB&gt;4.4 基本语法4.4.1 Title#+TITLE: GNU Emacs4.4.2 Font*粗体*/斜体/+删除线+_下划线_下标：H_2 O(这里必须留一个空格要不然2和O都成为小标，目前还不知道怎么去掉空格)上标：E=mc^2等宽字： =git=，~code~4.4.3 段落(paragraph)使用 \\ 换行空一行代表重新起段落4.4.4 List有序列表无序列表以'-'、'+'或者'*'开头有序列表以'1.'或者'1)'开头描述列表用'::'列表相关快捷键Table 11: 折叠快捷键说明S-TAB循环切换整个文档的大纲状态（折叠、打开下一级、打开全部）TAB循环切换光标所在的大纲状态Table 12: 大纲或者列表之间移动快捷键说明C-c C-n/p移动到下上一个标题（不断标题是哪一级）C-c C-f/b移动到同一级别的下/上标题C-c C-u跳到上一级标题C-c C-j切换到大纲预览状态Table 13: 基于大纲/标题的编辑快捷键说明M-RET插入一个同级别的标题M-S-RET插入一个同级别的TODO标题M-LEFT/RIGHT将当前标题升/降级M-S-LEFT/RIGHT将子树升/降级M-S-UP/DOWN将子树上/下移动C-c *将本行设为标题或者正文C-c C-w将子树或者区域移动到另一个标题处（跨缓冲区）C-c C-x b在新缓冲区显示当前分支C-c /只列出包含搜索结果的大纲，并高亮，支持多种搜索方式4.4.5 嵌入元数据内容元数据代码#+begin_src c -n -t -h 7 -w 40...#+end_srcc 为所添加的语言-n 显示行号-t 清除格式-h 7 设置高度为7-w 40设置宽度为40注释#+BEGIN_COMMENT块注释...#+END_COMMENT表格与图片#+CAPTION: This is the caption for the next table (or link)则在需要的地方可以通过 \ref{table1} 来引用该表格。嵌入HTML#+BEGIN_EXPORT htmlAll lines between these markers are exported literally#+END_EXPORT包含文件#+INCLUDE: "~/.emacs" src emacs-lisp文档元数据Table 14: 文档元数据H:标题层数num:章节(标题)是否自动编号toc:是否生成索引creator:是否生成 "creat by emacs…"LINKUP:UP: 链接LINKHOME:HEME: 链接4.4.6 Table快捷键Table 15: 整体区域操作说明C-c 竖线创建或者转化成表格C-c C-c调整表格，不移动光标TAB移动到下一区域，必要时新建一行S-TAB移动到上一区域RET移动到下一行，必要时新建一行Table 16: 编辑行和列快捷键说明M-LEFT/RIGHT移动列M-UP/DOWN移动行M-S-LEFT/RIGHT删除/插入列M-S-UP/DOWN删除/插入行C-m移动到下一行，或新建一行C-c -添加水平分割线C-c RET添加水平分割线并跳到下一行C-c ^根据当前列排序，可以选择排序方式C-c `编辑当前单元格C-c C-x C-w剪切某个区域的表格内容C-c C-x C-y拷贝复制的内容到表格表格计算Table 17: 一张价格表，要求算出总额数量单价总额23.456.944.3417.3653.4417.255.628.C-u C-c C-c 强制 org-mode 为整个表格进行设计。只希望在某一特定项上进行计算，输入：':=$1*$2′, 即在等号前再加一个冒号。&lt;5&gt; 表示指定列的宽度，超出宽度的部分会用=&gt;表示，如果想要编辑，需要按下C-c ` ，会打开另一个buffer让你编辑, 用C-c C-c提交编辑内容。&lt;l&gt; 表示左对齐，r,c,l字符分别表示右、中和左对齐。4.4.7 Link在一个链接上按C-c C-o即可访问。自动链接对于符合链接规则的内容，org-mode会自动将其视为链接，包括括文件、网页、邮箱、新闻组、BBDB 数据库项、 IRC 会话和记录等。手动链接[[link][description]][[link]]内部链接#&lt;&lt;target&gt;&gt;设置到target的链接：[[target]] 或 [[target][猛击锚点]]4.4.8 注脚注脚的格式有两种，一是方括号+数字，二是方括号+fn+名字。插入脚注：C-c C-x f ，接下俩你可以写一些其他东西，然后在文章的末尾写上下面两句话（注意：必须要顶格写）：[1] The link is: http://orgmode.org[fn:orghome] The link is: http://orgmode.org4.4.9 分割线五条短线或以上4.4.10 标签标记tags#+FILETAGS: :Peter:Boss:Secret:更方便的做法是在正文部分用C-c C-q 或直接在标题上用C-c C-c创建标签预定义tags预定义的方式有两种：在当前文件头部定义这种方式预定义的标签只能在当前文件中使用。使用#+TAGS元数据进行标记， #+TAGS: { 桌面(d) 服务器(s) }  编辑器(e) 浏览器(f) 多媒体(m) 压缩(z)每项之间必须用空格分隔，可以在括号中定义一个快捷键；花括号里的为标签组，只能选择一个对标签定义进行修改后，要在标签定义的位置按 C-c C-c 刷新才能生效。在配置文件中定义(setq org-tag-alist '((:startgroup . nil)    ("@work . ?w) ("@home" . ?h)    ("@tennisclub" . ?t)    (:endgroup . nil)    ("laptop" . ?l) ("pc" . ?p)))默认情况下，org会动态维护一个Tag列表，即当前输入的标签若不在列表中，则自动加入列表以供下次补齐使用。为了使这几种情况（默认列表、文件预设tags，全局预设tags）同时生效，需要在文件中增加一个空的TAGS定义：'#+TAGS:'tags查询Table 18: tags查询快捷键快捷键说明C-c \可以用来查找某个tag下的所有项目C-c / m搜索并按树状结构显示C-c a m从所有agenda file里建立符合某tag的全局性列表+   和      a+b   同时有这两个标签-   排除    a-b   有 a 但没有 b|   或      a|b   有 a 或者有 b&amp;   和      a&amp;b   同时有 a 和 b，可以用“+”替代4.4.11 org mode entitiesM-x org-entities-help &lt;RET&gt; 4.4.12 Source CodeStructure of Code Blocks#+NAME:&lt;name&gt;#+BEGIN_SRC &lt;language&gt; &lt;switches&gt; &lt;header arguments&gt;&lt;body&gt;#+END_SRC'&lt;switches&gt;'Optional. Switches provide finer control of the code execution, export, and format(see the discussion of switches in Literal Examples).'&lt;header arguments&gt;'Optional. Heading arguments control many aspects of evaluation, export and tangling of code blocks(see Using Header Arguments).'&lt;body&gt;'Source code in the dialect of the specified language identifier.4.5 PlantUML4.5.1 什么是 PlantUML?PlantUML是一个快速创建UML图形的组件。下面是一个简单的示例：;; #+BEGIN_SRC plantuml :file http://localhost:4000/assets/images/orgmode-babel-sequenceuml.png;; Alice -&gt; Bob: synchronous call;; Alice -&gt;&gt; Bob: asynchronous call;; #+END_SRC在线Demo服务4.5.2 配置 Emacs 支持 PlantUML下载 plantuml.jar 到你的硬盘上官网下载页面安装生成图片用的软件：Graphviz$ sudo apt install graphviz配置 Emacs 支持 PlantUML首先，将下载的 plantuml.jar 文件放到 ~/.emacs.d/plantuml/ 目录下；其次，打开 ~/.emacs.d/init.el 文件，添加配置加载 PlantUML；1: ;; Load plantuml2: (setq org-plantuml-jar-path3: (expand-file-name "~/.emacs.d/plantuml/plantuml.jar"))最后在 ~/.emacs 或 ~/.emacs.d/init.el 中，添加配置语言。1: ;; active Org-babel languages2: (org-babel-do-load-languages3: 'org-babel-load-languages4: '(;; other Babel languages5: (plantuml . t))) ;; add this linePlantUML mode for EmacsM-x package-install &lt;RET&gt;plantuml-mode &lt;RET&gt;M-x customize-variable &lt;RET&gt;plantuml-jar-path &lt;RET&gt;4.5.3 使用 PlantUML 绘制顺序图、用例图、类图和流程图顺序图(Sequence Diagram)简单示例顺序图用 -&gt; , &#x2013;&gt;, &lt;-, &lt;&#x2013; 来绘制参与者（Participants）之 间的消息（Message）。#+BEGIN_SRC plantuml :file http://localhost:4000/assets/images/plantuml-quickstart-s1.pngAlice -&gt; Bob: Authentication RequestBob --&gt; Alice: Authentication Response' &#36825;&#26159;&#27880;&#37322;&#65292;&#20351;&#29992;&#20102;&#8220;'&#8221; &#36827;&#34892;&#21333;&#34892;&#25110;&#22810;&#34892;&#27880;&#37322;Alice -&gt; Bob: Another atuhentication RequestAlice &lt;-- Bob: Another authentication Response应用举例1标题、参与者、别名、注释、箭头、图形图例位置、消息序号、颜色、分割图形参与者使用 participant 关键词，也可以使用下面的参与者分类关键词来申明参与者：actor 参与者boundary 边界control 控制entity 实体database 数据库箭头样式使用 \ 或 / 来替换 &lt; 或 &gt; 可以让箭头只显示上半部分或下半 部分。重复输入箭头或斜杠（ &gt;&gt; // ），用来绘制空心箭头。使用双横线 &#x2013; 替代 - 可以用来绘制点线。在箭头后面加个 o 可以在箭头前绘制一个圆圈。使用 &lt;-&gt; 可用来绘制双向箭头。图形图例(Legend the diagram)使用 legend 和 end legend 关键词可以设置图例为左对齐、右对齐和居中对齐。分割图形(Splitting diagrams)关键词 newpage 是用来把图形分割成几个图片的。每一个被分割出来的 图片可以看作是一个新的页面（ new page ），如果要给新的页面添加一 个标题，可以紧跟在关键词 newpage 之后来设置。' &#35201;&#32473;&#22270;&#24418;&#21152;&#19968;&#20010;&#26631;&#39064;&#21487;&#20197;&#29992; title &#20851;&#38190;&#35789;&#26469;&#35774;&#32622;&#12290;title Simple Comunication exampleactor Bobboundary Lily #redcontrol Linus #blueentity Michaeldatabase "Edward's"' The only defference between actor and participant is the drawingparticipant Aliceparticipant "I have a really\nlong name" as L #99ff99/' You can also declare:participant L as "I have a really\nlong name" #99ff99'/' &#28040;&#24687;&#24207;&#21495;(Message sequence numbering)&#65306;' &#20351;&#29992; autonumber &#32473;&#28040;&#24687;&#28155;&#21152;&#24207;&#21495;autonumber' &#22914;&#26524;&#38656;&#35201;&#25351;&#23450;&#19968;&#20010;&#36215;&#22987;&#21495;&#30721;&#65292;&#21487;&#20197;&#30452;&#25509;&#22312; autonumber &#21518;&#38754;&#21152;&#20010;&#25968;&#23383;&#23601;&#34892; &#20102;&#65292;&#22914;&#26524;&#35201;&#35774;&#32622;&#33258;&#22686;&#37327;&#65292;&#20877;&#22312;&#21518;&#38754;&#21152;&#19968;&#20010;&#25968;&#23383;&#23601;&#34892;&#20102;(autonumber start increment)' autonumber 15' autonumber 40 10' &#20063;&#21487;&#20197;&#20026;&#24207;&#21495;&#25351;&#23450;&#25968;&#23383;&#26684;&#24335;&#65292;&#36825;&#20010;&#26684;&#24335;&#21270;&#30340;&#36807;&#31243;&#23454;&#38469;&#19978;&#26159;Java&#31867; DecimalFormat &#26469;&#25191;&#34892;&#30340;&#65288; 0 &#34920;&#31034;&#25968;&#23383;&#65292; # &#32570;&#30465;&#34917;&#38646;&#20301;&#25968;&#65289;&#12290;&#21516;&#26679;&#30340;&#65292;&#20063;&#21487;&#20197;&#20351;&#29992;&#19968;&#20123;HTML&#26631;&#31614;&#26469;&#25511;&#21046;&#25968;&#23383;&#30340;&#26679;&#24335;&#12290;' autonumber "&lt;b&gt;[000]"' autonumber 15 "&lt;b&gt;(&lt;u&gt;##&lt;/u&gt;)"' autonumber 40 10 "&lt;font color=red&gt;Message 0  "Bob -[#red]-&gt; Lily : To boundaryBob -[#0000FF]-&gt;&gt; Linus : To controlBob -\ Michael : To entityBob //-- Edward : To databaseBob \\- AliceBob -&gt;o AliceLinus -&gt; Alice : Authentication RequestAlice -&gt; Linus : Authentication ResponseLinus -&gt; Linus : This is a signal to self.\nIt also demonstrates\nmultiline \ntextBob \\-AliceBob &lt;-&gt; AliceBob &lt;&lt;-\\o Alicenewpage A title for the\nlast pagelegend rightShortlegendendlegend应用举例2：消息(Message)消息分组(Grouping)可以使用下面的关键词来实现：alt/elseoptloopparbreakcriticalgroup, 这个关键词后面的文字会作为组名显示在图形上上面的关键词后可以添加一些文本用来显示在头部（注： group 除外，因为它后面的文本用来显示在组名称的位置）。在组嵌套组的结构里可以用关键词 end 来关闭组或者说是表示一个组符号的结束符（类似 if/endif ）。消息注解(Notes)使用 note left 或 note right 关键词其他的注解方式(Some other notes)通过使用关键词 note left of ， note right of 或 note over，可以把注解放置在与之相关的参与者的左边或右边，或下方。如果要使用多行注解，可以使用关键词 end note 来表示注解的结束。Alice -&gt; Bob: Authentication Requestnote left: this is a first notealt successful caseBob -&gt; Alice: Authentication Acceptedelse some kind of failureBob -&gt; Alice: Atuhentication Failuegroup My own labelAlice -&gt; Log : Log attack startloop 1000 timesAlice -&gt; Bob: DNS AttackendAlice -&gt; Log : Loag alice endendelse Another type of failueBob -&gt; Alice: Please repeatnote right of Alice: This is displayed right of Alice.note over Bob, AliceThis is yet anotherexample ofa long note.end noteendLog -&gt; Lognote righta notecan also be definedon several linesend note应用举例3：使用HTML进行格式化(Formatting using HTML)可以使用少量的HTML标签来格式化文本：&lt;b&gt; 加粗文本&lt;u&gt; 或 &lt;u:#AAAAAA&gt; 或 &lt;u:colorName&gt; 用来加下划线&lt;i&gt; 斜体&lt;s&gt; 或 &lt;s:#AAAAAA&gt; 或 &lt;s:colorName&gt; 用来加删除线&lt;w&gt; 或 &lt;w:#AAAAAA&gt; 或 &lt;w:colorName&gt; 用来加波浪线&lt;color:#AAAAAA&gt; 或 &lt;color:colorName&gt; 用来设置文本颜色&lt;back:#AAAAAA&gt; 或 &lt;back:colorName&gt; 用来设置背景色&lt;size:nn&gt; 设置字体大小&lt;img src="file"&gt; 或 &lt;img:file&gt; 用来添加图片，图片文件必须 是可以访问得到才行。&lt;img src="http://url"&gt; 或 &lt;img:http://url&gt; 用来添加一个互 联网图片，同样的图片地址必须是可用的才行。participant Aliceparticipant "The &lt;b&gt;Famous&lt;/b&gt; Bob" as BobAlice -&gt; Bob : A &lt;i&gt;well formated&lt;/i&gt; messagenote right of AliceThis is &lt;back:cadetblue&gt;&lt;size:18&gt;displayed&lt;/size&gt;&lt;/back&gt;&lt;u&gt;left of&lt;/u&gt; Alice.end notenote left of Bob&lt;u:red&gt;This&lt;/u&gt; is &lt;color #118888&gt;displayed&lt;/color&gt;&lt;b&gt;&lt;color purple&gt;left of&lt;/color&gt; &lt;s:red&gt;Alice&lt;/strike&gt; Bob&lt;/b&gt;end notenote over Alice, Bob&lt;w:#FF33FF&gt;This is hosted&lt;/w&gt; by &lt;img ../img/code.png&gt;end note用例图(Use Case Diagram)用例图示例用例用例可以用一对小括号括起来表示，也可以使用 usecase 关键词来定义，用例也可以通过使用 as 关键词来设置别名。参与者(Actors)定义参与者时，可以把参与者的名称放在两个冒号的中间，也可以用 actor 关键词来定义参与者。同样参与着也可以使用别名。类图(Class Diagram)活动图(Activity Diagram)完整示例1(Complete Example)使用 (*) 来表示活动开始点和结束点。使用 &#x2013;&gt; 来表示箭头。带标注的箭头(Label on arrows)，可以通过方括号 [labels] 来设置标注改变箭头的方向(Changing arrow direction)，可以使用 -&gt; 创建一个水平箭头，也可以通过下面的方式来改变箭头 的方向：-down-&gt; 向下（这个是默认的，等同于 =–&gt;=）-right-&gt; 向右-left-&gt; 向左-up-&gt; 向上分支(Branches)：可以使用 if/then/else 关键词来定义分支。同步块(Synchronization)，同步块可以用“=== code ===”来表示。长文本的活动描述(Long activity description)，在定义活动的时候，有时候需要用多行文字来描述这个活动，这时我们可以在描述里添加换行符，也可以使用少量的HTML标签。以下是可以使用的HTML标签：&lt;b&gt;&lt;i&gt;&lt;font size="nn"&gt; or &lt;size:nn&gt; to change font size&lt;font color="#AAAAAA"&gt; or &lt;font color="colorName"&gt;&lt;color:#AAAAAA&gt; or &lt;color:colorName&gt;&lt;img:file.png&gt; to include an image注释(Notes)：可以通过在脚本里使用 note 来添加注释文本块。图形标题(Title the diagram)：标题关键词 title 用来设置一个图形的标题文本，我们可以在 title 和 end title 两个关键词之间放置比较长的标题文本。皮肤(Skinparam)皮肤命令 skinparam 可以改变图形的颜色和字体。这些命令可以在以下 的位置中使用：在图形定义里使用在包含的文件里使用在一个配置文件里使用，这个配置文件一般由命令行或ANT的Task来提供。分区(Partition)，通过分区关键词 partition 可以定义一个分区，并且可以使用HTML的 颜色码或颜色名来设置分区的背景色。在你申明一个活动时，PlantUML会自动 的把这个活动对象放置到最后使用的分区中。当然，也可以使用 end partitio 关闭分区定义。title Simple example\nof titleskinparam activityStartColor red/'skinparam backgroundColor #DDDskinparam activityBarColor SaddleBrownskinparam activityEndColor Silverskinparam activityBackgroundColor Peruskinparam activityBorderColor Peruskinparam activityFontName Impactskinparam activityShape octagon'/(*) --&gt; [You can put also labels] "First Activity"note right: This activity has to be defined--&gt; "this &lt;size:20&gt;activity&lt;/size&gt;       is &lt;b&gt;very&lt;/b&gt; &lt;color:red&gt;long&lt;/color&gt;       and defined on serveral lines       that contains many &lt;i&gt;text&lt;/i&gt;" as A1--&gt; ===B1===     if " Some Test" then   --&gt;[ture] "Some Activity" as someAct   --&gt; "Another Activity" as act1   partition checkActivity   act1 -&gt; if "Activited" then             -down-&gt;"Access Home"             -right-&gt; (*)     else             -left-&gt;"Activiting"             --&gt;"waiting"             --&gt;someAct     endif  act1 -&gt; if "error" then             --&gt;"throw"             --&gt;(*)     else        --&gt; "record log"        --&gt;(*)     endif   end partition  else   -&gt;[false] "Something else"   --&gt;[Ending process] (*)endif完整示例2'http://click.sourceforge.net/images/activity-diagram-small.pngtitle Servlet Container(*) --&gt; "ClickServlet.handleRequest()"--&gt; "new Page"if "Page.onSecurityCheck" then    -&gt;[true] "Page.onInit()"if "isForward?" then    -&gt;[no] "Process controls"    if "continue processing?" then            --&gt;[yes] ===RENDERING===    else            --&gt;[no] ===REDIRECT_CHECK===    endifelse    --&gt;[yes] ===RENDERING===endifif "is Post?" then  --&gt;[yes] "Page.onPost()"  --&gt; "Page.onRender()" as render  --&gt; ===REDIRECT_CHECK===else  --&gt;[no] "Page.onGet()"  --&gt; renderendifelse--&gt;[false] ===REDIRECT_CHECK===endifif "Do redirect?" then-&gt;[yes] "redirect request"--&gt; ==BEFORE_DESTORY===elseif "Do Forward?" then  -left-&gt;[yes] "Forward request"  --&gt; ==BEFORE_DESTORY===else  -right-&gt;[no] "Render page template"  --&gt; ==BEFORE_DESTORY===endifendif--&gt; "Page.onDestory()"--&gt;(*)活动图Beta版本完整示例1 Beta版本的活动图简化了活动图的符号定义，从 V7947 这个版本开始， PlantUML就开始引入了一些简化写法，当然到目前（20140627）为止还不是 很完善，但这个版本里的一些简化写法已经是PlantUML后续版本的发展方向。在使用新的写法之前需要把 GraphViz 更新到最新版本。开始结束活动元素以 : 开始，然后以 ; 结束，也可以用 start 和 end 两个关键词来表示。之前版本的开始和结束符都是用同一个符号 (*) 来表示的。条件符号(Conditional)还是使用 if ， then 和 else 关键词，但分支条件的标签 Labels 可以直接写在关键词 then 和 else 的后面，并用小括号括起来就可以了。在新版本里除了使用 else 外，还新加了一个 elseif 关键词。重复循环(Repeat Loop)通过 repeat 和 repeat while 关键词可以创建循环结构的图形。先执行一次循环体里的内容，然后再执行断言条件，看是否重复执行循环体。条件循环(While Loop)使用 while 和 end while 两个关键词来实现，如果要给条件分支加上标注，可以在 while 条件后加上一 个 is 关键词，然后用小括号括上要标注的内容先判断是否满足条件再执行循环体里的内容。并行处理(Parallel Processing)使用fork ， fork again 和 end fork 三个关键词用来表示并行处理结构。注解的文本样式(Notes)注解里的文本样式是通过 Creole wiki syntax 来实现的。关于 Creole引擎, 大家可以参考维基百科上的介绍。' : &#24320;&#22987;startnote left: This is startif (graphviz installed?) then (yes)     #purple:process all\ndiagrams;     if (multiprocessor?) then (yes)             fork                     :Treatment 1;             fork again                     :Treatment 2;             end fork     else (monoproc)             :Treatment 1;             :Treatment 2;     endifelseif (graphviz installed on linux?) then (yes)     :enable linux;     repeat             :read data;             :generate diagrams;     repeat while (more data?)else (no)     :process only     __sequence__ and __activity__ diagrams;     while (data available?) is (not empty)             :read data;             :generate diagrams;     end while (empty)endifend完整示例2  start:ClickServlet.handleRequest();:new page;if (Page.onSecurityCheck) then (true)  :(Page.onInit();  if (isForward?) then (no)    :Process controls;    if (continue processing?) then (no)      stop    endif    if (isPost?) then (yes)      :Page.onPost();    else (no)      :Page.onGet();    endif    :Page.onRender();  endifelse (false)endifif (do redirect?) then (yes)  :redirect process;else  if (do forward?) then (yes)    :Forward request;  else (no)    :Render page template;  endifendifstop4.5.4 快捷键(Keyboard)Table 19: Default key bindings快捷键描述C-c C-cplantuml-preview: renders a PlantUML diagram from the current buffer in the best supported formatC-u C-c C-cplantuml-preview in other windowC-u C-u C-c C-cplantuml-preview in other frame5 Problems5.1 Don't input chinese character编辑~/.bashrc文件，加入如下内容：$ vim ~/.bashrcLC_CTYPE="zh_CN.utf8"编辑/etc/environment文件，加入如下内容：$ sudo vim /etc/environmentLC_CTYPE="zh_CN.utf8"5.2 Warning (server): Unable to start the Emacs server问题描述Warning (server): Unable to start the Emacs server There is an existing Emacs server, named "server". To start the server in this Emacs process, stop the existing server or call ‘M-x server-force-delete’ to forcibly disconnect it.问题解决打开 init.el 或 .emacs 文件，注释以下代码：（这只是临时解决办法，肯定有更好的解决方式，暂时未找到）(server-start)(setq server-socket-dir "~/.emacs.d/server")参考资料39 Using Emacs as a Server5.3 font-lock-fontify-keywords-region: Error in syntax table logic for to-the-end intervals问题描述M-x org-publish &lt;RET&gt; jekyll-zhaorengui-github-iofont-lock-fontify-keywords-region: Error in syntax table logic for to-the-end intervals问题解决#+BEGIN_SRC phpecho date('Y-m-d', strtotime(date('Y-m-01') . ' -1 month')); // 计算出本月第一天再减一个月#+END_SRC修改为#+BEGIN_SRC php// 计算出本月第一天再减一个月echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 month'));#+END_SRC6 Referencesorg-mode: 最好的文档编辑利器emacs 百度百科emacs wikiPlantUML Official SiteUsing plantuml to make diagrams in org-mode使用Emacs敲出UML，PlantUML快速指南强大的 Org modegithub plantuml-modeorg-mode的一些小技巧]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> GNU-Emacs </tag>
        
          <tag> org-mode </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[To Learn Python from Selenium]]></title>
      <url>/python/2016/05/23/selenium-with-python/</url>
      <content type="text"><![CDATA[Getting StartedWhat is Python?Python is a general-purpose interpreted, interactive, object-oriented, and high-level programming language.#!/usr/bin/python3print("Hello, Python!")InstallationDownloading and Installing Selenium&gt;pip install seleniumNote:"Script" dir. not's found in Python 3.3 version after installation.Following is solution(Installing easy_install and pip):     Step1,To https://pypi.python.org/pypi/setuptools Download ez_setup.py;     Step2,&gt;python ez_setup.py     Step3,&gt;easy_install pip .Or Directly dowload pip-9.0.1.tar.gz,&gt;python setup.py install--Updating pip&gt;python -m pip install --upgrade pipInstalling pymssql&gt;pip install pymssqlConnecting SQL Server by pymssqlsqlserver classsql_server.py######SQL Server class.#####import pymssqlclass sqlserver:	#Connect.	def __init__(self,host,user,password,database):		#server url or ip.		self.host = host		#User name.		self.user = user		#Password.		self.password = password		#Database.		self.database=database	def __get_connect(self):		#Connect SQL Server.		if not self.database:			raise(NameError,"没有连接数据库信息")		self.conn = pymssql.connect(self.host, self.user, self.password, self.database,charset="utf8")		cursor = self.conn.cursor()		if not cursor:			raise(NameError,"未能连接到数据库，请检查!")		else:			return cursor	#Close connect.	def conn_closed(self):		self.conn.close()	#Query data.	def query(self,sql):		cur=self.__get_connect()		cur.execute(sql)		dataList=cur.fetchall()		self.conn_closed() #Closing connect.		return dataListtest.pyfrom selenium import webdriverfrom selenium.webdriver.common.keys import Keysfrom splinter.browser import Browserfrom time import sleepfrom sql_server import sqlserver#Logindef login(driver):	driver.get("http://localhost:8080/chicago/")	#Enter to user name.	userName=driver.find_element_by_name("userName")	userName.send_keys("admin")	sleep(1)	#Enter to pwd.	password=driver.find_element_by_name("password")	password.send_keys("123456")	sleep(1)	#Login to site.	password.send_keys(Keys.RETURN)#Get out data of vehicle. def get_out_card_data(conn):	cardInfo=conn.query("SELECT io.card_no from chicago_io io where card_no like 'dm16%' and io.out_time is NULL order by io.card_no")	return cardInfo#Begin outdef begin_out(driver,outData):	driver.find_element_by_xpath("//div[@id='ext-gen20']/div[@id='002']").click()	driver.find_element_by_link_text("车辆进出管理").click()	driver.find_element_by_link_text("车辆出场操作").click()	sleep(5)	card_no=driver.find_element_by_name("truckIo.cardNo")	submit_button=driver.find_element_by_id("ext-gen26")	for card in outData:		card_no.send_keys(card)		submit_button.click()		sleep(3)#Begin in#def begin_in(inData):#maindef main():	driver=webdriver.Chrome()	#Login site.	login(driver)	#Connection.	conn=sqlserver("localhost","sa","123456","chicago5")	#Get data of vehicle out.	outData=get_out_card_data(conn)	# cardStr=""	# for row in outData:	# 	cardStr+=''.join(row)+","	outList=[]#Out of vehicle list.	inList=[]#In of vehicle list.	number=1	if outData:		for row in outData:			card_no=int(row[0][5:7])			outList.append(card_no)			while (number&lt;50):							if (number!=card_no):					# print(number)					inList.append(number)				number+=1	else:		while (number&lt;50):			inList.append(number)			number+=1	begin_out(driver,outList)	print(inList)if __name__ == "__main__":	main()Solving the problemSyntaxError: Non-ASCII character '\xc2' in fileSolving: add to header of file        #coding:utf-8 or #coding=utf-8RefrencesSelenium with Pythonpymssqlhttps://wiki.python.org/moin/SQL%20Serverhttps://www.tutorialspoint.com/pythonhttps://www.tutorialspoint.com/python3]]></content>
      <categories>
        
          <category> python </category>
        
      </categories>
      <tags>
        
          <tag> selenium </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Use Vim]]></title>
      <url>/software/2015/11/06/using-vim/</url>
      <content type="text"><![CDATA[Vim KeyboardTable 1: Vim KeyboardCommandDescription插入命令&#xa0;a在光标所在字符后插入A在光标所在行行尾插入i在光标所在字符前插入I在光标所在行行首插入o在光标下插入新行O在光标上插入新行定位命令&#xa0;\$光标移到行尾\^光标移到行首gg到第一行G到最后一行nG or :n到第n行删除命令&#xa0;x删除光标位置字符nx删除光标位置后的n个字符dd删除光标所在行，ndd删除n行dG删除光标所在位置到文件末尾内容D删除光标所在位置到行尾内容:n1,n2d删除指定范围的行，如:999,1003d保存命令&#xa0;:w保存修改:w另存为指定文件:wq保存修改并退出ZZ保存退出快捷键:q!不保存退出:wq!保存修改并退出(文件所有者及root可使用)选择按v，进入可视模式，移动光标选定内容复制一般选定后，按y（yank）即可复制，常用命令如下：&#xa0;yy 复制整行（nyy或者yny ，复制n行，n为数字）&#xa0;y^ 复制当前到行头的内容&#xa0;y$ 复制当前到行尾的内容&#xa0;yw 复制一个word （nyw或者ynw，复制n个word，n为数字）&#xa0;yG 复制至档尾（nyG或者ynG，复制到第n行，例如1yG或者y1G，复制到档尾） 剪切按d（delete）剪切，基本和复制命令一样。常用命令如下：&#xa0;d      剪切选定块到缓冲区；&#xa0;dd    剪切整行，ndd剪切当前行以下n行。&#xa0;d^    剪切至行首&#xa0;d$     剪切至行尾&#xa0;dw    剪切一个word粘贴按p（put），粘贴在当前光标所在行下面&#xa0;按P，粘贴在当前光标所在行上面&#xa0;整行的复制粘贴在游标的上（下）一行；非整行的复制则是粘贴在游标的前（后）撤销(undo)u,（阅读模式下按U，撤销上一步的操作）恢复(redo)Ctrl+r搜索查找(normal模式下)&#xa0;n/N，继续搜索下一处/上一处关键词&#xa0;:%s/oldString/newString/g，全文替换&#xa0;:n1,n2s/oldString/newString/g，在一定范围内替换指定字符串&#xa0;注意：查找回车应当用\n，而替换为回车应当用\r（相当于&lt;CR&gt;）&#xa0;Vim查找支持正则表达式，例如/vim$匹配行尾的"vim"。 需要查找特殊字符需要转义，例如/vim\\(匹配"vim\)"。&#xa0;\c表示大小写不敏感查找，\C表示大小写敏感查找。&#xa0;*即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。&#xa0;例如当前为foo， 可以匹配foo bar中的foo，但不可匹配foobar中的foo。&#xa0;g*即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即foo bar和foobar中的foo均可被匹配到。查找及替换:s（substitute）, 查找和替换。语法如下：&#xa0;:{作用范围}s/{目标}/{替换}/{替换标志}&#xa0;例如:%s/foo/bar/g会在全局范围(%)查找foo并替换为bar，所有出现都会被替换（g）。&#xa0;1. 作用范围分为当前行、全文、选区等等。&#xa0;当前行：:s/foo/bar/g。&#xa0;全文：:%s/foo/bar/g。&#xa0;选区，在Visual模式下选择区域后输入:，Vim即可自动补全为 :'&lt;,'&gt;：:'&lt;,'&gt;s/foo/bar/g。&#xa0;2-11行：:5,12s/foo/bar/g&#xa0;当前行.与接下来两行+2：:.,+2s/foo/bar/g&#xa0;2. 替换标志&#xa0;空替换标志表示只替换从光标位置开始，目标的第一次出现：:%s/foo/bar&#xa0;i表示大小写不敏感查找，I表示大小写敏感：&#xa0;:%s/foo/bar/i&#xa0;# 等效于模式中的\c（不敏感）或\C（敏感）&#xa0;:%s/foo\c/bar&#xa0;c表示需要确认，例如全局查找"foo"替换为"bar"并且需要确认：:%s/foo/bar/gc设置命令&#xa0;:set nu!显示行号:set nonu取消行号syntax on语法高亮度显示:set ai!设置自动缩进:100跳到指定行::split分割视窗(可加名称随便开启另一档案)gg=GFormart格式化:n/:N编辑多个文件时，下一个文件/上一个文件注意事项如果设置完成后，发现功能没有起作用，检查系统下是否安装了 vim-enhanced，命令为： $ rpm -q vim-enhanced小技巧&#xa0;:r ![命令]导入命令执行结果:map快捷键 触发命令&#xa0;定义快捷键，范例：&#xa0;:map ^P I#&lt;ESC&gt;&#xa0;:map ^B 0x&#xa0;:map ^H zrg1390556487@gmail.com&lt;ESC&gt; //定义快捷键，插入邮箱:n1,n2s/^/#/g连续行注释:n1,n2s/^#//g连续行注释:n1,n2s/^/\/\//g连续行注释:ab mymail zrg@gmail.com替换，输入mymail，自动变成zrg@gmail.comHighlight SettingColor查看当前主题 :color :colorscheme 查看vim运行目录 :echo $VIMRUNTIME 查看colors目录 $ ls /usr/share/vim/vim80 设置颜色主题，查看效果 :colorscheme elflord 修改颜色主题 $ vim /etc/vim/vimrc // 添加如下代码 colorscheme elflord 或者在 ~/.vimrc 中进行设置：highlight Search ctermbg=yellow ctermfg=black highlight IncSearch ctermbg=black ctermfg=yellow highlight MatchParen cterm=underline ctermbg=NONE ctermfg=NONE上述配置指定 Search 结果的前景色（foreground）为黑色，背景色（background）为灰色； 渐进搜索的前景色为黑色，背景色为黄色；光标处的字符加下划线。Enable and Disable Highlight// Disable:nohighlight 或 :nohl// Only disable search highlight:set nohlsearch// Re-enabled search hightlight on next search:set hlsearch延时禁用让Vim查找/替换后一段时间自动取消高亮，发生查找时自动开启呢？1: " &#24403;&#20809;&#26631;&#19968;&#27573;&#26102;&#38388;&#20445;&#25345;&#19981;&#21160;&#20102;&#65292;&#23601;&#31105;&#29992;&#39640;&#20142;2: autocmd cursorhold * set nohlsearch3: " &#24403;&#36755;&#20837;&#26597;&#25214;&#21629;&#20196;&#26102;&#65292;&#20877;&#21551;&#29992;&#39640;&#20142;4: noremap n :set hlsearch&lt;cr&gt;n5: noremap N :set hlsearch&lt;cr&gt;N6: noremap / :set hlsearch&lt;cr&gt;/7: noremap ? :set hlsearch&lt;cr&gt;?8: noremap * *:set hlsearch&lt;cr&gt;一键禁用设置快捷键来一键禁用/开启搜索高亮：nnoremap &lt;c-h&gt; :call DisableHighlight()&lt;cr&gt;function! DisableHighlight()      set nohlsearchendfunc希望关闭高亮时只需要按下 Ctrl+H，当发生下次搜索时又会自动启用。设置生效Notice: 设置完成后，发现功能没有起作用，检查一下系统下是否安装了vim-enhanced包，查询命令为： $ rpm -q vim-enhancedReferences在 Vim 中优雅地查找和替换]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> VIM </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[JavaScript 公共文件]]></title>
      <url>/javascript/2015/10/15/apply-javascript/</url>
      <content type="text"><![CDATA[1 Date/Time1.0.1 转换UTC时间function ConvertUtcTime(utctime, style) {    if (utctime == null || utctime == "") {        return "";    }else {        var d = utctime.substring(6, utctime.length - 1);        var newdate = new Date(parseInt(d));        if (style == null || style == "") style = "yyyy-MM-dd hh:mm:ss";        return newdate.format(style);    }}1.0.2 将日期转换为yyyymmddhhssmm格式function getDate(date) {    var year = date.getFullYear();    var month = date.getMonth() + 1;    var date1 = date.getDate();    var day = date.getDay();    var hours = date.getHours();    var minutes = date.getMinutes();    var seconds = date.getSeconds();    var ms = date.getMilliseconds();    var curDateTime = year;    if (month &gt; 9) {        curDateTime = curDateTime + month;    } else {        curDateTime = curDateTime + "0" + month;    }    if (day &gt; 9) {        curDateTime = curDateTime + day;    } else {        curDateTime = curDateTime + "0" + day;    }    if (hours &gt; 9) {        curDateTime = curDateTime + "" + hours;    } else {        curDateTime = curDateTime + "0" + hours;    }    if (minutes &gt; 9) {        curDateTime = curDateTime + minutes;    } else {        curDateTime = curDateTime + "0" + minutes;    }    if (seconds &gt; 9) {        curDateTime = curDateTime + seconds;    } else {        curDateTime = curDateTime + "0" + seconds;    }    return curDateTime;}1.0.3 格式化日期Date.prototype.format = function (format) {    var o =        {            "M+": this.getMonth() + 1, //month            "d+": this.getDate(),    //day            "h+": this.getHours(),   //hour            "m+": this.getMinutes(), //minute            "s+": this.getSeconds(), //second            "q+": Math.floor((this.getMonth() + 3) / 3),  //quarter            "S": this.getMilliseconds() //millisecond        }    if (/(y+)/.test(format))        format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));    for (var k in o)        if (new RegExp("(" + k + ")").test(format))            format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));    return format;}1.0.4 日期加减function DateAdd(dateObj, days) {    var tempDate = dateObj.valueOf();    tempDate = tempDate + days * 24 * 60 * 60 * 1000    tempDate = new Date(tempDate)    return tempDate;}1.0.5 获取指定日期//&#33719;&#21462;&#25351;&#23450;&#26085;&#26399;&#24320;&#22987;&#26102;&#38388;&#65288;00&#65306;00&#65306;00&#65289;function getTodayStart(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + (d &lt; 10 ? ('0' + d) : d) + " 00:00:00";    return time;}//&#33719;&#21462;&#25351;&#23450;&#26085;&#26399;&#32467;&#26463;&#26102;&#38388;&#65288;00&#65306;00&#65306;00&#65289;function getTodayEnd(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + (d &lt; 10 ? ('0' + d) : d) + " 23:59:59";    return time;}//&#33719;&#21462;&#25351;&#23450;&#24403;&#26376;&#31532;&#19968;&#22825;&#26085;&#26399;function getMonthStart(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    //var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + 1;    return time;}//&#33719;&#21462;&#25351;&#23450;&#24403;&#22825;&#26085;&#26399;function getMonthEnd(date) {    var y = date.getFullYear();    var m = date.getMonth() + 1;    var d = date.getDate();    var time = y + '-' + (m &lt; 10 ? ('0' + m) : m) + '-' + (d &lt; 10 ? ('0' + d) : d);    return time;}//&#33719;&#21462;&#26376;&#20221;&#26368;&#21518;&#19968;&#22825;function getCurrentMonthLast(date) {    var currentMonth = date.getMonth();    var nextMonth = ++currentMonth;    var nextMonthFirstDay = new Date(date.getFullYear(), nextMonth, 1);    var oneDay = 1000 * 60 * 60 * 24;    return new Date(nextMonthFirstDay - oneDay);}1.0.6 计算日期差function getDateDiff(date1, date2) {    var times = date2 - date1;    var days = Math.floor(times / (1000 * 60 * 60 * 24));    times = times - days * 1000 * 60 * 60 * 24;    var hours = Math.floor(times / (1000 * 60 * 60));    times = times - hours * 1000 * 60 * 60;    var minus = Math.floor(times / 60000);    times = times - minus * 60000;    var secs = Math.floor(times / 6000);    var ret = "";    if (days &gt; 0) {        ret = days + "&#22825;" + hours + "&#26102;" + minus + "&#20998;" + secs + "&#31186;";    }    else {        if (hours &gt; 0) ret = hours + "&#26102;";        ret = ret + minus + "&#20998;" + secs + "&#31186;";    }    return ret;}1.0.7 倒计时&lt;strong&gt;剩余时间：&lt;/strong&gt;&lt;span id="timer"&gt;&lt;/span&gt;//&#20498;&#35745;&#26102; startvar time_end,time_now_server,time_now_client,time_end,time_server_client,timerID;//&#25130;&#27490;&#26102;&#38388;time_end = new Date('{$appraisal_points.stop_time|date="Y-m-d H:i:s",###}');time_end=time_end.getTime();//&#24403;&#21069;&#26102;&#38388;time_now_server=new Date();time_now_server=time_now_server.getTime();time_now_client=new Date();time_now_client=time_now_client.getTime();time_server_client=time_now_server-time_now_client;setTimeout("show_time()",1000);//&#26174;&#31034;&#26102;&#38388;&#20989;&#25968;function show_time(){    Var timer = document.getElementById("timer");    if(!timer){        return ;    }    timer.innerHTML =time_server_client;    var time_now,time_distance,str_time;    var int_day,int_hour,int_minute,int_second;    var time_now=new Date();    time_now=time_now.getTime()+time_server_client;    time_distance=time_end-time_now;    if(time_distance&gt;0)    {        int_day=Math.floor(time_distance/86400000);        time_distance-=int_day*86400000;        int_hour=Math.floor(time_distance/3600000);        time_distance-=int_hour*3600000;        int_minute=Math.floor(time_distance/60000);        time_distance-=int_minute*60000;        int_second=Math.floor(time_distance/1000);        if(int_hour&lt;10){            int_hour="0"+int_hour;        }        if(int_minute&lt;10){            int_minute="0"+int_minute;        }        if(int_second&lt;10){            int_second="0"+int_second;        }        if (int_day&gt;0) {            str_time="&lt;b style='color:#46be8a;'&gt;"+int_day+"&lt;/b style='color:#46be8a;'&gt;&#22825;&lt;b style='color:#46be8a;'&gt;"+int_hour+"&lt;/b style='color:#46be8a;'&gt;&#23567;&#26102;&lt;b style='color:#46be8a;'&gt;"+int_minute+"&lt;/b style='color:#46be8a;'&gt;&#20998;&#38047;&lt;b style='color:#46be8a;'&gt;"+int_second+"&lt;/b style='color:#46be8a;'&gt;&#31186;";        }else if(int_day == 0 &amp;&amp; int_hour&gt;=12){            str_time="&lt;b style='color:#f5a751;'&gt;"+int_day+"&lt;/b style='color:#f5a751;'&gt;&#22825;&lt;b style='color:#f5a751;'&gt;"+int_hour+"&lt;/b style='color:#f5a751;'&gt;&#23567;&#26102;&lt;b style='color:#f5a751;'&gt;"+int_minute+"&lt;/b style='color:#f5a751;'&gt;&#20998;&#38047;&lt;b style='color:#f5a751;'&gt;"+int_second+"&lt;/b style='color:#f5a751;'&gt;&#31186;";        }else if(int_day == 0 &amp;&amp; int_hour&lt;=5){            str_time="&lt;b style='color:#fc6167;'&gt;"+int_day+"&lt;/b style='color:#fc6167;'&gt;&#22825;&lt;b style='color:#fc6167;'&gt;"+int_hour+"&lt;/b style='color:#fc6167;'&gt;&#23567;&#26102;&lt;b style='color:#fc6167;'&gt;"+int_minute+"&lt;/b style='color:#fc6167;'&gt;&#20998;&#38047;&lt;b style='color:#fc6167;'&gt;"+int_second+"&lt;/b style='color:#fc6167;'&gt;&#31186;";        }        timer.innerHTML=str_time;        setTimeout("show_time()",1000);    }    else    {        timer.innerHTML =timer.innerHTML;        clearTimeout(timerID);        // window.location.href="http://www.baidu.com";    }}//&#20498;&#35745;&#26102; end1.0.8 指定睡眠时间/** * js&#25351;&#23450;&#30561;&#30496;&#26102;&#38271; * @param  {[type]} numberMillis [description] * @return {[type]}              [description] */function sleep(numberMillis) {    var now = new Date();    var exitTime = now.getTime() + numberMillis;    while (true) {        now = new Date();        if (now.getTime() &gt; exitTime)            return;    }}2 String2.0.1 生成随机验证码function CreateCode() {    var code = '';    var codeLength = 6;//&#39564;&#35777;&#30721;&#30340;&#38271;&#24230;    var selectChar = new Array('1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');    for (var i = 0; i &lt; codeLength; i++) {        var charIndex = Math.floor(Math.random() * 32);        code += selectChar[charIndex];    }    return code;}2.0.2 截取字符串包含中文处理//(&#20018;,&#38271;&#24230;,&#22686;&#21152;...) function subString(str, len, hasDot) {    var newLength = 0;    var newStr = "";    var chineseRegex = /[^\x00-\xff]/g;    var singleChar = "";    var strLength = str.replace(chineseRegex, "**").length;    for (var i = 0; i &lt; strLength; i++) {        singleChar = str.charAt(i).toString();        if (singleChar.match(chineseRegex) != null) {            newLength += 2;        }        else {            newLength++;        }        if (newLength &gt; len) {            break;        }        newStr += singleChar;    }    if (hasDot &amp;&amp; strLength &gt; len) {        newStr += "...";    }    return newStr;}2.0.3 获取 url 参数function GetRequest() {    var url = location.search; //&#33719;&#21462;url&#20013;"?"&#31526;&#21518;&#30340;&#23383;&#20018;    var theRequest = new Object();    if (url.indexOf("?") != -1) {        var str = url.substr(1);        strs = str.split("&amp;");        for (var i = 0; i &lt; strs.length; i++) {            theRequest[strs[i].split("=")[0]] = unescape(strs[i].split("=")[1]);        }    }    return theRequest;}2.0.4 数字显示千分位// &#25968;&#23383;&#36716;&#25442;&#20026;&#21315;&#20998;&#20301;&#26174;&#31034;function numberToThousands(number){    var reg = /\d{1,3}(?=(\d{3})+$)/g;    return number.toString().replace(reg, function(str){        return str + ',';    });}// &#21315;&#20998;&#20301;&#36716;&#25442;&#20026;&#25968;&#23383;function thousandsToNumber(numberThousand){    return parseInt(numberThousand.toString().split(',').join(''));}2.1 常用内置函数concat(str1,str2)&#65292;&#23383;&#31526;&#20018;&#25340;&#25509;left(str, length)&#65292;right(str, length)&#65292;substring(str, pos, length[optional])&#65292;pos&#65306;&#20174;&#31532;&#20960;&#20301;&#24320;&#22987;&#25130;&#21462;mid()&#65292;substr()&#65292;substring_index(str, delim, count)&#65292;delim&#65306;&#20851;&#38190;&#23383;&#65292;count&#65306;&#20851;&#38190;&#23383;&#20986;&#29616;&#30340;&#27425;&#25968;3 Math/Number3.0.1 默认返回 0 ~ 1 之间的随机数// &#21462;&#24471;&#20171;&#20110; 1 &#21040; 10 &#20043;&#38388;&#30340;&#19968;&#20010;&#38543;&#26426;&#25968;&#65306;Math.floor((Math.random()*10)+1);// &#36820;&#22238; min&#65288;&#21253;&#21547;&#65289;&#65374; max&#65288;&#21253;&#21547;&#65289;&#20043;&#38388;&#30340;&#25968;&#23383;&#65306;function getRndInteger(min, max) {    return Math.floor(Math.random() * (max - min + 1) ) + min;}3.0.2 直接取整(不考虑小数点后的部分)// &#26041;&#24335;&#19968;: parseInt()var n = parseInt("3.14"); //3var n = parseInt("-3.14"); //-3var n = parseInt("2019hello"); //2019var n = parseInt(""); //NaNvar n = parseInt("0xA"); //10(&#21313;&#20845;&#36827;&#21046;)var n = parseInt("070"); //56(&#20843;&#36827;&#21046;)// &#26041;&#24335;&#20108;: &#20301;&#36816;&#31639;var n = ~~3.14 //3var n = 3.14^0 //3var n = 3.14&lt;&lt;0 //33.0.3 计算后取整(四舍五入,向上取整,向下取整)// &#22235;&#33293;&#20116;&#20837;var n = Math.round(3.14); //3var n = Math.ceil(8.54); //9// &#21521;&#19978;&#21462;&#25972;var n = Math.ceil(3.14); //4// &#21521;&#19979;&#21462;&#25972;var n = Math.ceil(3.14); //34 Array4.0.1 判断某元素是否存在数组中var arr = ['a,','b','c','d','e'];if(arr.indexOf('a') &gt;= 0) // indexOf &#22914;&#26524;&#20803;&#32032;&#23384;&#22312;&#20110;&#25968;&#32452;&#20013;&#65292;&#20250;&#36820;&#22238;&#25968;&#32452;&#19979;&#26631;&#65292;&#21542;&#21017;&#36820;&#22238; -1if($.inArray('a',arr) &gt;=0) // &#20351;&#29992; jQuery &#30340; inArray &#26041;&#27861;&#65292;&#19982; indexOf &#19968;&#26679;&#65292;&#22914;&#26524;&#20803;&#32032;&#23384;&#22312;&#20110;&#25968;&#32452;&#20013;&#65292;&#20250;&#36820;&#22238;&#25968;&#32452;&#19979;&#26631;&#65292;&#21542;&#21017;&#36820;&#22238; -15 Object5.0.1 对象(Object) ⇋ 字符串(String)// Object to Stringvar str=JSON.stringify(obj);// JSON String to Objectvar obj = JSON.parse(str);5.0.2 判断对象/数组中key是否存在if(obj.hasOwnProperty(key)){...}5.0.3 数组对象遍历操作使用 Object.keys(obj) 遍历var obj = {'0':'a','1':'b','2':'c'};Object.keys(obj).forEach(function(key){console.log(key,obj[key]);});// &#27880;&#24847;&#65306; forEach&#19981;&#25903;&#25345;&#20197;&#19979;2&#31181;&#26041;&#24335;&#36339;&#20986;&#24490;&#29615;&#65292;// 1) break; &#25191;&#34892;&#25253;&#38169;: Uncaught SyntaxError: Illegal break statement// 2) return false; &#21482;&#33021;&#36339;&#20986;&#24403;&#21069;&#36941;&#21382;&#25191;&#34892;// &#36820;&#22238;&#25351;&#23450;&#26684;&#24335;&#25968;&#32452;var obj = {"1":5,"2":7,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0};var result = Object.keys(obj).map(function(key) {return [Number(key), obj[key]];});console.log(result);// [[1,5],[2,7],[3,0],[4,0]&#8230;].// &#32570;&#22833;&#38656;&#35201;&#36339;&#20986;&#24490;&#29615;&#65292;&#20351;&#29992; try&#8230;catch&#8230;var obj = {'0':'a','1':'b','2':'c'};try {Object.keys(obj).forEach(function(key){if(key == 'a'){console.log(key,obj[key]);throw new Error('exist');}});} catch (ex) {if(ex.message=='exist') throw ex} finally { console.log('done');}for-invar obj = {'0':'a','1':'b','2':'c'};for(var i in obj) {    console.log(i,":",obj[i]);}for-of// &#25903;&#25345;&#25968;&#32452;&#36941;&#21382;&#12289;&#22823;&#22810;&#25968;&#31867;&#25968;&#32452;&#23545;&#35937;&#12289;&#23383;&#31526;&#20018;&#65288;&#35270;&#20026;&#19968;&#31995;&#21015;&#30340;Unicode&#23383;&#31526;&#26469;&#36827;&#34892;&#36941;&#21382;&#65289;var arr=["&#24352;&#19977;","&#26446;&#22235;","&#29579;&#20116;","&#36213;&#20845;"];for (var value of arr){    console.log(value);}使用Object.getOwnPropertyNames(obj) 遍历var obj = {'0':'a','1':'b','2':'c'};Object.getOwnPropertyNames(obj).forEach(function(key){    console.log(key,obj[key]);});使用Reflect.ownKeys(obj) 遍历var obj = {'0':'a','1':'b','2':'c'};Reflect.ownKeys(obj).forEach(function(key){    console.log(key,obj[key]);});6 校验6.1 检查对象是否为空对象/*  * &#26816;&#27979;&#23545;&#35937;&#26159;&#21542;&#26159;&#31354;&#23545;&#35937;(&#19981;&#21253;&#21547;&#20219;&#20309;&#21487;&#35835;&#23646;&#24615;)&#12290; //&#22914;&#20320;&#19978;&#38754;&#30340;&#37027;&#20010;&#23545;&#35937;&#23601;&#26159;&#19981;&#21547;&#20219;&#20309;&#21487;&#35835;&#23646;&#24615; * &#26041;&#27861;&#21482;&#26082;&#26816;&#27979;&#23545;&#35937;&#26412;&#36523;&#30340;&#23646;&#24615;&#65292;&#19981;&#26816;&#27979;&#20174;&#21407;&#22411;&#32487;&#25215;&#30340;&#23646;&#24615;&#12290;  */function isOwnEmpty(obj) {    for (var name in obj) {        if (obj.hasOwnProperty(name)) {            return false;        }    }    return true;}/*  * &#26816;&#27979;&#23545;&#35937;&#26159;&#21542;&#26159;&#31354;&#23545;&#35937;(&#19981;&#21253;&#21547;&#20219;&#20309;&#21487;&#35835;&#23646;&#24615;)&#12290;  * &#26041;&#27861;&#26082;&#26816;&#27979;&#23545;&#35937;&#26412;&#36523;&#30340;&#23646;&#24615;&#65292;&#20063;&#26816;&#27979;&#20174;&#21407;&#22411;&#32487;&#25215;&#30340;&#23646;&#24615;(&#22240;&#27492;&#27809;&#26377;&#20351;hasOwnProperty)&#12290;  */function isEmpty(obj) {    for (var name in obj) {        return false;    }    return true;}6.2 身份证号校验//检验身份证号码function checkIdcard(idcard) {    var Msgs = new Array(        "&#39564;&#35777;&#36890;&#36807;",        "&#26657;&#39564;&#36523;&#20221;&#35777;&#21495;&#30721;&#20301;&#25968;&#19981;&#23545;&#65292;&#35831;&#27491;&#30830;&#36755;&#20837;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#26657;&#39564;&#20986;&#29983;&#26085;&#26399;&#26080;&#25928;&#65292;&#35831;&#27491;&#30830;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#26816;&#39564;&#36523;&#20221;&#35777;&#21495;&#30721;&#38169;&#35823;&#65292;&#35831;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#26657;&#39564;&#36523;&#20221;&#35777;&#30465;&#20221;&#38169;&#35823;&#65292;&#35831;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;",        "&#36523;&#20221;&#35777;&#21495;&#30721;&#19981;&#20801;&#35768;&#20026;&#31354;&#65292;&#35831;&#36755;&#20837;&#30495;&#23454;&#30340;&#36523;&#20221;&#35777;&#21495;&#30721;&#12290;"    );    idcard = idcard.toUpperCase();    var area = { 11: "&#21271;&#20140;", 12: "&#22825;&#27941;", 13: "&#27827;&#21271;", 14: "&#23665;&#35199;", 15: "&#20869;&#33945;&#21476;", 21: "&#36797;&#23425;", 22: "&#21513;&#26519;", 23: "&#40657;&#40857;&#27743;", 31: "&#19978;&#28023;", 32: "&#27743;&#33487;", 33: "&#27993;&#27743;", 34: "&#23433;&#24509;", 35: "&#31119;&#24314;", 36: "&#27743;&#35199;", 37: "&#23665;&#19996;", 41: "&#27827;&#21335;", 42: "&#28246;&#21271;", 43: "&#28246;&#21335;", 44: "&#24191;&#19996;", 45: "&#24191;&#35199;", 46: "&#28023;&#21335;", 50: "&#37325;&#24198;", 51: "&#22235;&#24029;", 52: "&#36149;&#24030;", 53: "&#20113;&#21335;", 54: "&#35199;&#34255;", 61: "&#38485;&#35199;", 62: "&#29976;&#32899;", 63: "&#38738;&#28023;", 64: "&#23425;&#22799;", 65: "&#26032;&#30086;", 71: "&#21488;&#28286;", 81: "&#39321;&#28207;", 82: "&#28595;&#38376;", 91: "&#22269;&#22806;" }    var idcard, Y, JYM;    var S, M;    var idcard_array = new Array();    idcard_array = idcard.split("");    //&#39564;&#35777;&#26159;&#21542;&#20026;&#31354;    if (idcard.length &lt;= 0) {        return Msgs[5];    }    //&#39564;&#35777;&#21495;&#30721;&#20301;&#25968;    if (idcard.length != 15 &amp;&amp; idcard.length != 18) {        return Msgs[1];    }    //&#22320;&#21306;&#26816;&#39564;    if (area[parseInt(idcard.substr(0, 2))] == null) {        return Msgs[4];    }    //&#36523;&#20221;&#21495;&#30721;&#20301;&#25968;&#21450;&#26684;&#24335;&#26816;&#39564;    switch (idcard.length) {    case 15:        if ((parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0 || ((parseInt(idcard.substr(6, 2)) + 1900) % 100 == 0 &amp;&amp; (parseInt(idcard.substr(6, 2)) + 1900) % 4 == 0)) {            ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;//&#27979;&#35797;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;        } else {            ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/;//&#27979;&#35797;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;        }        if (ereg.test(idcard))            return Msgs[0];        else {            return Msgs[3];        }        break;    case 18:        //18&#20301;&#36523;&#20221;&#21495;&#30721;&#26816;&#27979;        //&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;&#26816;&#26597;         //&#38384;&#24180;&#26376;&#26085;:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))        //&#24179;&#24180;&#26376;&#26085;:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))        if (parseInt(idcard.substr(6, 4)) % 4 == 0 || (parseInt(idcard.substr(6, 4)) % 100 == 0 &amp;&amp; parseInt(idcard.substr(6, 4)) % 4 == 0)) {            ereg = /^[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;//&#38384;&#24180;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;&#27491;&#21017;&#34920;&#36798;&#24335;        } else {            ereg = /^[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/;//&#24179;&#24180;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;&#27491;&#21017;&#34920;&#36798;&#24335;        }        if (ereg.test(idcard)) {//&#27979;&#35797;&#20986;&#29983;&#26085;&#26399;&#30340;&#21512;&#27861;&#24615;            //&#35745;&#31639;&#26657;&#39564;&#20301;            S = (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7                + (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9                + (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10                + (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5                + (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8                + (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4                + (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2                + parseInt(idcard_array[7]) * 1                + parseInt(idcard_array[8]) * 6                + parseInt(idcard_array[9]) * 3;            Y = S % 11;            M = "F";            JYM = "10X98765432";            M = JYM.substr(Y, 1);//&#21028;&#26029;&#26657;&#39564;&#20301;            if (M == idcard_array[17])                return Msgs[0];            else {                return Msgs[3];            }        }        else {            return Msgs[2];        }        break;    default:        return Msgs[1];        break;    }}//身份证号码验证算法//--&#26681;&#25454;17&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#33719;&#21462;&#26368;&#21518;&#19968;&#20301;&#26657;&#39564;&#30721;&#31243;&#24207;public class Id18 {    int[] weight={7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2};    //&#21313;&#19971;&#20301;&#25968;&#23383;&#26412;&#20307;&#30721;&#26435;&#37325;    char[] validate={ '1','0','X','9','8','7','6','5','4','3','2'};    //mod11,&#23545;&#24212;&#26657;&#39564;&#30721;&#23383;&#31526;&#20540;        public char getValidateCode(String id17){        int sum = 0;        int mode = 0;        for(int i = 0; i &lt; id17.length(); i++){            sum=sum+Integer.parseInt(String.valueOf(id17.charAt(i)))*weight[i];        }        mode = sum % 11;        return validate[mode];    }    public static void main(String[] args){        Id18 tes t= new Id18();        System.out.println("&#35813;&#36523;&#20221;&#35777;&#39564;&#35777;&#30721;&#65306;"+test.getValidateCode("14230219700101101"));    //&#35813;&#36523;&#20221;&#35777;&#26657;&#39564;&#30721;&#65306;3    }}公民身份号码是特征组合码，由十七位数字本体码和一位校验码组成。排列顺序从左至右依次为：六位数字地址码，八位数字出生日期码，三位数字顺序码和一位校验码。地址码表示编码对象常住户口所在县(市、旗、区)的行政区域划分代码，按GB/T2260的规定执行。出生日期码表示编码对象出生的年、月、日，按GB/T7408的规定执行，年、月、日代码之间不用分隔符。顺序码表示在同一地址码所标识的区域范围内，对同年、同月、同日出生的人编定的顺序号，顺序码的奇数分配给男性，偶数分配给女性。校验码计算步骤(1)十七位数字本体码加权求和公式S = Sum(Ai * Wi), i = 0, … , 16 ，先对前 17 位数字的权求和Ai：表示第i位置上的身份证号码数字值(0~9)Wi：7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2 （表示第 i 位置上的加权因子）(2)计算模Y = mod(S, 11)(3)根据模，查找得到对应的校验码Y: 0 1 2 3 4 5 6 7 8 9 10校验码: 1 0 X 9 8 7 6 5 4 3 2说明：程序可以根据已有的17位数字本体码，获取对应的验证码。该程序可以剔除验证码不正确的身份证号码。15位的身份证出生年份采用年份后2位，没有最后1位校验码。完整的身份证18位，最后一位校验位可能是非数字。我们的一个项目，数据库保存前17位数字，这样对应一些SQL语句（比如inner join）有加速作用的！！！6.3 电话号码校验6.4 Email校验6.5 IP地址校验6.6 其他校验6.6.1 检查QQ号码function checkqq()  //&#26816;&#26597;QQ&#21495;&#30721;                                                                                                                      {                                                                                                                                                         var qq=document.getElementById("qq").value;                                                                                                       var divqq=document.getElementById("qq");                                                                                                          if(qq!="")                                                                                                                                        {                                                                                                                                                     if(qq.match(/\D/)!=null)                                                                                                                      {                                                                                                                                                 divqq.innerHTML="&lt;font color='red'&gt;QQ&#21495;&#30721;&#21482;&#33021;&#36755;&#20837;&#25968;&#23383;&#65281;&lt;/font&gt;";                                                                          return false;                                                                                                                         }                                                                                                                                             else                                                                                                                                          {                                                                                                                                                divqq.innerHTML="&lt;font color='red'&gt;&#8730;&lt;/font&gt;";                                                                                            return true;                                                                                                                          }                                                                                                                                         }                                                                                                                                                 else                                                                                                                                              {                                                                                                                                                    divqq.innerHTML="&lt;font color='green'&gt;&#8730;&lt;/font&gt;";                                                                                              return true;                                                                                                                              }                                                                                                                                             }                                                                                                                                                     7 其他7.1 滚动到页面顶部function goTopEx() {    var obj = document.getElementById("goTopBtn");    function getScrollTop() {        return document.documentElement.scrollTop;    }    function setScrollTop(value) {        document.documentElement.scrollTop = value;    }    window.onscroll = function () { getScrollTop() &gt; 0 ? obj.style.display = "" : obj.style.display = "none"; }    obj.onclick = function () {        var goTop = setInterval(scrollMove, 10);        function scrollMove() {            setScrollTop(getScrollTop() / 1.1);            if (getScrollTop() &lt; 1) clearInterval(goTop);        }    }}8 页面操作8.1 根据网页实际大小来设置iframe显示区域大小$('#iframe_i').load(function () {    // &#8220;ref_page&#8221;&#20026;&#24341;&#29992;&#39029;&#38754;DIV&#30340;ID&#65292;&#33719;&#21462;DIV&#30340;&#22806;&#37096;&#23485;&#24230;&#12289;&#22806;&#37096;&#39640;&#24230;&#12290;    var width = $(this).contents().find('#ref_page').outerWidth();    var height = $(this).contents().find('#ref_page').outerHeight();    // &#35774;&#32622;iframe&#30340;&#23485;&#24230;&#12289;&#39640;&#24230;&#12290;    $(this).width(width);    $(this).height(height);)};8.2 动态显示收缩列表$(document).ready(function(){    //&#24403;&#28857;&#20987;&#26576;&#19968;&#21015;&#34920;&#39033;&#26102;&#65292;&#28369;&#20986;&#19979;&#32423;&#33756;&#21333;&#24182;&#25910;&#36215;&#20854;&#20182;&#21015;&#34920;&#39033;    $("#user_manage").click(function(){        // $("#user_about").fadeToggle();        $("#user_manage").addClass("active");        $("#node_manage").removeClass("active");        $("#role_manage").removeClass("active");        $("#setting").removeClass("active");        $("#user_about").slideToggle();        $("#node_about").slideUp();        $("#role_about").slideUp();        /*$("#div2").fadeToggle("slow");          $("#div3").fadeToggle(3000);*/    });});https://jqueryui.com/accordion/9 注意事项9.0.1 JavaScript没有块级作用域在其他类C的语言中，由 {} 封闭的代码块都有自己的作用域（如果用ECMAScript的话来讲，就是它们自己的执行环境）。if(true){    var color="blue";}alert(color); //"blue"内容源于：《JavaScript高级程序设计》第3版 [美] Nicholas C.Zakas，p76.]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> JavaScript </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 导入导出]]></title>
      <url>/php/2015/08/20/php-import-export/</url>
      <content type="text"><![CDATA[数据导入导出导入待更新一般导出核心代码header("Content-Type: application/vnd.ms-excel; charset=UTF-8"); header("Pragma: public"); header("Expires: 0"); header("Cache-Control: must-revalidate, post-check=0, pre-check=0"); header("Content-Type: application/force-download"); header("Content-Type: application/octet-stream"); header("Content-Type: application/download"); header("Content-Disposition: attachment;filename=".$title .".xls "); header("Content-Transfer-Encoding: binary ");使用 PHPExcel下载https://github.com/PHPOffice/PHPExcel开始// &#23548;&#20837;PHPExcel.php&#25110;&#32773;&#20854;&#20182;&#25991;&#20214;require_once 'PHPExcel.php';// &#21019;&#24314;&#19968;&#20010;&#22788;&#29702;&#23545;&#35937;&#23454;&#20363; $objExcel = new PHPExcel();// &#33719;&#21462;&#23646;&#24615;$objProps = $objExcel-&gt;getProperties ();//&#35774;&#32622;&#21019;&#24314;&#32773;$objProps-&gt;setCreator ( 'XuLulu');//&#35774;&#32622;&#26368;&#21518;&#20462;&#25913;&#32773;$objProps-&gt;setLastModifiedBy("XuLulu");//&#25551;&#36848;$objProps-&gt;setDescription("&#25705;&#27604;&#29677;&#32423;");//&#35774;&#32622;&#26631;&#39064;$objProps-&gt;setTitle ( '&#31649;&#29702;&#22120;' );//&#35774;&#32622;&#39064;&#30446;$objProps-&gt;setSubject("OfficeXLS Test Document, Demo");//&#35774;&#32622;&#20851;&#38190;&#23383;$objProps-&gt;setKeywords ( '&#31649;&#29702;&#22120;' );//&#35774;&#32622;&#20998;&#31867;$objProps-&gt;setCategory ( "Test");//&#24037;&#20316;&#34920;&#35774;&#32622;$objExcel-&gt;setActiveSheetIndex( 0 );$objActSheet = $objExcel-&gt;getActiveSheet ();//&#21333;&#20803;&#26684;&#36171;&#20540;   &#20363;&#65306;$objActSheet-&gt;setCellValue ( 'A1', 'ID');$objActSheet-&gt;setCellValue ( 'B1', 'HashCode');$objActSheet-&gt;setCellValue ( 'C1', 'ModelName');$objActSheet-&gt;setCellValue ( 'D1', 'IndexName');$objActSheet-&gt;setCellValue('A1', '&#23383;&#31526;&#20018;&#20869;&#23481;');  // &#23383;&#31526;&#20018;&#20869;&#23481;  $objActSheet-&gt;setCellValue('A2', 26);            // &#25968;&#20540;  $objActSheet-&gt;setCellValue('A3', true);          // &#24067;&#23572;&#20540;$objActSheet-&gt;setCellValue('A4', '=SUM(A2:A2)'); // &#20844;&#24335;//&#33258;&#21160;&#35774;&#32622;&#21333;&#20803;&#26684;&#23485;&#24230;   &#20363;&#65306;$objActSheet-&gt;getColumnDimension('A')-&gt;setAutoSize(true);//&#25163;&#21160;&#35774;&#32622;&#21333;&#20803;&#26684;&#30340;&#23485;&#24230;   &#20363;&#65306;//$objActSheet-&gt;getColumnDimension('A')-&gt;setWidth(10);//&#23548;&#20986;&#30340;&#25991;&#20214;&#21517;$outputFileName = iconv ( 'UTF-8', 'gb2312', 'XuLulu_'. time() . '.xlsx' );//&#30452;&#25509;&#23548;&#20986;&#25991;&#20214;$objWriter-&gt;save ( $outputFileName );//&#25991;&#20214;&#30452;&#25509;&#36755;&#20986;&#21040;&#27983;&#35272;&#22120;header ( 'Pragma:public');header ( 'Expires:0');header ( 'Cache-Control:must-revalidate,post-check=0,pre-check=0');header ( 'Content-Type:application/force-download');header ( 'Content-Type:application/vnd.ms-excel');header ( 'Content-Type:application/octet-stream');header ( 'Content-Type:application/download');header ( 'Content-Disposition:attachment;filename='. $outputFileName );header ( 'Content-Transfer-Encoding:binary');$objWriter-&gt;save ( 'php://output');&#20854;&#20182;&#35774;&#32622;&#65306;//&#26174;&#24335;&#25351;&#23450;&#20869;&#23481;&#31867;&#22411;  $objActSheet-&gt;setCellValueExplicit('A5','847475847857487584',PHPExcel_Cell_DataType::TYPE_STRING);  //&#21512;&#24182;&#21333;&#20803;&#26684;  $objActSheet-&gt;mergeCells('B1:C22');  //&#20998;&#31163;&#21333;&#20803;&#26684;  $objActSheet-&gt;unmergeCells('B1:C22');//&#24471;&#21040;&#21333;&#20803;&#26684;&#30340;&#26679;&#24335;$objStyleA5 = $objActSheet-&gt;getStyle('A5');//&#35774;&#32622;&#23383;&#20307;  $objFontA5 = $objStyleA5-&gt;getFont();  $objFontA5-&gt;setName('Courier New');  $objFontA5-&gt;setSize(10);  $objFontA5-&gt;setBold(true);  $objFontA5-&gt;setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE);  $objFontA5-&gt;getColor()-&gt;setARGB('FF999999');  //&#35774;&#32622;&#23545;&#40784;&#26041;&#24335;$objAlignA5 = $objStyleA5-&gt;getAlignment();  $objAlignA5-&gt;setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);  $objAlignA5-&gt;setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);//&#35774;&#32622;&#36793;&#26694;  $objBorderA5 = $objStyleA5-&gt;getBorders();  $objBorderA5-&gt;getTop()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getTop()-&gt;getColor()-&gt;setARGB('FFFF0000');// color  $objBorderA5-&gt;getBottom()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getLeft()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getRight()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  //&#35774;&#32622;&#22635;&#20805;&#39068;&#33394;  $objFillA5 = $objStyleA5-&gt;getFill();  $objFillA5-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID);  $objFillA5-&gt;getStartColor()-&gt;setARGB('FFEEEEEE');  //&#20174;&#25351;&#23450;&#30340;&#21333;&#20803;&#26684;&#22797;&#21046;&#26679;&#24335;&#20449;&#24687;.  $objActSheet-&gt;duplicateStyle($objStyleA5,'B1:C22');  //*************************************  //&#28155;&#21152;&#22270;&#29255;  $objDrawing = new PHPExcel_Worksheet_Drawing();  $objDrawing-&gt;setName('ZealImg');  $objDrawing-&gt;setDescription('Image inserted byZeal');  $objDrawing-&gt;setPath('./zeali.net.logo.gif');  $objDrawing-&gt;setHeight(36);  $objDrawing-&gt;setCoordinates('C23');  $objDrawing-&gt;setOffsetX(10);  $objDrawing-&gt;setRotation(15);  $objDrawing-&gt;getShadow()-&gt;setVisible(true);  $objDrawing-&gt;getShadow()-&gt;setDirection(36);  $objDrawing-&gt;setWorksheet($objActSheet);  //&#28155;&#21152;&#19968;&#20010;&#26032;&#30340;worksheet  $objExcel-&gt;createSheet();  $objExcel-&gt;getSheet(1)-&gt;setTitle('&#27979;&#35797;2');  //&#20445;&#25252;&#21333;&#20803;&#26684;  $objExcel-&gt;getSheet(1)-&gt;getProtection()-&gt;setSheet(true);  $objExcel-&gt;getSheet(1)-&gt;protectCells('A1:C22','PHPExcel');一个简单示例conn.php文件&lt;?php$conn = array('host' =&gt;'127.0.0.1' ,'user_name' =&gt; 'root','password' =&gt; '','db_name' =&gt; 'test',"charset"=&gt;"utf8");?&gt;data.php&lt;?phprequire dirname(__FILE__).'\conn.php';class data{public $conn=null;public function __construct($config){ //&#26500;&#36896;&#26041;&#27861;&#65292;&#23454;&#20363;&#21270;&#31867;&#33258;&#21160;&#35843;&#29992;$this-&gt;conn=mysqli_connect($config['host'],$config['user_name'],$config['password'],$config['db_name']) or die(mysql_error());mysqli_query($this-&gt;conn,"set names utf8");// mysqli_query($conn,'set names'.$config['charset']) or die(mysql_error());}/** * &#26681;&#25454;&#20256;&#20837;&#30340;sql&#35821;&#21477; &#26597;&#35810;mysql&#32467;&#26524;&#38598;    * @param  [type] $sql [description]       * @return [type]      [description]          */          public function getResult($sql){          $resource=mysqli_query($this-&gt;conn,$sql) or die(mysql_error());          $res=array();          while (($row=mysqli_fetch_assoc($resource))!=false) {          $res[]=$row;          }          return $res;          }          public function getData($value)          {          $sql="SELECT * FROM user";          $res=self::getResult($sql);          return $res;          }}export.php&lt;?php$dir=dirname(__FILE__);require $dir.'\data.php';require $dir.'\PHPExcel\PHPExcel.php';$db=new data($conn);$objPHPExcel=new PHPExcel();for ($i=1; $i &lt; 3; $i++) {if ($i&gt;1) {$objPHPExcel-&gt;createSheet();}$objPHPExcel-&gt;setActiveSheetIndex($i-1);$objSheet=$objPHPExcel-&gt;getActiveSheet();$data=$db-&gt;getData($i);$objSheet-&gt;setCellValue("A1","&#22995;&#21517;")-&gt;setCellValue('B1','&#24180;&#40836;');$j=2;foreach ($data as $key =&gt; $value) {// $name = iconv('utf-8', 'gb2312', $value['name']);// $age = iconv('utf-8', 'gb2312', $value['age']);// echo $value['name'];$objSheet-&gt;setCellValue('A'.$j,$name)-&gt;setCellValue('B'.$j,$value['age'].'&#23681;');$j++;}}$objWriter=PHPExcel_IOFactory::createWriter($objPHPExcel,'Excel2007');browser_export('Excel7','example.xls');$objWriter-&gt;save('php://output');function browser_export($type,$filename){if ($type='Excel5') {header('Content-Type: application/vnd.ms-excel');  //excel5}else{header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'); //excel7}header('Content-Disposition: attachment;filename="'.$filename.'"');header('Cache-Control: max-age=0');}// $objWriter-&gt;save($dir.'\export_1.xls');?&gt;Referenceshttps://www.the-art-of-web.com/php/dataexport/]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-导入导出 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 导入导出]]></title>
      <url>/php/2015/08/20/php-import-export/</url>
      <content type="text"><![CDATA[数据导入导出导入待更新一般导出核心代码header("Content-Type: application/vnd.ms-excel; charset=UTF-8"); header("Pragma: public"); header("Expires: 0"); header("Cache-Control: must-revalidate, post-check=0, pre-check=0"); header("Content-Type: application/force-download"); header("Content-Type: application/octet-stream"); header("Content-Type: application/download"); header("Content-Disposition: attachment;filename=".$title .".xls "); header("Content-Transfer-Encoding: binary ");使用 PHPExcel下载https://github.com/PHPOffice/PHPExcel开始// &#23548;&#20837;PHPExcel.php&#25110;&#32773;&#20854;&#20182;&#25991;&#20214;require_once 'PHPExcel.php';// &#21019;&#24314;&#19968;&#20010;&#22788;&#29702;&#23545;&#35937;&#23454;&#20363; $objExcel = new PHPExcel();// &#33719;&#21462;&#23646;&#24615;$objProps = $objExcel-&gt;getProperties ();//&#35774;&#32622;&#21019;&#24314;&#32773;$objProps-&gt;setCreator ( 'XuLulu');//&#35774;&#32622;&#26368;&#21518;&#20462;&#25913;&#32773;$objProps-&gt;setLastModifiedBy("XuLulu");//&#25551;&#36848;$objProps-&gt;setDescription("&#25705;&#27604;&#29677;&#32423;");//&#35774;&#32622;&#26631;&#39064;$objProps-&gt;setTitle ( '&#31649;&#29702;&#22120;' );//&#35774;&#32622;&#39064;&#30446;$objProps-&gt;setSubject("OfficeXLS Test Document, Demo");//&#35774;&#32622;&#20851;&#38190;&#23383;$objProps-&gt;setKeywords ( '&#31649;&#29702;&#22120;' );//&#35774;&#32622;&#20998;&#31867;$objProps-&gt;setCategory ( "Test");//&#24037;&#20316;&#34920;&#35774;&#32622;$objExcel-&gt;setActiveSheetIndex( 0 );$objActSheet = $objExcel-&gt;getActiveSheet ();//&#21333;&#20803;&#26684;&#36171;&#20540;   &#20363;&#65306;$objActSheet-&gt;setCellValue ( 'A1', 'ID');$objActSheet-&gt;setCellValue ( 'B1', 'HashCode');$objActSheet-&gt;setCellValue ( 'C1', 'ModelName');$objActSheet-&gt;setCellValue ( 'D1', 'IndexName');$objActSheet-&gt;setCellValue('A1', '&#23383;&#31526;&#20018;&#20869;&#23481;');  // &#23383;&#31526;&#20018;&#20869;&#23481;  $objActSheet-&gt;setCellValue('A2', 26);            // &#25968;&#20540;  $objActSheet-&gt;setCellValue('A3', true);          // &#24067;&#23572;&#20540;$objActSheet-&gt;setCellValue('A4', '=SUM(A2:A2)'); // &#20844;&#24335;//&#33258;&#21160;&#35774;&#32622;&#21333;&#20803;&#26684;&#23485;&#24230;   &#20363;&#65306;$objActSheet-&gt;getColumnDimension('A')-&gt;setAutoSize(true);//&#25163;&#21160;&#35774;&#32622;&#21333;&#20803;&#26684;&#30340;&#23485;&#24230;   &#20363;&#65306;//$objActSheet-&gt;getColumnDimension('A')-&gt;setWidth(10);//&#23548;&#20986;&#30340;&#25991;&#20214;&#21517;$outputFileName = iconv ( 'UTF-8', 'gb2312', 'XuLulu_'. time() . '.xlsx' );//&#30452;&#25509;&#23548;&#20986;&#25991;&#20214;$objWriter-&gt;save ( $outputFileName );//&#25991;&#20214;&#30452;&#25509;&#36755;&#20986;&#21040;&#27983;&#35272;&#22120;header ( 'Pragma:public');header ( 'Expires:0');header ( 'Cache-Control:must-revalidate,post-check=0,pre-check=0');header ( 'Content-Type:application/force-download');header ( 'Content-Type:application/vnd.ms-excel');header ( 'Content-Type:application/octet-stream');header ( 'Content-Type:application/download');header ( 'Content-Disposition:attachment;filename='. $outputFileName );header ( 'Content-Transfer-Encoding:binary');$objWriter-&gt;save ( 'php://output');&#20854;&#20182;&#35774;&#32622;&#65306;//&#26174;&#24335;&#25351;&#23450;&#20869;&#23481;&#31867;&#22411;  $objActSheet-&gt;setCellValueExplicit('A5','847475847857487584',PHPExcel_Cell_DataType::TYPE_STRING);  //&#21512;&#24182;&#21333;&#20803;&#26684;  $objActSheet-&gt;mergeCells('B1:C22');  //&#20998;&#31163;&#21333;&#20803;&#26684;  $objActSheet-&gt;unmergeCells('B1:C22');//&#24471;&#21040;&#21333;&#20803;&#26684;&#30340;&#26679;&#24335;$objStyleA5 = $objActSheet-&gt;getStyle('A5');//&#35774;&#32622;&#23383;&#20307;  $objFontA5 = $objStyleA5-&gt;getFont();  $objFontA5-&gt;setName('Courier New');  $objFontA5-&gt;setSize(10);  $objFontA5-&gt;setBold(true);  $objFontA5-&gt;setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE);  $objFontA5-&gt;getColor()-&gt;setARGB('FF999999');  //&#35774;&#32622;&#23545;&#40784;&#26041;&#24335;$objAlignA5 = $objStyleA5-&gt;getAlignment();  $objAlignA5-&gt;setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);  $objAlignA5-&gt;setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);//&#35774;&#32622;&#36793;&#26694;  $objBorderA5 = $objStyleA5-&gt;getBorders();  $objBorderA5-&gt;getTop()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getTop()-&gt;getColor()-&gt;setARGB('FFFF0000');// color  $objBorderA5-&gt;getBottom()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getLeft()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  $objBorderA5-&gt;getRight()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);  //&#35774;&#32622;&#22635;&#20805;&#39068;&#33394;  $objFillA5 = $objStyleA5-&gt;getFill();  $objFillA5-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID);  $objFillA5-&gt;getStartColor()-&gt;setARGB('FFEEEEEE');  //&#20174;&#25351;&#23450;&#30340;&#21333;&#20803;&#26684;&#22797;&#21046;&#26679;&#24335;&#20449;&#24687;.  $objActSheet-&gt;duplicateStyle($objStyleA5,'B1:C22');  //*************************************  //&#28155;&#21152;&#22270;&#29255;  $objDrawing = new PHPExcel_Worksheet_Drawing();  $objDrawing-&gt;setName('ZealImg');  $objDrawing-&gt;setDescription('Image inserted byZeal');  $objDrawing-&gt;setPath('./zeali.net.logo.gif');  $objDrawing-&gt;setHeight(36);  $objDrawing-&gt;setCoordinates('C23');  $objDrawing-&gt;setOffsetX(10);  $objDrawing-&gt;setRotation(15);  $objDrawing-&gt;getShadow()-&gt;setVisible(true);  $objDrawing-&gt;getShadow()-&gt;setDirection(36);  $objDrawing-&gt;setWorksheet($objActSheet);  //&#28155;&#21152;&#19968;&#20010;&#26032;&#30340;worksheet  $objExcel-&gt;createSheet();  $objExcel-&gt;getSheet(1)-&gt;setTitle('&#27979;&#35797;2');  //&#20445;&#25252;&#21333;&#20803;&#26684;  $objExcel-&gt;getSheet(1)-&gt;getProtection()-&gt;setSheet(true);  $objExcel-&gt;getSheet(1)-&gt;protectCells('A1:C22','PHPExcel');一个简单示例conn.php文件&lt;?php$conn = array('host' =&gt;'127.0.0.1' ,'user_name' =&gt; 'root','password' =&gt; '','db_name' =&gt; 'test',"charset"=&gt;"utf8");?&gt;data.php&lt;?phprequire dirname(__FILE__).'\conn.php';class data{public $conn=null;public function __construct($config){ //&#26500;&#36896;&#26041;&#27861;&#65292;&#23454;&#20363;&#21270;&#31867;&#33258;&#21160;&#35843;&#29992;$this-&gt;conn=mysqli_connect($config['host'],$config['user_name'],$config['password'],$config['db_name']) or die(mysql_error());mysqli_query($this-&gt;conn,"set names utf8");// mysqli_query($conn,'set names'.$config['charset']) or die(mysql_error());}/** * &#26681;&#25454;&#20256;&#20837;&#30340;sql&#35821;&#21477; &#26597;&#35810;mysql&#32467;&#26524;&#38598;    * @param  [type] $sql [description]       * @return [type]      [description]          */          public function getResult($sql){          $resource=mysqli_query($this-&gt;conn,$sql) or die(mysql_error());          $res=array();          while (($row=mysqli_fetch_assoc($resource))!=false) {          $res[]=$row;          }          return $res;          }          public function getData($value)          {          $sql="SELECT * FROM user";          $res=self::getResult($sql);          return $res;          }}export.php&lt;?php$dir=dirname(__FILE__);require $dir.'\data.php';require $dir.'\PHPExcel\PHPExcel.php';$db=new data($conn);$objPHPExcel=new PHPExcel();for ($i=1; $i &lt; 3; $i++) {if ($i&gt;1) {$objPHPExcel-&gt;createSheet();}$objPHPExcel-&gt;setActiveSheetIndex($i-1);$objSheet=$objPHPExcel-&gt;getActiveSheet();$data=$db-&gt;getData($i);$objSheet-&gt;setCellValue("A1","&#22995;&#21517;")-&gt;setCellValue('B1','&#24180;&#40836;');$j=2;foreach ($data as $key =&gt; $value) {// $name = iconv('utf-8', 'gb2312', $value['name']);// $age = iconv('utf-8', 'gb2312', $value['age']);// echo $value['name'];$objSheet-&gt;setCellValue('A'.$j,$name)-&gt;setCellValue('B'.$j,$value['age'].'&#23681;');$j++;}}$objWriter=PHPExcel_IOFactory::createWriter($objPHPExcel,'Excel2007');browser_export('Excel7','example.xls');$objWriter-&gt;save('php://output');function browser_export($type,$filename){if ($type='Excel5') {header('Content-Type: application/vnd.ms-excel');  //excel5}else{header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'); //excel7}header('Content-Disposition: attachment;filename="'.$filename.'"');header('Cache-Control: max-age=0');}// $objWriter-&gt;save($dir.'\export_1.xls');?&gt;Referenceshttps://www.the-art-of-web.com/php/dataexport/]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-导入导出 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 公共方法]]></title>
      <url>/php/2015/08/15/php-public/</url>
      <content type="text"><![CDATA[If you have any questions abount this article, or if you have found any errors in this article, email me, please. This is my email address: zrg1390556486@gmail.com1 String/Array1.0.1 在字符串指定位置插入字符串function str_insert($str,$i,$subStr){    for($j=0;$j&lt;$i;$j++){    $startStr .=$str[$j];    }    for($j=$i;$j&lt;strlen($str);$j++){    $lastStr .= $str[$j];    }    $newStr = $startStr.$subStr.$lastStr;    return $newStr;}1.0.2 向二位数组中添加键值对方法一:$tempArr=array();foreach($arr as $key =&gt; $value){    $value['new_key'] = $value['old_key1']+$value['old_key2'];    $tempArr[] = $value;}方法二:foreach($arr as $key =&gt; $value){    $arr[$key]['new_key'] = $value['old_key1']+$value['old_key2'];}1.0.3 判断二维数组是否为空function array_is_null($arr = null){    if(is_array($arr)){        foreach($arr as $k=&gt;$v){            if($v&amp;&amp;!is_array($v)){                return false;            }            $t = self::array_is_null($v);            if(!$t){                return false;            }         }        return true;     }elseif(!$arr){         return true;     }else{         return false;     }}2 数值(金额相关)2.0.1 去除无效的0/**  * &#21435;&#38500;&#22810;&#20313;&#30340;0  */  function del0($s)  {      $s = trim(strval($s));      if (preg_match('#^-?\d+?\.0+$#', $s)) {      return preg_replace('#^(-?\d+?)\.0+$#','$1',$s);      }       if (preg_match('#^-?\d+?\.[0-9]+?0+$#', $s)) {      return preg_replace('#^(-?\d+\.[0-9]+?)0+$#','$1',$s);      }      return $s;  }  3 Date/Time3.0.1 获取上个月第一天及最后一天echo date('Y-m-01', strtotime('-1 month'));echo date('Y-m-t', strtotime('-1 month'));// &#19978;&#20010;&#26376;&#31532;&#19968;&#22825;,  &#35745;&#31639;&#20986;&#26412;&#26376;&#31532;&#19968;&#22825;&#20877;&#20943;&#19968;&#20010;&#26376;echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 month'));// &#19978;&#20010;&#26376;&#26368;&#21518;&#19968;&#22825;,// &#35745;&#31639;&#20986;&#26412;&#26376;&#31532;&#19968;&#22825;&#20877;&#20943;&#19968;&#22825;echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 day'));3.0.2 获取当月第一天及最后一天$BeginDate=date('Y-m-01', strtotime(date("Y-m-d")));echo date('Y-m-d', strtotime("$BeginDate +1 month -1 day"));3.0.3 获取当前年份、月份、日、天数echo " &#26412;&#26376;&#20849;&#26377;:".date("t")."&#22825;";echo " &#24403;&#21069;&#24180;&#20221;".date('Y');echo " &#24403;&#21069;&#26376;&#20221;".date('m');echo " &#24403;&#21069;&#20960;&#21495;".date('d');3.0.4 日期转时间戳，时间戳转日期strtotime('2010-03-24 08:15:42');date('Y-m-d H:i:s', 1156219870);3.0.5 计算已成为会员多少天或距离某活动还剩余多少天function get_days_calc($calcTime, $currentTime, $differOrSurplus){    switch ($differOrSurplus) {    case 1:        return round(($currentTime-$calcTime)/3600/24);        break;    case 2:        return round(($calcTime-$currentTime)/3600/24);        break;    default:        return round(($currentTime-$calcTime)/3600/24);        break;    }}4 URL4.0.1 获取当前URLfunction getCurrentPageURL(){    $pageURL = 'http';    if (isset($_SERVER["HTTPS"]) &amp;&amp; $_SERVER["HTTPS"] == "on")    {        $pageURL .= "s";    }    $pageURL .= "://";    if ($_SERVER["SERVER_PORT"] != "80")    {        $pageURL .= $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];    }    else    {        $pageURL .= $_SERVER["SERVER_NAME"] . $_SERVER["REQUEST_URI"];    }    return $pageURL;}4.0.2 请求处理function curl( $url = '',$method = 'GET',$req_data = false,$header = false,$response_header = false,$exec_time = 5,$connect_time = 5 ){    $method = strtoupper( $method );    $ch = curl_init();    // &#35774;&#32622;&#35831;&#27714;url    curl_setopt( $ch,CURLOPT_URL,$url );    // &#35774;&#32622;&#35831;&#27714;&#26041;&#27861;,&#40664;&#35748;&#25191;&#34892;GET&#35831;&#27714;&#65292;&#26080;&#38656;&#35774;&#32622;    if( 'POST' == $method ){        curl_setopt( $ch, CURLOPT_POST,1 );    }elseif( 'GET' != $method ){        curl_setopt( $ch, CURLOPT_CUSTOMREQUEST,$method );    }    // &#35774;&#32622;&#35831;&#27714;&#22836;    if( null != $header &amp;&amp; is_array($header) ){        curl_setopt( $ch,CURLOPT_HTTPHEADER,array_map(function($field,$value){            return $field . ':' . $value;        }, array_keys($header), $header) );    }    // &#35774;&#32622;&#35831;&#35831;&#27714;&#25968;&#25454;    if( null != $req_data &amp;&amp; 'GET' != $method ){        if ( is_array($req_data) &amp;&amp; !isset($req_data['isfile']) ){            $req_data = http_build_query($req_data);        }        curl_setopt( $ch,CURLOPT_POSTFIELDS,$req_data );    }    //&#35774;&#32622;&#36755;&#20986;&#25968;&#25454;&#20013;&#21253;&#21547;http header    curl_setopt( $ch, CURLOPT_HEADER,$response_header );    // &#23558;curl_exec()&#33719;&#21462;&#30340;&#20449;&#24687;&#20197;&#23383;&#31526;&#20018;&#36820;&#22238;&#65292;&#32780;&#19981;&#26159;&#30452;&#25509;&#36755;&#20986;    curl_setopt( $ch,CURLOPT_RETURNTRANSFER,true );    // &#20801;&#35768; cURL &#20989;&#25968;&#25191;&#34892;&#30340;&#26368;&#38271;&#31186;&#25968;&#12290;    curl_setopt( $ch,CURLOPT_TIMEOUT,$exec_time );    //&#22312;&#23581;&#35797;&#36830;&#25509;&#26102;&#31561;&#24453;&#30340;&#31186;&#25968;&#12290;&#35774;&#32622;&#20026;0&#65292;&#21017;&#26080;&#38480;&#31561;&#24453;    curl_setopt( $ch,CURLOPT_CONNECTTIMEOUT,$connect_time );    // &#25191;&#34892;curl&#35831;&#27714;    $response = curl_exec($ch);    //&#33719;&#21462;&#29366;&#24577;&#30721;    $status = curl_getinfo($ch, CURLINFO_HTTP_CODE);    //&#20851;&#38381;curl&#22238;&#35805;&#24182;&#37322;&#25918;&#36164;&#28304;    curl_close($ch);    //&#20998;&#31163;header&#19982;body    if( $response_header ){        $tmp         = explode("\r\n\r\n", $response);        $resp_header = $tmp[0];        $data        = $tmp[1];    } else {        $resp_header = null;        $data        = $response;    }    $result['errcode'] = $status;    $result['header']  = $resp_header;    $result['data']    = $data;    return $result;}5 File5.0.1 下载文件header("Content-type:text/html;charset=utf-8");/** * &#25991;&#20214;&#19979;&#36733; * @param  [type] $file_url [&#32477;&#23545;&#36335;&#24452;&#65292;&#22914;:$_SERVER['DOCUMENT_ROOT'].'/upload/file/2019/01/18/test.png';] * @param  [type] $new_name [&#25351;&#23450;&#25991;&#20214;&#21517;&#31216;] * @return [type] [description] */function downloadFile($file_url,$new_name=''){    if(!isset($file_url)||trim($file_url) == ''){    echo '500';    }    //&#26816;&#26597;&#25991;&#20214;&#26159;&#21542;&#23384;&#22312;    if(!file_exists($file_url)){    echo '404';    }    $file_name=basename($file_url);    $file_type=explode('.',$file_url);    $file_type=$file_type[count($file_type)-1];    $file_name=trim($new_name=='')?$file_name:urlencode($new_name);    $file_type=fopen($file_url,'r'); //&#25171;&#24320;&#25991;&#20214;    //&#36755;&#20837;&#25991;&#20214;&#26631;&#31614;    header("Content-type: application/octet-stream");      header("Accept-Ranges: bytes");      header("Accept-Length: ".filesize($file_url));      header("Content-Disposition: attachment; filename=".$file_name);      //&#36755;&#20986;&#25991;&#20214;&#20869;&#23481;      echo fread($file_type,filesize($file_url));    fclose($file_type);}几点注意事项header("Content-type:text/html;charset=utf-8")的作用：在服务器响应浏览器的请求时，告诉浏览器以编码格式为UTF-8的编码显示该内容。关于file_exists()函数不支持中文路径的问题:因为php函数比较早，不支持中文，所以如果被下载的文件名是中文的话，需要对其进行字符编码转换，否则file_exists()函数不能识别，可以使用iconv()函数进行编码转换。$file_sub_path() 我使用的是绝对路径，执行效率要比相对路径高。Header("Content-type: application/octet-stream")的作用：通过这句代码客户端浏览器就能知道服务端返回的文件形式。Header("Accept-Ranges: bytes")的作用：告诉客户端浏览器返回的文件大小是按照字节进行计算的。Header("Accept-Length:".$file_size)的作用：告诉浏览器返回的文件大小。Header("Content-Disposition: attachment; filename=".$file_name)的作用:告诉浏览器返回的文件的名称。以上四个Header()是必需的。fclose($fp)可以把缓冲区内最后剩余的数据输出到磁盘文件中，并释放文件指针和有关的缓冲区5.0.2 参考资料Php如何实现下载功能超详细流程分析php实现当前页面点击下载文件实例6 其他 code6.1 获取 PHP，MySQL，Apache/Nginx 的版本信息// PHP Versionecho phpversion();// MySQL Version$link = mysqli_connect('127.0.0.1','root','34917da6228cfc7a');echo mysqli_get_server_info($link);// Apache Versionecho apache_get_version();6.2 PHP 生成UUID我唯一序列function uuid($prefix =''){    $chars = md5(uniqid(mt_rand(), true));    $uuid = substr($chars,0,8) . '-';    $uuid .= substr($chars,8,4) . '-';    $uuid .= substr($chars,12,4) . '-';    $uuid .= substr($chars,16,4) . '-';    $uuid .= substr($chars,20,12);    return $prefix . $uuid;}// &#20063;&#21487;&#20197;&#20351;&#29992;SQL&#35821;&#21477;&#29983;&#25104;&#65306;&gt; insert into Price( Name, UUID, Price) values('FEIFEI_TEST', uuid(), 32); 6.3 require vs include vs require_once vs include_oncerequire vs include处理失败的方式不同：include 产生一个 Warning，继续运行；而 require 导致一个 Fatal Error。require vs require_once or include vs include_once后者会判断是否已经引用过指定文件，如果引用过就不再引用。这样做的好处是节省资源和避免重复定义的错误。注意：多数情况下，使用 require_once；require/require_once 应用位置放在 PHP 文件最前面，include 一般放在流程控制的处理区段中。]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET 线程]]></title>
      <url>/c%23/2015/05/20/c-thead/</url>
      <content type="text"><![CDATA[线程入门创建线程using system;using system.Threading;ThreadStart entry = new ThreadStart(CalcSum);Thread workThread = new Thread(entry);//orThread workThread = new Thread(new ThreadStart(CalcSum));  //Method：static void CalcSum()  {       //do somethings.     }Thread类几个重要方法Thread类用于创建线程，ThreadPool类用于管理线程池。Thread类中几个重要的方法：1. Start()：启动线程；2. Sleep(int)：静态方法，暂停当前线程指定的毫秒数；3. Abort()：通常使用该方法来终止一个线程；4. Suspend()：该方法并不终止未完成的线程，它仅仅挂起线程，以后还可恢复；5. Resume()：恢复被Suspend()方法挂起的线程的执行。Thread.ThreadState属性Thread.ThreadState 在各种情况下的取值如下：1. Aborted：线程已停止2. AbortRequested：线程的Thread.Abort()方法已被调用，但是线程还未停止3. Background：线程在后台执行，与属性Thread.IsBackground有关(前台所有进程)4. Running：线程正在正常运行5. Stopped：线程已经被停止6. StopRequested：线程正在被要求停止7. Suspended：线程已经被挂起（此状态下，可以通过调用Resume()方法重新运行）8. SuspendRequested：线程正在要求被挂起，但是未来得及响应9. Unstarted：未调用Thread.Start()开始线程的运行10. WaitSleepJoin：线程因为调用了Wait(),Sleep()或Join()等方法处于封锁状态 设定线程优先级优先级由高到低分别是Highest，AboveNormal，Normal，BelowNormal，Lowest。默认为ThreadPriority.Normal。//示例：设定优先级为最低myThread.Priority=ThreadPriority.Lowest;线程的同步和通讯——生产者和消费者假设这样一种情况，两个线程同时维护一个队列，如果一个线程对队列中添加元素，而另外一个线程从队列中取用元素，那么我们称添加元素的线程为生产者，称取用元素的线程为消费者。lock关键字lock 关键字解决多个线程同时执行一个函数，导致数据的混乱，产生不可预料的结果的问题。lock 关键字将一段代码定义为互斥段（critical section）。互斥段在一个时刻内只允许一个线程进入执行，而其他线程必须等待。//定义如下：lock(expression) statement_block//expression代表你希望跟踪的对象，通常是对象引用。一般地，保护一个类的实例，可以使用this；保护一个静态变量（如互斥代码段在一个静态方法内部），一般使用类名就可以。//statement_block就是互斥段的代码，这段代码在一个时刻内只可能被一个线程执行。Monitor类(System.Threading)Monitor提供了使线程共享资源的方案。Monitor类可以锁定一个对象，一个线程只有得到这把锁才可以对该对象进行操作。......Queue oQueue=new Queue();......Monitor.Enter(oQueue);......//现在oQueue对象只能被当前线程操纵了Monitor.Exit(oQueue);//释放锁//为了保证线程最终都能释放锁，你可以把Monitor.Exit()方法写在try-catch-finally结构中的finally代码块里。//当拥有对象锁的线程准备释放锁时，它使用Monitor.Pulse()方法通知等待队列中的第一个线程。Monitor.Wait()和Monitor.Pulse()1. Wait()就是交出锁的使用权，使线程处于阻塞状态，直到再次获得锁的使用权。2. 当前线程调用Pulse()向队列中的下一个线程发出锁的信号。接收到脉冲后，等待线程就被移动到就绪队列中。在调用 Pulse 的线程释放锁后，就绪队列中的下一个线程（不一定是接收到脉冲的线程）将获得该锁。pulse()并不会使当前线程释放锁。实例：开辟一线程实现异步导出Excel环境介绍及实例简述环境介绍：开发语言》C#;开发工具》Visual studio 2015;Asp.Net MVC Version》5.2.3;.Net Version》6.1.3;NIPO version》2.2.1;实例简述：由于导出的Excel文件比较大，非常耗时，为了不影响对界面的其他操作，需要采用异步的方式进行导出。具体实现方法就是后台开辟一个线程将Excel导出到指定目录，然后提供下载。实现思路及准备工作思路：通过线程实现异步导出操作；通过NIPO组件将数据存到Excel文件中。准备工作：1.下载NPOI组件，http://npoi.codeplex.com/2.orcleHelper.dll实例代码UserController.csusing Project.BLL;using Project.Class;using Project.Interface;using Project.ViewModel;using System;using System.Collections.Generic;using System.IO;using System.Web.Mvc;using System.Web.Script.Serialization;namespace Project.UI{    /// &lt;summary&gt;    /// 文件信息类    /// &lt;/summary&gt;    public class FileInfoClass    {	public int count { set; get; }	public IList&lt;string&gt; d_fileList { set; get; }    }    /// &lt;summary&gt;    /// 用户控制器    /// &lt;/summary&gt;    public class UserController : BaseController    {	//用户接口	private IUserBLL iuser = new UserBLL();	//返回信息	private ReturnInfo returninfo = new ReturnInfo();	/// &lt;summary&gt;	/// 导出用户数据，返回文件列表	/// &lt;/summary&gt;	public ActionResult UserInfoExportExcel()	{	    //搜索条件Model对象	    SearchUserModel searchUserModel = new SearchUserModel();	    //1.获取数据(具体如何获取数据，这里没有陈述)	    List&lt;UserViewModel&gt; list = iuser.GetUserInfo(searchUserModel, ref returninfo) as List&lt;UserViewModel&gt;;	    //2.调用方法，导出Excel	    //生成文件名称（改文件名称）	    var fileName = string.Format("{0}用户信息表.xls", DateTime.Now.ToString("yyyyMMddHHssmm"));	    //判断目录是否存在（该目录名称）	    if (!Directory.Exists(Server.MapPath("~/Downloads/用户信息")))	    {		Directory.CreateDirectory(Server.MapPath("~/Downloads/用户信息"));	    }	    //将生成的文件保存到服务器临时文件夹中	    string fullPath = Path.Combine(Server.MapPath("~/Downloads/用户信息"), fileName);	    //表头	    Dictionary&lt;string, string&gt; tableHeader = new Dictionary&lt;string, string&gt;	    {		{ "user_id","用户编号" },		{ "username","用户名" },		{ "sex","性别" },		{ "age","年龄" },		{ "tel","联系电话"},		{ "email","邮箱"},		{ "user_type", "用户类型" },		{ "nickname", "用户昵称" }	    };	    //导出到Excel。(Global.asax.cs)	    MvcApplication._VehicleQueueT.Enqueue(new Classes.DataExportPara { excelPath=fullPath, sheetName = "用户信息", tableHeard= tableHeader, list =list});	    //获取路径	    string path = Server.MapPath("~/Downloads/用户信息");	    //获取所有xls文件路径	    IList&lt;string&gt; fileList = GetAllFileName(path);	    FileInfoClass f_info = new FileInfoClass();	    f_info.count = fileList.Count;	    f_info.d_fileList = fileList;	    //返回文件列表	    return new ContentResult	    {		Content = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue }.Serialize(f_info),		ContentType = "application/json"	    };	}	/// &lt;summary&gt;	/// 仅获取文件列表	/// &lt;/summary&gt;	/// &lt;returns&gt;&lt;/returns&gt;	public ActionResult GetFileLists()	{	    if (!Directory.Exists(Server.MapPath("~/Downloads/用户信息")))	    {		Directory.CreateDirectory(Server.MapPath("~/Downloads/用户信息"));	    }	    //路径	    string path = Server.MapPath("~/Downloads/用户信息");	    //	    IList&lt;string&gt; fileList = GetAllFileName(path);	    FileInfoClass f_info = new FileInfoClass();	    f_info.count = fileList.Count;	    f_info.d_fileList = fileList;	    return new ContentResult	    {		Content = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue }.Serialize(f_info),		ContentType = "application/json"	    };	}	/// &lt;summary&gt;	/// 删除文件	/// &lt;/summary&gt;	/// &lt;param name="fileName"&gt;&lt;/param&gt;	/// &lt;returns&gt;&lt;/returns&gt;	public ActionResult DeleteFile(string fileName)	{	    string result = "";	    //路径	    string filePath = Server.MapPath("~/Downloads/用户信息/"+fileName);	    if (!Directory.Exists(Server.MapPath("~/Downloads/已删除文件目录")))	    {		Directory.CreateDirectory(Server.MapPath("~/Downloads/已删除文件目录"));	    }	    string deletedFilePath = Server.MapPath("~/Downloads/已删除文件目录/"+fileName);	    try	    {		//System.IO.File.Delete(filePath);		//移动文件到"已删除文件目录"中		FileInfo file = new FileInfo(filePath);		file.MoveTo(deletedFilePath);		result += "成功删除文件";	    }	    catch (Exception)	    {		result += "删除文件失败";	    }	    //返回操作结果	    return Json(result, JsonRequestBehavior.AllowGet);	}	/// &lt;summary&gt;	/// 获取目录下的所有xls文件	/// &lt;/summary&gt;	/// &lt;param name="path"&gt;&lt;/param&gt;	/// &lt;returns&gt;&lt;/returns&gt;	private IList&lt;string&gt; GetAllFileName(string path)	{	    /*List&lt;FileInfo&gt; filelist = new List&lt;FileInfo&gt;();	    //if (System.IO.File.Exists(path+"\\*.xls"))	    var files = Directory.GetFiles(path, "*.xls");	    foreach (var file in files)	    {		filelist.Add(new FileInfo(file));	    }*/	    IList&lt;string&gt; list = new List&lt;string&gt;();	    DirectoryInfo folder = new DirectoryInfo(path);	    foreach (FileInfo file in folder.GetFiles("*.xls"))	    {		list.Add(file.Name);	    }	    return list;	}    }}Global.asax.csusing System;using System.Collections.Generic;using System.Linq;using System.Threading;using System.Web;using System.Web.Mvc;using System.Web.Optimization;using System.Web.Routing;using Project.Classes;namespace GpsProject.UI{    public class MvcApplication : System.Web.HttpApplication    {	//数据导出队列	public static Queue&lt;DataExportPara&gt; _VehicleQueueT = new Queue&lt;DataExportPara&gt;();	protected void Application_Start()	{	    AreaRegistration.RegisterAllAreas();	    FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);	    RouteConfig.RegisterRoutes(RouteTable.Routes);	    BundleConfig.RegisterBundles(BundleTable.Bundles);	    OutputVehicleExcel();//注册信息导出方法	}	/// &lt;summary&gt;	/// 导出信息	/// &lt;/summary&gt;	public static void OutputVehicleExcel()	{	    DataExportPara exportPara = null;	    ThreadPool.QueueUserWorkItem(o =&gt;	    {		while (true)		{		    if (_VehicleQueueT != null &amp;&amp; _VehicleQueueT.Count &gt; 0)		    {			exportPara = _VehicleQueueT.Dequeue();			if (exportPara != null)			{			    //调用方法			    DataExport.ExportExcel(exportPara.excelPath, exportPara.sheetName, exportPara.tableHeard, exportPara.list);			}			else			{			    Thread.Sleep(6000);			}		    }		    else		    {			Thread.Sleep(6000);		    }		}	    });	}    }}DataExportPara.csusing System.Collections;using System.Collections.Generic;namespace Project.Classes{    /// &lt;summary&gt;    /// 数据导出para    /// &lt;/summary&gt;    public class DataExportPara    {	/// &lt;summary&gt;	/// 导出路径	/// &lt;/summary&gt;	public string excelPath { get; set; }	/// &lt;summary&gt;	/// 数据列表	/// &lt;/summary&gt;	public IList list { get; set; }	/// &lt;summary&gt;	/// 工作表名称	/// &lt;/summary&gt;	public string sheetName { get; set; }	/// &lt;summary&gt;	/// 表头	/// &lt;/summary&gt;	public Dictionary&lt;string, string&gt; tableHeard {get;set;}    }}DataExport.csusing GpsProject.Class;using System.Collections;using System.Collections.Generic;using System.IO;namespace Project.Classes{    /// &lt;summary&gt;    /// 数据导出    /// &lt;/summary&gt;    public class DataExport    {	/// &lt;summary&gt;	/// 导出Excel到目录	/// &lt;/summary&gt;	/// &lt;param name="path"&gt;&lt;/param&gt;	/// &lt;param name="sheetName"&gt;&lt;/param&gt;	/// &lt;param name="tableHeard"&gt;&lt;/param&gt;	/// &lt;param name="list"&gt;&lt;/param&gt;	public static void ExportExcel(string path, string sheetName, Dictionary&lt;string, string&gt; tableHeard, IList list)	{	    using (var exportData = NPOIExcelHelper.ExportToExcelStream(list, sheetName, tableHeard))	    {		//创建一个文件		FileStream file = new FileStream(path, FileMode.Create, FileAccess.Write);		exportData.WriteTo(file);		file.Close();	    }	}    }}NPOIExcelHelper.csusing System;using System.Collections.Generic;using System.IO;using System.Linq;using NPOI.SS.UserModel;using System.Collections;namespace Project.Class{    /// &lt;summary&gt;    /// NPOI    /// &lt;/summary&gt;    public class NPOIExcelHelper    {	/// &lt;summary&gt;	/// 导出Excel到文件流	/// &lt;/summary&gt;	/// &lt;param name="dt"&gt;&lt;/param&gt;	/// &lt;param name="sheetName"&gt;&lt;/param&gt;	/// &lt;param name="tableHeard"&gt;&lt;/param&gt;	/// &lt;returns&gt;文件流&lt;/returns&gt;	public static MemoryStream ExportToExcelStream(IList lists, string sheetName, Dictionary&lt;string, string&gt; tableHeard)	{	    //创建一个工作簿	    NPOI.HSSF.UserModel.HSSFWorkbook book = new NPOI.HSSF.UserModel.HSSFWorkbook();	    NPOI.SS.UserModel.ISheet sheet = book.CreateSheet(sheetName); //创建sheet	    //Excel表头	    NPOI.SS.UserModel.IRow row = sheet.CreateRow(0); //创建行	    ICellStyle style = book.CreateCellStyle(); //创建单元格	    style.Alignment = HorizontalAlignment.Center; //对齐方式	    style.VerticalAlignment = VerticalAlignment.Center;  //单元格居中对齐	    #region 设置表头	    List&lt;string&gt; headers = tableHeard.Keys.ToList();	    for (int i = 0; i &lt; headers.Count; i++)	    {		ICell cell = row.CreateCell(i);		cell.CellStyle = style;		cell.SetCellValue(tableHeard[headers[i]]);	    }	    /*for (int i = 0; i &lt; dt.Columns.Count; i++)	    {		ICell cell = row.CreateCell(i);		cell.CellStyle = style;		cell.SetCellValue(dt.Columns[i].ColumnName);	    }*/	    #endregion	    #region 填充数据	    int rowIndex = 1;// 从第二行开始赋值(第一行已设置为单元头)	    if (lists != null &amp;&amp; lists.Count &gt; 0)	    {		foreach (var list in lists)		{		    IRow rowTemp = sheet.CreateRow(rowIndex);		    for (int i = 0; i &lt; headers.Count; i++)		    {			string cellValue = ""; // 单元格的值			object properotyValue = null; // 属性的值			System.Reflection.PropertyInfo properotyInfo = null; // 属性的信息			if (headers[i].IndexOf(".") &gt; 0)			{			    // 3.1.1 解析子类属性(这里只解析1层子类，多层子类未处理)			    string[] properotyArray = headers[i].Split(new string[] { "." }, StringSplitOptions.RemoveEmptyEntries);			    string subClassName = properotyArray[0]; // '.'前面的为子类的名称			    string subClassProperotyName = properotyArray[1]; // '.'后面的为子类的属性名称			    System.Reflection.PropertyInfo subClassInfo = list.GetType().GetProperty(subClassName); // 获取子类的类型			    if (subClassInfo != null)			    {				// 3.1.2 获取子类的实例				var subClassEn = list.GetType().GetProperty(subClassName).GetValue(list, null);				// 3.1.3 根据属性名称获取子类里的属性类型				properotyInfo = subClassInfo.PropertyType.GetProperty(subClassProperotyName);				if (properotyInfo != null)				{				    properotyValue = properotyInfo.GetValue(subClassEn, null); // 获取子类属性的值				}			    }			}			else			{			    // 3.2 若不是子类的属性，直接根据属性名称获取对象对应的属性			    properotyInfo = list.GetType().GetProperty(headers[i]);			    if (properotyInfo != null)			    {				properotyValue = properotyInfo.GetValue(list, null);			    }			}			// 3.3 属性值经过转换赋值给单元格值			if (properotyValue != null)			{			    cellValue = properotyValue.ToString();			    // 3.3.1 对时间初始值赋值为空			    if (cellValue.Trim() == "0001/1/1 0:00:00" || cellValue.Trim() == "0001/1/1 23:59:59")			    {				cellValue = "";			    }			}			// 3.4 填充到Excel的单元格里			ICell icellcontent = rowTemp.CreateCell(i);			//icellcontent.CellStyle = Getcellstyle(workbook, cellStylecontent, fontcontent, stylexls.默认);			icellcontent.SetCellValue(cellValue);		    }		    rowIndex++;		    //达到65535行，跳出循环		    if (rowIndex== 65535)		    {			break;		    }		}	    }	    else	    {		//导出空数据		sheet.AddMergedRegion(new NPOI.SS.Util.CellRangeAddress(2, 2, 0, headers.Count - 1));		IRow row2 = sheet.CreateRow(1);		ICell icellkong = row2.CreateCell(0);		//  icellkong.CellStyle = Getcellstyle(workbook, stylexls.默认);		string str = "没有满足条件的数据可导出";		icellkong.SetCellValue(str);	    }	    /* for (int i = 1; i &lt;= dt.Rows.Count; i++)//遍历DataTable行	 {	     DataRow dataRow = dt.Rows[i - 1];	     row = sheet.CreateRow(i);//在工作表中添加一行	     for (int j = 0; j &lt; dt.Columns.Count; j++)//遍历DataTable列	     {		 ICell cell = row.CreateCell(j);//在行中添加一列		 cell.SetCellValue(dataRow[j].ToString());//设置列的内容   	     }	 }*/	    #endregion	    MemoryStream ms = new MemoryStream();	    book.Write(ms);	    return ms; //返回文件流	}    }}小结在阅读别人的文章时，认真。实例：利用线程监听模拟车辆进出智能化停车场实例简述实现效果主要代码Main.csprivate void Main_Load(object sender, EventArgs e){    MessagePrint.UpdateEventInfo += new MessagePrint.ShowEventInfoHandler(UpdateRuntimeInfo);    //&#35774;&#32622;&#24320;&#22987;&#12289;&#32467;&#26463;&#26102;&#38388;&#20026;00:00:00    dateTimePicker_InStart.Text = ConfigInfoHelper.InStartRunTime;    dateTimePicker_InEnd.Text = ConfigInfoHelper.InEndRunTime;    dateTimePicker_OutStart.Text = ConfigInfoHelper.OutStartRunTime;    dateTimePicker_OutEnd.Text = ConfigInfoHelper.OutEndRunTime;    //&#33719;&#21462;&#40664;&#35748;&#26102;&#38388;    BTModel.InStartRunTime = ConfigInfoHelper.InStartRunTime;    BTModel.InEndRunTime = ConfigInfoHelper.InEndRunTime;    BTModel.OutStartRunTime = ConfigInfoHelper.OutStartRunTime;    BTModel.OutEndRunTime = ConfigInfoHelper.OutEndRunTime;    vehicleio = new VehicleIO(BTModel);    vehicleio.StartServer();}/// &lt;summary&gt;/// &#24212;&#29992;&#26356;&#25913;/// &lt;/summary&gt;/// &lt;param name="sender"&gt;&lt;/param&gt;/// &lt;param name="e"&gt;&lt;/param&gt;private void ApplyChanged_Click(object sender, EventArgs e){    //&#20808;&#20572;&#27490;&#30417;&#21548;&#32447;&#31243;    vehicleio.StopServer();    BTModel.InStartRunTime = dateTimePicker_InStart.Text;    BTModel.InEndRunTime = dateTimePicker_InEnd.Text;    BTModel.OutStartRunTime = dateTimePicker_OutStart.Text;    BTModel.OutEndRunTime = dateTimePicker_OutEnd.Text;    vehicleio = new VehicleIO(BTModel);    vehicleio.StartServer();}VehicleIO.csprivate string InStartRunTime="";//&#22253;&#21306;&#36827;&#22330;&#24320;&#21551;&#26102;&#38388;private string InEndRunTime = "";//&#22253;&#21306;&#36827;&#22330;&#32467;&#26463;&#26102;&#38388;private string OutStartRunTime = "";//&#22253;&#21306;&#20986;&#22330;&#24320;&#21551;&#26102;&#38388;private string OutEndRunTime = "";//&#22253;&#21306;&#20986;&#22330;&#32467;&#26463;&#26102;&#38388;public VehicleIO(RunTimeModel btModel){    InStartRunTime = btModel.InStartRunTime;    InEndRunTime = btModel.InEndRunTime;    OutStartRunTime = btModel.OutStartRunTime;    OutEndRunTime = btModel.OutEndRunTime;}private Thread thread = null;//&#21021;&#22987;&#20540;private int sendLocationInterval = 3;//new &#36710;&#36742;&#36827;&#20986;&#22253;&#21306;&#25968;&#25454;&#27169;&#22411;private VehicleIOModel iomodel = new VehicleIOModel();/// &lt;summary&gt;/// &#24320;&#22987;&#26381;&#21153;/// &lt;/summary&gt;public void StartServer(){    ThreadStart iothread = new ThreadStart(working);    thread = new Thread(iothread);    thread.Start();}/// &lt;summary&gt;/// &#20572;&#27490;&#26381;&#21153;/// &lt;/summary&gt;public void StopServer(){    if (thread != null &amp;&amp; thread.IsAlive)    {        thread.Abort();    }}/// &lt;summary&gt;/// &#25346;&#36215;&#26381;&#21153;/// &lt;/summary&gt;public void SuspendServer(){    if (thread.ThreadState == ThreadState.Running)    {        thread.Suspend();    }}/// &lt;summary&gt;/// &#24674;&#22797;&#26381;&#21153;/// &lt;/summary&gt;public void ResumeServer(){    if (thread.ThreadState == ThreadState.Suspended)    {        thread.Resume();    }}/// &lt;summary&gt;/// work./// &lt;/summary&gt;private void working(){    MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#36827;&#20986;&#22330;&#31995;&#32479;&#24320;&#21551;!");    while (true)    {        #region &#36827;&#22253;&#21306;        if (DateTime.Now.ToLongTimeString().Equals(InStartRunTime))        {            MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#20837;&#22330;&#36947;&#21475;&#24320;&#21551;&#65292;&#36710;&#36742;&#24320;&#22987;&#36827;&#20837;&#22253;&#21306;&#65281;");            DataTable dtVehicleInInfo = null;            try            {                //&#33719;&#21462;&#26410;&#20837;&#22330;&#30340;&#21345;&#21495;                dtVehicleInInfo = VehicleIODal.GetInstance().GetVehicleCardInInfo();            }            catch (Exception exc)            {                MessagePrint.SendEventInfo(1, true, "&#26410;&#33021;&#26597;&#35810;&#21040;&#25968;&#25454;&#65292;&#35831;&#26816;&#26597;&#25968;&#25454;&#24211;&#36830;&#25509;&#20018;" + exc);            }            if (dtVehicleInInfo.Rows.Count &gt; 0)            {                MessagePrint.SendEventInfo(1, true, "&#24050;&#26597;&#35810;&#21040;&#25152;&#26377;&#21487;&#20197;&#36827;&#20837;&#22253;&#21306;&#30340;&#36710;&#36742;&#25968;&#25454;&#65292;&#27491;&#22312;&#20934;&#22791;&#36827;&#20837;&#22253;&#21306;&#8230;&#8230;");                for (int i = 0; i &lt; dtVehicleInInfo.Rows.Count; i++)                {                    string cardNo = dtVehicleInInfo.Rows[i]["card_no"].ToString();                    MessagePrint.SendEventInfo(1, true, "&#21345;&#21495;&#20026;&#8220;" + cardNo + "&#8221;&#30340;&#36710;&#36742;&#65292;&#27491;&#22312;&#36827;&#20837;&#22253;&#21306;&#8230;&#8230;");                    //&#36825;&#37324;&#35760;&#24405;&#36827;&#20837;&#20449;&#24687;...&#30053;                    //                    //&#33719;&#21462;&#19968;&#20010;&#38543;&#26426;&#25968;(min 20,max 200,number 1)                    int rand = Convert.ToInt32(getRandom(20, 150, 1));                    MessagePrint.SendEventInfo(1, true, "&#19979;&#19968;&#36742;&#36710;&#36742;&#23558;&#22312;" + sendLocationInterval * rand / 60 + "&#20998;&#38047;&#21518;&#25269;&#36798;&#22253;&#21306;");                    if (DateTime.Now.ToLongTimeString().Equals(InEndRunTime) || DateTime.Now.ToLongTimeString().CompareTo(InEndRunTime) &gt; 0)                    {                        MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#20837;&#22330;&#36947;&#21475;&#20851;&#38381;&#65292;&#20572;&#27490;&#36710;&#36742;&#20837;&#22330;&#65281;&#20837;&#22330;&#36947;&#21475;&#23558;&#20250;&#22312; " + InStartRunTime + " &#20877;&#27425;&#24320;&#21551;&#65281;");                        break;                    }                    else                    {                        Thread.Sleep(sendLocationInterval * 1000 * rand);                    }                }                MessagePrint.SendEventInfo(1, true, "&#27880;&#24847;&#65306;&#36710;&#36742;&#36827;&#20837;&#22253;&#21306;&#25805;&#20316;&#23436;&#25104;&#65281;");            }            else            {                MessagePrint.SendEventInfo(1, true, "&#30446;&#21069;&#27809;&#26377;&#26597;&#35810;&#21040;&#35201;&#36827;&#20837;&#22253;&#21306;&#30340;&#36710;&#36742;&#12290;");            }        }        #endregion        #region &#20986;&#22253;&#21306;        //&#19982;&#36827;&#22253;&#21306;&#20195;&#30721;&#19968;&#33268;&#65292;&#30053;        #endregion    }}其他//显示实时时间#region &#36816;&#34892;&#26102;&#26174;&#31034;&#23454;&#26102;&#26102;&#38388;new Thread(() =&gt;{    while (true)    {        try        {            labelTime.BeginInvoke(new MethodInvoker(() =&gt; labelTime.Text = DateTime.Now.ToString()));        }        catch (Exception)        {        }        Thread.Sleep(1000);    }}){ IsBackground = true }.Start();#endregion//随机数获取/// &lt;summary&gt;/// &#33719;&#21462;&#35268;&#23450;&#33539;&#22260;&#20869;&#30340;n&#20010;&#38543;&#26426;&#25968;/// &lt;/summary&gt;/// &lt;param name="min_value"&gt;&#38543;&#26426;&#25968;&#19979;&#38480;&lt;/param&gt;/// &lt;param name="max_value"&gt;&#38543;&#26426;&#25968;&#19978;&#38480;&lt;/param&gt;/// &lt;param name="number"&gt;&#38543;&#26426;&#25968;&#37327;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private string getRandom(int min_value, int max_value, int number){    Random random = new Random();    ArrayList arr = new ArrayList();    int temp = 0;    for (int i = 0; i &lt; number; i++)    {        temp = random.Next(min_value, max_value); //&#38543;&#26426;&#21462;&#25968;        arr.Add(temp);    }    string str = "";    for (int j = 0; j &lt; arr.Count; j++)    {        str += arr[j].ToString() + ",";    }    return str.Substring(0, str.LastIndexOf(","));}参考资料http://www.cnblogs.com/StupidsCat/archive/2013/01/05/2845505.html  ]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> Thread </tag>
        
          <tag> 线程 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 笔记]]></title>
      <url>/php/2015/04/12/php-page/</url>
      <content type="text"><![CDATA[如果你有任何问题或疑问，请发送Email至zrg1390556487@gmail.com！1 数组操作1.1 向二位数组中添加键值对// &#26041;&#27861;&#19968;$tempArr=array();foreach($arr as $key =&gt; $value){    $value['new_key'] = $value['old_key1']+$value['old_key2'];    $tempArr[] = $value;}// &#26041;&#27861;&#20108;foreach($arr as $key =&gt; $value){    $arr[$key]['new_key'] = $value['old_key1']+$value['old_key2'];}1.2 判断二维数组是否为空function array_is_null($arr = null){    if(is_array($arr)){    foreach($arr as $k=&gt;$v){        if($v&amp;&amp;!is_array($v)){        return false;        }        $t = self::array_is_null($v);        if(!$t){        return false;        }     }    return true;     }elseif(!$arr){     return true;     }else{     return false;     }}2 字符串操作2.1 在字符串指定位置插入字符串function str_insert($str,$i,$subStr){    for($j=0;$j&lt;$i;$j++){    $startStr .=$str[$j];    }    for($j=$i;$j&lt;strlen($str);$j++){    $lastStr .= $str[$j];    }    $newStr = $startStr.$subStr.$lastStr;    return $newStr;}2.2 数值中去除无效的0/**  * &#21435;&#38500;&#22810;&#20313;&#30340;0  */  function del0($s)  {      $s = trim(strval($s));      if (preg_match('#^-?\d+?\.0+$#', $s)) {      return preg_replace('#^(-?\d+?)\.0+$#','$1',$s);      }       if (preg_match('#^-?\d+?\.[0-9]+?0+$#', $s)) {      return preg_replace('#^(-?\d+\.[0-9]+?)0+$#','$1',$s);      }      return $s;  }  3 日期时间操作3.1 获取上个月第一天及最后一天echo date('Y-m-01', strtotime('-1 month'));echo date('Y-m-t', strtotime('-1 month'));// &#19978;&#20010;&#26376;&#31532;&#19968;&#22825;,  &#35745;&#31639;&#20986;&#26412;&#26376;&#31532;&#19968;&#22825;&#20877;&#20943;&#19968;&#20010;&#26376;echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 month'));// &#19978;&#20010;&#26376;&#26368;&#21518;&#19968;&#22825;,// &#35745;&#31639;&#20986;&#26412;&#26376;&#31532;&#19968;&#22825;&#20877;&#20943;&#19968;&#22825;echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 day'));3.2 获取当月第一天及最后一天$BeginDate=date('Y-m-01', strtotime(date("Y-m-d")));echo date('Y-m-d', strtotime("$BeginDate +1 month -1 day"));3.3 获取当前年份、月份、日、天数echo " &#26412;&#26376;&#20849;&#26377;:".date("t")."&#22825;";echo " &#24403;&#21069;&#24180;&#20221;".date('Y');echo " &#24403;&#21069;&#26376;&#20221;".date('m');echo " &#24403;&#21069;&#20960;&#21495;".date('d');3.4 日期转时间戳，时间戳转日期strtotime('2010-03-24 08:15:42');date('Y-m-d H:i:s', 1156219870);3.5 计算已成为会员多少天或距离某活动还剩余多少天function get_days_calc($calcTime, $currentTime, $differOrSurplus){    switch ($differOrSurplus) {    case 1:    return round(($currentTime-$calcTime)/3600/24);    break;    case 2:    return round(($calcTime-$currentTime)/3600/24);    break;    default:    return round(($currentTime-$calcTime)/3600/24);    break;    }}4 URL 处理4.1 获取当前URLfunction getCurrentPageURL(){    $pageURL = 'http';    if (isset($_SERVER["HTTPS"]) &amp;&amp; $_SERVER["HTTPS"] == "on")    {    $pageURL .= "s";    }    $pageURL .= "://";    if ($_SERVER["SERVER_PORT"] != "80")    {    $pageURL .= $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];    }    else    {    $pageURL .= $_SERVER["SERVER_NAME"] . $_SERVER["REQUEST_URI"];    }    return $pageURL;}4.2 请求处理function curl( $url = '',$method = 'GET',$req_data = false,$header = false,$response_header = false,$exec_time = 5,$connect_time = 5 ){    $method = strtoupper( $method );    $ch = curl_init();    // &#35774;&#32622;&#35831;&#27714;url    curl_setopt( $ch,CURLOPT_URL,$url );    // &#35774;&#32622;&#35831;&#27714;&#26041;&#27861;,&#40664;&#35748;&#25191;&#34892;GET&#35831;&#27714;&#65292;&#26080;&#38656;&#35774;&#32622;    if( 'POST' == $method ){    curl_setopt( $ch, CURLOPT_POST,1 );    }elseif( 'GET' != $method ){    curl_setopt( $ch, CURLOPT_CUSTOMREQUEST,$method );    }    // &#35774;&#32622;&#35831;&#27714;&#22836;    if( null != $header &amp;&amp; is_array($header) ){    curl_setopt( $ch,CURLOPT_HTTPHEADER,array_map(function($field,$value){        return $field . ':' . $value;    }, array_keys($header), $header) );    }    // &#35774;&#32622;&#35831;&#35831;&#27714;&#25968;&#25454;    if( null != $req_data &amp;&amp; 'GET' != $method ){    if ( is_array($req_data) &amp;&amp; !isset($req_data['isfile']) ){        $req_data = http_build_query($req_data);    }    curl_setopt( $ch,CURLOPT_POSTFIELDS,$req_data );    }    //&#35774;&#32622;&#36755;&#20986;&#25968;&#25454;&#20013;&#21253;&#21547;http header    curl_setopt( $ch, CURLOPT_HEADER,$response_header );    // &#23558;curl_exec()&#33719;&#21462;&#30340;&#20449;&#24687;&#20197;&#23383;&#31526;&#20018;&#36820;&#22238;&#65292;&#32780;&#19981;&#26159;&#30452;&#25509;&#36755;&#20986;    curl_setopt( $ch,CURLOPT_RETURNTRANSFER,true );    // &#20801;&#35768; cURL &#20989;&#25968;&#25191;&#34892;&#30340;&#26368;&#38271;&#31186;&#25968;&#12290;    curl_setopt( $ch,CURLOPT_TIMEOUT,$exec_time );    //&#22312;&#23581;&#35797;&#36830;&#25509;&#26102;&#31561;&#24453;&#30340;&#31186;&#25968;&#12290;&#35774;&#32622;&#20026;0&#65292;&#21017;&#26080;&#38480;&#31561;&#24453;    curl_setopt( $ch,CURLOPT_CONNECTTIMEOUT,$connect_time );    // &#25191;&#34892;curl&#35831;&#27714;    $response = curl_exec($ch);    //&#33719;&#21462;&#29366;&#24577;&#30721;    $status = curl_getinfo($ch, CURLINFO_HTTP_CODE);    //&#20851;&#38381;curl&#22238;&#35805;&#24182;&#37322;&#25918;&#36164;&#28304;    curl_close($ch);    //&#20998;&#31163;header&#19982;body    if( $response_header ){    $tmp         = explode("\r\n\r\n", $response);    $resp_header = $tmp[0];    $data        = $tmp[1];    } else {    $resp_header = null;    $data        = $response;    }    $result['errcode'] = $status;    $result['header']  = $resp_header;    $result['data']    = $data;    return $result;}5 文件操作5.1 下载文件header("Content-type:text/html;charset=utf-8");/** * &#25991;&#20214;&#19979;&#36733; * @param  [type] $file_url [&#32477;&#23545;&#36335;&#24452;&#65292;&#22914;:$_SERVER['DOCUMENT_ROOT'].'/upload/file/2019/01/18/test.png';] * @param  [type] $new_name [&#25351;&#23450;&#25991;&#20214;&#21517;&#31216;] * @return [type] [description] */function downloadFile($file_url,$new_name=''){    if(!isset($file_url)||trim($file_url) == ''){    echo '500';    }    //&#26816;&#26597;&#25991;&#20214;&#26159;&#21542;&#23384;&#22312;    if(!file_exists($file_url)){    echo '404';    }    $file_name=basename($file_url);    $file_type=explode('.',$file_url);    $file_type=$file_type[count($file_type)-1];    $file_name=trim($new_name=='')?$file_name:urlencode($new_name);    $file_type=fopen($file_url,'r'); //&#25171;&#24320;&#25991;&#20214;    //&#36755;&#20837;&#25991;&#20214;&#26631;&#31614;    header("Content-type: application/octet-stream");      header("Accept-Ranges: bytes");      header("Accept-Length: ".filesize($file_url));      header("Content-Disposition: attachment; filename=".$file_name);      //&#36755;&#20986;&#25991;&#20214;&#20869;&#23481;      echo fread($file_type,filesize($file_url));    fclose($file_type);}几点注意事项5.2 6 关于分页6.1 介绍分页（英语：Paging），是一种操作系统里存储器管理的一种技术，可以使计算机的主存可以使用存储在辅助存储器中的数据。……6.2 前端分页与后端分页前端分页一般用于数据量较小的情况，一次请求把数据全部从后端请求回来。后端分页适用于数据量偏大时的情况，减小请求传输压力。前端需要将每页条数和当前页传给后端，后端根据条件查询出数据再传给前端，包括总条数、当前页、每页多少条数据等。7 代码7.1 同步方式&lt;?php$host="localhost";$db_user="root";$db_pass="root";$db_name="test";$timezone="Asia/Shanghai";$link=mysqli_connect($host,$db_user,$db_pass,$db_name);// mysql_select_db($db_name,$link);mysqli_query($link,"SET names UTF8");header("Content-Type: text/html; charset=utf-8");?&gt;&lt;?phpinclude_once("config.php");require_once('page.class.php'); //&#20998;&#39029;&#31867;$showrow = 10; //&#19968;&#39029;&#26174;&#31034;&#30340;&#34892;&#25968;$curpage = empty($_GET['page']) ? 1 : $_GET['page']; //&#24403;&#21069;&#30340;&#39029;,&#36824;&#24212;&#35813;&#22788;&#29702;&#38750;&#25968;&#23383;&#30340;&#24773;&#20917;$url = "?page={page}"; //&#20998;&#39029;&#22320;&#22336;&#65292;&#22914;&#26524;&#26377;&#26816;&#32034;&#26465;&#20214; ="?page={page}&amp;q=".$_GET['q']//&#30465;&#30053;&#20102;&#38142;&#25509;mysql&#30340;&#20195;&#30721;&#65292;&#27979;&#35797;&#26102;&#33258;&#34892;&#28155;&#21152;$sql = "SELECT id,content,addtime FROM wishing_wall";$total = mysqli_num_rows(mysqli_query($link,$sql)); //&#35760;&#24405;&#24635;&#26465;&#25968;if (!empty($_GET['page']) &amp;&amp; $total != 0 &amp;&amp; $curpage &gt; ceil($total / $showrow))    $curpage = ceil($total_rows / $showrow); //&#24403;&#21069;&#39029;&#25968;&#22823;&#20110;&#26368;&#21518;&#39029;&#25968;&#65292;&#21462;&#26368;&#21518;&#19968;&#39029;//&#33719;&#21462;&#25968;&#25454;$sql .= " LIMIT " . ($curpage - 1) * $showrow . ",$showrow;";$query = mysqli_query($link,$sql);?&gt;&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;    &lt;head&gt;         &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;         &lt;title&gt;&#28436;&#31034;&#65306;PHP&#31616;&#21333;&#28418;&#20142;&#30340;&#20998;&#39029;&#31867;&lt;/title&gt;        &lt;link rel="stylesheet" type="text/css" href="http://www.sucaihuo.com/jquery/css/common.css" /&gt;        &lt;style type="text/css"&gt;            p{margin:0}            #page{                height:40px;                padding:20px 0px;            }            #page a{                display:block;                float:left;                margin-right:10px;                padding:2px 12px;                height:24px;                border:1px #cccccc solid;                background:#fff;                text-decoration:none;                color:#808080;                font-size:12px;                line-height:24px;            }            #page a:hover{                color:#077ee3;                border:1px #077ee3 solid;            }            #page a.cur{                border:none;                background:#077ee3;                color:#fff;            }            #page p{                float:left;                padding:2px 12px;                font-size:12px;                height:24px;                line-height:24px;                color:#bbb;                border:1px #ccc solid;                background:#fcfcfc;                margin-right:8px;            }            #page p.pageRemark{                border-style:none;                background:none;                margin-right:0px;                padding:4px 0px;                color:#666;            }            #page p.pageRemark b{                color:red;            }            #page p.pageEllipsis{                border-style:none;                background:none;                padding:4px 0px;                color:#808080;            }            .dates li {font-size: 14px;margin:20px 0}            .dates li span{float:right}        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;div class="head"&gt;            &lt;div class="head_inner clearfix"&gt;                &lt;ul id="nav"&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com"&gt;&#39318; &#39029;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/templates"&gt;&#32593;&#31449;&#27169;&#26495;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/js"&gt;&#32593;&#39029;&#29305;&#25928;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/php"&gt;PHP&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/site"&gt;&#31934;&#36873;&#32593;&#22336;&lt;/a&gt;&lt;/li&gt;                &lt;/ul&gt;                &lt;a class="logo" href="http://www.sucaihuo.com"&gt;&lt;img src="http://www.sucaihuo.com/Public/images/logo.jpg" alt="&#32032;&#26448;&#28779;logo" /&gt;&lt;/a&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class="container"&gt;            &lt;div class="demo"&gt;                &lt;div class="showData"&gt;                    &lt;ul class="dates"&gt;                        &lt;?php while ($row = mysqli_fetch_array($query)) { ?&gt;                            &lt;li&gt;                                &lt;span&gt;&lt;?php echo $row['addtime'] ?&gt;&lt;/span&gt;                                &lt;a target="_blank" href="http://www.sucaihuo.com/js"&gt;&lt;?php echo $row['content'] ?&gt;&lt;/a&gt;                            &lt;/li&gt;                        &lt;?php } ?&gt;                    &lt;/ul&gt;                    &lt;!--&#26174;&#31034;&#25968;&#25454;&#21306;--&gt;                &lt;/div&gt;                &lt;div class="showPage"&gt;                    &lt;?php                    if ($total &gt; $showrow) {//&#24635;&#35760;&#24405;&#25968;&#22823;&#20110;&#27599;&#39029;&#26174;&#31034;&#25968;&#65292;&#26174;&#31034;&#20998;&#39029;                        $page = new page($total, $showrow, $curpage, $url, 2);                        echo $page-&gt;myde_write();                    }                    ?&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;&lt;?php/* * ********************************************* * @&#31867;&#21517;:   page * @&#21442;&#25968;:   $myde_total - &#24635;&#35760;&#24405;&#25968; *          $myde_size - &#19968;&#39029;&#26174;&#31034;&#30340;&#35760;&#24405;&#25968; *          $myde_page - &#24403;&#21069;&#39029; *          $myde_url - &#33719;&#21462;&#24403;&#21069;&#30340;url * @&#21151;&#33021;:   &#20998;&#39029;&#23454;&#29616; * @&#20316;&#32773;:   &#23435;&#28023;&#38401; */class page {    private $myde_total;          //&#24635;&#35760;&#24405;&#25968;    private $myde_size;           //&#19968;&#39029;&#26174;&#31034;&#30340;&#35760;&#24405;&#25968;    private $myde_page;           //&#24403;&#21069;&#39029;    private $myde_page_count;     //&#24635;&#39029;&#25968;    private $myde_i;              //&#36215;&#22836;&#39029;&#25968;    private $myde_en;             //&#32467;&#23614;&#39029;&#25968;    private $myde_url;            //&#33719;&#21462;&#24403;&#21069;&#30340;url    /*     * $show_pages     * &#39029;&#38754;&#26174;&#31034;&#30340;&#26684;&#24335;&#65292;&#26174;&#31034;&#38142;&#25509;&#30340;&#39029;&#25968;&#20026;2*$show_pages+1&#12290;     * &#22914;$show_pages=2&#37027;&#20040;&#39029;&#38754;&#19978;&#26174;&#31034;&#23601;&#26159;[&#39318;&#39029;] [&#19978;&#39029;] 1 2 3 4 5 [&#19979;&#39029;] [&#23614;&#39029;]      */    private $show_pages;    public function __construct($myde_total = 1, $myde_size = 1, $myde_page = 1, $myde_url, $show_pages = 2) {        $this-&gt;myde_total = $this-&gt;numeric($myde_total);        $this-&gt;myde_size = $this-&gt;numeric($myde_size);        $this-&gt;myde_page = $this-&gt;numeric($myde_page);        $this-&gt;myde_page_count = ceil($this-&gt;myde_total / $this-&gt;myde_size);        $this-&gt;myde_url = $myde_url;        if ($this-&gt;myde_total &lt; 0)            $this-&gt;myde_total = 0;        if ($this-&gt;myde_page &lt; 1)            $this-&gt;myde_page = 1;        if ($this-&gt;myde_page_count &lt; 1)            $this-&gt;myde_page_count = 1;        if ($this-&gt;myde_page &gt; $this-&gt;myde_page_count)            $this-&gt;myde_page = $this-&gt;myde_page_count;        $this-&gt;limit = ($this-&gt;myde_page - 1) * $this-&gt;myde_size;        $this-&gt;myde_i = $this-&gt;myde_page - $show_pages;        $this-&gt;myde_en = $this-&gt;myde_page + $show_pages;        if ($this-&gt;myde_i &lt; 1) {            $this-&gt;myde_en = $this-&gt;myde_en + (1 - $this-&gt;myde_i);            $this-&gt;myde_i = 1;        }        if ($this-&gt;myde_en &gt; $this-&gt;myde_page_count) {            $this-&gt;myde_i = $this-&gt;myde_i - ($this-&gt;myde_en - $this-&gt;myde_page_count);            $this-&gt;myde_en = $this-&gt;myde_page_count;        }        if ($this-&gt;myde_i &lt; 1)            $this-&gt;myde_i = 1;    }    //&#26816;&#27979;&#26159;&#21542;&#20026;&#25968;&#23383;    private function numeric($num) {        if (strlen($num)) {            if (!preg_match("/^[0-9]+$/", $num)) {                $num = 1;            } else {                $num = substr($num, 0, 11);            }        } else {            $num = 1;        }        return $num;    }    //&#22320;&#22336;&#26367;&#25442;    private function page_replace($page) {        return str_replace("{page}", $page, $this-&gt;myde_url);    }    //&#39318;&#39029;    private function myde_home() {        if ($this-&gt;myde_page != 1) {            return "&lt;a href='" . $this-&gt;page_replace(1) . "' title='&#39318;&#39029;'&gt;&#39318;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#39318;&#39029;&lt;/p&gt;";        }    }    //&#19978;&#19968;&#39029;    private function myde_prev() {        if ($this-&gt;myde_page != 1) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page - 1) . "' title='&#19978;&#19968;&#39029;'&gt;&#19978;&#19968;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#19978;&#19968;&#39029;&lt;/p&gt;";        }    }    //&#19979;&#19968;&#39029;    private function myde_next() {        if ($this-&gt;myde_page != $this-&gt;myde_page_count) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page + 1) . "' title='&#19979;&#19968;&#39029;'&gt;&#19979;&#19968;&#39029;&lt;/a&gt;";        } else {            return"&lt;p&gt;&#19979;&#19968;&#39029;&lt;/p&gt;";        }    }    //&#23614;&#39029;    private function myde_last() {        if ($this-&gt;myde_page != $this-&gt;myde_page_count) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page_count) . "' title='&#23614;&#39029;'&gt;&#23614;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#23614;&#39029;&lt;/p&gt;";        }    }    //&#36755;&#20986;    public function myde_write($id = 'page') {        $str = "&lt;div id=" . $id . "&gt;";        $str.=$this-&gt;myde_home();        $str.=$this-&gt;myde_prev();        if ($this-&gt;myde_i &gt; 1) {            $str.="&lt;p class='pageEllipsis'&gt;...&lt;/p&gt;";        }        for ($i = $this-&gt;myde_i; $i &lt;= $this-&gt;myde_en; $i++) {            if ($i == $this-&gt;myde_page) {                $str.="&lt;a href='" . $this-&gt;page_replace($i) . "' title='&#31532;" . $i . "&#39029;' class='cur'&gt;$i&lt;/a&gt;";            } else {                $str.="&lt;a href='" . $this-&gt;page_replace($i) . "' title='&#31532;" . $i . "&#39029;'&gt;$i&lt;/a&gt;";            }        }        if ($this-&gt;myde_en &lt; $this-&gt;myde_page_count) {            $str.="&lt;p class='pageEllipsis'&gt;...&lt;/p&gt;";        }        $str.=$this-&gt;myde_next();        $str.=$this-&gt;myde_last();        $str.="&lt;p class='pageRemark'&gt;&#20849;&lt;b&gt;" . $this-&gt;myde_page_count .                "&lt;/b&gt;&#39029;&lt;b&gt;" . $this-&gt;myde_total . "&lt;/b&gt;&#26465;&#25968;&#25454;&lt;/p&gt;";        $str.="&lt;/div&gt;";        return $str;    }}?&gt;7.2 Ajax异步方式CREATE TABLE IF NOT EXISTS `food` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `title` varchar(100) NOT NULL,  `pic` varchar(255) NOT NULL,  PRIMARY KEY (`id`)) ENGINE=MyISAM  DEFAULT CHARSET=utf8;&lt;div id="list"&gt;    &lt;ul&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div id="pagecount"&gt;&lt;/div&gt;var curPage = 1; //&#24403;&#21069;&#39029;&#30721;var total,pageSize,totalPage; //&#24635;&#35760;&#24405;&#25968;&#65292;&#27599;&#39029;&#26174;&#31034;&#25968;&#65292;&#24635;&#39029;&#25968;//&#33719;&#21462;&#25968;&#25454;function getData(page){         $.ajax({                type: 'POST',                url: 'pages.php',                data: {'pageNum':page-1},                dataType:'json',                beforeSend:function(){                        $("#list ul").append("&lt;li id='loading'&gt;loading...&lt;/li&gt;");//&#26174;&#31034;&#21152;&#36733;&#21160;&#30011;                },                success:function(json){                        $("#list ul").empty();//&#28165;&#31354;&#25968;&#25454;&#21306;                        total = json.total; //&#24635;&#35760;&#24405;&#25968;                        pageSize = json.pageSize; //&#27599;&#39029;&#26174;&#31034;&#26465;&#25968;                        curPage = page; //&#24403;&#21069;&#39029;                        totalPage = json.totalPage; //&#24635;&#39029;&#25968;                        var li = "";                        var list = json.list;                        $.each(list,function(index,array){ //&#36941;&#21382;json&#25968;&#25454;&#21015;                                li += "&lt;li&gt;&lt;a href='#'&gt;&lt;img src='"+array['pic']+"'&gt;"+array['title']                +"&lt;/a&gt;&lt;/li&gt;";                        });                        $("#list ul").append(li);                },                complete:function(){ //&#29983;&#25104;&#20998;&#39029;&#26465;                        getPageBar();                },                error:function(){                        alert("&#25968;&#25454;&#21152;&#36733;&#22833;&#36133;");                }        });}//&#33719;&#21462;&#20998;&#39029;&#26465;function getPageBar(){        //&#39029;&#30721;&#22823;&#20110;&#26368;&#22823;&#39029;&#25968;        if(curPage&gt;totalPage) curPage=totalPage;        //&#39029;&#30721;&#23567;&#20110;1        if(curPage&lt;1) curPage=1;        pageStr = "&lt;span&gt;&#20849;"+total+"&#26465;&lt;/span&gt;&lt;span&gt;"+curPage    +"/"+totalPage+"&lt;/span&gt;";        //&#22914;&#26524;&#26159;&#31532;&#19968;&#39029;        if(curPage==1){                pageStr += "&lt;span&gt;&#39318;&#39029;&lt;/span&gt;&lt;span&gt;&#19978;&#19968;&#39029;&lt;/span&gt;";        }else{                pageStr += "&lt;span&gt;&lt;a href='javascript:void(0)' rel='1'&gt;&#39318;&#39029;&lt;/a&gt;&lt;/span&gt;        &lt;span&gt;&lt;a href='javascript:void(0)' rel='"+(curPage-1)+"'&gt;&#19978;&#19968;&#39029;&lt;/a&gt;&lt;/span&gt;";        }        //&#22914;&#26524;&#26159;&#26368;&#21518;&#39029;        if(curPage&gt;=totalPage){                pageStr += "&lt;span&gt;&#19979;&#19968;&#39029;&lt;/span&gt;&lt;span&gt;&#23614;&#39029;&lt;/span&gt;";        }else{                pageStr += "&lt;span&gt;&lt;a href='javascript:void(0)' rel='"+(parseInt(curPage)+1)+"'&gt;        &#19979;&#19968;&#39029;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href='javascript:void(0)' rel='"+totalPage+"'&gt;&#23614;&#39029;&lt;/a&gt;        &lt;/span&gt;";        }        $("#pagecount").html(pageStr);}$(function(){        getData(1);        $("#pagecount span a").live('click',function(){                var rel = $(this).attr("rel");                if(rel){                        getData(rel);                }        });});include_once('connect.php'); //&#36830;&#25509;&#25968;&#25454;&#24211;&#65292;&#30053;&#36807;&#65292;&#20855;&#20307;&#35831;&#19979;&#36733;&#28304;&#30721;&#26597;&#30475;$page = intval($_POST['pageNum']); //&#24403;&#21069;&#39029;$result = mysql_query("select id from food");$total = mysql_num_rows($result);//&#24635;&#35760;&#24405;&#25968;$pageSize = 6; //&#27599;&#39029;&#26174;&#31034;&#25968;$totalPage = ceil($total/$pageSize); //&#24635;&#39029;&#25968;$startPage = $page*$pageSize; //&#24320;&#22987;&#35760;&#24405;//&#26500;&#36896;&#25968;&#32452;$arr['total'] = $total;$arr['pageSize'] = $pageSize;$arr['totalPage'] = $totalPage;$query = mysql_query("select id,title,pic from food order by id asc limit $startPage,$pageSize"); //&#26597;&#35810;&#20998;&#39029;&#25968;&#25454;while($row=mysql_fetch_array($query)){         $arr['list'][] = array(                'id' =&gt; $row['id'],                'title' =&gt; $row['title'],                'pic' =&gt; $row['pic'],         );}echo json_encode($arr); //&#36755;&#20986;JSON&#25968;&#25454;8 Referenceshttps://www.helloweba.net/javascript/195.htmlhttps://zh.wikipedia.org/wiki/%E5%88%86%E9%A0%81https://www.zhihu.com/question/264215279 附录一： PHP 常见函数9.1 Stringaddcslashes — 以 C 语言风格使用反斜线转义字符串中的字符addslashes()，字符串转义，使用反斜线引用字符串。如I’m Zhao中的’bin2hex — 函数把包含数据的二进制字符串转换为十六进制值chop — rtrim 的别名chr — 返回指定的字符chunk_split — 将字符串分割成小块convert_cyr_string — 将字符由一种 Cyrillic 字符转换成另一种convert_uudecode — 解码一个 uuencode 编码的字符串convert_uuencode — 使用 uuencode 编码一个字符串count_chars — 返回字符串所用字符的信息crc32 — 计算一个字符串的 crc32 多项式crypt — 单向字符串散列echo — 输出一个或多个字符串fprintf — 将格式化后的字符串写入到流print_r — 以易于理解的格式打印变量。var_dump — 打印变量的相关信息var_export — 输出或返回一个变量的字符串表示print_r ( mixed $expression [, bool $return = FALSE ] ) : mixed    var_dump ( mixed $expression [, mixed $... ] ) : void    var_export ( mixed $expression [, bool $return ] ) : mixedget_html_translation_table — 返回使用 htmlspecialchars 和 htmlentities 后的转换表hebrev — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）hebrevc — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符hex2bin — 转换十六进制字符串为二进制字符串html_entity_decode — Convert HTML entities to their corresponding charactershtmlentities — 将字符转换为 HTML 转义字符htmlspecialchars_decode — 将特殊的 HTML 实体转换回普通字符htmlspecialchars — 将特殊字符转换为 HTML 实体htmlentities 和 htmlspecialchars 的区别:这两个函数的功能都是转换字符为 HTML 字符编码，特别是 url 和代码字符串。htmlentities 转换所有的 html 标记；htmlspecialchars 只格式化&amp; ' " &lt; 和 \&gt; 这几个特殊符号。lcfirst — 使一个字符串的第一个字符小写levenshtein — 计算两个字符串之间的编辑距离localeconv — Get numeric formatting informationltrim — 删除字符串开头的空白字符（或其他字符）md5_file — 计算指定文件的 MD5 散列值md5 — 计算字符串的 MD5 散列值metaphone — Calculate the metaphone key of a stringmoney_format — 将数字格式化成货币字符串nl_langinfo — Query language and locale informationnl2br — 在字符串所有新行之前插入 HTML 换行标记number_format — 以千位分隔符方式格式化一个数字// &#26080;&#35770;&#20540;&#26159;&#21542;&#20026;0&#65292;&#37117;&#20445;&#30041;&#23567;&#25968;&#28857;&#21518;&#20004;&#20301;echo number_format((float)round($a,2,PHP_ROUND_HALF_ODD),2,'.','');// &#25972;&#25968;&#37096;&#20998;&#20197;&#21315;&#20301;&#20998;&#38548;&#31526;&#26041;&#24335;&#20998;&#38548;echo number_format((float)round($a,2,PHP_ROUND_HALF_ODD),2,'.',',');ord — 转换字符串第一个字节为 0-255 之间的值parse_str — 将字符串解析成多个变量print — 输出字符串printf — 输出格式化字符串quoted_printable_decode — 将 quoted-printable 字符串转换为 8-bit 字符串quoted_printable_encode — 将 8-bit 字符串转换成 quoted-printable 字符串quotemeta — 转义元字符集rtrim — 删除字符串末端的空白字符（或者其他字符）setlocale — 设置地区信息sha1_file — 计算文件的 sha1 散列值sha1 — 计算字符串的 sha1 散列值similar_text — 计算两个字符串的相似度soundex — Calculate the soundex key of a stringsprintf — Return a formatted stringsscanf — 根据指定格式解析输入的字符str_getcsv — 解析 CSV 字符串为一个数组str_ireplace — str_replace 的忽略大小写版本str_pad — 使用另一个字符串填充字符串为指定长度str_repeat — 重复一个字符串str_rot13 — 对字符串执行 ROT13 转换str_shuffle — 随机打乱一个字符串str_split — 将字符串转换为数组str_word_count — 返回字符串中单词的使用情况strcasecmp — 二进制安全比较字符串（不区分大小写）strcmp — 二进制安全字符串比较strcoll — 基于区域设置的字符串比较strcspn — 获取不匹配遮罩的起始子字符串的长度strip_tags — 从字符串中去除 HTML 和 PHP 标记stripcslashes — 反引用一个使用 addcslashes 转义的字符串strpos()，查找字符串首次出现的位置。strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int，如果没找到 needle，将返回 FALSE，此函数可能返回布尔值 FALSE，但也可能返回等同于 FALSE 的非布尔值。应使用 = 运算符来测试此函数的返回值。缺点：对中文支持不好// &#21028;&#26029;&#26159;&#21542;&#21253;&#21547;&#26576;&#23383;&#31526;&#20018;                                                                                                                                                $pos = strpos($str,$needle);                                                                                                                                           if($pos !== false){      echo 'exist';                                                                                                                                                      }stripslashes — 反引用一个引用字符串strlen()，获取字符串长度。strnatcasecmp — 使用“自然顺序”算法比较字符串（不区分大小写）strnatcmp — 使用自然排序算法比较字符串strncasecmp — 二进制安全比较字符串开头的若干个字符（不区分大小写）strncmp — 二进制安全比较字符串开头的若干个字符strpbrk — 在字符串中查找一组字符的任何一个字符substr()，字符串截取。substr(字符串变量,开始截取的位置，截取个数） 。如：mb_substr() ，字符串截取。mb_substr ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] ) : stringstrstr()，返回字符串从查找字符串出现的位置开始到字符串结尾的字符串// &#21435;&#38500;&#23383;&#31526;&#20018;&#21518;3&#20301;substr($tempStr,0,strlen($tempStr)-3);                                                   // &#25130;&#21462;&#26576;&#20010;&#23383;&#31526;&#20043;&#21518;&#30340;&#23383;&#31526;&#20018;substr($str,strpos($str,"_");// &#21028;&#26029;&#26159;&#21542;&#21253;&#21547;&#26576;&#23383;&#31526;&#20018;&#65292;&#27809;&#26377;&#36820;&#22238;&#20540;&#65292;&#21017;&#19981;&#21253;&#21547;echo strstr($str,'@');stristr()，与 strstr() 的使用方法一样，区别是 stristr 不区分大小写。strchr — strstr 的别名strrchr — 查找指定字符在字符串中的最后一次出现strrev — 反转字符串strripos — 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）strspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。strspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。strstr — 查找字符串的首次出现strtok — 标记分割字符串strtolower — 将字符串转化为小写strtoupper — 将字符串转化为大写strtr — 转换指定字符substr_compare — 二进制安全比较字符串（从偏移位置比较指定长度）substr_count — 计算字串出现的次数str_replace()，搜索替换字符串。substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] ) : mixedtrim — 去除字符串首尾处的空白字符（或者其他字符）ucfirst — 将字符串的首字母转换为大写ucwords — 将字符串中每个单词的首字母转换为大写vfprintf — 将格式化字符串写入流vprintf — 输出格式化字符串vsprintf — 返回格式化字符串wordwrap — 打断字符串为指定数量的字串preg_replace()，搜索匹配替换字符串。Eg：搜索匹配到，,\n\r\s的使用|替换：preg_replace('[,，\s\r\n]+', '|', $ids);sprintf()，格式化字符串。sprintf(格式,要转化的字符串)，Eg：Sprintf('%01.2f',$str);Implode()，字符串的合并（array-&gt;string）。explode()，字符串的分割（string-&gt;array）。join — implode() 的别名// &#21028;&#26029;&#26159;&#21542;&#21253;&#21547;&#26576;&#23383;&#31526;&#20018;$tempArr = explode(',',$str);if(count($tempArr) &gt; 1){    return true;}htmlentities/htmlspecialchars/addslashes/stripslashes/strip_tags、mysql_real_escape_strin。json_decode()，对 JSON 格式的字符串进行解码。json_encode()，对变量进行 JSON 编码 。strtolower()，把所有字符转换为小写strtoupper(), 把所有字符转换为大写strncmp() ， 二进制安全比较字符串开头的若干个字符（区分大小写）9.2 Arraycurl_setopt_array — 为 cURL 传输会话批量设置选项array_change_key_case — 将数组中的所有键名修改为全大写或小写array_chunk — 将一个数组分割成多个array_column — 返回数组中指定的一列array_combine — 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值array_count_values — 统计数组中所有的值array_diff_assoc — 带索引检查计算数组的差集array_diff_key — 使用键名比较计算数组的差集array_diff_uassoc — 用用户提供的回调函数做索引检查来计算数组的差集array_diff_ukey — 用回调函数对键名比较计算数组的差集array_diff — 计算数组的差集array_intersect_assoc — 带索引检查计算数组的交集array_intersect_key — 使用键名比较计算数组的交集array_intersect_uassoc — 带索引检查计算数组的交集，用回调函数比较索引array_intersect_ukey — 用回调函数比较键名来计算数组的交集array_intersect — 计算数组的交集  // array_intersect ( array $array1 , array $array2 [, array $... ] ) : array// &#21435;&#38500;&#31354;&#20803;&#32032;foreach($arr as $k=&gt;$v){    if(!$v) unset($arr[$k]);}### &#25193;&#23637;&#23398;&#20064;&#65306;PHP&#20174;&#25968;&#32452;&#20013;&#21024;&#38500;&#20803;&#32032;&#30340;&#22235;&#31181;&#26041;&#27861;&#23454;&#20363;$array = array(0 =&gt; "a", 1 =&gt; "b", 2 =&gt; "c");// 1. &#21024;&#38500;&#19968;&#20010;&#20803;&#32032;&#65292;&#19988;&#20445;&#25345;&#21407;&#26377;&#32034;&#24341;&#19981;&#21464;unset($array[1]);// &#20320;&#24819;&#21024;&#38500;&#30340;key// &#37325;&#25490;&#32034;&#24341;// &#20351;&#29992; array_values &#20989;&#25968;&#65306;$array = array_values($array);// 2. &#21024;&#38500;&#19968;&#20010;&#20803;&#32032;&#65292;&#19981;&#20445;&#25345;&#32034;&#24341;array_splice($array, 1, 1);// &#20320;&#24819;&#21024;&#38500;&#30340;&#20803;&#32032;&#30340;Offset// 3. &#25353;&#20540;&#21024;&#38500;&#22810;&#20010;&#20803;&#32032;&#65292;&#20445;&#25345;&#32034;&#24341;$array = array_diff($array, ["a", "c"]);           //&#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;&#8594; &#20320;&#24819;&#21024;&#38500;&#30340;&#25968;&#32452;&#20803;&#32032;&#20540;values// 4. &#25353;&#38190;&#21024;&#38500;&#22810;&#20010;&#20803;&#32032;&#65292;&#20445;&#25345;&#32034;&#24341;$array = array_diff_key($array, [0 =&gt; "xy", "2" =&gt; "xy"]);// &#20320;&#24819;&#21024;&#38500;&#30340;&#25968;&#32452;&#38190;keysarray_fill — 用给定的值填充数组array_fill_keys — 使用指定的键和值填充数组array_filter — 用回调函数过滤数组中的单元// array_filter ( array $array [, callable $callback [, int $flag = 0 ]] ) : arrayarray_flip — 交换数组中的键和值array_key_exists — 检查数组里是否有指定的键名或索引array_key_first — Gets the first key of an arrayarray_key_last — Gets the last key of an arrayarray_keys — 返回数组中部分的或所有的键名// array_flip ( array $array ) : arrayarray_map — 为数组的每个元素应用回调函数array_walk_recursive — 对数组中的每个成员递归地应用用户函数array_walk — 使用用户自定义函数对数组中的每个元素做回调处理// array_map ( callable $callback , array $array1 [, array $... ] ) : arrayarray_merge_recursive — 递归地合并一个或多个数组array_merge — 合并一个或多个数组array_multisort — 对多个数组或多维数组进行排序array_reverse — 返回单元顺序相反的数组array_pad — 以指定长度将一个值填充进数组array_pop — 弹出数组最后一个单元（出栈）array_product — 计算数组中所有值的乘积array_push — 将一个或多个单元压入数组的末尾（入栈）array_rand — 从数组中随机取出一个或多个单元array_reduce — 用回调函数迭代地将数组简化为单一的值array_replace_recursive — 使用传递的数组递归替换第一个数组的元素array_replace — 使用传递的数组替换第一个数组的元素array_search — 在数组中搜索给定的值，如果成功则返回首个相应的键名array_slice — 从数组中取出一段array_splice — 去掉数组中的某一部分并用其它值取代array_sum — 对数组中所有值求和array_udiff_assoc — 带索引检查计算数组的差集，用回调函数比较数据array_udiff_uassoc — 带索引检查计算数组的差集，用回调函数比较数据和索引array_udiff — 用回调函数比较数据来计算数组的差集array_uintersect_assoc — 带索引检查计算数组的交集，用回调函数比较数据array_uintersect_uassoc — 带索引检查计算数组的交集，用单独的回调函数比较数据和索引array_uintersect — 计算数组的交集，用回调函数比较数据array_unique — 移除数组中重复的值array_shift — 将数组开头的单元移出数组array_unshift — 在数组开头插入一个或多个单元array_values — 返回数组中所有的值array — 新建一个数组arsort — 对数组进行逆向排序并保持索引关系asort — 对数组进行排序并保持索引关系compact — 建立一个数组，包括变量名和它们的值count — 计算数组中的单元数目，或对象中的属性个数current — 返回数组中的当前单元each — 返回数组中当前的键／值对并将数组指针向前移动一步end — 将数组的内部指针指向最后一个单元extract — 从数组中将变量导入到当前的符号表in_array — 检查数组中是否存在某个值key_exists — 别名 array_key_existskey — 从关联数组中取得键名krsort — 对数组按照键名逆向排序ksort — 对数组按照键名排序list — 把数组中的值赋给一组变量natcasesort — 用“自然排序”算法对数组进行不区分大小写字母的排序natsort — 用“自然排序”算法对数组排序next — 将数组中的内部指针向前移动一位pos — current 的别名prev — 将数组的内部指针倒回一位range — 根据范围创建数组，包含指定的元素reset — 将数组的内部指针指向第一个单元rsort — 对数组逆向排序shuffle — 打乱数组sizeof — count 的别名sort — 对数组排序uasort — 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联uksort — 使用用户自定义的比较函数对数组中的键名进行排序usort — 使用用户自定义的比较函数对数组中的值进行排序    // uksort ( array &amp;$array , callable $key_compare_func ) : booluksort(&amp;$arr, function ($a, $b) use ($seq) {    $seq = array_flip($seq);    $idx1 = $seq[$a] ?? -1;    $idx2 = $seq[$b] ?? -1;    return $idx1 - $idx2;});9.3 Mathbcadd — [加]2个任意精度数字的加法计算bcsub — [减]2个任意精度数字的减法bcmul — [乘]2个任意精度数字乘法计算bcdiv — [除]2个任意精度的数字除法计算$a = '1.234';$b = '5';echo&#8239;bcadd($a,$b,&#8239;4);&#8239;&#8239;//&#8239;6.2340echo&#8239;bcsub($a,&#8239;$b,&#8239;4);&#8239;&#8239;//&#8239;-3.7660echo&#8239;bcmul('1.34747474747',&#8239;'35',&#8239;3);&#8239;//&#8239;47.161/***PHP &#39640;&#31934;&#24230;&#35745;&#31639;&#38382;&#39064;**  1. &#24341;&#20837;  javascript  //&#20026;&#21861;&#19981;&#31561;&#20110; 0.3 ? &#65288;&#27491;&#30830;&#32467;&#26524;&#65306;0.30000000000000004&#65289;  0.1 + 0.2  //&#20026;&#21861;&#19981;&#31561;&#20110; 5.6 ? &#65288;&#27491;&#30830;&#32467;&#26524;&#65306;5.6000000000000005&#65289;  0.8 * 7  php  // &#27491;&#30830;&#32467;&#26524;&#26159; 57&#65292;&#32780;&#19981;&#26159; 58  var_dump(intval(0.58 * 100));  2. &#21407;&#22240;&#20998;&#26512;  &#28014;&#28857;&#36816;&#31639;&#24825;&#30340;&#31096;&#65292;&#24182;&#38750;&#35821;&#35328;&#30340; bug&#65292;&#20294;&#21644;&#35821;&#35328;&#30340;&#23454;&#29616;&#21407;&#29702;&#26377;&#20851;&#65292;&#19981;&#31649;&#20160;&#20040;&#35821;&#35328;&#65292;&#21482;&#35201;&#28041;&#21450;&#28014;&#28857;&#36816;&#31639;&#65292;&#37117;&#26159;&#23384;&#22312;&#31867;&#20284;&#30340;&#38382;&#39064;&#65292;&#20351;&#29992;&#26102;&#19968;&#23450;&#35201;&#27880;&#24847;&#12290;  &#28014;&#28857;&#25968;&#30340;&#34920;&#31034;(IEEE 754)&#65306;&#28014;&#28857;&#25968;, &#20197;64&#20301;&#30340;&#38271;&#24230;(&#21452;&#31934;&#24230;)&#20026;&#20363;, &#20250;&#37319;&#29992;1&#20301;&#31526;&#21495;&#20301;(E), 11&#25351;&#25968;&#20301;(Q), 52&#20301;&#23614;&#25968;(M)&#34920;&#31034;(&#19968;&#20849;64&#20301;)&#12290;  &#31526;&#21495;&#20301;&#65306;&#26368;&#39640;&#20301;&#34920;&#31034;&#25968;&#25454;&#30340;&#27491;&#36127;&#65292;0&#34920;&#31034;&#27491;&#25968;&#65292;1&#34920;&#31034;&#36127;&#25968;&#12290;  &#25351;&#25968;&#20301;&#65306;&#34920;&#31034;&#25968;&#25454;&#20197;2&#20026;&#24213;&#30340;&#24130;&#65292;&#25351;&#25968;&#37319;&#29992;&#20559;&#31227;&#30721;&#34920;&#31034;&#12290;  &#23614;&#25968;&#65306;&#34920;&#31034;&#25968;&#25454;&#23567;&#25968;&#28857;&#21518;&#30340;&#26377;&#25928;&#25968;&#23383;&#12290;  0.58&#30340;&#20108;&#36827;&#21046;&#34920;&#31034;&#26159;: 0.10010100011110101110000101000111101011100001010001111  0.57&#30340;&#20108;&#36827;&#21046;&#34920;&#31034;&#26159;: 0.1001000111101011100001010001111010111000010100011111  &#22914;&#26524;&#21482;&#26159;&#36890;&#36807;&#36825;52&#20301;&#35745;&#31639;&#30340;&#35805;,&#20998;&#21035;&#26159;:0.58 -&gt; 0.57999999999999996&#65292;0.57 -&gt; 0.5699999999999999&#12290;  PHP&#28014;&#28857;&#22411;&#22312;&#36827;&#34892;+-*%/&#23384;&#22312;&#19981;&#20934;&#30830;&#30340;&#38382;&#39064;&#65292;&#20363;&#22914;&#65292;floor((0.1+0.7)*10) &#36890;&#24120;&#20250;&#36820;&#22238; 7 &#32780;&#19981;&#26159;&#39044;&#26399;&#20013;&#30340; 8&#65292;&#22240;&#20026;&#35813;&#32467;&#26524;&#20869;&#37096;&#30340;&#34920;&#31034;&#20854;&#23454;&#26159;&#31867;&#20284; 7.9999999999...&#12290;  3. &#32467;&#35770;  &#27704;&#36828;&#19981;&#35201;&#30456;&#20449;&#28014;&#28857;&#25968;&#32467;&#26524;&#31934;&#30830;&#21040;&#20102;&#26368;&#21518;&#19968;&#20301;&#65292;&#20063;&#27704;&#36828;&#19981;&#35201;&#27604;&#36739;&#20004;&#20010;&#28014;&#28857;&#25968;&#26159;&#21542;&#30456;&#31561;&#12290;&#22914;&#26524;&#30830;&#23454;&#38656;&#35201;&#26356;&#39640;&#30340;&#31934;&#24230;&#65292;&#24212;&#35813;&#20351;&#29992;&#20219;&#24847;&#31934;&#24230;&#25968;&#23398;&#20989;&#25968;&#25110;&#32773; gmp &#20989;&#25968;&#12290;  &#28014;&#28857;&#25968;&#31934;&#30830;&#20301;&#25968;&#21462;&#20915;&#20110; PHP &#37197;&#32622;&#21442;&#25968; precision&#65292;&#40664;&#35748; 14 &#20301;&#65292;&#35745;&#31639;&#26041;&#24335;&#65306;&#20174;&#24038;&#31532;&#19968;&#20010;&#38750;0&#25968;&#23601;&#26159;&#31934;&#24230;&#30340;&#24320;&#22987;&#12290;*/bcmod — 对一个任意精度数字取模bccomp — 比较两个任意精度的数字bcpow — 任意精度数字的乘方bcpowmod — Raise an arbitrary precision number to another, reduced by a specified modulusbcscale — 设置所有bc数学函数的默认小数点保留位数floatval(), 转换为浮点型intval(),转换为整型fmod — 返回除法的浮点数余数intdiv — 对除法结果取整bcsqrt — 任意精度数字的二次方根sqrt — 平方根is_finite — 判断是否为有限值is_infinite — 判断是否为无限值is_nan — 判断是否为合法数值lcg_value — 组合线性同余发生器log10 — 以 10 为底的对数log1p — 返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果log — 自然对数max — 找出最大值min — 找出最小值exp — 计算 e 的指数expm1 — 返回 exp(number) - 1，甚至当 number 的值接近零也能计算出准确结果pi — 得到圆周率值pow— 指数表达式，pow ( number $base , number $exp ) : numbercos — 余弦cosh — 双曲余弦sin — 正弦sinh — 双曲正弦tan — 正切tanh — 双曲正切acos — 反余弦acosh — 反双曲余弦asin — 反正弦asinh — 反双曲正弦atan2 — 两个参数的反正切atan — 反正切atanh — 反双曲正切deg2rad — 将角度转换为弧度rad2deg — 将弧度数转换为相应的角度数mt_getrandmax — 显示随机数的最大可能值mt_rand — 生成更好的随机数mt_srand — 播下一个更好的随机数发生器种子rand — 产生一个随机整数srand — 播下随机数发生器种子intval(), 直接取整，intval ( mixed $var [, int $base = 10 ] ) : intround(), 四舍五入ceil()，向上取整floor(), 向下取整  // intval()  // 3echo intval(3.14);// round()// &#26684;&#24335;&#65306;round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] ) : float//  PHP_ROUND_HALF_UP&#12289; PHP_ROUND_HALF_DOWN PHP_ROUND_HALF_EVEN &#25110; PHP_ROUND_HALF_ODD$number = 1346.21; //float(1346.21)var_dump(round($number, 2));//float(1346)var_dump(round($number, 0));//float(1350)var_dump(round($number, -1));//float(1300)var_dump(round($number, -2)); //10,&#22235;&#33293;&#20845;&#20837;,&#36935;5&#36827;1var_dump(round(9.5, 0, PHP_ROUND_HALF_UP));//9,&#22235;&#33293;&#20845;&#20837;,&#36935;5&#19981;&#33293;&#24323;var_dump(round(9.5, 0, PHP_ROUND_HALF_DOWN));//10,&#22235;&#33293;&#20845;&#20837;,&#25972;&#25968;&#37096;&#20998;&#20026;&#22855;&#25968;&#21017;&#36827;1var_dump(round(9.5, 0, PHP_ROUND_HALF_EVEN)); //9,&#22235;&#33293;&#20845;&#20837;,&#25972;&#25968;&#37096;&#20998;&#20026;&#20598;&#25968;&#21017;&#36827;1var_dump(round(9.5, 0, PHP_ROUND_HALF_ODD));//9var_dump(round(8.5, 0, PHP_ROUND_HALF_UP)); //8var_dump(round(8.5, 0, PHP_ROUND_HALF_DOWN));//8var_dump(round(8.5, 0, PHP_ROUND_HALF_EVEN));//9var_dump(round(8.5, 0, PHP_ROUND_HALF_ODD));// ceil()// &#26684;&#24335;&#65306;ceil ( float $value ) : float// 4echo ceil(3.14);// floor()// &#26684;&#24335;&#65306;floor ( float $value ) : float// 3echo floor(3.14);// &#20445;&#30041;&#20004;&#20301;&#23567;&#25968;,&#19981;&#22235;&#33293;&#20116;&#20837;var_dump(floor(3.157*100)/100));bindec — 二进制转换为十进制decbin — 十进制转换为二进制dechex — 十进制转换为十六进制decoct — 十进制转换为八进制octdec — 八进制转换为十进制hexdec — 十六进制转换为十进制base_convert — 在任意进制之间转换数字// decbin ( int $number ) : stringhypot — 计算一直角三角形的斜边长度9.4 Filebasename — 返回路径中的文件名部分chgrp — 改变文件所属的组chmod — 改变文件模式chown — 改变文件的所有者clearstatcache — 清除文件状态缓存copy — 拷贝文件delete — 参见 unlink 或 unsetdirname — 返回路径中的目录部分disk_free_space — 返回目录中的可用空间disk_total_space — 返回一个目录的磁盘总大小file_exists — 检查文件或目录是否存在is_dir — 判断给定文件名是否是一个目录mkdir — 新建目录readlink — 返回符号连接指向的目标realpath_cache_get — 获取真实目录缓存的详情realpath_cache_size — 获取真实路径缓冲区的大小realpath — 返回规范化的绝对路径名rename — 重命名一个文件或目录rmdir — 删除目录glob — 寻找与模式匹配的文件路径pathinfo — 返回文件路径的信息diskfreespace — disk_free_space 的别名fclose — 关闭一个已打开的文件指针feof — 测试文件指针是否到了文件结束的位置fflush — 将缓冲内容输出到文件fgetc — 从文件指针中读取字符fgetcsv — 从文件指针中读入一行并解析 CSV 字段fgets — 从文件指针中读取一行fgetss — 从文件指针中读取一行并过滤掉 HTML 标记fputcsv — 将行格式化为 CSV 并写入文件指针fputs — fwrite 的别名// fputcsv ( resource $handle , array $fields [, string $delimiter = ',' [, string $enclosure = '"' ]] ) : int// fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = ',' [, string $enclosure = '"' [, string $escape = '\\' ]]]] ) : array]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-Pages </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP Notes]]></title>
      <url>/php/2015/04/12/php-notes/</url>
      <content type="text"><![CDATA[如果你有任何问题或疑问，请发送Email至zrg1390556487@gmail.com！1 PHP 入门1.1 PHP 概述1.2 PHP 环境搭建和开发工具1.3 PHP 语言基础1.3.1 格式风格1.3.2 注释1.3.3 数据类型1.3.4 常量1.3.5 变量1.3.6 运算符1.3.7 表达式1.3.8 函数1.3.9 编码规范1.3.10 流程控制语句1.4 PHP 基础知识点1.4.1 require vs include vs require_once vs include_oncerequire vs include 处理失败的方式不同：include 产生一个 Warning，继续运行；而 require 导致一个 Fatal Error。require vs require_once or include vs include_once 后者会判断是否已经引用过指定文件，如果引用过就不再引用。这样做的好处是节省资源和避免重复定义的错误。注意：多数情况下，使用 require_once；require/require_once 应用位置放在 PHP 文件最前面，include 一般放在流程控制的处理区段中。2 字符串操作2.1 在字符串指定位置插入字符串function str_insert($str,$i,$subStr){    for($j=0;$j&lt;$i;$j++){    $startStr .=$str[$j];    }    for($j=$i;$j&lt;strlen($str);$j++){    $lastStr .= $str[$j];    }    $newStr = $startStr.$subStr.$lastStr;    return $newStr;}2.2 数值中去除无效的0/** * &#21435;&#38500;&#22810;&#20313;&#30340;0 */function del0($s){    $s = trim(strval($s));    if (preg_match('#^-?\d+?\.0+$#', $s)) {    return preg_replace('#^(-?\d+?)\.0+$#','$1',$s);    }    if (preg_match('#^-?\d+?\.[0-9]+?0+$#', $s)) {    return preg_replace('#^(-?\d+\.[0-9]+?)0+$#','$1',$s);    }    return $s;}2.3 PHP 生成UUID我唯一序列function uuid($prefix =''){    $chars = md5(uniqid(mt_rand(), true));    $uuid = substr($chars,0,8) . '-';    $uuid .= substr($chars,8,4) . '-';    $uuid .= substr($chars,12,4) . '-';    $uuid .= substr($chars,16,4) . '-';    $uuid .= substr($chars,20,12);    return $prefix . $uuid;}// &#20063;&#21487;&#20197;&#20351;&#29992;SQL&#35821;&#21477;&#29983;&#25104;&#65306;&gt; insert into Price( Name, UUID, Price) values('FEIFEI_TEST', uuid(), 32);3 正则表达式4 数组操作4.1 向二位数组中添加键值对// &#26041;&#27861;&#19968;$tempArr=array();foreach($arr as $key =&gt; $value){    $value['new_key'] = $value['old_key1']+$value['old_key2'];    $tempArr[] = $value;}// &#26041;&#27861;&#20108;foreach($arr as $key =&gt; $value){    $arr[$key]['new_key'] = $value['old_key1']+$value['old_key2'];}4.2 判断二维数组是否为空function array_is_null($arr = null){    if(is_array($arr)){    foreach($arr as $k=&gt;$v){        if($v&amp;&amp;!is_array($v)){        return false;        }        $t = self::array_is_null($v);        if(!$t){        return false;        }    }    return true;    }elseif(!$arr){    return true;    }else{    return false;    }}5 日期时间操作5.1 获取上个月第一天及最后一天echo date('Y-m-01', strtotime('-1 month'));echo date('Y-m-t', strtotime('-1 month'));// &#19978;&#20010;&#26376;&#31532;&#19968;&#22825;,  &#35745;&#31639;&#20986;&#26412;&#26376;&#31532;&#19968;&#22825;&#20877;&#20943;&#19968;&#20010;&#26376;echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 month'));// &#19978;&#20010;&#26376;&#26368;&#21518;&#19968;&#22825;,// &#35745;&#31639;&#20986;&#26412;&#26376;&#31532;&#19968;&#22825;&#20877;&#20943;&#19968;&#22825;echo date('Y-m-d', strtotime(date('Y-m-01') . ' -1 day'));5.2 获取当月第一天及最后一天$BeginDate=date('Y-m-01', strtotime(date("Y-m-d")));echo date('Y-m-d', strtotime("$BeginDate +1 month -1 day"));5.3 获取当前年份、月份、日、天数echo " &#26412;&#26376;&#20849;&#26377;:".date("t")."&#22825;";echo " &#24403;&#21069;&#24180;&#20221;".date('Y');echo " &#24403;&#21069;&#26376;&#20221;".date('m');echo " &#24403;&#21069;&#20960;&#21495;".date('d');5.4 日期转时间戳，时间戳转日期strtotime('2010-03-24 08:15:42');date('Y-m-d H:i:s', 1156219870);5.5 计算已成为会员多少天或距离某活动还剩余多少天function get_days_calc($calcTime, $currentTime, $differOrSurplus){    switch ($differOrSurplus) {    case 1:    return round(($currentTime-$calcTime)/3600/24);    break;    case 2:    return round(($calcTime-$currentTime)/3600/24);    break;    default:    return round(($currentTime-$calcTime)/3600/24);    break;    }}6 文件操作6.1 下载文件header("Content-type:text/html;charset=utf-8");/** * &#25991;&#20214;&#19979;&#36733; * @param  [type] $file_url [&#32477;&#23545;&#36335;&#24452;&#65292;&#22914;:$_SERVER['DOCUMENT_ROOT'].'/upload/file/2019/01/18/test.png';] * @param  [type] $new_name [&#25351;&#23450;&#25991;&#20214;&#21517;&#31216;] * @return [type] [description] */function downloadFile($file_url,$new_name=''){    if(!isset($file_url)||trim($file_url) == ''){    echo '500';    }    //&#26816;&#26597;&#25991;&#20214;&#26159;&#21542;&#23384;&#22312;    if(!file_exists($file_url)){    echo '404';    }    $file_name=basename($file_url);    $file_type=explode('.',$file_url);    $file_type=$file_type[count($file_type)-1];    $file_name=trim($new_name=='')?$file_name:urlencode($new_name);    $file_type=fopen($file_url,'r'); //&#25171;&#24320;&#25991;&#20214;    //&#36755;&#20837;&#25991;&#20214;&#26631;&#31614;    header("Content-type: application/octet-stream");    header("Accept-Ranges: bytes");    header("Accept-Length: ".filesize($file_url));    header("Content-Disposition: attachment; filename=".$file_name);    //&#36755;&#20986;&#25991;&#20214;&#20869;&#23481;    echo fread($file_type,filesize($file_url));    fclose($file_type);}几点注意事项header("Content-type:text/html;charset=utf-8")的作用：在服务器响应浏览器的请求时，告诉浏览器以编码格式为UTF-8的编码显示该内容。关于file_exists()函数不支持中文路径的问题:因为php函数比较早，不支持中文，所以如果被下载的文件名是中文的话，需要对其进行字符编码转换，否则file_exists()函数不能识别，可以使用iconv()函数进行编码转换。$file_sub_path() 我使用的是绝对路径，执行效率要比相对路径高。Header("Content-type: application/octet-stream")的作用：通过这句代码客户端浏览器就能知道服务端返回的文件形式。Header("Accept-Ranges: bytes")的作用：告诉客户端浏览器返回的文件大小是按照字节进行计算的。Header("Accept-Length:".$file_size)的作用：告诉浏览器返回的文件大小。Header("Content-Disposition: attachment; filename=".$file_name)的作用:告诉浏览器返回的文件的名称。以上四个Header()是必需的。fclose($fp)可以把缓冲区内最后剩余的数据输出到磁盘文件中，并释放文件指针和有关的缓冲区6.2 参考资料Php如何实现下载功能超详细流程分析php实现当前页面点击下载文件实例7 图形图像处理技术8 PHP 加密技术9 PHP 面向对象10 其他10.1 获取当前URLfunction getCurrentPageURL(){    $pageURL = 'http';    if (isset($_SERVER["HTTPS"]) &amp;&amp; $_SERVER["HTTPS"] == "on")    {    $pageURL .= "s";    }    $pageURL .= "://";    if ($_SERVER["SERVER_PORT"] != "80")    {    $pageURL .= $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];    }    else    {    $pageURL .= $_SERVER["SERVER_NAME"] . $_SERVER["REQUEST_URI"];    }    return $pageURL;}10.2 curl 请求处理function curl( $url = '',$method = 'GET',$req_data = false,$header = false,$response_header = false,$exec_time = 5,$connect_time = 5 ){    $method = strtoupper( $method );    $ch = curl_init();    // &#35774;&#32622;&#35831;&#27714;url    curl_setopt( $ch,CURLOPT_URL,$url );    // &#35774;&#32622;&#35831;&#27714;&#26041;&#27861;,&#40664;&#35748;&#25191;&#34892;GET&#35831;&#27714;&#65292;&#26080;&#38656;&#35774;&#32622;    if( 'POST' == $method ){    curl_setopt( $ch, CURLOPT_POST,1 );    }elseif( 'GET' != $method ){    curl_setopt( $ch, CURLOPT_CUSTOMREQUEST,$method );    }    // &#35774;&#32622;&#35831;&#27714;&#22836;    if( null != $header &amp;&amp; is_array($header) ){    curl_setopt( $ch,CURLOPT_HTTPHEADER,array_map(function($field,$value){        return $field . ':' . $value;    }, array_keys($header), $header) );    }    // &#35774;&#32622;&#35831;&#35831;&#27714;&#25968;&#25454;    if( null != $req_data &amp;&amp; 'GET' != $method ){    if ( is_array($req_data) &amp;&amp; !isset($req_data['isfile']) ){        $req_data = http_build_query($req_data);    }    curl_setopt( $ch,CURLOPT_POSTFIELDS,$req_data );    }    //&#35774;&#32622;&#36755;&#20986;&#25968;&#25454;&#20013;&#21253;&#21547;http header    curl_setopt( $ch, CURLOPT_HEADER,$response_header );    // &#23558;curl_exec()&#33719;&#21462;&#30340;&#20449;&#24687;&#20197;&#23383;&#31526;&#20018;&#36820;&#22238;&#65292;&#32780;&#19981;&#26159;&#30452;&#25509;&#36755;&#20986;    curl_setopt( $ch,CURLOPT_RETURNTRANSFER,true );    // &#20801;&#35768; cURL &#20989;&#25968;&#25191;&#34892;&#30340;&#26368;&#38271;&#31186;&#25968;&#12290;    curl_setopt( $ch,CURLOPT_TIMEOUT,$exec_time );    //&#22312;&#23581;&#35797;&#36830;&#25509;&#26102;&#31561;&#24453;&#30340;&#31186;&#25968;&#12290;&#35774;&#32622;&#20026;0&#65292;&#21017;&#26080;&#38480;&#31561;&#24453;    curl_setopt( $ch,CURLOPT_CONNECTTIMEOUT,$connect_time );    // &#25191;&#34892;curl&#35831;&#27714;    $response = curl_exec($ch);    //&#33719;&#21462;&#29366;&#24577;&#30721;    $status = curl_getinfo($ch, CURLINFO_HTTP_CODE);    //&#20851;&#38381;curl&#22238;&#35805;&#24182;&#37322;&#25918;&#36164;&#28304;    curl_close($ch);    //&#20998;&#31163;header&#19982;body    if( $response_header ){    $tmp         = explode("\r\n\r\n", $response);    $resp_header = $tmp[0];    $data        = $tmp[1];    } else {    $resp_header = null;    $data        = $response;    }    $result['errcode'] = $status;    $result['header']  = $resp_header;    $result['data']    = $data;    return $result;}11 PHP 交互11.1 JavaScript 语言11.1.1 了解 JavaScript11.1.2 JavaScript 语言基础11.2 Cookie 与 Session11.3 同步和异步加载数据11.3.1 同步&lt;?php$host="localhost";$db_user="root";$db_pass="root";$db_name="test";$timezone="Asia/Shanghai";$link=mysqli_connect($host,$db_user,$db_pass,$db_name);// mysql_select_db($db_name,$link);mysqli_query($link,"SET names UTF8");header("Content-Type: text/html; charset=utf-8");?&gt;&lt;?phpinclude_once("config.php");require_once('page.class.php'); //&#20998;&#39029;&#31867;$showrow = 10; //&#19968;&#39029;&#26174;&#31034;&#30340;&#34892;&#25968;$curpage = empty($_GET['page']) ? 1 : $_GET['page']; //&#24403;&#21069;&#30340;&#39029;,&#36824;&#24212;&#35813;&#22788;&#29702;&#38750;&#25968;&#23383;&#30340;&#24773;&#20917;$url = "?page={page}"; //&#20998;&#39029;&#22320;&#22336;&#65292;&#22914;&#26524;&#26377;&#26816;&#32034;&#26465;&#20214; ="?page={page}&amp;q=".$_GET['q']//&#30465;&#30053;&#20102;&#38142;&#25509;mysql&#30340;&#20195;&#30721;&#65292;&#27979;&#35797;&#26102;&#33258;&#34892;&#28155;&#21152;$sql = "SELECT id,content,addtime FROM wishing_wall";$total = mysqli_num_rows(mysqli_query($link,$sql)); //&#35760;&#24405;&#24635;&#26465;&#25968;if (!empty($_GET['page']) &amp;&amp; $total != 0 &amp;&amp; $curpage &gt; ceil($total / $showrow))    $curpage = ceil($total_rows / $showrow); //&#24403;&#21069;&#39029;&#25968;&#22823;&#20110;&#26368;&#21518;&#39029;&#25968;&#65292;&#21462;&#26368;&#21518;&#19968;&#39029;//&#33719;&#21462;&#25968;&#25454;$sql .= " LIMIT " . ($curpage - 1) * $showrow . ",$showrow;";$query = mysqli_query($link,$sql);?&gt;&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;    &lt;head&gt;        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;        &lt;title&gt;&#28436;&#31034;&#65306;PHP&#31616;&#21333;&#28418;&#20142;&#30340;&#20998;&#39029;&#31867;&lt;/title&gt;        &lt;link rel="stylesheet" type="text/css" href="http://www.sucaihuo.com/jquery/css/common.css" /&gt;        &lt;style type="text/css"&gt;            p{margin:0}            #page{                height:40px;                padding:20px 0px;            }            #page a{                display:block;                float:left;                margin-right:10px;                padding:2px 12px;                height:24px;                border:1px #cccccc solid;                background:#fff;                text-decoration:none;                color:#808080;                font-size:12px;                line-height:24px;            }            #page a:hover{                color:#077ee3;                border:1px #077ee3 solid;            }            #page a.cur{                border:none;                background:#077ee3;                color:#fff;            }            #page p{                float:left;                padding:2px 12px;                font-size:12px;                height:24px;                line-height:24px;                color:#bbb;                border:1px #ccc solid;                background:#fcfcfc;                margin-right:8px;            }            #page p.pageRemark{                border-style:none;                background:none;                margin-right:0px;                padding:4px 0px;                color:#666;            }            #page p.pageRemark b{                color:red;            }            #page p.pageEllipsis{                border-style:none;                background:none;                padding:4px 0px;                color:#808080;            }            .dates li {font-size: 14px;margin:20px 0}            .dates li span{float:right}        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;div class="head"&gt;            &lt;div class="head_inner clearfix"&gt;                &lt;ul id="nav"&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com"&gt;&#39318; &#39029;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/templates"&gt;&#32593;&#31449;&#27169;&#26495;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/js"&gt;&#32593;&#39029;&#29305;&#25928;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/php"&gt;PHP&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href="http://www.sucaihuo.com/site"&gt;&#31934;&#36873;&#32593;&#22336;&lt;/a&gt;&lt;/li&gt;                &lt;/ul&gt;                &lt;a class="logo" href="http://www.sucaihuo.com"&gt;&lt;img src="http://www.sucaihuo.com/Public/images/logo.jpg" alt="&#32032;&#26448;&#28779;logo" /&gt;&lt;/a&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div class="container"&gt;            &lt;div class="demo"&gt;                &lt;div class="showData"&gt;                    &lt;ul class="dates"&gt;                        &lt;?php while ($row = mysqli_fetch_array($query)) { ?&gt;                            &lt;li&gt;                                &lt;span&gt;&lt;?php echo $row['addtime'] ?&gt;&lt;/span&gt;                                &lt;a target="_blank" href="http://www.sucaihuo.com/js"&gt;&lt;?php echo $row['content'] ?&gt;&lt;/a&gt;                            &lt;/li&gt;                        &lt;?php } ?&gt;                    &lt;/ul&gt;                    &lt;!--&#26174;&#31034;&#25968;&#25454;&#21306;--&gt;                &lt;/div&gt;                &lt;div class="showPage"&gt;                    &lt;?php                    if ($total &gt; $showrow) {//&#24635;&#35760;&#24405;&#25968;&#22823;&#20110;&#27599;&#39029;&#26174;&#31034;&#25968;&#65292;&#26174;&#31034;&#20998;&#39029;                        $page = new page($total, $showrow, $curpage, $url, 2);                        echo $page-&gt;myde_write();                    }                    ?&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;&lt;?php/* * ********************************************* * @&#31867;&#21517;:   page * @&#21442;&#25968;:   $myde_total - &#24635;&#35760;&#24405;&#25968; *          $myde_size - &#19968;&#39029;&#26174;&#31034;&#30340;&#35760;&#24405;&#25968; *          $myde_page - &#24403;&#21069;&#39029; *          $myde_url - &#33719;&#21462;&#24403;&#21069;&#30340;url * @&#21151;&#33021;:   &#20998;&#39029;&#23454;&#29616; * @&#20316;&#32773;:   &#23435;&#28023;&#38401; */class page {    private $myde_total;          //&#24635;&#35760;&#24405;&#25968;    private $myde_size;           //&#19968;&#39029;&#26174;&#31034;&#30340;&#35760;&#24405;&#25968;    private $myde_page;           //&#24403;&#21069;&#39029;    private $myde_page_count;     //&#24635;&#39029;&#25968;    private $myde_i;              //&#36215;&#22836;&#39029;&#25968;    private $myde_en;             //&#32467;&#23614;&#39029;&#25968;    private $myde_url;            //&#33719;&#21462;&#24403;&#21069;&#30340;url    /*     * $show_pages     * &#39029;&#38754;&#26174;&#31034;&#30340;&#26684;&#24335;&#65292;&#26174;&#31034;&#38142;&#25509;&#30340;&#39029;&#25968;&#20026;2*$show_pages+1&#12290;     * &#22914;$show_pages=2&#37027;&#20040;&#39029;&#38754;&#19978;&#26174;&#31034;&#23601;&#26159;[&#39318;&#39029;] [&#19978;&#39029;] 1 2 3 4 5 [&#19979;&#39029;] [&#23614;&#39029;]     */    private $show_pages;    public function __construct($myde_total = 1, $myde_size = 1, $myde_page = 1, $myde_url, $show_pages = 2) {        $this-&gt;myde_total = $this-&gt;numeric($myde_total);        $this-&gt;myde_size = $this-&gt;numeric($myde_size);        $this-&gt;myde_page = $this-&gt;numeric($myde_page);        $this-&gt;myde_page_count = ceil($this-&gt;myde_total / $this-&gt;myde_size);        $this-&gt;myde_url = $myde_url;        if ($this-&gt;myde_total &lt; 0)            $this-&gt;myde_total = 0;        if ($this-&gt;myde_page &lt; 1)            $this-&gt;myde_page = 1;        if ($this-&gt;myde_page_count &lt; 1)            $this-&gt;myde_page_count = 1;        if ($this-&gt;myde_page &gt; $this-&gt;myde_page_count)            $this-&gt;myde_page = $this-&gt;myde_page_count;        $this-&gt;limit = ($this-&gt;myde_page - 1) * $this-&gt;myde_size;        $this-&gt;myde_i = $this-&gt;myde_page - $show_pages;        $this-&gt;myde_en = $this-&gt;myde_page + $show_pages;        if ($this-&gt;myde_i &lt; 1) {            $this-&gt;myde_en = $this-&gt;myde_en + (1 - $this-&gt;myde_i);            $this-&gt;myde_i = 1;        }        if ($this-&gt;myde_en &gt; $this-&gt;myde_page_count) {            $this-&gt;myde_i = $this-&gt;myde_i - ($this-&gt;myde_en - $this-&gt;myde_page_count);            $this-&gt;myde_en = $this-&gt;myde_page_count;        }        if ($this-&gt;myde_i &lt; 1)            $this-&gt;myde_i = 1;    }    //&#26816;&#27979;&#26159;&#21542;&#20026;&#25968;&#23383;    private function numeric($num) {        if (strlen($num)) {            if (!preg_match("/^[0-9]+$/", $num)) {                $num = 1;            } else {                $num = substr($num, 0, 11);            }        } else {            $num = 1;        }        return $num;    }    //&#22320;&#22336;&#26367;&#25442;    private function page_replace($page) {        return str_replace("{page}", $page, $this-&gt;myde_url);    }    //&#39318;&#39029;    private function myde_home() {        if ($this-&gt;myde_page != 1) {            return "&lt;a href='" . $this-&gt;page_replace(1) . "' title='&#39318;&#39029;'&gt;&#39318;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#39318;&#39029;&lt;/p&gt;";        }    }    //&#19978;&#19968;&#39029;    private function myde_prev() {        if ($this-&gt;myde_page != 1) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page - 1) . "' title='&#19978;&#19968;&#39029;'&gt;&#19978;&#19968;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#19978;&#19968;&#39029;&lt;/p&gt;";        }    }    //&#19979;&#19968;&#39029;    private function myde_next() {        if ($this-&gt;myde_page != $this-&gt;myde_page_count) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page + 1) . "' title='&#19979;&#19968;&#39029;'&gt;&#19979;&#19968;&#39029;&lt;/a&gt;";        } else {            return"&lt;p&gt;&#19979;&#19968;&#39029;&lt;/p&gt;";        }    }    //&#23614;&#39029;    private function myde_last() {        if ($this-&gt;myde_page != $this-&gt;myde_page_count) {            return "&lt;a href='" . $this-&gt;page_replace($this-&gt;myde_page_count) . "' title='&#23614;&#39029;'&gt;&#23614;&#39029;&lt;/a&gt;";        } else {            return "&lt;p&gt;&#23614;&#39029;&lt;/p&gt;";        }    }    //&#36755;&#20986;    public function myde_write($id = 'page') {        $str = "&lt;div id=" . $id . "&gt;";        $str.=$this-&gt;myde_home();        $str.=$this-&gt;myde_prev();        if ($this-&gt;myde_i &gt; 1) {            $str.="&lt;p class='pageEllipsis'&gt;...&lt;/p&gt;";        }        for ($i = $this-&gt;myde_i; $i &lt;= $this-&gt;myde_en; $i++) {            if ($i == $this-&gt;myde_page) {                $str.="&lt;a href='" . $this-&gt;page_replace($i) . "' title='&#31532;" . $i . "&#39029;' class='cur'&gt;$i&lt;/a&gt;";            } else {                $str.="&lt;a href='" . $this-&gt;page_replace($i) . "' title='&#31532;" . $i . "&#39029;'&gt;$i&lt;/a&gt;";            }        }        if ($this-&gt;myde_en &lt; $this-&gt;myde_page_count) {            $str.="&lt;p class='pageEllipsis'&gt;...&lt;/p&gt;";        }        $str.=$this-&gt;myde_next();        $str.=$this-&gt;myde_last();        $str.="&lt;p class='pageRemark'&gt;&#20849;&lt;b&gt;" . $this-&gt;myde_page_count .                "&lt;/b&gt;&#39029;&lt;b&gt;" . $this-&gt;myde_total . "&lt;/b&gt;&#26465;&#25968;&#25454;&lt;/p&gt;";        $str.="&lt;/div&gt;";        return $str;    }}?&gt;11.3.2 异步处理CREATE TABLE IF NOT EXISTS `food` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `title` varchar(100) NOT NULL,  `pic` varchar(255) NOT NULL,  PRIMARY KEY (`id`)) ENGINE=MyISAM  DEFAULT CHARSET=utf8;&lt;div id="list"&gt;    &lt;ul&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div id="pagecount"&gt;&lt;/div&gt;var curPage = 1; //&#24403;&#21069;&#39029;&#30721;var total,pageSize,totalPage; //&#24635;&#35760;&#24405;&#25968;&#65292;&#27599;&#39029;&#26174;&#31034;&#25968;&#65292;&#24635;&#39029;&#25968;//&#33719;&#21462;&#25968;&#25454;function getData(page){        $.ajax({                type: 'POST',                url: 'pages.php',                data: {'pageNum':page-1},                dataType:'json',                beforeSend:function(){                        $("#list ul").append("&lt;li id='loading'&gt;loading...&lt;/li&gt;");//&#26174;&#31034;&#21152;&#36733;&#21160;&#30011;                },                success:function(json){                        $("#list ul").empty();//&#28165;&#31354;&#25968;&#25454;&#21306;                        total = json.total; //&#24635;&#35760;&#24405;&#25968;                        pageSize = json.pageSize; //&#27599;&#39029;&#26174;&#31034;&#26465;&#25968;                        curPage = page; //&#24403;&#21069;&#39029;                        totalPage = json.totalPage; //&#24635;&#39029;&#25968;                        var li = "";                        var list = json.list;                        $.each(list,function(index,array){ //&#36941;&#21382;json&#25968;&#25454;&#21015;                                li += "&lt;li&gt;&lt;a href='#'&gt;&lt;img src='"+array['pic']+"'&gt;"+array['title']                +"&lt;/a&gt;&lt;/li&gt;";                        });                        $("#list ul").append(li);                },                complete:function(){ //&#29983;&#25104;&#20998;&#39029;&#26465;                        getPageBar();                },                error:function(){                        alert("&#25968;&#25454;&#21152;&#36733;&#22833;&#36133;");                }        });}//&#33719;&#21462;&#20998;&#39029;&#26465;function getPageBar(){        //&#39029;&#30721;&#22823;&#20110;&#26368;&#22823;&#39029;&#25968;        if(curPage&gt;totalPage) curPage=totalPage;        //&#39029;&#30721;&#23567;&#20110;1        if(curPage&lt;1) curPage=1;        pageStr = "&lt;span&gt;&#20849;"+total+"&#26465;&lt;/span&gt;&lt;span&gt;"+curPage    +"/"+totalPage+"&lt;/span&gt;";        //&#22914;&#26524;&#26159;&#31532;&#19968;&#39029;        if(curPage==1){                pageStr += "&lt;span&gt;&#39318;&#39029;&lt;/span&gt;&lt;span&gt;&#19978;&#19968;&#39029;&lt;/span&gt;";        }else{                pageStr += "&lt;span&gt;&lt;a href='javascript:void(0)' rel='1'&gt;&#39318;&#39029;&lt;/a&gt;&lt;/span&gt;        &lt;span&gt;&lt;a href='javascript:void(0)' rel='"+(curPage-1)+"'&gt;&#19978;&#19968;&#39029;&lt;/a&gt;&lt;/span&gt;";        }        //&#22914;&#26524;&#26159;&#26368;&#21518;&#39029;        if(curPage&gt;=totalPage){                pageStr += "&lt;span&gt;&#19979;&#19968;&#39029;&lt;/span&gt;&lt;span&gt;&#23614;&#39029;&lt;/span&gt;";        }else{                pageStr += "&lt;span&gt;&lt;a href='javascript:void(0)' rel='"+(parseInt(curPage)+1)+"'&gt;        &#19979;&#19968;&#39029;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href='javascript:void(0)' rel='"+totalPage+"'&gt;&#23614;&#39029;&lt;/a&gt;        &lt;/span&gt;";        }        $("#pagecount").html(pageStr);}$(function(){        getData(1);        $("#pagecount span a").live('click',function(){                var rel = $(this).attr("rel");                if(rel){                        getData(rel);                }        });});include_once('connect.php'); //&#36830;&#25509;&#25968;&#25454;&#24211;&#65292;&#30053;&#36807;&#65292;&#20855;&#20307;&#35831;&#19979;&#36733;&#28304;&#30721;&#26597;&#30475;$page = intval($_POST['pageNum']); //&#24403;&#21069;&#39029;$result = mysql_query("select id from food");$total = mysql_num_rows($result);//&#24635;&#35760;&#24405;&#25968;$pageSize = 6; //&#27599;&#39029;&#26174;&#31034;&#25968;$totalPage = ceil($total/$pageSize); //&#24635;&#39029;&#25968;$startPage = $page*$pageSize; //&#24320;&#22987;&#35760;&#24405;//&#26500;&#36896;&#25968;&#32452;$arr['total'] = $total;$arr['pageSize'] = $pageSize;$arr['totalPage'] = $totalPage;$query = mysql_query("select id,title,pic from food order by id asc limit$startPage,$pageSize"); //&#26597;&#35810;&#20998;&#39029;&#25968;&#25454;while($row=mysql_fetch_array($query)){         $arr['list'][] = array(                'id' =&gt; $row['id'],                'title' =&gt; $row['title'],                'pic' =&gt; $row['pic'],         );}echo json_encode($arr); //&#36755;&#20986;JSON&#25968;&#25454;11.3.3 跨域请求问题处理11.3.3.1 问题概述11.3.3.2 问题处理Listing 1: 客户端请求代码// &#23458;&#25143;&#31471;&#35831;&#27714;&#20195;&#30721;// &#19978;&#20256;&#25991;&#20214;function upload_idcard_file(_this,type){    var formData = new FormData();    formData.append('type',type);    formData.append('file',_this.files[0]);    $.ajax({        url: '{$upload_file_url}',        type: 'POST',        dataType: 'json',        data: formData,        cache: false,        contentType : false,        processData : false,        headers : {"access_token" : "{$access_token}"},        success:function(d){            var img_url = d.data;            img_url = 'http:'+img_url;            load_img(_this.id,img_url);        },        error:function(err){            console.log(err);        }    });}Listing 2: 服务端处理：粗糙解决方式// &#26381;&#21153;&#31471;&#22788;&#29702;&#65306;&#31895;&#31961;&#35299;&#20915;&#26041;&#24335;// &#20801;&#35768;&#25152;&#26377;&#36328;&#22495;&#35831;&#27714;header('Access-Control-Allow-Origin: *');// &#21482;&#20801;&#35768; http://www.baidu.com &#21457;&#26469;&#30340;&#36328;&#22495;&#35831;&#27714;// header('Access-Control-Allow-Origin: http://www.baidu.com');// &#35774;&#32622;&#25903;&#25345;&#30340; http &#35831;&#27714;&#26041;&#24335;header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');// &#20801;&#35768;&#30340;&#21709;&#24212;&#22836;&#23383;&#27573;&#65292;&#35831;&#25353;&#29031;&#33258;&#24049;&#38656;&#27714;&#28155;&#21152;header('Access-Control-Allow-Headers:access_token');Listing 3: 服务端处理：动态判断处理跨域问题if(isset($_SERVER['HTTP_ORIGIN'])){    // &#35831;&#27714;&#26041;&#27861;    $request_method = $_SERVER['REQUEST_METHOD'];    // &#23450;&#20041;&#19968;&#20010;&#20801;&#35768;&#36328;&#22495;&#35831;&#27714;&#25509;&#21475;&#30340;&#22495;&#21517;&#21015;&#34920;&#65292;&#36825;&#37324;&#20320;&#21487;&#20197;&#29992;&#37197;&#32622;&#20063;&#21487;&#20197;&#29992;&#20854;&#23427;&#24418;&#24335;&#65292;&#25105;&#36825;&#37324;&#21482;&#26159;&#29992;$GLOBALS&#31616;&#21333;&#28436;&#31034;&#19968;&#19979;    $allow_origin = array(    'baidu.com',    'bing.com'    );    // &#21028;&#26029;&#26159;&#21542;&#26377;origin&#35831;&#27714;&#22836;    if(in_array($request_method, $allow_origin)    {        header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);        // &#23458;&#25143;&#31471;&#25658;&#24102;&#35777;&#20070;&#24335;&#35775;&#38382;&#12290;&#20986;&#20110;&#23433;&#20840;&#32771;&#34385;&#65292;&#35813;&#39033;&#35774;&#32622;&#20026;true&#26102;&#65292;Access-Control-Allow-Origin &#30340;&#20540;&#19981;&#20801;&#35768;&#20026;&#12300;*&#12301;        header('Access-Control-Allow-Credentials: true');         header('Access-Control-Allow-Methods:POST,GET,OPTIONS,PUT,DELETE');        header('Access-Control-Allow-Headers:x-requested-with,content-type,access_token');    }    }}11.3.3.3 Session 跨域问题ini_set('session.cookie_domain', '.a.com');header('Access-Control-Allow-Credentials: true');11.3.4 References跨域Ajax请求时是否带Cookie的设置11.4 分页11.4.1 介绍分页（英语：Paging），是一种操作系统里存储器管理的一种技术，可以使计算机的主存可以使用存储在辅助存储器中的数据。……11.4.2 前端分页与后端分页前端分页一般用于数据量较小的情况，一次请求把数据全部从后端请求回来。后端分页适用于数据量偏大时的情况，减小请求传输压力。前端需要将每页条数和当前页传给后端，后端根据条件查询出数据再传给前端，包括总条数、当前页、每页多少条数据等。11.5 PHP 与 XML 技术11.6 Referenceshttps://www.helloweba.net/javascript/195.htmlhttps://zh.wikipedia.org/wiki/分頁https://www.zhihu.com/question/2642152712 附录一：PHP 常见函数12.1 Stringaddcslashes — 以 C 语言风格使用反斜线转义字符串中的字符addslashes()，字符串转义，使用反斜线引用字符串。如I’m Zhao中的’bin2hex — 函数把包含数据的二进制字符串转换为十六进制值chop — rtrim 的别名chr — 返回指定的字符chunk_split — 将字符串分割成小块convert_cyr_string — 将字符由一种 Cyrillic 字符转换成另一种convert_uudecode — 解码一个 uuencode 编码的字符串convert_uuencode — 使用 uuencode 编码一个字符串count_chars — 返回字符串所用字符的信息crc32 — 计算一个字符串的 crc32 多项式crypt — 单向字符串散列echo — 输出一个或多个字符串fprintf — 将格式化后的字符串写入到流print_r — 以易于理解的格式打印变量。var_dump — 打印变量的相关信息var_export — 输出或返回一个变量的字符串表示print_r ( mixed $expression [, bool $return = FALSE ] ) : mixed    var_dump ( mixed $expression [, mixed $... ] ) : void    var_export ( mixed $expression [, bool $return ] ) : mixedget_html_translation_table — 返回使用 htmlspecialchars 和 htmlentities 后的转换表hebrev — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）hebrevc — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符hex2bin — 转换十六进制字符串为二进制字符串html_entity_decode — Convert HTML entities to their corresponding charactershtmlentities — 将字符转换为 HTML 转义字符htmlspecialchars_decode — 将特殊的 HTML 实体转换回普通字符htmlspecialchars — 将特殊字符转换为 HTML 实体htmlentities 和 htmlspecialchars 的区别:这两个函数的功能都是转换字符为 HTML 字符编码，特别是 url 和代码字符串。htmlentities 转换所有的 html 标记；htmlspecialchars 只格式化&amp; ' " &lt; 和 \&gt; 这几个特殊符号。lcfirst — 使一个字符串的第一个字符小写levenshtein — 计算两个字符串之间的编辑距离localeconv — Get numeric formatting informationltrim — 删除字符串开头的空白字符（或其他字符）md5_file — 计算指定文件的 MD5 散列值md5 — 计算字符串的 MD5 散列值metaphone — Calculate the metaphone key of a stringmoney_format — 将数字格式化成货币字符串nl_langinfo — Query language and locale informationnl2br — 在字符串所有新行之前插入 HTML 换行标记number_format — 以千位分隔符方式格式化一个数字// &#26080;&#35770;&#20540;&#26159;&#21542;&#20026;0&#65292;&#37117;&#20445;&#30041;&#23567;&#25968;&#28857;&#21518;&#20004;&#20301;echo number_format((float)round($a,2,PHP_ROUND_HALF_ODD),2,'.','');// &#25972;&#25968;&#37096;&#20998;&#20197;&#21315;&#20301;&#20998;&#38548;&#31526;&#26041;&#24335;&#20998;&#38548;echo number_format((float)round($a,2,PHP_ROUND_HALF_ODD),2,'.',',');ord — 转换字符串第一个字节为 0-255 之间的值parse_str — 将字符串解析成多个变量print — 输出字符串printf — 输出格式化字符串quoted_printable_decode — 将 quoted-printable 字符串转换为 8-bit 字符串quoted_printable_encode — 将 8-bit 字符串转换成 quoted-printable 字符串quotemeta — 转义元字符集rtrim — 删除字符串末端的空白字符（或者其他字符）setlocale — 设置地区信息sha1_file — 计算文件的 sha1 散列值sha1 — 计算字符串的 sha1 散列值similar_text — 计算两个字符串的相似度soundex — Calculate the soundex key of a stringsprintf — Return a formatted stringsscanf — 根据指定格式解析输入的字符str_getcsv — 解析 CSV 字符串为一个数组str_ireplace — str_replace 的忽略大小写版本str_pad — 使用另一个字符串填充字符串为指定长度str_repeat — 重复一个字符串str_rot13 — 对字符串执行 ROT13 转换str_shuffle — 随机打乱一个字符串str_split — 将字符串转换为数组str_word_count — 返回字符串中单词的使用情况strcasecmp — 二进制安全比较字符串（不区分大小写）strcmp — 二进制安全字符串比较strcoll — 基于区域设置的字符串比较strcspn — 获取不匹配遮罩的起始子字符串的长度strip_tags — 从字符串中去除 HTML 和 PHP 标记stripcslashes — 反引用一个使用 addcslashes 转义的字符串strpos()，查找字符串首次出现的位置。strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) : int，如果没找到 needle，将返回 FALSE，此函数可能返回布尔值 FALSE，但也可能返回等同于 FALSE 的非布尔值。应使用 = 运算符来测试此函数的返回值。缺点：对中文支持不好// &#21028;&#26029;&#26159;&#21542;&#21253;&#21547;&#26576;&#23383;&#31526;&#20018;$pos = strpos($str,$needle);if($pos !== false){      echo 'exist';}stripslashes — 反引用一个引用字符串strlen()，获取字符串长度。strnatcasecmp — 使用“自然顺序”算法比较字符串（不区分大小写）strnatcmp — 使用自然排序算法比较字符串strncasecmp — 二进制安全比较字符串开头的若干个字符（不区分大小写）strncmp — 二进制安全比较字符串开头的若干个字符strpbrk — 在字符串中查找一组字符的任何一个字符substr()，字符串截取。substr(字符串变量,开始截取的位置，截取个数） 。如：mb_substr() ，字符串截取。mb_substr ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] ) : stringstrstr()，返回字符串从查找字符串出现的位置开始到字符串结尾的字符串// &#21435;&#38500;&#23383;&#31526;&#20018;&#21518;3&#20301;substr($tempStr,0,strlen($tempStr)-3);                                                   // &#25130;&#21462;&#26576;&#20010;&#23383;&#31526;&#20043;&#21518;&#30340;&#23383;&#31526;&#20018;substr($str,strpos($str,"_");// &#21028;&#26029;&#26159;&#21542;&#21253;&#21547;&#26576;&#23383;&#31526;&#20018;&#65292;&#27809;&#26377;&#36820;&#22238;&#20540;&#65292;&#21017;&#19981;&#21253;&#21547;echo strstr($str,'@');stristr()，与 strstr() 的使用方法一样，区别是 stristr 不区分大小写。strchr — strstr 的别名strrchr — 查找指定字符在字符串中的最后一次出现strrev — 反转字符串strripos — 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）strspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。strspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。strstr — 查找字符串的首次出现strtok — 标记分割字符串strtolower — 将字符串转化为小写strtoupper — 将字符串转化为大写strtr — 转换指定字符substr_compare — 二进制安全比较字符串（从偏移位置比较指定长度）substr_count — 计算字串出现的次数str_replace()，搜索替换字符串。substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] ) : mixedtrim — 去除字符串首尾处的空白字符（或者其他字符）ucfirst — 将字符串的首字母转换为大写ucwords — 将字符串中每个单词的首字母转换为大写vfprintf — 将格式化字符串写入流vprintf — 输出格式化字符串vsprintf — 返回格式化字符串wordwrap — 打断字符串为指定数量的字串preg_replace()，搜索匹配替换字符串。Eg：搜索匹配到，,\n\r\s的使用|替换：preg_replace('[,，\s\r\n]+', '|', $ids);sprintf()，格式化字符串。sprintf(格式,要转化的字符串)，Eg：Sprintf('%01.2f',$str);Implode()，字符串的合并（array-&gt;string）。explode()，字符串的分割（string-&gt;array）。join — implode() 的别名// &#21028;&#26029;&#26159;&#21542;&#21253;&#21547;&#26576;&#23383;&#31526;&#20018;$tempArr = explode(',',$str);if(count($tempArr) &gt; 1){    return true;}htmlentities/htmlspecialchars/addslashes/stripslashes/strip_tags、mysql_real_escape_strin。json_decode()，对 JSON 格式的字符串进行解码。json_encode()，对变量进行 JSON 编码 。strtolower()，把所有字符转换为小写strtoupper(), 把所有字符转换为大写strncmp() ， 二进制安全比较字符串开头的若干个字符（区分大小写）12.2 Arraycurl_setopt_array — 为 cURL 传输会话批量设置选项array_change_key_case — 将数组中的所有键名修改为全大写或小写array_chunk — 将一个数组分割成多个array_column — 返回数组中指定的一列array_combine — 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值array_count_values — 统计数组中所有的值array_diff_assoc — 带索引检查计算数组的差集array_diff_key — 使用键名比较计算数组的差集array_diff_uassoc — 用用户提供的回调函数做索引检查来计算数组的差集array_diff_ukey — 用回调函数对键名比较计算数组的差集array_diff — 计算数组的差集array_intersect_assoc — 带索引检查计算数组的交集array_intersect_key — 使用键名比较计算数组的交集array_intersect_uassoc — 带索引检查计算数组的交集，用回调函数比较索引array_intersect_ukey — 用回调函数比较键名来计算数组的交集array_intersect — 计算数组的交集  // array_intersect ( array $array1 , array $array2 [, array $... ] ) : array// &#21435;&#38500;&#31354;&#20803;&#32032;foreach($arr as $k=&gt;$v){    if(!$v) unset($arr[$k]);}### &#25193;&#23637;&#23398;&#20064;&#65306;PHP&#20174;&#25968;&#32452;&#20013;&#21024;&#38500;&#20803;&#32032;&#30340;&#22235;&#31181;&#26041;&#27861;&#23454;&#20363;$array = array(0 =&gt; "a", 1 =&gt; "b", 2 =&gt; "c");// 1. &#21024;&#38500;&#19968;&#20010;&#20803;&#32032;&#65292;&#19988;&#20445;&#25345;&#21407;&#26377;&#32034;&#24341;&#19981;&#21464;unset($array[1]);// &#20320;&#24819;&#21024;&#38500;&#30340;key// &#37325;&#25490;&#32034;&#24341;// &#20351;&#29992; array_values &#20989;&#25968;&#65306;$array = array_values($array);// 2. &#21024;&#38500;&#19968;&#20010;&#20803;&#32032;&#65292;&#19981;&#20445;&#25345;&#32034;&#24341;array_splice($array, 1, 1);// &#20320;&#24819;&#21024;&#38500;&#30340;&#20803;&#32032;&#30340;Offset// 3. &#25353;&#20540;&#21024;&#38500;&#22810;&#20010;&#20803;&#32032;&#65292;&#20445;&#25345;&#32034;&#24341;$array = array_diff($array, ["a", "c"]);           //&#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;&#8594; &#20320;&#24819;&#21024;&#38500;&#30340;&#25968;&#32452;&#20803;&#32032;&#20540;values// 4. &#25353;&#38190;&#21024;&#38500;&#22810;&#20010;&#20803;&#32032;&#65292;&#20445;&#25345;&#32034;&#24341;$array = array_diff_key($array, [0 =&gt; "xy", "2" =&gt; "xy"]);// &#20320;&#24819;&#21024;&#38500;&#30340;&#25968;&#32452;&#38190;keysarray_fill — 用给定的值填充数组array_fill_keys — 使用指定的键和值填充数组array_filter — 用回调函数过滤数组中的单元// array_filter ( array $array [, callable $callback [, int $flag = 0 ]] ) : arrayarray_flip — 交换数组中的键和值array_key_exists — 检查数组里是否有指定的键名或索引array_key_first — Gets the first key of an arrayarray_key_last — Gets the last key of an arrayarray_keys — 返回数组中部分的或所有的键名// array_flip ( array $array ) : arrayarray_map — 为数组的每个元素应用回调函数array_walk_recursive — 对数组中的每个成员递归地应用用户函数array_walk — 使用用户自定义函数对数组中的每个元素做回调处理// array_map ( callable $callback , array $array1 [, array $... ] ) : arrayarray_merge_recursive — 递归地合并一个或多个数组array_merge — 合并一个或多个数组array_multisort — 对多个数组或多维数组进行排序array_reverse — 返回单元顺序相反的数组array_pad — 以指定长度将一个值填充进数组array_pop — 弹出数组最后一个单元（出栈）array_product — 计算数组中所有值的乘积array_push — 将一个或多个单元压入数组的末尾（入栈）array_rand — 从数组中随机取出一个或多个单元array_reduce — 用回调函数迭代地将数组简化为单一的值array_replace_recursive — 使用传递的数组递归替换第一个数组的元素array_replace — 使用传递的数组替换第一个数组的元素array_search — 在数组中搜索给定的值，如果成功则返回首个相应的键名array_slice — 从数组中取出一段array_splice — 去掉数组中的某一部分并用其它值取代array_sum — 对数组中所有值求和array_udiff_assoc — 带索引检查计算数组的差集，用回调函数比较数据array_udiff_uassoc — 带索引检查计算数组的差集，用回调函数比较数据和索引array_udiff — 用回调函数比较数据来计算数组的差集array_uintersect_assoc — 带索引检查计算数组的交集，用回调函数比较数据array_uintersect_uassoc — 带索引检查计算数组的交集，用单独的回调函数比较数据和索引array_uintersect — 计算数组的交集，用回调函数比较数据array_unique — 移除数组中重复的值array_shift — 将数组开头的单元移出数组array_unshift — 在数组开头插入一个或多个单元array_values — 返回数组中所有的值array — 新建一个数组arsort — 对数组进行逆向排序并保持索引关系asort — 对数组进行排序并保持索引关系compact — 建立一个数组，包括变量名和它们的值count — 计算数组中的单元数目，或对象中的属性个数current — 返回数组中的当前单元each — 返回数组中当前的键／值对并将数组指针向前移动一步end — 将数组的内部指针指向最后一个单元extract — 从数组中将变量导入到当前的符号表in_array — 检查数组中是否存在某个值key_exists — 别名 array_key_existskey — 从关联数组中取得键名krsort — 对数组按照键名逆向排序ksort — 对数组按照键名排序list — 把数组中的值赋给一组变量natcasesort — 用“自然排序”算法对数组进行不区分大小写字母的排序natsort — 用“自然排序”算法对数组排序next — 将数组中的内部指针向前移动一位pos — current 的别名prev — 将数组的内部指针倒回一位range — 根据范围创建数组，包含指定的元素reset — 将数组的内部指针指向第一个单元rsort — 对数组逆向排序shuffle — 打乱数组sizeof — count 的别名sort — 对数组排序uasort — 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联uksort — 使用用户自定义的比较函数对数组中的键名进行排序usort — 使用用户自定义的比较函数对数组中的值进行排序    // uksort ( array &amp;$array , callable $key_compare_func ) : booluksort(&amp;$arr, function ($a, $b) use ($seq) {    $seq = array_flip($seq);    $idx1 = $seq[$a] ?? -1;    $idx2 = $seq[$b] ?? -1;    return $idx1 - $idx2;});12.3 Mathbcadd — [加]2个任意精度数字的加法计算bcsub — [减]2个任意精度数字的减法bcmul — [乘]2个任意精度数字乘法计算bcdiv — [除]2个任意精度的数字除法计算$a = '1.234';$b = '5';echo&#8239;bcadd($a,$b,&#8239;4);&#8239;&#8239;//&#8239;6.2340echo&#8239;bcsub($a,&#8239;$b,&#8239;4);&#8239;&#8239;//&#8239;-3.7660echo&#8239;bcmul('1.34747474747',&#8239;'35',&#8239;3);&#8239;//&#8239;47.161/***PHP &#39640;&#31934;&#24230;&#35745;&#31639;&#38382;&#39064;**  1. &#24341;&#20837;  javascript  //&#20026;&#21861;&#19981;&#31561;&#20110; 0.3 ? &#65288;&#27491;&#30830;&#32467;&#26524;&#65306;0.30000000000000004&#65289;  0.1 + 0.2  //&#20026;&#21861;&#19981;&#31561;&#20110; 5.6 ? &#65288;&#27491;&#30830;&#32467;&#26524;&#65306;5.6000000000000005&#65289;  0.8 * 7  php  // &#27491;&#30830;&#32467;&#26524;&#26159; 57&#65292;&#32780;&#19981;&#26159; 58  var_dump(intval(0.58 * 100));  2. &#21407;&#22240;&#20998;&#26512;  &#28014;&#28857;&#36816;&#31639;&#24825;&#30340;&#31096;&#65292;&#24182;&#38750;&#35821;&#35328;&#30340; bug&#65292;&#20294;&#21644;&#35821;&#35328;&#30340;&#23454;&#29616;&#21407;&#29702;&#26377;&#20851;&#65292;&#19981;&#31649;&#20160;&#20040;&#35821;&#35328;&#65292;&#21482;&#35201;&#28041;&#21450;&#28014;&#28857;&#36816;&#31639;&#65292;&#37117;&#26159;&#23384;&#22312;&#31867;&#20284;&#30340;&#38382;&#39064;&#65292;&#20351;&#29992;&#26102;&#19968;&#23450;&#35201;&#27880;&#24847;&#12290;  &#28014;&#28857;&#25968;&#30340;&#34920;&#31034;(IEEE 754)&#65306;&#28014;&#28857;&#25968;, &#20197;64&#20301;&#30340;&#38271;&#24230;(&#21452;&#31934;&#24230;)&#20026;&#20363;, &#20250;&#37319;&#29992;1&#20301;&#31526;&#21495;&#20301;(E), 11&#25351;&#25968;&#20301;(Q), 52&#20301;&#23614;&#25968;(M)&#34920;&#31034;(&#19968;&#20849;64&#20301;)&#12290;  &#31526;&#21495;&#20301;&#65306;&#26368;&#39640;&#20301;&#34920;&#31034;&#25968;&#25454;&#30340;&#27491;&#36127;&#65292;0&#34920;&#31034;&#27491;&#25968;&#65292;1&#34920;&#31034;&#36127;&#25968;&#12290;  &#25351;&#25968;&#20301;&#65306;&#34920;&#31034;&#25968;&#25454;&#20197;2&#20026;&#24213;&#30340;&#24130;&#65292;&#25351;&#25968;&#37319;&#29992;&#20559;&#31227;&#30721;&#34920;&#31034;&#12290;  &#23614;&#25968;&#65306;&#34920;&#31034;&#25968;&#25454;&#23567;&#25968;&#28857;&#21518;&#30340;&#26377;&#25928;&#25968;&#23383;&#12290;  0.58&#30340;&#20108;&#36827;&#21046;&#34920;&#31034;&#26159;: 0.10010100011110101110000101000111101011100001010001111  0.57&#30340;&#20108;&#36827;&#21046;&#34920;&#31034;&#26159;: 0.1001000111101011100001010001111010111000010100011111  &#22914;&#26524;&#21482;&#26159;&#36890;&#36807;&#36825;52&#20301;&#35745;&#31639;&#30340;&#35805;,&#20998;&#21035;&#26159;:0.58 -&gt; 0.57999999999999996&#65292;0.57 -&gt; 0.5699999999999999&#12290;  PHP&#28014;&#28857;&#22411;&#22312;&#36827;&#34892;+-*%/&#23384;&#22312;&#19981;&#20934;&#30830;&#30340;&#38382;&#39064;&#65292;&#20363;&#22914;&#65292;floor((0.1+0.7)*10) &#36890;&#24120;&#20250;&#36820;&#22238; 7 &#32780;&#19981;&#26159;&#39044;&#26399;&#20013;&#30340; 8&#65292;&#22240;&#20026;&#35813;&#32467;&#26524;&#20869;&#37096;&#30340;&#34920;&#31034;&#20854;&#23454;&#26159;&#31867;&#20284; 7.9999999999...&#12290;  3. &#32467;&#35770;  &#27704;&#36828;&#19981;&#35201;&#30456;&#20449;&#28014;&#28857;&#25968;&#32467;&#26524;&#31934;&#30830;&#21040;&#20102;&#26368;&#21518;&#19968;&#20301;&#65292;&#20063;&#27704;&#36828;&#19981;&#35201;&#27604;&#36739;&#20004;&#20010;&#28014;&#28857;&#25968;&#26159;&#21542;&#30456;&#31561;&#12290;&#22914;&#26524;&#30830;&#23454;&#38656;&#35201;&#26356;&#39640;&#30340;&#31934;&#24230;&#65292;&#24212;&#35813;&#20351;&#29992;&#20219;&#24847;&#31934;&#24230;&#25968;&#23398;&#20989;&#25968;&#25110;&#32773; gmp &#20989;&#25968;&#12290;  &#28014;&#28857;&#25968;&#31934;&#30830;&#20301;&#25968;&#21462;&#20915;&#20110; PHP &#37197;&#32622;&#21442;&#25968; precision&#65292;&#40664;&#35748; 14 &#20301;&#65292;&#35745;&#31639;&#26041;&#24335;&#65306;&#20174;&#24038;&#31532;&#19968;&#20010;&#38750;0&#25968;&#23601;&#26159;&#31934;&#24230;&#30340;&#24320;&#22987;&#12290;*/bcmod — 对一个任意精度数字取模bccomp — 比较两个任意精度的数字bcpow — 任意精度数字的乘方bcpowmod — Raise an arbitrary precision number to another, reduced by a specified modulusbcscale — 设置所有bc数学函数的默认小数点保留位数floatval(), 转换为浮点型intval(),转换为整型fmod — 返回除法的浮点数余数intdiv — 对除法结果取整bcsqrt — 任意精度数字的二次方根sqrt — 平方根is_finite — 判断是否为有限值is_infinite — 判断是否为无限值is_nan — 判断是否为合法数值lcg_value — 组合线性同余发生器log10 — 以 10 为底的对数log1p — 返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果log — 自然对数max — 找出最大值min — 找出最小值exp — 计算 e 的指数expm1 — 返回 exp(number) - 1，甚至当 number 的值接近零也能计算出准确结果pi — 得到圆周率值pow— 指数表达式，pow ( number $base , number $exp ) : numbercos — 余弦cosh — 双曲余弦sin — 正弦sinh — 双曲正弦tan — 正切tanh — 双曲正切acos — 反余弦acosh — 反双曲余弦asin — 反正弦asinh — 反双曲正弦atan2 — 两个参数的反正切atan — 反正切atanh — 反双曲正切deg2rad — 将角度转换为弧度rad2deg — 将弧度数转换为相应的角度数mt_getrandmax — 显示随机数的最大可能值mt_rand — 生成更好的随机数mt_srand — 播下一个更好的随机数发生器种子rand — 产生一个随机整数srand — 播下随机数发生器种子intval(), 直接取整，intval ( mixed $var [, int $base = 10 ] ) : intround(), 四舍五入ceil()，向上取整floor(), 向下取整  // intval()  // 3echo intval(3.14);// round()// &#26684;&#24335;&#65306;round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] ) : float//  PHP_ROUND_HALF_UP&#12289; PHP_ROUND_HALF_DOWN PHP_ROUND_HALF_EVEN &#25110; PHP_ROUND_HALF_ODD$number = 1346.21; //float(1346.21)var_dump(round($number, 2));//float(1346)var_dump(round($number, 0));//float(1350)var_dump(round($number, -1));//float(1300)var_dump(round($number, -2)); //10,&#22235;&#33293;&#20845;&#20837;,&#36935;5&#36827;1var_dump(round(9.5, 0, PHP_ROUND_HALF_UP));//9,&#22235;&#33293;&#20845;&#20837;,&#36935;5&#19981;&#33293;&#24323;var_dump(round(9.5, 0, PHP_ROUND_HALF_DOWN));//10,&#22235;&#33293;&#20845;&#20837;,&#25972;&#25968;&#37096;&#20998;&#20026;&#22855;&#25968;&#21017;&#36827;1var_dump(round(9.5, 0, PHP_ROUND_HALF_EVEN));//9,&#22235;&#33293;&#20845;&#20837;,&#25972;&#25968;&#37096;&#20998;&#20026;&#20598;&#25968;&#21017;&#36827;1var_dump(round(9.5, 0, PHP_ROUND_HALF_ODD));//9var_dump(round(8.5, 0, PHP_ROUND_HALF_UP));//8var_dump(round(8.5, 0, PHP_ROUND_HALF_DOWN));//8var_dump(round(8.5, 0, PHP_ROUND_HALF_EVEN));//9var_dump(round(8.5, 0, PHP_ROUND_HALF_ODD));// ceil()// &#26684;&#24335;&#65306;ceil ( float $value ) : float// 4echo ceil(3.14);// floor()// &#26684;&#24335;&#65306;floor ( float $value ) : float// 3echo floor(3.14);// &#20445;&#30041;&#20004;&#20301;&#23567;&#25968;,&#19981;&#22235;&#33293;&#20116;&#20837;var_dump(floor(3.157*100)/100));bindec — 二进制转换为十进制decbin — 十进制转换为二进制dechex — 十进制转换为十六进制decoct — 十进制转换为八进制octdec — 八进制转换为十进制hexdec — 十六进制转换为十进制base_convert — 在任意进制之间转换数字// decbin ( int $number ) : stringhypot — 计算一直角三角形的斜边长度12.4 Filebasename — 返回路径中的文件名部分chgrp — 改变文件所属的组chmod — 改变文件模式chown — 改变文件的所有者clearstatcache — 清除文件状态缓存copy — 拷贝文件delete — 参见 unlink 或 unsetdirname — 返回路径中的目录部分disk_free_space — 返回目录中的可用空间disk_total_space — 返回一个目录的磁盘总大小file_exists — 检查文件或目录是否存在is_dir — 判断给定文件名是否是一个目录mkdir — 新建目录readlink — 返回符号连接指向的目标realpath_cache_get — 获取真实目录缓存的详情realpath_cache_size — 获取真实路径缓冲区的大小realpath — 返回规范化的绝对路径名rename — 重命名一个文件或目录rmdir — 删除目录glob — 寻找与模式匹配的文件路径pathinfo — 返回文件路径的信息diskfreespace — disk_free_space 的别名fclose — 关闭一个已打开的文件指针feof — 测试文件指针是否到了文件结束的位置fflush — 将缓冲内容输出到文件fgetc — 从文件指针中读取字符fgetcsv — 从文件指针中读入一行并解析 CSV 字段fgets — 从文件指针中读取一行fgetss — 从文件指针中读取一行并过滤掉 HTML 标记fputcsv — 将行格式化为 CSV 并写入文件指针fputs — fwrite 的别名// fputcsv ( resource $handle , array $fields [, string $delimiter = ',' [, string $enclosure = '"' ]] ) : int// fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = ',' [, string $enclosure = '"' [, string $escape = '\\' ]]]] ) : array13 附录二：PHP 命名规范13.1 类13.1.1 类名称使用大写字母作为词的分割，其他的字母均使用小写。名字的首字母使用大写。不要使用下划线('_')。如：Name、SuperMan、BigClassObject。13.1.2 类属性属性名命名采用驼峰命名法（首字母小写，后续单词首字母大写），私有属性使用'_'开始。如：$tablePrefix，$_tablePrefix13.1.3 类方法方法的作用都是执行一个动作，达到一个目的。所以名称应该说明方法是做什么的。一般名称的前缀都是有第一规律的，如is（判断）、get（得到），set（设置）。方法的的命名采用驼峰命名法（首字母小写，后续单词首字母大写）， 如：getUserName()\ parseLayout()13.1.4 方法中参数参数命名采用驼峰命名法（首字母小写，后续单词首字母大写）。如：class EchoAnyWord{    function echoWord($firstWord, $secondWord){    ...    }}13.2 变量和常量所有字母都使用小写。使用‘_’作为每个词的分界。如：$msg_error、$chk_pwd等13.2.1 引用变量引用变量要带有‘r’(recommend)前缀。如：class Example{    $mExam = "";    funciton SetExam(&amp;$rExam){    ...    }    function $rGetExam(){    ...    }}13.2.2 全局变量全局变量应该带有前缀‘g’。如：global = $gTest、global = $g。13.2.3 常量常量、全局常量，应该全部使用大写字母，单词之间用‘_’来分割。如define('DEFAULT_NUM_AVE',90);define('DEFAULT_NUM_SUM',500);13.2.4 全局常量静态变量应该带有前缀‘s’。如：station $sStatus = 1;13.2.5 静态变量所有的名称都使用小写字母，多个单词使用‘_’来分割。如：function this_good_idear(){    ...}13.3 函数13.4 参考资料《PHP从入门到精通》]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-Pages </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《JavaScript 高级程序设计》读书笔记]]></title>
      <url>/javascript/2015/03/26/professional-javascript/</url>
      <content type="text"><![CDATA[写在前面这是一篇通过阅读《JavaScript 高级程序设计》一书记录的笔记。关于JavaScriptJavaScript基本概念变量、作用域和内存问题引用类型面向对象的程序设计函数表达式BOM客户端检测DOM、DOM扩展、DOM2、DOM3事件表单脚本]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> JavaScript </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PHP 定时任务]]></title>
      <url>/php/2015/03/20/php-timing-task/</url>
      <content type="text"><![CDATA[介绍PHP定时执行的三种方式实现1、windows 的计划任务 2、linux的脚本程序3、定时刷新Web浏览器定时刷新Web浏览器//首先解决以下几个问题：1、PHP脚本执行时间限制，默认的是30m 解决办法：set_time_limit();或者修改PHP.ini 设置max_execution_time时间（不推荐）2、如果客户端浏览器关闭，程序可能就被迫终止，解决办法：ignore_user_abort即使关闭页面依然正常执行3、如果程序一直执行很有可能会消耗大量的资源，解决办法使用sleep使用程序休眠一会，然后在执行特别说明：由于定时刷新浏览器的方式效率不是很高，建议直接使用脚本方式。&lt;?phpignore_user_abort();//&#20851;&#25481;&#27983;&#35272;&#22120;&#65292;PHP&#33050;&#26412;&#20063;&#21487;&#20197;&#32487;&#32493;&#25191;&#34892;.set_time_limit(3000);// &#36890;&#36807;set_time_limit(0)&#21487;&#20197;&#35753;&#31243;&#24207;&#26080;&#38480;&#21046;&#30340;&#25191;&#34892;&#19979;&#21435;$interval=5;// &#27599;&#38548;5s&#36816;&#34892;//&#26041;&#27861;1--&#27515;&#24490;&#29615;do{    echo '&#27979;&#35797;'.time().'&lt;br/&gt;';     sleep($interval);// &#31561;&#24453;5s    }while(true);//&#26041;&#27861;2---sleep &#23450;&#26102;&#25191;&#34892;(&#25512;&#33616;)require_once './curlClass.php';//&#24341;&#20837;&#25991;&#20214;$curl = new httpCurl();//&#23454;&#20363;&#21270;$stime = $curl-&gt;getmicrotime();for($i=0;$i&lt;=10;$i++){        echo '&#27979;&#35797;'.time().'&lt;br/&gt;';         sleep($interval);// &#31561;&#24453;5s}ob_flush();flush();$etime = $curl-&gt;getmicrotime();echo '&lt;hr&gt;';echo round(($etime-stime),4);//&#31243;&#24207;&#25191;&#34892;&#26102;&#38388;]]></content>
      <categories>
        
          <category> php </category>
        
      </categories>
      <tags>
        
          <tag> PHP-定时任务 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[jQuery 10个小技巧片段]]></title>
      <url>/javascript/2015/01/15/jquery-ten-skill/</url>
      <content type="text"><![CDATA[返回顶部按钮利用animate和scrollTop来实现返回顶部的动画，而不需要使用其他插件。// Back to top$('a.top').click(function () {$(document.body).animate({scrollTop: 0}, 800);return false;});&lt;!-- Create an anchor tag --&gt;&lt;a class="top" href="#"&gt;Back to top&lt;/a&gt;改变scrollTop的值可以调整返回距离顶部的距离，而animae的第二个参数是执行返回动作需要的时间(单位：毫秒)。预加载图片如果你的页面中使用了很多不可见的图片（如：hover 显示），你可能需要预加载它们：$.preloadImages = function () {for (var i = 0; i &lt; arguments.length; i++) {$('&lt;img&gt;').attr('src', arguments[i]);}};$.preloadImages('img/hover1.png','img/hover2.png');检查图片是否加载完成有时候你需要确保图片完成加载完成以便执行后面的操作：$('img').load(function () {console.log('image load successful');});你可以把img替换为其他的ID或者class来检查指定图片是否加载完成。自动修改破损图像如果你碰巧在你的网站上发现了破碎的图像链接，你可以用一个不易被替换的图像来代替它们。添加这个简单的代码可以节省很多麻烦：$('img').on('error', function () {$(this).prop('src', 'img/broken.png');});即使你的网站没有破碎的图像链接，添加这段代码也没有任何害处。鼠标悬停(hover)切换 class 属性下面这段代码可以在其悬停在元素上时添加class属性，当用户鼠标离开时，则自动取消该class属性：$('.btn').hover(function () {$(this).addClass('hover');}, function () {$(this).removeClass('hover');});你只需要添加必要的CSS代码即可。如果你想要更简洁的代码，可以使用toggleClass方法：$('.btn').hover(function () { $(this).toggleClass('hover');});注：直接使用CSS实现该效果可能是更好的解决方案，但你仍然有必要知道该方法。禁用 input 字段有时你可能需要禁用表单的submit按钮或者某个input字段，直到用户执行了某些操作（例如，检查“已阅读条款”复选框）。可以添加disabld属性，直到你想启用它时：$('input[type="submit"]').prop('disabled', true);你要做的就是执行removeAttr方法，并把要移除的属性作为参数传入：$('input[type="submit"]').removeAttr('disabled');阻止链接加载有时你不希望链接到某个页面或者重新加载它，你可能希望它来做一些其他事情或者触发一些其他脚本，你可以这么做：$('a.no-link').click(function (e) {e.preventDefault();});切换 fade/slidefade 和 slide 是我们在 jQuery 中经常使用的动画效果，它们可以使元素显示效果更好。但是如果你希望元素显示时使用第一种效果，而消失时使用第二种效果，则可以这么做：// Fade$('.btn').click(function () {$('.element').fadeToggle('slow');});// Toggle$('.btn').click(function () {$('.element').slideToggle('slow');});简单的手风琴效果这是一个实现手风琴效果快速简单的方法：// Close all panels $('#accordion').find('.content').hide();// Accordion$('#accordion').find('.accordionheader').click(function () {var next = $(this).next();next.slideToggle('fast');$('.content').not(next).slideUp('fast');return false;});让两个 DIV 高度相同有时你需要让两个 div 高度相同，而不管它们里面的内容多少。可以使用下面的代码片段：var $columns = $('.column');var height = 0;$columns.each(function () {if ($(this).height() &gt; height) {height = $(this).height();}});$columns.height(height);这段代码会循环一组元素，并设置它们的高度为元素中的最大高。英文原文：jQuery Tips Everyone Should Know译文地址：http://info.9iphp.com/]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> jQuery </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[jQuery 权威指南]]></title>
      <url>/javascript/2015/01/13/jquery-definitive-guide/</url>
      <content type="text"><![CDATA[jQuery 选择器实例：隔行变色通过 JavaScript 实现：style:&lt;style type="text/css"&gt;body{font-size: 12px;text-align: center;}#tbStu{width: 260px;border: solid 1px #666;background-color: #eee;}#tbStu tr{line-height: 23px;}#tbStu tr th{background-color: #ccc;color: #fff;}#tbStu .trOdd{background-color: #fff;}&lt;/style&gt;html:&lt;table id="tbStu" cellpadding="0" cellspacing="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;StudNo&lt;/th&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Sex&lt;/th&gt;&lt;th&gt;Score&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2016001&lt;/td&gt;&lt;td&gt;Wang San&lt;/td&gt;&lt;td&gt;Man&lt;/td&gt;&lt;td&gt;480&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2016002&lt;/td&gt;&lt;td&gt;Zhang Si&lt;/td&gt;&lt;td&gt;Woman&lt;/td&gt;&lt;td&gt;510&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2016003&lt;/td&gt;&lt;td&gt;Zhang Wu&lt;/td&gt;&lt;td&gt;Woman&lt;/td&gt;&lt;td&gt;398&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;js:&lt;script type="text/javascript"&gt;window.onload=function(){var oTb=document.getElementById('tbStu');for (var i = 0; i&lt;oTb.rows.length; i++) {if (i%2) {oTb.rows[i].className="trOdd";}}}&lt;/script&gt;通过 jQuery 实现（样式、html省略）jQuery：&lt;script type="text/javascript"&gt;$(function(){$("#tbStu tr:nth-child(even)").addClass("trOdd");});&lt;/script&gt;基本选择器#id,element,.class,*,selectorN层次选择器ancestor descendent，匹配后代元素parent&gt;child，匹配所有子元素prev+next(可以使用.next()代替)，匹配后面紧接的元素prev~sibling(可以使用nextAll()代替)，匹配后面所有元素.siblings()方法与prev~siblings()区别在于，前者获取全部的相邻元素，不分前后。而后者仅获取标记后面全部相邻元素，不能获取前面部分。简单过滤选择器first() or :firstlast() or :last:not(selector):even，获取所有索引值为偶数的元素。:odd，奇数:eq(index):gt(index):lt(index):header，获取所有标题类型的元素。:animated，获取正在执行动画效果的元素内容过滤选择器:contains(text)，获取包含给定文本的元素，如果是查找字母，则有大小写的区别。:empty，获取所有不包含子元素或文本为空的元素。:has(selector)，获取含有选择器所匹配的元素。:parent，获取含有子元素或文本的元素。可见性过滤选择器:hidden:visible，可见元素属性过滤选择器[attribute]，获取包含给定属性的元素[attribute=value]，获取等于给定的属性是某个特定值的元素[attribute!=value]，获取不等于给定的属性是某个特定值的元素[attribute^=value]，获取给定的属性是以某些值开始的元素[attribute$=value]，获取给定的属性是以某些值结尾的元素[attribute*=value]，获取给定的属性是以包含某些值的元素[selector1][selector2][selectorN]，获取满足多个条件的复合属性的元素子元素过滤选择器:nth-child(eq|even|odd|index)，获取每个父元素下的特定位置元素，索引号从1开始:first-child，获取每个父元素下的第一个子元素:last-child，获取每个父元素下的最后一个子元素:only-child，获取每个父元素下的仅有的一个子元素表单对象属性过滤选择器:enabled，可用的元素:disabled，不可用的元素:checked，被选中的元素:selected，被选中option的元素表单选择器:input，input/texteara/select:text:password:radio:checkbox:submit:image:reset:button:filejQuery操作DOM访问元素attr()，对元素属性执行获取和设置操作获取元素属性格式：            attr(name)元素设置格式：            attr(key,value)            attr(key,function(index))removeAttr()，删除某一指定的属性删除元素属性格式：            removeAttr(name)元素内容操作html(),html(val),text(),text(val)获取或设置元素值val(val)，如果不带参数，则是获取某元素的值；反之，则是将参数val的值赋给某元素，即设置元素的值。可以获取多个选项值：    va().join(",")元素样式操作css(name,value)addClass(class) or addClass(class1 class1...)toggleClass(class)，类别切换removeClass(class)节点元素操作创建节点元素$(html)eg:var $div=$("&lt;div title="xxx"&gt;Write Less Do More&lt;/div&gt;");$("body").append($div);插入节点内部插入:append(content)append(function(index,html))appendTo(content)prepend(content)prepend(function(index,html))prependTo(content)外部插入：after(content)after(function)before(content)before(function)insertAfter(content)insertBefore(content)复制节点clone(true)替换节点replaceWith(content)replaceAll(selector)包裹节点wrap(html)...遍历与删除遍历元素each(callback)删除元素remove([expr]empty()jQuery事件事件机制冒泡现象:实际需要中，我们并不希望事件的冒泡现象发生，即单击了按钮就执行单一的单击事件，而不触发其他外围事件。jQuery中通过stopPropagation()方法来实现。event.stopPropagation()也可以通过 return false; 实现停止事件的冒泡过程。各种事件页面载入事件ready()，类似于js中的OnLoad()方法。OnLoad()方法的执行必须是页面元素的全部加载完成才触发。ready()写法：$(document).ready(function(){//code});$(function(){//code});jQuery(document).ready(function(){//code});jQuery(function(){//code});绑定事件$(function(){ $("#btnShow").click(function(){  //code });});orbind(type,[data],fn)eg:$(function(){ $("#btnBind").bind("click",function(){ //&#32465;&#23450;&#22810;&#20010;&#20107;&#20214;&#65292;&#21487;&#20351;&#29992;&#31354;&#26684;&#32780;&#38548;&#24320;  $(this).attr("disabled","disabled"); });});eg&#65306;&#26144;&#23556;&#26041;&#24335;&#32465;&#23450;$(function(){ $(".txt").bind({focus:function(){   $("#divTip").show();$("#divTip").html("xxx");},   change:function(){$("#divTip").show();$("#divTip").html("xxx");} });});切换事件hover()toggle(fun1,fun2,[fun3,fun4,...])$("a").hover(function(){ //code1 },function(){ //code2});or$("a").mouseenter(function(){ //code1});$("a").mouseleave(function(){ //code2});移除事件unbind([type],[fun])其他事件one(type,[data],fun)，为所选元素绑定一次触发一次的处理函数trigger(type,[data])，在所选的元素上触发指定类型的事件。表单应用列表应用网页选项卡应用jQuery动画与特效显示与隐藏JavaScript：JQuery：Ajax与jQueryjQuery插件常用插件UI插件jQuery实用工具函数jQuery性能优化与最佳实践实例小贴士]]></content>
      <categories>
        
          <category> javascript </category>
        
      </categories>
      <tags>
        
          <tag> jQuery </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Install SVN in Linux]]></title>
      <url>/software/linux/2014/10/15/using-svn/</url>
      <content type="text"><![CDATA[If you have questions, please send email to zrg1390556487@gmail.com.PrefaceI have always been fascinated website development. So, management and back up of code is very important. Last night, installed successfully SVN on linux. In fack,I have tried before,but did not write a decent note.Summarized today.InstallingenvironmentLinux kernel version: 3.10.0 OS: CentOS 7software: subversionFirst Method: installing by source packageDownload and decompressionOfficial Site: https://www.visualsvn.comDowload:$ wget http://subversion.tigris.org/downloads/subversion-1.6.1.tar.gz$ wget http://subversion.tigris.org/downloads/subversion-deps-1.6.1.tar.gzDecompression command:$ tar zxvf subversion-1.6.1.tar.gz$ tar zxvf subversion-deps-1.6.1.tar.gzCompile and installCommand:$ ./configure --prefix=/usr/local/svn/$ make &amp;&amp; make installAdd command of svn to pathComand:$ echo "export PATH=$PATH:/usr/local/svn/bin/" &gt;&gt; /etc/profile$ source /etc/profileSecond Method: yum install$ yum install subversion mod_dav_svnBuild warehouse of testBuildBuild root directory of svn$ mkdir -p /opt/svnBuild warehoust of test$ mkdir -p /opt/svn/svntest/$ svnadmin create /opt/svn/svntest/Configure1.To directory of configure,There are three file here.$ cd /opt/svn/svntest/conf/authz: Configure file about setting permissions of users.passwd:  Configure file about setting username and password.svnserve.conf: Configure file about svn.2.svnserve.conf$ vim svnserve.confedit:     [general]     anon-access = none     auth-access = write     password-db = passwd     authz-db = authz3.authzadd:    [svntest:/]    92csz.com = rw # add a user(92csz.com),read and write.4.passwdedit:    92csz.com = 123456 # password is 123456StartStart service of SVN$ svnserve -d -r /opt/svn/Check service$ netstat -aux |grep svnrestult:        tcp 000.0.0.0:3690.0.0.0:*  LISTEN  8646/svnserveChange permission of userCommand:$ chmod -R 775 /opt/svn/ or$ chmod -R o+rw /opt/svnTest by clientOpen svn client(right),Enter IP address of svn server and warehouse nameexmple:$ svn://192.168.120.166/svntestApache and SubversionAdd this config file to apacheLoadModule dav_svn_module     modules/mod_dav_svn.soLoadModule authz_svn_module   modules/mod_authz_svn.so&lt;Location /svn&gt;   DAV svn   SVNParentPath /var/www/unixmensvn   AuthType Basic   AuthName "Subversion repositories"   AuthUserFile /etc/svn-auth-users   Require valid-user&lt;/Location&gt;Create SVN usershtpasswd -cm /etc/svn-auth-users testuser1Create and configure SVN repositorymkdir /var/www/unixmensvncd  /var/www/unixmensvnsvnadmin create repochown -R apache.apache repo# If you still have issues with SELinux Security please apply this: chcon -R -t httpd_sys_content_t /var/www/unixmensvn/repochcon -R -t httpd_sys_rw_content_t /var/www/unixmensvn/repoYou can open the http and https on the file with thi wayfirewall-cmd --permanent --zone=public --add-service=httpfirewall-cmd --permanent --zone=public --add-service=httpsfirewall-cmd --reloadMake trunk, branches and tags structure under repomkdir -p /tmp/svn-structure-template/{trunk,branches,tags}svn import -m "Initial repository" /tmp/svn-structure-template   file:///var/www/unixmensvn/repo/Adding         /tmp/svn-structure-template/branchesAdding         /tmp/svn-structure-template/tagsAdding         /tmp/svn-structure-template/trunkCommitted revision 1.Done!QuestionProblem 11.svn: Can’t open file ‘***/txn-current-lock’: Permission deniedSolve:      Severth(Vew 7th section).Problem 22.Happen "authorization failed" error clientSolve:      Check configure.### Evey establishment of a lirary need to be configured.This is very important.Problem 33.When committing,error:         post commit FS processing had error:         "sqlite:attempt to write a readonly database"Solve:      into /opt/svn/wp-job/db , there is a file "rep-cache.db"chown -R zrg.zrggroup rep-cache.db]]></content>
      <categories>
        
          <category> software </category>
        
          <category> linux </category>
        
      </categories>
      <tags>
        
          <tag> SVN </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Subversion、Git和GitHub]]></title>
      <url>/software/2014/07/28/revision-control/</url>
      <content type="text"><![CDATA[If you have any questions abount this article, or if you have found any errors in this article, email me, please. This is my email address: zrg1390556486@gmail.com1 Git1.1 Git vs SVNGit是分布式的，SVN不是；Git把内容按元数据方式存储，而SVN是按文件；Git分支与SVN的分支不同；Git没有一个全局的版本号，而SVN有；Git的内容完整性要优于SVN：Git内容存储使用的是SHA-1算法。。1.2 InstallationUbuntu/Debian$ sudo apt-get install git$ sudo apt-get install git-doc git-svn git-email gitkRHEL/Fedora/CentOS$ yum install git$ yum install git-svn git-email gitkMacOS$ brew install git1.3 ConfigurationSet username and email$ git config --global user.name "your name"$ git config --global user.email "your_email@youremail.com"Support chinese//UTF-8：$ git config --global core.quotepath false//GBK：$ git config --global i18n.logOutputEncoding gbk//录入提交说明的字符集：$ git config --global i18n.commitEncoding gbkShow config list$ git config -lDelete configuration$ git config --unset --global user.name$ git config --unset --global user.email1.4 Getting and Creating Repository首先，在服务器端或本地存储仓库目录下，进行仓库的初始化：$ git init检出仓库// 仓库在本地$ git clone /path/to/repository// 仓库在远端$ git clone username@host:/path/to/repository$ git clone git@github.com:xxx/hello_world.git //GitHub每次需要改动时，首先，拉取仓库（分支）最新内容(update)$ git pull$ git pull orgion master如果欲将本地初始化的仓库连接到某个远程服务器：$ git remote add origin &lt;server&gt;$ git remote add origin https://github.com/zhaorengui/test.git //GitHub$ git push -u origin master删除文件// 删除本地仓库文件$ rm test.php// 从Git仓库中删除文件$ git rm test.php1.5 Commit process本地仓库由 git 维护的三棵“树”组成。第一个是你的工作目录，它持有实际文；第二个是 缓存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，指向你最近一次提交后的结果。Figure 1: 提交流程1Figure 2: 提交流程2假如我新增了某个功能，现在把它提交到暂存区。//单独提交某个文件$ git add &lt;filename&gt;//提交所有$ git add -A$ git add .额……突然想起还有某个地方要改动一下，撤销提交到暂存区的代码。// 撤销提交到暂存区的所有文件$ git reset$ git reset HEAD .// 撤销提交到暂存区的某个文件$ git reset HEAD --filename修改完遗漏功能后，再次提交了代码到暂存区，再提交到本地仓库分支。$ git commit -m "Description"//直接跳过暂存区提交$ git commit -a -m "Description"经过上一步操作后，又想起刚才提交到本地仓库分支的代码需要进一步优化，所以只能撤消 commit。//查看提交日志$ git log//执行撤销到上一个版本$ git reset --soft HEAD^$ git reset --soft HEAD~1//参数解释：--mixed: 不删除工作空间改动代码，撤销commit，并且撤销git add . 操作--soft: 不删除工作空间改动代码，撤销commit，不撤销git add . --hard: 删除工作空间改动代码，撤销commit，撤销git add . 注意：如果 commit 注释写错了，只是想改一下注释，只需要执行以下命令，注释写完后保存就 OK 了。$ git commit --amend推送到远端仓库$ git push$ git push origin master //master为分支名称压缩提交历史$ git rebase -i$ git rebase -i HEAD~2 //在历史记录中合并为一次完美的提交参考：https://blog.csdn.net/itfootball/article/details/44154121替换本地改动有的时候，本地文件不小心被删除或者内容被修改，此时，可通过如下命令从远程仓库获取替换，已添加到暂存区的改动以及新文件都不会受到影响。$ git checkout file 丢弃本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：$ git fetch origin$ git reset --hard origin/master1.6 Branching and Merging1.6.1 理解分支Figure 3: 理解分支在 Git 中提交时，会保存一个提交（commit）对象，该对象包含一个指向暂存内容快照的指针，包含本次提交的作者等相关附属信息，包含零个或多个指向该提交对象的父对象指针：首次提交是没有直接祖先的，普通提交有一个祖先，由两个或多个分支合并产生的提交则有多个祖先。假设在工作目录中有三个文件，准备将它们暂存后提交。暂存操作会对每一个文件计算校验和（即第一章中提到的 SHA-1 哈希字串），然后把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob 类型的对象存储这些快照），并将校验和加入暂存区域：$ git add README test.rb LICENSE$ git commit -m 'initial commit of my project'现在，Git 仓库中有五个对象：三个表示文件快照内容的 blob 对象；一个记录着目录树内容及其中各个文件对应 blob 对象索引的 tree 对象；一个包含指向 tree 对象（根目录）的索引和其他提交信息元数据的 commit 对象。Figure 4: 单个提交对象在仓库中的数据结构作些修改后再次提交，那么这次的提交对象会包含一个指向上次提交对象的指针（译注：即下图中的 parent 对象）。两次提交后，仓库历史会变成下图的样子：Figure 5: 多个提交对象之间的链接关系Git 中的分支，其实本质上仅仅是个指向 commit 对象的可变指针。在若干次提交后，你其实已经有了一个指向最后一次提交对象的 master 分支，它在每次提交的时候都会自动向前移动。Figure 6: 分支其实就是从某个提交对象往回看的历史那么，Git 又是如何创建一个新的分支的呢？比如新建一个 test 分支，可以使用 git branch 命令：$ git branch test这会在当前 commit 对象上新建一个分支指针，如图：Figure 7: 多个分支指向提交数据的历史那么，Git 是如何知道你当前在哪个分支上工作的呢？它保存着一个名为 HEAD 的特别指针。在 Git 中，它是一个指向你正在工作中的本地分支的指针（译注：将 HEAD 想象为当前分支的别名）。 运行git branch 命令，仅仅是建立了一个新的分支，但不会自动切换到这个分支中去，所以，我们依然还在 master 分支里，如图：Figure 8: HEAD 指向当前所在的分支要切换到其他分支，可以执行 git checkout 命令。切换到新建的 testing 分支：$ git checkout testing这样 HEAD 就指向了 testing 分支：Figure 9: HEAD 在你转换分支时指向新的分支不妨再提交一次：$ git commit -a -m 'made a change'提交后的结果：Figure 10: 每次提交后 HEAD 随着分支一起向前移动回到 master 分支看看：$ git checkout master这条命令做了两件事。它把 HEAD 指针移回到 master 分支，并把工作目录中的文件换成了 master 分支所指向的快照内容。也就是说，现在开始所做的改动，将始于本项目中一个较老的版本。它的主要作用是将 testing 分支里作出的修改暂时取消，这样你就可以向另一个方向进行开发。作些修改后再次提交：$ git commit -a -m 'made other changes'Figure 11: 不同流向的分支历史由于 Git 中的分支实际上仅是一个包含所指对象校验和（40 个字符长度 SHA-1 字串）的文件，所以创建和销毁一个分支就变得非常廉价。这和大多数版本控制系统形成了鲜明对比，它们管理分支大多采取备份所有项目文件到特定目录的方式，所以根据项目文件数量和大小不同，可能花费的时间也会有相当大的差别，快则几秒，慢则数分钟。而 Git 的实现与项目复杂度无关，它永远可以在几毫秒的时间内完成分支的创建和切换。同时，因为每次提交时都记录了祖先信息（译注：即parent 对象），将来要合并分支时，寻找恰当的合并基础（译注：即共同祖先）的工作其实已经自然而然地摆在那里了，所以实现起来非常容易。Git 鼓励开发者频繁使用分支，正是因为有着这些特性作保障。1.6.2 分支的管理创建分支与切换分支$ git branch branchName// 创建并切换分支$ git checkout -b branchName举例说明实际工作中大体也会用到这样的工作流程：正在开发某个新的需求，创建了一个分支；正在这个分支上开展工作。突然，接到一个电话说有个很严重的问题需要紧急修补，那么可以按照下面的方式处理：第一步，返回到原先已经发布到生产服务器上的分支。第二步，为这次紧急修补建立一个新分支，并在其中修复问题。第三步， 通过测试后，回到生产服务器所在的分支，将修补分支合并进来，然后再推送到生产服务器上。第四步，切换到之前实现新需求的分支，继续工作。A.首先，我们假设你正在项目中愉快地工作，并且已经提交了几次更新：Figure 12: 一个简短的提交历史B.现在，你决定要修补问题追踪系统上的 #53 问题。（这里为了说明要解决的问题，才把新建的分支取名为 iss53。）$ git checkout -b iss53//这相当于执行下面这两条命令：$ git branch iss53$ git checkout iss53该命令执行结果：Figure 13: 创建了一个新分支（专门解决53问题）的指针在提交了若干次更新后，iss53 分支的指针也会随着向前推进。Figure 14: iss53 分支随工作进展向前推进C.现在你就接到了那个网站问题的紧急电话，需要马上修补。此时，确定你已经提交了所有的修改，接下来切换到 master 分支：$ git checkout master切换回主分支后，工作目录中的内容和你在解决问题 #53 之前一模一样，你可以集中精力进行紧急修补。特别注意：Git 会把工作目录的内容恢复为检出某分支时它所指向的那个提交对象的快照。它会自动添加、删除和修改文件以确保目录的内容和你当时提交时完全一样。创建一个紧急修补分支 hotfix 来开展工作，直到搞定：$ git checkout -b 'hotfix'Figure 15: hotfix 分支是从 master 分支所在点分化出来的D.测试，确保修补是成功的。然后回到 master 分支并把它合并进来，然后发布到生产服务器。用 git merge 命令来进行合并：$ git checkout master$ git merge hotfixUpdating f42c576..3a0874cFast forwardREADME |    1 -1 files changed, 0 insertions(+), 1 deletions(-)请注意，合并时出现了“Fast forward”的提示。由于当前 master 分支所在的提交对象是要并入的 hotfix 分支的直接上游，Git 只需把master 分支指针直接右移。换句话说，如果顺着一个分支走下去可以到达另一个分支的话，那么 Git 在合并两者时，只会简单地把指针右移，因为这种单线的历史分支不存在任何需要解决的分歧，所以这种合并过程可以称为快进（Fast forward）。Figure 16: 合并之后，master 分支和 hotfix 分支指向同一位置E.在那个超级重要的修补发布以后，你想要回到被打扰之前的工作。由于当前 hotfix 分支和 master 都指向相同的commit，所以 hotfix 已经完成了使命，可以删掉了：$ git branch -d &lt;BranchName&gt;删除远程分支(原理是把一个空分支push到server上，相当于删除该分支。)$ git push origin :&lt;BranchName&gt;F.现在回到之前未完成的 #53 问题修复分支上继续工作$ git checkout iss53Figure 17: iss53 分支可以不受影响继续推进查看分支// 如果不加任何参数，它会给出当前所有分支的清单：$ git branch//查看各个分支最后一个提交对象的信息$ git branch -v删除分支$ git branch -d branchName修改分支名称// 本地分支重命名$ git branch -m oldName newName// 远程分支重命名$ git branch -m oldName newName$ git push --delete origin oldName$ git push origin newName$ git branch --set-upstream-to origin/newName筛选已合并的分支要从该清单中筛选出你已经（或尚未）与当前分支合并的分支，可以用 &#x2013;merged 和 &#x2013;no-merged 选项$ git branch --mergediss53*master列表中没有 * 的分支通常都可以用 git branch -d 来删掉。原因很简单，既然已经把它们所包含的工作整合到了其他分支，删掉也不会损失什么。//查看尚未合并到当前分支的分支$ git branch --no-merged这样就显示还未合并进来的分支列表，如果此时用git branch -d 删除该分支会提示错误，因为那样做会丢失数据：$ git branch -d testingerror: The branch 'testing' is not an ancestor of your current HEAD.If you are sure you want to delete it, run 'git branch -D testing'.// 当然，你也可以用大写 -D 强制执行。1.6.3 分支的合并在问题 #53 相关的工作完成之后，可以合并回 master 分支。$ git checkout master$ git merge iss53请注意，这次合并操作的底层实现，并不同于之前 hotfix 的并入方式。如下图所示。由于当前 master 分支所指向的提交对象（C4）并不是 iss53 分支的直接祖先，Git 不得不进行一些额外处理。就此例而言，Git 会用两个分支的末端（C4 和 C5）以及它们的共同祖先（C2）进行一次简单的三方合并计算。Git 没有简单地把分支指针右移，而是对三方合并后的结果重新做一个新的快照，并自动创建一个指向它的提交对象（C6），见下图所示。Figure 18: Git 自动创建了一个包含了合并结果的提交对象既然之前的工作成果已经合并到 master 了，那么 iss53 也就没用了。你可以就此删除它，并在问题追踪系统里关闭该问题。$ git branch -d iss53遇到冲突时的分支合并有时候合并操作并不会如此顺利。如果在不同的分支中都修改了同一个文件的同一部分，Git 就无法干净地把两者合到一起（译注：逻辑上说，这种问题只能由人来裁决）。如果你在解决问题 #53 的过程中修改了hotfix 中修改的部分，将得到类似下面的结果：$ git merge iss53Auto-merging index.htmlCONFLICT (content): Merge conflict in index.htmlAutomatic merge failed; fix conflicts and then commit the result.Git 作了合并，但没有提交，它会停下来等你解决冲突。要看看哪些文件在合并时发生冲突，可以用 git status 查阅：$ git statusindex.html: needs merge# On branch master# Changed but not updated:#   (use "git add ..." to update what will be committed)#  (use "git checkout -- ..." to discard changes in working directory)##unmerged:   index.html任何包含未解决冲突的文件都会以未合并（unmerged）的状态列出。Git 会在有冲突的文件里加入标准的冲突解决标记，可以通过它们来手工定位并解决这些冲突。可以看到此文件包含类似下面这样的部分：&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:index.htmlcontact : email.support@github.com=======please contact us at support@github.com&gt;&gt;&gt;&gt;&gt;&gt;&gt; iss53:index.html可以看到 ===== 隔开的上半部分，是 HEAD（即 master 分支，在运行merge 命令时所切换到的分支）中的内容，下半部分是在 iss53 分支中的内容。解决冲突的办法：手动合并；利用合并工具自动合并。自动合并，可以利用有图形界面的工具来解决，运行：$ git mergetoolmerge tool candidates: kdiff3 tkdiff xxdiff meld gvimdiff opendiff emerge vimdiffMerging the files: index.htmlNormal merge conflict for 'index.html':{local}: modified{remote}: modifiedHit return to start merge resolution tool (opendiff):不想用默认的合并工具，可以在上方”merge tool candidates”里找到可用的合并工具列表，输入你想用的工具名。再运行一次 git status 来确认所有冲突都已解决：$ git status如果确认所有冲突都已解决，也就是进入了暂存区，就可以用 git commit 来完成这次合并提交。提交的记录注释差不多是这样：Merge branch 'iss53'Conflicts:index.html## It looks like you may be committing a MERGE.# If this is not correct, please remove the file# .git/MERGE_HEAD# and try again.#如果想给将来看这次合并的人一些方便，可以修改该信息，提供更多合并细节。1.6.4 分支的衍合把一个分支整合到另一个分支的办法有两种：merge 和 rebase（译注：rebase 的翻译暂定为“衍合”）基本的衍合操作回顾之前有关合并的章节，开发进程分叉到两个不同分支，又各自提交了更新。通过合并一个分支来整合分叉了的历史其实，还有另外一个选择：你可以把在 C3 里产生的变化补丁在 C4 的基础上重新打一遍。在 Git 里，这种操作叫做_衍合（rebase）。$ git checkout experiment$ git rebase master原理：回到两个分支最近的共同祖先，根据当前分支（也就是要进行衍合的分支 experiment）后续的历次提交对象（这里只有一个 C3），生成一系列文件补丁，然后以基底分支（也就是主干分支master）最后一个提交对象（C4）为新的出发点，逐个应用之前准备好的补丁文件，最后会生成一个新的合并提交对象（C3’），从而改写 experiment 的提交历史，使它成为 master 分支的直接下游，如图所示：现在回到 master 分支，进行一次快进合并Figure 19: master 分支的快进一般我们使用衍合的目的，是想要得到一个能在远程分支上干净应用的补丁 — 比如某些项目你不是维护者，但想帮点忙的话，最好用衍合：先在自己的一个分支里进行开发，当准备向主项目提交补丁的时候，根据最新的origin/master 进行一次衍合操作然后再提交，这样维护者就不需要做任何整合工作（译注：实际上是把解决分支补丁同最新主干代码之间冲突的责任，化转为由提交补丁的人来解决。），只需根据你提供的仓库地址作一次快进合并，或者直接采纳你提交的补丁。请注意，合并结果中最后一次提交所指向的快照，无论是通过衍合，还是三方合并，都会得到相同的快照内容，只不过提交历史不同罢了。衍合是按照每行的修改次序重演一遍修改，而合并是把最终结果合在一起。衍合举例 衍合也可以放到其他分支进行，并不一定非得根据分化之前的分支。以下图为例，给服务器端代码添加一些功能而创建了特性分支 server，然后提交 C3 和 C4。然后又从 C3 的地方再增加一个client 分支来对客户端代码进行一些相应修改，所以提交了 C8 和 C9。最后，又回到 server 分支提交了 C10。Figure 20: 从一个特性分支里再分出一个特性分支的历史假设在接下来的一次软件发布中，我们决定先把客户端的修改并到主线中，而暂缓并入服务端软件的修改（因为还需要进一步测试）。把基于 server 分支而非 master 分支的改变（即 C8 和 C9），跳过 server 直接放到master 分支中重演一遍，但这需要用 git rebase 的 --onto 选项指定新的基底分支master：$ git rebase --onto master server client这好比在说：“取出 client 分支，找出 client 分支和 server 分支的共同祖先之后的变化，然后把它们在master 上重演一遍”。Figure 21: 将特性分支上的另一个特性分支衍合到其他分支现在可以快进 master 分支了$ git checkout master$ git merge clientFigure 22: 快进 master 分支，使之包含 client 分支的变化现在我们决定把 server 分支的变化也包含进来。$ git rebase master server于是，server 的进度应用到 master 的基础上：Figure 23: 在 master 分支上衍合 server 分支然后就可以快进主干分支 master 了：$ git checkout master$ git merge server现在 client 和 server 分支的变化都已经集成到主干分支来了，可以删掉它们了。$ git branch -d client$ git branch -d serverFigure 24: 最终的提交历史衍合的风险奇妙的衍合也并非完美无缺，要用它得遵守一条准则：一旦分支中的提交对象发布到公共仓库，就千万不要对该分支进行衍合操作。用一个实际例子来说明为什么公开的衍合会带来问题。假设你从一个中央服务器克隆然后在它的基础上搞了一些开发，提交历史类似下图所示：Figure 25: 克隆一个仓库，在其基础上工作一番现在，某人在 C1 的基础上做了些改变，并合并他自己的分支得到结果 C6，推送到中央服务器。当你抓取并合并这些数据到你本地的开发分支中后，会得到合并结果 C7，历史提交会变成：Figure 26: 抓取他人提交，并入自己主干接下来，那个推送 C6 上来的人决定用衍合取代之前的合并操作；继而又用 git push --force 覆盖了服务器上的历史，得到 C4’。而之后当你再从服务器上下载最新提交后，会得到：Figure 27: 有人推送了衍合后得到的 C4’，丢弃了你作为开发基础的 C4 和 C6下载更新后需要合并，但此时衍合产生的提交对象 C4’ 的 SHA-1 校验值和之前 C4 完全不同，所以 Git 会把它们当作新的提交对象处理，而实际上此刻你的提交历史 C7 中早已经包含了 C4 的修改内容，于是合并操作会把 C7 和 C4’ 合并为 C8Figure 28: 你把相同的内容又合并了一遍，生成一个新的提交 C8C8 这一步的合并是迟早会发生的，因为只有这样你才能和其他协作者提交的内容保持同步。而在 C8 之后，你的提交历史里就会同时包含 C4 和C4’，两者有着不同的 SHA-1 校验值，如果用git log 查看历史，会看到两个提交拥有相同的作者日期与说明，令人费解。而更糟的是，当你把这样的历史推送到服务器后，会再次把这些衍合后的提交引入到中央服务 器，进一步困扰其他人（译注：这个例子中，出问题的责任方是那个发布了 C6 后又用衍合发布 C4’ 的人，其他人会因此反馈双重历史到共享主干，从而混淆大家的视听。）。1.6.5 实际开发工作流程长期分支由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分支，每个分支用于完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。许多使用 Git 的开发者都喜欢用这种方式来开展工作，比如仅在 master 分支中保留完全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名为develop 或 next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 — 当然并不是说一定要绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到master 里。这样，在确保这些已完成的特性分支（短期分支，比如之前的 iss53 分支）能够通过所有测试，并且不会引入更多错误之后，就可以并到主干分支中，等待下一次的发布。本质上我们刚才谈论的，是随着提交对象不断右移的指针。稳定分支的指针总是在提交历史中落后一大截，而前沿分支总是比较靠前。Figure 29: 稳定分支总是比较老旧Figure 30: 想象成流水线可能会容易点特性分支特性分支是指一个短期的，用来实现单一特性或与其相关工作的分支。在 Git 中，一天之内建立、使用、合并再删除多个分支是常见的事。一个实际的例子：由下往上，起先我们在 master 工作到 C1，然后开始一个新分支 iss91 尝试修复 91 号缺陷，提交到 C6 的时候，又冒出一个解决该问题的新办法，于是从之前 C4 的地方又分出一个分支iss91v2，干到 C8 的时候，又回到主干 master 中提交了 C9 和 C10，再回到 iss91v2 继续工作，提交 C11，接着，又冒出个不太确定的想法，从 master 的最新提交 C10 处开了个新的分支dumbidea 做些试验。现在，假定两件事情：我们最终决定使用第二个解决方案，即 iss91v2 中的办法；另外，我们把 dumbidea 分支拿给同事们看了以后，发现它竟然是个天才之作。所以接下来，我们准备抛弃原来的iss91 分支（实际上会丢弃 C5 和 C6），直接在主干中并入另外两个分支。最终的提交历史将变成这样：注意：这些分支全部都是本地分支，这一点很重要。当你在使用分支及合并的时候，一切都是在你自己的 Git 仓库中进行的 — 完全不涉及与服务器的交互。1.6.6 remote branch一次 Git 克隆会建立你自己的本地分支 master 和远程分支 origin/master，它们都指向 origin/master 分支的最后一次提交。如果你在本地 master 分支做了些改动，与此同时，其他人向 git.ourcompany.com 推送了他们的更新，那么服务器上的master 分支就会向前推进。不过只要你不和服务器通讯，你的 origin/master 指针仍然保持原位不会移动。可以运行 git fetch origin 来同步远程服务器上的数据到本地。把另一个服务器加为远程仓库在本地有了一个指向 teamone 服务器上 master 分支的索引如果你有个叫 serverfix 的分支需要和他人一起开发，可以运行：// 推送本地分支$ git push origin serverfix// 跟踪远程分支从远程分支 checkout 出来的本地分支，称为_跟踪分支(tracking branch)。$ git checkout --track origin/serverfix// 删除远程分支在服务器上删除serverfix 分支，运行下面的命令：$ git push origin :serverfix//拉取远程仓库最新改动到本地仓库，执行：$ git pull1.6.7 tag查看标签//显示所有标签$ git tag//查看 v4.0 系列的标签$ git tag -l v4.0.*//查看相应标签的版本信息$ git show V0.1创建标签//推荐为软件发布创建标签。这个概念在SVN中也有。//创建一个叫做1.0.0的标签:$ git tag 1.0.0 1b2e1d63ff //1b2e1d63ff是你想要标记的提交 ID 的前 10 位字符。//创建带有注释的标签$ git tag -a V0.1 -m "版本0.1" 修改标签$ git tag newTag oldTag$ git tag -d oldTag$ git push origin :refs/tags/old$ git push --tags删除标签$ git tag -d tagName推送tag到远程仓库$ git push origin --tags1.6.8 log基本使用log//查看提交日志，不带参数，按提交时间列出所有的更新，最近的更新排在最上面$ git log//查看所有操作日志$ git reflog//只显示指定文件的日志信息$ git log README.mdshow$ git show//显示最后 5 次的文件改变的具体内容$ git show commitid//显示某个 commitid 改变的具体内容whatchanged$ git whatchanged --stat每次修改的文件列表, 及文件修改的统计选项(Option)-p$ git log -p -2 README.md//-p 选项展开显示每次提交的内容差异，-2 则仅显示最近的两次更新：&#x2013;stat$ git log --stat -1$ git log --name-status -1//--stat 选项仅显示简要的增改行数统计，--shortstat 选项只显示，--name-status 每次修改的文件列表, 显示状态&#x2013;graph//以图表形式输出分支提交日志$ git log --graph&#x2013;word-diff//--word-diff 选项，进行单词层面上的对比。你需要在书籍、论文这种很大的文本文件上进行对比的时候，这个功能就显出用武之地了。$ git log -U1 --word-diff//-U1，表示希望上下文（ context ）行数从默认的 3 行，减为 1 行 &#x2013;pretty//--pretty 选项指定使用完全不同于默认格式的方式展示提交历史// 将每个提交放在一行显示$ git log --pretty=oneline// 另外还有short，full，fuller 和 format 可以用。format可以定制要显示的记录格式，这样的输出便于后期编程提取分析&#x2013;name-only仅在提交信息后显示已修改的文件清单。&#x2013;name-status显示新增、修改、删除的文件清单。&#x2013;abbrev-commit仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。&#x2013;relative-date使用较短的相对时间显示（比如，“2 weeks ago”）。1.6.9 diff//查看更改前后的差别$git diff //查看工作树和最新提交的差别$git diff HEAD1.7 实用小贴士// 内建的图形化 git：$ gitk//彩色的 git 输出：$ git config color.ui true//显示历史记录时，每个提交的信息只显示一行：$ git config format.pretty oneline//交互式添加文件到暂存区：$ git add -i// 本地分支重名名$ git branch -m oldName newName// 远程分支重命名$ git branch -m oldName newName$ git push --delete origin oldName // 删除远程分支$ git push origin newName // 上传新命名的本地分支$ git branch --set-upstream-to=origin/newName1.8 .gitignore以斜杠“/”开头表示目录；以星号“*”通配多个字符；以问号“?”通配单个字符以方括号“[]”包含单个字符的匹配列表；以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；1.9 Problems1.9.1 git: fatal: I don't handle protocol 'https'fatal：I don't handle protocol 'https'1.9.2 error: RPC failed; curl 56 GnuTLS recv error (-9): A TLS packet with unexpected length was received解决：$ sudo apt purge git$ sudo apt install git1.9.3 git pull：fatal: refusing to merge unrelated histories合并pull两个不同的项目，问题解决：假若我在 Github 新建了一个仓库，在本地又初始化了一个新仓库，并且添加了很多与 Github 内容不同的文件和代码。此时，想把本地代码与远程 Github 仓库的代码合并，于是，通过 git pull origin master 命令拉取代码(origin 就是仓库，而 master 就是需要上传的分支)；然后，就输出 refusing to merge unrelated histories。因为是不同的两个仓库，要把两个不同的项目合并，需要添加 &#x2013;allow-unrelated-histories 告诉 git 允许不相关历史合并，这句代码是在git 2.9.2版本发生的。假如我们的源是origin，分支是master，那么需要这样写：$ git pull origin master --allow-unrelated-histories如果有设置了默认上传分支就可以用下面代码：$ git pull --allow-unrelated-histories2 GitHub2.1 Introduction官网地址：https://github.com/GitHub是一个利用Git进行版本控制、专门用于存放软件代码与内容的共享虚拟主机服务。它由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成。GitHub同时提供付费账户和免费账户。2.2 一些基本概念Repository(仓库)用于存放项目源代码。Star(收藏)收藏项目Fork(复制克隆项目)Pull Request(发送请求)基于Fork，修改或删除代码提交请求。Watch(关注)假设项目有任何更新，第一时间收到通知消息。Issue(事务卡片)发现了代码存在BUG，但是目前没有成型代码，需要讨论时使用。2.3 上传代码方式2.3.1 SSH方式传输使用SSH方式，在提交时，不需要输入用户名和密码。首先在本地创建ssh key，一直回车。$ ssh-keygen -t rsa -C "your_email@youremail.com"//成功的话会在~/目录下生成.ssh文件夹，进入.ssh目录，打开id_rsa.pub文件，复制里面的key。进入github官网上，点击个人中心的 Account Settings（账户配置），左边选择"SSH Keys" &gt; "Add SSH Key",title自定义填写，然后将复制的key粘贴到GitHub的文本框中。下面是添加好的SSH Keys示例：验证是否成功:$ ssh -T git@github.com 2.3.2 HTTPS方式传输使用条件：1）本地配置了global；2）需要输入用户名和密码推送代码2.3.3 配置免登录提交代码$ vim .git/config[remote "origin"]url=https://github.com/用户名/仓库名.git修改为：[remote "origin"]url=https://用户名:密码@github.com/用户名/仓库名.git2.4 开源项目贡献流程新建Issue：提交问题或建议或想法。Pull Request：Fork项目，修改代码，发起修改请求。方式一通过 Github 网站图形化操作，New pull request.方式二使用 git 命令操作。$ git remote -v$ git remote add upstream https://github.com/xxx/xxx.git// $ git remote remove upstream$ git fetch upstream // 从源仓库同步代码$ git merge upstream/master //合并到本地分支$ git push2.5 Github Pages2.5.1 新建仓库搭建创建个人站点，新建仓库。（注：仓库名必须为【用户名.github.io】）在新建的仓库下，新建index.html文件即可。注：(1)Github Pages仅支持静态网页;(2)仓库里面只能是.html文件2.5.2 项目仓库下搭建进入项目仓库主页，点击settings。找到【Github Pages】，点击【Change theme】，选择主题来自动生成主题页面。访问：https://用户名.github.io/仓库名3 ReferencesGit分支git v2GitHub官网Windows下安装和使用Git（Cygwin篇）git - 简易指南GIT和SVN之间的五个基本区别《GitHub入门与实践》[日]大塚弘记  //书籍同步更新Fork项目.3 Git 基础 - 查看提交历史]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> SVN(Subversion) </tag>
        
          <tag> Git </tag>
        
          <tag> GitHub </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# 文件操作]]></title>
      <url>/c%23/2014/06/10/C-file/</url>
      <content type="text"><![CDATA[如果您遇到任何问题，请发送邮件至zrg1390556487@gmail.com。文件操作文件名处理//&#26367;&#25442;&#25481;&#38750;&#27861;&#23383;&#31526;fileName = fileName.Replace(":", "_").Replace(" ", "_").Replace("\\", "_").Replace("/", "_");获取目录下所有文件的文件名String path = @"X:\xxx\xxx";//&#31532;&#19968;&#31181;&#26041;&#27861;var files = Directory.GetFiles(path, "*.txt");foreach (var file in files)    Console.WriteLine(file);//&#31532;&#20108;&#31181;&#26041;&#27861;DirectoryInfo folder = new DirectoryInfo(path);foreach (FileInfo file in folder.GetFiles("*.txt")){    Console.WriteLine(file.FullName);}C#判断文件和目录是否存在，不存在则创建&#25991;&#20214;&#65306;if (File.Exists(Server.MapPath("~/upimg/Data.html"))){   File.Create(MapPath("~/upimg/Data.html"));//&#21019;&#24314;&#35813;&#25991;&#20214;}&#25991;&#20214;&#22841;&#65306;if (!Directory.Exists(Server.MapPath("~/upimg/hufu"))){   Directory.CreateDirectory(Server.MapPath("~/upimg/hufu"));}删除文件/// &lt;summary&gt;/// &#21024;&#38500;&#21333;&#20010;&#25991;&#20214;/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#30456;&#23545;&#36335;&#24452;&lt;/param&gt;public static bool DeleteFile(string _filepath){   if (string.IsNullOrEmpty(_filepath))   {       return false;   }   string fullpath = GetMapPath(_filepath);   if (File.Exists(fullpath))   {       File.Delete(fullpath);       return true;   }   return false;}/// &lt;summary&gt;/// &#21024;&#38500;&#19978;&#20256;&#30340;&#25991;&#20214;(&#21450;&#32553;&#30053;&#22270;)/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&lt;/param&gt;public static void DeleteUpFile(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return;    }    string thumbnailpath = _filepath.Substring(0, _filepath.LastIndexOf("/")) + "mall_" + _filepath.Substring(_filepath.LastIndexOf("/") + 1);    string fullTPATH = GetMapPath(_filepath); //&#23487;&#30053;&#22270;    string fullpath = GetMapPath(_filepath); //&#21407;&#22270;    if (File.Exists(fullpath))    {        File.Delete(fullpath);    }    if (File.Exists(fullTPATH))    {        File.Delete(fullTPATH);    }}返回文件大小KB/// &lt;summary&gt;/// &#36820;&#22238;&#25991;&#20214;&#22823;&#23567;KB/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#30456;&#23545;&#36335;&#24452;&lt;/param&gt;/// &lt;returns&gt;int&lt;/returns&gt;public static int GetFileSize(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return 0;    }    string fullpath = GetMapPath(_filepath);    if (File.Exists(fullpath))    {        FileInfo fileInfo = new FileInfo(fullpath);        return ((int)fileInfo.Length) / 1024;    }    return 0;}返回文件扩展名，不含“.”/// &lt;summary&gt;/// &#36820;&#22238;&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#19981;&#21547;&#8220;.&#8221;/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#20840;&#21517;&#31216;&lt;/param&gt;/// &lt;returns&gt;string&lt;/returns&gt;public static string GetFileExt(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return "";    }    if (_filepath.LastIndexOf(".") &gt; 0)    {        return _filepath.Substring(_filepath.LastIndexOf(".") + 1); //&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#19981;&#21547;&#8220;.&#8221;    }    return "";}文件下载TransmitFile方式/* &#24494;&#36719;&#20026;Response&#23545;&#35937;&#25552;&#20379;&#20102;&#19968;&#20010;&#26032;&#30340;&#26041;&#27861;TransmitFile&#26469;&#35299;&#20915;&#20351;&#29992;Response.BinaryWrite&#19979;&#36733;&#36229;&#36807;400MB&#30340;&#25991;&#20214;&#26102;&#65292;&#23548;&#33268;Aspnet_wp.exe&#36827;&#31243;&#22238;&#25910;&#32780;&#26080;&#27861;&#25104;&#21151;&#19979;&#36733;&#30340;&#38382;&#39064;&#12290; &#20195;&#30721;&#22914;&#19979;&#65306;*/Response.ContentType = "application/x-zip-compressed";  string FileName = "test.doc";  //&#20351;&#29992;UTF-8&#23545;&#25991;&#20214;&#21517;&#36827;&#34892;&#32534;&#30721;  Response.AppendHeader("Content-Disposition", "attachment;filename=\"" + HttpUtility.UrlEncode(FileName, System.Text.Encoding.UTF8) + "\"");  Response.ContentType = "application/octet-stream";  Response.AddHeader("Content-Disposition", "attachment;filename=" + FileName);  string filename = Server.MapPath("../ReportTemplate/test.doc");  Response.TransmitFile(filename);  WriteFile方式/* using System.IO;          */string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;  FileInfo fileInfo = new FileInfo(filePath);  Response.Clear();  Response.ClearContent();  Response.ClearHeaders();  Response.AddHeader("Content-Disposition", "attachment;filename=\"" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8) + "\"");  Response.AddHeader("Content-Length", fileInfo.Length.ToString());  Response.AddHeader("Content-Transfer-Encoding", "binary");  Response.ContentType = "application/octet-stream";  Response.WriteFile(fileInfo.FullName);  Response.Flush();  Response.End();  WriteFile分块下载方式string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;System.IO.FileInfo fileInfo = new System.IO.FileInfo(filePath);if (fileInfo.Exists == true)  {      const long ChunkSize = 102400; //100K &#27599;&#27425;&#35835;&#21462;&#25991;&#20214;&#65292;&#21482;&#35835;&#21462;100K&#65292;&#36825;&#26679;&#21487;&#20197;&#32531;&#35299;&#26381;&#21153;&#22120;&#30340;&#21387;&#21147;      byte[] buffer = new byte[ChunkSize];      Response.Clear();      System.IO.FileStream iStream = System.IO.File.OpenRead(filePath);      long dataLengthToRead = iStream.Length; //&#33719;&#21462;&#19979;&#36733;&#30340;&#25991;&#20214;&#24635;&#22823;&#23567;      Response.ContentType = "application/octet-stream";      Response.AddHeader("Content-Disposition",      "attachment; filename=" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8));      while (dataLengthToRead &gt; 0 &amp;&amp; Response.IsClientConnected)      {          int lengthRead = iStream.Read(buffer, 0, Convert.ToInt32(ChunkSize)); //&#35835;&#21462;&#30340;&#22823;&#23567;          Response.OutputStream.Write(buffer, 0, lengthRead);          Response.Flush();          dataLengthToRead = dataLengthToRead - lengthRead;      }      Response.Close();  }  流方式下载string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;//&#20197;&#23383;&#31526;&#27969;&#30340;&#24418;&#24335;&#19979;&#36733;&#25991;&#20214; FileStream fs = new FileStream(filePath, FileMode.Open);  byte[] bytes = new byte[(int)fs.Length];  fs.Read(bytes, 0, bytes.Length);  fs.Close();  Response.ContentType = "application/octet-stream";  //&#36890;&#30693;&#27983;&#35272;&#22120;&#19979;&#36733;&#25991;&#20214;&#32780;&#19981;&#26159;&#25171;&#24320;  Response.AddHeader("Content-Disposition", "attachment;  filename=" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8));  Response.BinaryWrite(bytes);  Response.Flush();  Response.End();参考资料http://www.cnblogs.com/CookBlack/archive/2011/04/10/1883864.htmlhttp://www.cnblogs.com/technology/archive/2011/07/12/2104786.html]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C#-文件操作 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# ASP.NET Notes]]></title>
      <url>/c%23/2014/05/10/c-notes/</url>
      <content type="text"><![CDATA[字符串操作String.Substring()//格式String.Substring(int beginIndex)String.Substring(int beginIndex,int endIndex)//示例string str_new=str.Substring(6,2)：表示从str中截取位置为6的字符开始长度为2的字符串，6表示子字符的起始位置，2表示子字符的字符长度。其他方法//格式int indexOf(String str) 返回第一次出现的指定子字符串在此字符串中的索引。int indexOf(String str, int fromIndex) 从指定的索引处开始，返回第一次出现的指定子字符串在此字符串中的索引。int lastIndexOf(String str) 返回在此字符串中最右边出现的指定子字符串的索引。int lastIndexOf(String str, int fromIndex) 从指定的索引处开始向后搜索，返回在此字符串中最后一次出现的指定子字符串的索引。 int length() 返回此字符串的长度。boolean startsWith(String prefix) 测试此字符串是否以指定的前缀开始。 boolean startsWith(String prefix, int toffset) 测试此字符串是否以指定前缀开始，该前缀以指定索引开始。//示例str.Substring(0,str.LastIndexOf(","));参考资料http://www.blogjava.net/AndyZhang/archive/2012/04/25/376614.htmlhttp://www.cnblogs.com/rocblog/archive/2013/05/07/3064593.htmlhttp://www.cnblogs.com/Deckard/archive/2009/06/03/1495452.html日期时间处理C#正则表达式判断输入日期格式是否正确/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26085;&#26399;&#22411;&#23383;&#31526;&#20018;/// &lt;/summary&gt;/// &lt;param name="StrSource"&gt;&#26085;&#26399;&#23383;&#31526;&#20018;(2008-05-08)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsDate(string StrSource){     return Regex.IsMatch(StrSource, @"^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-9]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$");}/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26102;&#38388;&#22411;&#23383;&#31526;&#20018;// &lt;/summary&gt;/// &lt;param name="source"&gt;&#26102;&#38388;&#23383;&#31526;&#20018;(15:00:00)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsTime(string StrSource){     return Regex.IsMatch(StrSource, @"^((20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d)$");}/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26085;&#26399;+&#26102;&#38388;&#22411;&#23383;&#31526;&#20018;/// &lt;/summary&gt;/// &lt;param name="source"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsDateTime(string StrSource){    return Regex.IsMatch(StrSource, @"^(((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-)) (20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d)$ ");}C#利用线程、委托，实时显示时间#region &#36816;&#34892;&#26102;&#26174;&#31034;&#23454;&#26102;&#26102;&#38388;new Thread(() =&gt;{        while (true)        {           try           {               labelTime.BeginInvoke(new MethodInvoker(() =&gt; labelTime.Text = DateTime.Now.ToString()));           }           catch (Exception)           {           }           Thread.Sleep(1000);         }        })  { IsBackground = true }.Start();#endregionC#中无法引用自己创建的类库中的类问题描述新建一个类，定义了一些方法，在外部引用该类时，不能引用。解决办法1.检查类前面有没有添加加或使用public。2.类中定义的方法也应该是public类型的3.改完之后将该类库重新生成一次4.注意类名不要与系统保留字冲突参考资料https://www.ezloo.com/2008/10/classlibrary_visited.html获取指定范围的n个随机数#region &#38543;&#26426;&#25968;&#33719;&#21462;        /**         * &#33719;&#21462;&#35268;&#23450;&#33539;&#22260;&#20869;&#30340;n&#20010;&#38543;&#26426;&#25968;         *          * min_value    int    &#38543;&#26426;&#25968;&#19979;&#38480;         * max_value    int    &#38543;&#26426;&#25968;&#19978;&#38480;         * number       int    &#38543;&#26426;&#25968;&#37327;         */        private string getRandom(int min_value, int max_value, int number)        {            Random random = new Random();            ArrayList arr = new ArrayList();            int temp = 0;            for (int i = 0; i &lt; number; i++)            {                temp = random.Next(min_value, max_value); //&#38543;&#26426;&#21462;&#25968;                arr.Add(temp);            }            string str = "";            for (int j = 0; j &lt; arr.Count; j++)            {                str += arr[j].ToString() + ",";                //Console.Write(arr[j].ToString());            }            return str.Substring(0, str.LastIndexOf(","));        }#endregionDataTable 序列化/// &lt;summary&gt;/// &#24207;&#21015;&#21270;DataTable&#25104;XML/// &lt;/summary&gt;/// &lt;param name="dt"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private static string SerializeDataTableToXml(DataTable dt){    StringBuilder strBuilder = new StringBuilder();    XmlWriter writer = XmlWriter.Create(strBuilder);    XmlSerializer serializer = new XmlSerializer(typeof(DataTable));    serializer.Serialize(writer, dt);    writer.Close();    return strBuilder.ToString();}/// &lt;summary&gt;/// &#24207;&#21015;&#21270;XML&#25104;DataTable/// &lt;/summary&gt;/// &lt;param name="xml"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private static DataTable SerializeXmlToDataTable(string xml){    StringReader strReader = new StringReader(xml);    XmlReader xmlReader = XmlReader.Create(strReader);    XmlSerializer serializer = new XmlSerializer(typeof(DataTable));    DataTable dt = serializer.Deserialize(xmlReader) as DataTable;    return dt;}DMWebSvrSoapClient dmwss = new DMWebSvrSoapClient();DateTime date = DateTime.Now;string dataStr1 = dmwss.GetVehicleInfo_Month(date.ToString("yyyy-MM-dd"));XmlDocument xmldoc = new XmlDocument();xmldoc.LoadXml(dataStr1);XmlNodeList xnList = xmldoc.SelectNodes("//DocumentElement/list");foreach (XmlNode xn in xnList){     ListViewItem item = new ListViewItem(xn["time"].InnerText);     item.SubItems.Add(xn["in_vehicle_count"].InnerText);     item.SubItems.Add(xn["out_vehicle_count"].InnerText);     listView.Items.Add(item);}参考资料http://stackoverflow.com/questions/6402596/xml-string-to-xml-documenthttps://zhidao.baidu.com/question/574030822.htmlhttps://msdn.microsoft.com/en-us/library/hcebdtae(v=vs.110).aspx]]></content>
      <categories>
        
          <category> c# </category>
        
      </categories>
      <tags>
        
          <tag> C# </tag>
        
          <tag> ASP.NET </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
