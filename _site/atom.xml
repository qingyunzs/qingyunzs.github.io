<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-03-12T11:46:41+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Knowledge Has No Limit</title><subtitle>Life doesn't just happen to you; you receive everything in your life based on what you've given. 生命中的一切都不是巧合，你得到什么，是源于你付出了什么。</subtitle><author><name>Zhao Rengui</name></author><entry><title type="html">Google Chrome</title><link href="http://localhost:4000/software/2021/02/28/google-chrome-keyboard-shurtcuts/" rel="alternate" type="text/html" title="Google Chrome" /><published>2021-02-28T00:00:00+08:00</published><updated>2021-02-28T00:00:00+08:00</updated><id>http://localhost:4000/software/2021/02/28/google-chrome-keyboard-shurtcuts</id><content type="html" xml:base="http://localhost:4000/software/2021/02/28/google-chrome-keyboard-shurtcuts/">&lt;div id=&quot;outline-container-org4bfd62a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org4bfd62a&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 常用快捷键&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbacf5a6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgbacf5a6&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; Windows 和 Linux&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org85f071a&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org85f071a&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.1&lt;/span&gt; 标签页和窗口快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-1&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开新窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + n&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在无痕模式下打开新窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + n&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开新的标签页，并跳转到该标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + t&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;按标签页的关闭顺序重新打开先前关闭的标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + t&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到下一个打开的标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Tab 或 Ctrl + PgDn&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到上一个打开的标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + Tab 或 Ctrl + PgUp&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到特定标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + 1 到 Ctrl + 8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到最右侧的那个标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + 9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在当前标签页中打开主页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + Home&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开当前标签页浏览记录中记录的上一个页面&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + 向左箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开当前标签页浏览记录中记录的下一个页面&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + 向右箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;关闭当前标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + w 或 Ctrl + F4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;关闭当前窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + w 或 Alt + F4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;最小化当前窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + 空格键，然后按 n 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;最大化当前窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + 空格键，然后按 x 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;退出 Google Chrome&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + f，然后按 x 键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga043383&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orga043383&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.2&lt;/span&gt; Google Chrome 功能快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-2&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开 Chrome 菜单&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + f 或 Alt + e&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;显示或隐藏书签栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + b&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开书签管理器&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + o&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新标签页中打开“历史记录”页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + h&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新标签页中打开“下载内容”页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + j&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开 Chrome 任务管理器&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + Esc&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将焦点放置在 Chrome 工具栏中的第一项上&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + Alt + t&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将焦点放置在 Chrome 工具栏中最右侧的那一项上&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将焦点移到未聚焦于的对话框（如果显示）或所有工具栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F6&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开查找栏搜索当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + f 或 F3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到与查找栏中搜索字词相匹配的下一条内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + g&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到与查找栏中搜索字词相匹配的上一条内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + g&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开“开发者工具”&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + j 或 F12&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开“清除浏览数据”选项&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + Delete&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新标签页中打开 Chrome 帮助中心&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用其他帐号登录或以访客身份浏览&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + m&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开反馈表单&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + Shift + i&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;开启光标浏览模式&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgea5e8da&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgea5e8da&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.3&lt;/span&gt; 地址栏快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-3&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用默认搜索引擎进行搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入搜索字词并按 Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用其他搜索引擎进行搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入搜索引擎名称，然后按 Tab 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;为网站名称添加 www. 和 .com，然后在当前标签页中打开该网址&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入网站名称并按 Ctrl + Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开新的标签页并执行  Google 搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入搜索字词并按 Alt + Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到地址栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + l 或 Alt + d 或 F6&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;从页面中的任意位置搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + k 或 Ctrl + e&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;从地址栏中移除联想查询内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按向下箭头键以突出显示相应内容，然后按 Shift + Delete 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将光标移到地址栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + F5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org90505bc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org90505bc&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.4&lt;/span&gt; 网页快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-4&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开选项以打印当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + p&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开选项以保存当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + s&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;重新加载当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F5 或 Ctrl + r&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;重新加载当前网页（忽略缓存的内容）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + F5 或 Ctrl + Shift + r&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;停止加载网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Esc&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;浏览下一个可点击项&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Tab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;浏览上一个可点击项&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + Tab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用 Chrome 打开计算机中的文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Ctrl + o 键并选择文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;显示当前网页的&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;HTML 源代码（不可修改）	Ctrl + u&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将当前网页保存为书签&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + d&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将所有打开的标签页以书签的形式保存在新文件夹中&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Shift + d&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;开启或关闭全屏模式&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F11&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;放大网页上的所有内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl 和 +&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;缩小网页上的所有内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl 和 -&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将网页上的所有内容恢复到默认大小&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + 0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;向下滚动网页，一次一个屏幕&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;空格键或 PgDn&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;向上滚动网页，一次一个屏幕&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + 空格键或 PgUp&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;转到网页顶部&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;首页&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;转到网页底部&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;末尾&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在网页上水平滚动&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Shift 键并滚动鼠标滚轮&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将光标移到文本字段中的上一个字词起始处&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + 向左箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将光标移到下一个字词起始处&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + 向右箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;删除文本字段中的上一个字词&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + Backspace&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在当前标签页中打开主页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Alt + Home&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;重置页面缩放级别&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + 0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org29448a1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org29448a1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.1.5&lt;/span&gt; 鼠标快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-1-5&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在当前标签页中打开链接（仅限鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将链接拖到标签页中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新的后台标签页中打开链接&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Ctrl 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开链接，并跳转到该链接&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Ctrl + Shift 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开链接，并跳转到该链接（仅使用鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将链接拖到标签栏的空白区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新窗口中打开链接&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Shift 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新窗口中打开标签页（仅使用鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页拖出标签栏&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页移至当前窗口（仅限鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页拖到现有窗口中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页移回其原始位置&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拖动标签页的同时按 Esc&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将当前网页保存为书签&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将相应网址拖动到书签栏中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在网页上水平滚动&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Shift 键并滚动鼠标滚轮&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;下载链接目标&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Alt 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;显示浏览记录&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;右键点击“后退”箭头  返回，或者左键点住“后退”箭头；右键点击“前进”箭头  下一步，或者左键点住“前进”箭头 下一步&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在最大化模式和窗口模式之间切换&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;双击标签栏的空白区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;放大网页上的所有内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Ctrl 键并向上滚动鼠标滚轮&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;缩小网页上的所有内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Ctrl 键并向下滚动鼠标滚轮&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8088e8a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8088e8a&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; Mac&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org21f0591&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org21f0591&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.2.1&lt;/span&gt; 标签页和窗口快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-1&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开新窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + n&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在无痕模式下打开新窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + n&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开新的标签页，并跳转到该标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + t&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;按标签页的关闭顺序重新打开先前关闭的标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + t&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到下一个打开的标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + 向右箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到上一个打开的标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + 向左箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到特定标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + 1 到 ⌘ + 8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到最后一个标签页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + 9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开当前标签页浏览记录中记录的上一个页面&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + [ 或 ⌘ + 向左箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开当前标签页浏览记录中记录的下一个页面&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + ] 或 ⌘ + 向右箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;关闭当前的标签页或弹出式窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + w&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;关闭当前窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + w&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;最小化窗口&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + m&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;隐藏 Google Chrome&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + h&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;退出 Google Chrome&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + q&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org33ac633&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org33ac633&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.2.2&lt;/span&gt; Google Chrome 功能快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-2&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;显示或隐藏书签栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + b&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开书签管理器&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + b&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新标签页中打开“设置”页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + ,&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新标签页中打开“历史记录”页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新标签页中打开“下载内容”页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + j&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开查找栏搜索当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + f&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到与查找栏中搜索字词相匹配的下一条内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + g&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到与查找栏中搜索字词相匹配的上一条内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + g&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开查找栏后，搜索选定文本&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + e&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开“开发者工具”&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + i&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开“清除浏览数据”选项&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + Delete&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用另一帐号登录、以访客身份浏览，或者访问付款和密码信息&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + m&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到主菜单栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + F2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将焦点移到未聚焦于的对话框（如果显示）或所有工具栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + 向上箭头或向下箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;开启光标浏览模式&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;F7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org10a1622&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org10a1622&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.2.3&lt;/span&gt; 地址栏快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-3&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用默认搜索引擎进行搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入搜索字词并按 Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用其他搜索引擎进行搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入搜索引擎名称，然后按 Tab 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;为网站名称添加  www. 和 .com，然后在当前标签页中打开该网址&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入网站名称并按 Ctrl + Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;为网站名称添加  www. 和 .com，然后在新标签页中打开该网址&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入网站名称并按 Ctrl + Shift + Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新的后台标签页中打开网站&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;输入网址并按 ⌘ + Enter 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;跳转到地址栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + l&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;从地址栏中移除联想查询内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按向下箭头键以突出显示相应内容，然后按 Shift + fn + Delete 键；在笔记本电脑上按 Forward Delete 或 fn-Delete 键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将光标移到地址栏&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Ctrl + F5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3d9d562&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3d9d562&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.2.4&lt;/span&gt; 网页快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-4&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开选项以打印当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + p&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开选项以保存当前网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + s&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开“页面设置”对话框&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + p&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;重新加载当前网页（忽略缓存的内容）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + r&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;停止加载网页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Esc&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;浏览下一个可点击项&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Tab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;浏览上一个可点击项&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + Tab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;使用 Google Chrome 打开计算机中的文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 ⌘ + o 键并选择文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;显示当前网页的  HTML 源代码（不可修改）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + u&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开 JavaScript 控制台&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + j&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将当前网页保存为书签&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + d&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将所有打开的标签页以书签的形式保存在新文件夹中&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + d&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;开启或关闭全屏模式&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Ctrl + f&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;放大网页上的所有内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ 和 +&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;缩小网页上的所有内容&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ 和 -&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将网页上的所有内容恢复到默认大小&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + 0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;向下滚动网页，一次一个屏幕&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;空格键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;向上滚动网页，一次一个屏幕&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Shift + 空格键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;搜索网络&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Option + f&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将光标移到文本字段中的上一个字词起始处&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Option + 向左箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将光标移到文本字段中的上一个字词后面&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Option + 向右箭头键&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;删除文本字段中的上一个字词&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Option + Delete&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在当前标签页中打开主页&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;⌘ + Shift + h&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;重置页面缩放级别&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Cmd + 0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga3cb97f&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orga3cb97f&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.2.5&lt;/span&gt; 鼠标快捷键&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-2-5&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在当前标签页中打开链接（仅限鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将链接拖到标签页中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新的后台标签页中打开链接&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 ⌘ 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开链接，并跳转到该链接&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 ⌘ + Shift 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;打开链接，并跳转到该链接（仅使用鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将链接拖到标签栏的空白区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新窗口中打开链接&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Shift 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;在新窗口中打开标签页（仅使用鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页拖出标签栏&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页移至当前窗口（仅限鼠标）&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页拖到现有窗口中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将标签页移回其原始位置&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拖动标签页的同时按 Esc&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将当前网页保存为书签&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将相应网址拖动到书签栏中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;下载链接目标&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;按住 Option 键的同时点击链接&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;显示浏览记录&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;右键点击“后退”箭头 返回，或者左键点住“后退”箭头；右键点击“前进”箭头 下一步，或者左键点住“前进”箭头 下一步&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;将窗口高度最大化&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;双击标签栏的空白区域&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg,cfn</name></author><category term="software" /><category term="Keyboard" /><category term="Chrome" /><summary type="html">1 常用快捷键 1.1 Windows 和 Linux 1.1.1 标签页和窗口快捷键</summary></entry><entry><title type="html">Shell 脚本编程</title><link href="http://localhost:4000/shell/2021/02/28/learning-shell/" rel="alternate" type="text/html" title="Shell 脚本编程" /><published>2021-02-28T00:00:00+08:00</published><updated>2021-02-28T00:00:00+08:00</updated><id>http://localhost:4000/shell/2021/02/28/learning-shell</id><content type="html" xml:base="http://localhost:4000/shell/2021/02/28/learning-shell/">&lt;div id=&quot;outline-container-orga6c990e&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orga6c990e&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 认识 Shell Scripts&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;学习 Shell 的疑惑
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;如何启动命令行以及接下来做什么？&lt;/li&gt;
&lt;li&gt;如何使用 shell脚本来自动处理系统管理任务，包括从检测系统统计数据和数据文件到为你的老板生成报表？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Shell 简介
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Shell 是一个用 C 语言编写的程序，Shell 既是一种命令语言，又是一种程序设计语言。&lt;/li&gt;
&lt;li&gt;Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。&lt;/li&gt;
&lt;li&gt;Shell 类型
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;/bin/bash&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;/bin/tcsh&lt;/li&gt;
&lt;li&gt;/bin/dash&lt;/li&gt;
&lt;li&gt;/bin/csh&lt;/li&gt;
&lt;li&gt;/bin/sh&lt;/li&gt;
&lt;li&gt;/bin/zsh&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
执行 Shell 脚本
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 新增可执行权限
chmod +x test.sh
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 作为可执行程序
./test.sh
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 作为解释器参数
/bin/sh test.sh
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;常见 Shell 操作终端
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Linux 控制终端&lt;/li&gt;
&lt;li&gt;Terminal
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;GNOME Terminal&lt;/li&gt;
&lt;li&gt;Konsole Terminal&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Terminus&lt;/li&gt;
&lt;li&gt;Xterm&lt;/li&gt;
&lt;li&gt;XShell&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
理解 Shell 的父子关系
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ps -f
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
$ bash
$ ps -f
输入命令之后，一个子 shell 就出现了。第二个 ps -f 是在子 shell 中执行的。可以从显示结果中看到两个 bash shell 程序在运行。
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
$ bash
$ bash
$ bash
$ ps --forest
在上面例子中，bash 命令被输入了三次。实际上创建了三个子 shell。ps --forest 命令展示了这些子 shell 间的嵌套结构。可以使用 exit 命令退出子 shell
$ exit
&lt;/pre&gt;


&lt;p&gt;
&lt;b&gt;进程列表&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ pwd;ls;cd /etc;pwd
在命令之间加入“;，指定要依次执行的一系列命令
$ (pwd;ls;cd /etc;pwd)
使用括号包含命令，成为进程列表
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
查看是否生成了子 shell，使用：
$ echo $BASH_SUBSHELL
&lt;/pre&gt;


&lt;p&gt;
&lt;b&gt;子shell用法&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 在后台睡眠10s
$ sleep 10&amp;amp;
// 查看后台进程
$ ps -f
or
$ jobs -l
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
//将进程列表置入后台
$ (sleep 2;echo $BASH_SUBSHELL;sleep 2)&amp;amp;
// 创建备份
$ (tar -cf Rich.rar /home/rich;tar -cf My.tar /home/christine)&amp;amp;
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
//协程：在后台生成一个子shell，同时在这个子shell中执行命令。
// 进行协程处理，使用 coproc 命令
$ coproc sleep 10
$ coproc My_Job{sleep 10;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;理解 shell 的内建命令
&lt;dl class=&quot;org-dl&quot;&gt;
&lt;dt&gt;外部命令&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
也被称为文件系统命令，是存在于bash shell之外的程序。ps 就是一个外部命令，可以使用 which 和 type 命令找到
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ which ps
$ type -a ps
&lt;/pre&gt;

&lt;p&gt;
当外部命令执行时，会创建一个子进程，这种操作叫做衍生（forking）。
&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;内建命令&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和 shell 编译成一体，作为 shell 工具的组成部分存在。可以利用 type 命令来了解某个命令是否是内建的。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ type cd
cd is a shell builtin
&lt;/pre&gt;

&lt;p&gt;
要注意，有些命令有多种实现。既有内建命令也有外部命令。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ type -a echo
echo is a shell builtin
echo is /bin/echo
$ type -a pwd
pwd is a shell builtin
pwd is /bin/pwd 
&lt;/pre&gt;&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org06a728d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org06a728d&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; Shell 基础&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7546523&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7546523&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; Hello World&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;################&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Hello World  #&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;################     &lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;This script displays the date and who's #&amp;#33050;&amp;#26412;&amp;#29992;&amp;#36884;&amp;#35828;&amp;#26126;&amp;#21450;&amp;#20316;&amp;#32773;&amp;#31561;&amp;#20449;&amp;#24687;&amp;#25551;&amp;#36848; &lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;This's is a shell script.&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26174;&amp;#31034;&amp;#28040;&amp;#24687;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; -n &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The time and date are: &quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;n&amp;#34920;&amp;#31034;&amp;#22312;&amp;#19968;&amp;#34892;&amp;#26174;&amp;#31034;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Hello,World!&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;print &quot;Hello,World!&quot;&lt;/span&gt;
date &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;print date.&lt;/span&gt;

&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;User info for userid: $USER&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#65292;&amp;#29992;set&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#26597;&amp;#30475;&amp;#19968;&amp;#20221;&amp;#23436;&amp;#25972;&amp;#30340;&amp;#24403;&amp;#21069;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#21015;&amp;#34920;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; UID: $&lt;span style=&quot;color: #FF8C00;&quot;&gt;UID&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; HOME: $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The cost of the item is \$15.&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#32654;&amp;#20803;&amp;#38656;&amp;#35201;&amp;#20351;&amp;#29992;\&amp;#36716;&amp;#20041;&lt;/span&gt;

&lt;span style=&quot;color: #FF8C00;&quot;&gt;days&lt;/span&gt;= 10 &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29992;&amp;#25143;&amp;#33258;&amp;#23450;&amp;#20041;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;days&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26377;&amp;#20004;&amp;#31181;&amp;#26041;&amp;#27861;&amp;#21487;&amp;#20197;&amp;#23558;&amp;#21629;&amp;#20196;&amp;#36171;&amp;#32473;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;test&lt;/span&gt;= &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`date`&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29992;&amp;#19968;&amp;#23545;&amp;#21453;&amp;#24341;&amp;#21495;&amp;#25226;&amp;#25972;&amp;#20010;&amp;#21629;&amp;#20196;&amp;#22260;&amp;#36215;&amp;#26469;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;test&lt;/span&gt;= $(date) &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;$()&amp;#26684;&amp;#24335;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;today&lt;/span&gt;= $(date+%y%m%d) &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;today&amp;#21464;&amp;#37327;&amp;#34987;&amp;#36171;&amp;#20104;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#21518;&amp;#30340;date&amp;#21629;&amp;#20196;&amp;#30340;&amp;#36755;&amp;#20986;&amp;#12290;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org40f8865&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org40f8865&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; 变量&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;############&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#23450;&amp;#20041;&amp;#21464;&amp;#37327; #&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;############&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;your_name&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;qinjx&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;your_name&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;your_name&lt;/span&gt;}
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21464;&amp;#37327;&amp;#21517;&amp;#22806;&amp;#38754;&amp;#30340;&amp;#33457;&amp;#25324;&amp;#21495;&amp;#26159;&amp;#21487;&amp;#36873;&amp;#30340;&amp;#65292;&amp;#21152;&amp;#19981;&amp;#21152;&amp;#37117;&amp;#34892;&amp;#65292;&amp;#21152;&amp;#33457;&amp;#25324;&amp;#21495;&amp;#26159;&amp;#20026;&amp;#20102;&amp;#24110;&amp;#21161;&amp;#35299;&amp;#37322;&amp;#22120;&amp;#35782;&amp;#21035;&amp;#21464;&amp;#37327;&amp;#30340;&amp;#36793;&amp;#30028;&amp;#65292;&amp;#20363;&amp;#22914;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#24773;&amp;#20917;&amp;#65306;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; skill&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; Ada Coffe Action Java; &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;I am good at ${skill}Script&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21482;&amp;#35835;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;myUrl&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;https://www.google.com&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;readonly&lt;/span&gt; myUrl
&lt;span style=&quot;color: #FF8C00;&quot;&gt;myUrl&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;https://www.runoob.com&quot;&lt;/span&gt;
:&amp;lt;&amp;lt;EOF
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;&amp;#36816;&amp;#34892;&amp;#33050;&amp;#26412;&amp;#65292;&amp;#32467;&amp;#26524;&amp;#22914;&amp;#19979;&amp;#65306;&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;/bin/sh: NAME: This variable is read only.&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;EOF&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;############&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21024;&amp;#38500;&amp;#21464;&amp;#37327; #&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;############&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;unset&lt;/span&gt; variable_name
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9ee060a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9ee060a&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; 字符串&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;################&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Shell &amp;#23383;&amp;#31526;&amp;#20018; #&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;################&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;str&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;'this is a string'&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;your_name&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;'zrg'&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;str2&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Hello, I know you are \&quot;$your_name\&quot;! \n&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; -e $&lt;span style=&quot;color: #FF8C00;&quot;&gt;str&lt;/span&gt;
:&amp;lt;&amp;lt;EOF
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;&amp;#36755;&amp;#20986;&amp;#32467;&amp;#26524;&amp;#20026;&amp;#65306;&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;Hello, I know you are &quot;runoob&quot;! &lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;EOF&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25340;&amp;#25509;&amp;#23383;&amp;#31526;&amp;#20018;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;&amp;#21452;&amp;#24341;&amp;#21495;&amp;#25340;&amp;#25509;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;greeting&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;hello, &quot;&lt;/span&gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;your_name&lt;/span&gt;&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot; !&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;greeting_1&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;hello, ${your_name} !&quot;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;&amp;#21333;&amp;#24341;&amp;#21495;&amp;#25340;&amp;#25509;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;greeting_2&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;'hello, '&lt;/span&gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;your_name&lt;/span&gt;&lt;span style=&quot;color: #CDC673;&quot;&gt;' !'&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;greeting_3&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;'hello, ${your_name} !'&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#33719;&amp;#21462;&amp;#23383;&amp;#31526;&amp;#20018;&amp;#38271;&amp;#24230;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;string&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;abcd&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; ${#&lt;span style=&quot;color: #FF8C00;&quot;&gt;string&lt;/span&gt;} &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36755;&amp;#20986; 4&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25552;&amp;#21462;&amp;#23376;&amp;#23383;&amp;#31526;&amp;#20018;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;string&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;runoob is a great site&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;string&lt;/span&gt;:1:4} &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36755;&amp;#20986; unoo&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26597;&amp;#25214;&amp;#23376;&amp;#23383;&amp;#31526;&amp;#20018;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26597;&amp;#25214;&amp;#23383;&amp;#31526; i &amp;#25110; o &amp;#30340;&amp;#20301;&amp;#32622;(&amp;#21738;&amp;#20010;&amp;#23383;&amp;#27597;&amp;#20808;&amp;#20986;&amp;#29616;&amp;#23601;&amp;#35745;&amp;#31639;&amp;#21738;&amp;#20010;)&amp;#65306;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;string&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;runoob is a great site&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`expr index &quot;$string&quot; io`&lt;/span&gt;  &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36755;&amp;#20986; 4&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org913b41d&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org913b41d&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; 数组&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#23450;&amp;#20041;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;array_name&lt;/span&gt;=(value0 value1 value2 value3)
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#35835;&amp;#21462;&amp;#25968;&amp;#32452;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;value&lt;/span&gt;=${&lt;span style=&quot;color: #FF8C00;&quot;&gt;array_name&lt;/span&gt;[n]}
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992; @ &amp;#31526;&amp;#21495;&amp;#21487;&amp;#20197;&amp;#33719;&amp;#21462;&amp;#25968;&amp;#32452;&amp;#20013;&amp;#30340;&amp;#25152;&amp;#26377;&amp;#20803;&amp;#32032;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;array_name&lt;/span&gt;[@]}
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#33719;&amp;#21462;&amp;#25968;&amp;#32452;&amp;#30340;&amp;#38271;&amp;#24230;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21462;&amp;#24471;&amp;#25968;&amp;#32452;&amp;#20803;&amp;#32032;&amp;#30340;&amp;#20010;&amp;#25968;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;length&lt;/span&gt;=${#&lt;span style=&quot;color: #FF8C00;&quot;&gt;array_name&lt;/span&gt;[@]}
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25110;&amp;#32773;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;length&lt;/span&gt;=${#&lt;span style=&quot;color: #FF8C00;&quot;&gt;array_name&lt;/span&gt;[*]}
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21462;&amp;#24471;&amp;#25968;&amp;#32452;&amp;#21333;&amp;#20010;&amp;#20803;&amp;#32032;&amp;#30340;&amp;#38271;&amp;#24230;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;lengthn&lt;/span&gt;=${#&lt;span style=&quot;color: #FF8C00;&quot;&gt;array_name&lt;/span&gt;[n]}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgca665ce&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgca665ce&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; 注释&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;单行注释：以 # 开头的行就是注释&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
多行注释：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;:&amp;lt;&amp;lt;EOF
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;&amp;#27880;&amp;#37322;&amp;#20869;&amp;#23481;...&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;EOF&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25110;&amp;#32773;&amp;#26159;&lt;/span&gt;
:&amp;lt;&amp;lt;&lt;span style=&quot;color: #CDC673;&quot;&gt;'&lt;/span&gt;
&lt;span style=&quot;color: #CDC673;&quot;&gt;&amp;#27880;&amp;#37322;&amp;#20869;&amp;#23481;...&lt;/span&gt;
&lt;span style=&quot;color: #CDC673;&quot;&gt;'&lt;/span&gt;

&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;:&amp;lt;&amp;lt;!&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;&amp;#27880;&amp;#37322;&amp;#20869;&amp;#23481;...&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;!&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgeab9d57&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgeab9d57&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.6&lt;/span&gt; 环境变量(Environment Parameter)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-6&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;概念：环境变量（environment variable），用来存储有关 shell 会话和工作环境的信息。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
全局环境变量和局部环境变量:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 查看全局变量
$ env
or
$ printenv
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 查看某个全局环境变量
$ env HOME
or
$ echo $HOME
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// set 命令会显示为某个特定进程设置的所有环境变量，包括全局变量、局部变量以及用户自定义变量。
$ set
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设置用户自定义变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ my_variable=Hello
&lt;/pre&gt;

&lt;p&gt;
注意：所有环境变量名均使用大写字母，这是 bash shell 的标准惯例。自己创建的局部变量或是 shell 脚本，请使用小写字母。变量名区分大小写。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ my_variable=&quot;Hello World&quot;
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 设置全局变量
$ export my_variable=&quot;I am Global now&quot;
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 删除环境变量
$ unset my_variable
&lt;/pre&gt;

&lt;p&gt;
注意：如果要用到变量，使用$；如果要操作变量，不使用$。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
PATH、PS1 环境变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 全局环境变量
$ PATH=$PATH:/opt/test/scripts
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 自定义用户命令行的字符显示
&lt;/pre&gt;

&lt;p&gt;
PS1 默认提示符变量，如动态显示当前目录：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export PS1=&quot;[\u@\h \w]&quot;
&lt;/pre&gt;

&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 1:&lt;/span&gt; PS1 变量可使用的参数值&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\d&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;代表日期，格式为weekday month date，例如：&quot;Mon Aug 1&quot;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\H&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\h&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;仅取主机的第一个名字，如上例，则为fc4，.linux则被省略&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\t&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示时间为24小时格式，如：HH：MM：SS&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\T&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示时间为12小时格式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\A&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示时间为24小时格式：HH：MM&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\u&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;当前用户的账号名称&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\v&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;BASH的版本信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\w&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;完整的工作目录名称。家目录会以 ~代替&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\W&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;利用basename取得工作目录名称，所以只会列出最后一个目录&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\#&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;下达的第几个命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;提示字符，如果是root时，提示符为：# ，普通用户则为：$&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\[&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;字符&quot;[&quot;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;字符&quot;]&quot;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\!&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令行动态统计历史命令次数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
PS2 是副提示符变量，默认值是''&amp;gt; ''。PS2一般使用于命令行里较长命令的换行提示信息。可自定义设置如下：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export PS2=&quot;PS2 =&amp;gt; &quot;
&lt;/pre&gt;

&lt;p&gt;
另外，还有 PS3 和 PS4，因为这两个环境变量可能用得不多，所以在这就不介绍了，感兴趣的小伙伴可自行研究。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;定位系统环境变量
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
登录时作为默认登录 shell
&lt;br /&gt;
登录 shell 会从5个不同的启动文件里读取命令，其中 /etc/profile 是默认的 bash shell 主启动文件。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$HOME/.bash_profile
$HOME/.bashrc
$HOME/.bash_login
$HOME/.profile
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;作为非登录 shell 的交互式 shell
&lt;br /&gt;
作为非登录 shell 的交互式启动的，它不会访问 /etc/profile 文件，只会检查 HOME 目录中的 .bashrc 文件。
&lt;br /&gt;
.bashrc 文件有两个作用：一是查看/etc目录下通用的 bashrc 文件；二是为用户提供一个定制自己的命名别名和私有脚本函数的地方。&lt;/li&gt;
&lt;li&gt;作为运行脚本的非交互式shell
&lt;br /&gt;
系统执行 shell 脚本时使用，不同的地方在于它没有命令提示符。bash shell 提供了 BASH_ENV 环境变量，当 shell 启动一个非交互式 shell 进程时，它会检查这个环境变量来查看要执行的启动文件。
&lt;br /&gt;
在大多数发行版中，存储个人用户永久性 bash shell 变量的地方是 $HOME/.bashrc 文件。但如果设置了 BASH_ENV 变量，那么记住，除非它指向的是 $HOME/.bashrc，否则应该将非交互式 shell 的用户变量放在别的地方。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
数组变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 环境变量作为数组使用
$ mytest=(one two three four five)
$ echo ${mytest[2]}
three
$ echo ${mytest[*]}
one two three four five
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
//改变某个索引的值
$ mytest[2] = seven
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
//删除某个索引的值和删除整个数组
$ unset mytest[2]
$ unset mytest
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;环境变量配置文件
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;/etc/profile&lt;/li&gt;
&lt;li&gt;/etc/profile.d/*.sh&lt;/li&gt;
&lt;li&gt;~/.bash_profile&lt;/li&gt;
&lt;li&gt;~/.bashrc&lt;/li&gt;
&lt;li&gt;/etc/bashrc&lt;/li&gt;
&lt;li&gt;~/.bash_logout&lt;/li&gt;
&lt;li&gt;~/.bash_history&lt;/li&gt;
&lt;li id=&quot;/etc/issue&quot;&gt;本地终端欢迎信息&lt;/li&gt;
&lt;li id=&quot;/etc/motd&quot;&gt;登录后的欢迎信息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org43c81c6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org43c81c6&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.7&lt;/span&gt; 重定向(Redirect)输入和输出&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-7&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 2:&lt;/span&gt; 重定向字符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;0&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;标准输入&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;1&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;标准输出&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;2&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;标准错误输出&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;默认为标准输出重定向，与 &amp;gt;1 相同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;2&amp;gt;&amp;amp;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;把标准输出重定向到标准输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&amp;gt;file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;把标准输出和标准错误输出都重定向到 file 中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;/dev/null&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;是一个特殊文件，所有重定向到它的东西都丢弃掉&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
输出重定向
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 标准输出重定向
$ date &amp;gt; test
$ date &amp;gt;&amp;gt; test
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 标准错误输出重定向
$ date 2&amp;gt;test
$ date 2&amp;gt;&amp;gt;test
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 正确输出和错误输出同时保存
$ date &amp;gt; test 2&amp;gt;&amp;amp;1
$ date &amp;gt;&amp;gt; test 2&amp;gt;&amp;amp;1
$ date &amp;amp;&amp;gt;test
$ date &amp;amp;&amp;gt;&amp;gt;test
$ date &amp;gt;&amp;gt;test1 2&amp;gt;&amp;gt;test2
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
输入重定向
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 输入重定向
$ wc &amp;lt; test
//wc 命令，默认情况下，会输出3个值：
&lt;/pre&gt;

&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;文本的行数&lt;/li&gt;
&lt;li&gt;文本的词数&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文本的字节数
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
// 内联输入重定向(inline input redirection)
$ wc &amp;lt;&amp;lt; EOF
&lt;/pre&gt;

&lt;p&gt;
shell 会用PS2环境变量中定义的次提示符来提示输入数据
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga105c61&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga105c61&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.8&lt;/span&gt; 通配符(Wildcard Character)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-8&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
shell通配符(wildcard)
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 3:&lt;/span&gt; shell 常见通配符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;字符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;含义&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lowast;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 0 或多个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a*b  a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;?&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配任意一个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a?b  a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[list]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 list 中的任意单一字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a[xyz]b   a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[!list]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 除list 中的任意单一字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a[!0-9]b  a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[c1-c2]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a[0-9]b  0与9之间必须也只能有一个字符 如a0b, a1b&amp;#x2026; a9b。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{string1,string2,&amp;#x2026;}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 sring1 或 string2 (或更多)其一字符串&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a{abc,xyz,123}b    a与b之间只能是abc或xyz或123这三个字符串之一。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell 特殊字符
shell 除了有通配符之外，由shell 负责预先先解析后，将处理结果传给命令行之外，shell还有一系列自己的其他特殊字符。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 4:&lt;/span&gt; shell 特殊字符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;字符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;IFS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;由 &amp;lt;space&amp;gt; 或 &amp;lt;tab&amp;gt; 或 &amp;lt;enter&amp;gt; 三者之一组成(我们常用 space )。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;CR&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;由 &amp;lt;enter&amp;gt; 产生。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设定变量。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;作变量或运算替换(请不要与 shell prompt 搞混了)。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重导向 stdout。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重导向 stdin。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令管线。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重导向 file descriptor ，或将命令置于背境执行。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;( )&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将其内的命令置于 nested subshell 执行，或用于运算或命令替换。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{ }&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在前一个命令结束时，而忽略其返回值，继续执行下一个命令。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在前一个命令结束时，若返回值为 true，继续执行下一个命令。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;两个竖线&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在前一个命令结束时，若返回值为 false，继续执行下一个命令。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;iexcl;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;执行 history 列表中的命令。*&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell 转义符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 5:&lt;/span&gt; shell 转义符号&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;字符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;‘’(单引号)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;“”(双引号)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\(反斜杠)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;又叫转义，去除其后紧跟的元字符或通配符的特殊意义。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell 解析脚本过程
&lt;/p&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/shell-analysis-process.png&quot; alt=&quot;shell-analysis-process.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfaa398b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgfaa398b&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.9&lt;/span&gt; 位置参数(Positional Parameter)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-9&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
特殊变量
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 6:&lt;/span&gt; 位置参数&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;位置参数变量&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$n&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;n为自然数。0代表命令本身，0代表命令本身，1到9代表第1到第9个参数（参数的值是执行该命令时，从9代表第1到第9个参数（参数的值是执行该命令时，从1开始依次输入的），十以上的参数要用大括号包含，如${10}。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$*&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;这个变量代表命令行中所有的参数（不包括$0），它把所有的参数当做一个整体对待。对其进行for循环遍历时，只会循环一次。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$@&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;这个变量也代表命令行中所有的参数（不包括$0），它把所有的参数当做独立的个体对待。对其进行for循环遍历时，可循环多次。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$#&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;这个变量代表命令行中所有参数的个数（不包括$0）。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;脚本运行的当前进程ID号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$!&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;后台运行的最后一个进程的ID号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$-&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示Shell使用的当前选项，与set命令功能相同。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$?&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
&lt;b&gt;$&lt;/b&gt; 与 $@ 区别：*
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;相同点：都是引用所有参数。&lt;/li&gt;
&lt;li&gt;不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 &quot; * &quot; 等价于 &quot;1 2 3&quot;（传递了一个参数），而 &quot;@&quot; 等价于 &quot;1&quot; &quot;2&quot; &quot;3&quot;（传递了三个参数）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
读取参数
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org3137630&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;using one command line parameter&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#25191;&amp;#34892;&amp;#30340;&amp;#25991;&amp;#20214;&amp;#21517;&amp;#65306;$0&quot;&lt;/span&gt;;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#31532;&amp;#19968;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#20026;&amp;#65306;$1&quot;&lt;/span&gt;;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#31532;&amp;#20108;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#20026;&amp;#65306;$2&quot;&lt;/span&gt;;

&lt;span style=&quot;color: #FF8C00;&quot;&gt;factorial&lt;/span&gt;=1
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; ((&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;=1; number&amp;lt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;1&lt;/span&gt;; number++))
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;factorial&lt;/span&gt;=$[$&lt;span style=&quot;color: #FF8C00;&quot;&gt;factorial&lt;/span&gt; * $&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The factorial of $1 is $factorial&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdaf80fe&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdaf80fe&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.10&lt;/span&gt; 运算符(Operational Character)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-10&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
方法1：declare
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ declare -i c=$a+$b
$ echo $c
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
方法2：expr 或 let 运算工具
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ c=$(expr $a +$b)
$ echo c
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
方法3：$((表达式)) 或 $[表达式]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ var1=$((1+5))
$ var2=$[$var1*2]
// 使用 $ 和 [] 将数学表达式围起来
&lt;/pre&gt;

&lt;p&gt;
注意：bash shell数学运算符支持整数运算。z shell（zsh）提供了完整的浮点数算术操作。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
浮点运算解决方案
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
使用内建的bash计算器：bc
$ bc
3.44 / 5
0
scale = 4 // 浮点运算由scale控制，默认值为0
&lt;/pre&gt;


&lt;p&gt;
注意：-q 选项可以不显示冗长的欢迎信息
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ bc -q
&lt;/pre&gt;


&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org2d9f5a3&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = $(&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;scale=4;3.44 / 5&quot;&lt;/span&gt; | bc)
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; The answer is $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgaf22699&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;= 10.46
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt;= 43.67
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt;= 33.2
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var4&lt;/span&gt;= 71
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var5&lt;/span&gt;= $(bc &amp;lt;&amp;lt; EOF
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;scale= 4&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;a1= ($var1*$var2)&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;a2= ($var3*var4)&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;a1+b1&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;EOF&lt;/span&gt;
)
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The final answer for this mess is $var5&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;运算符
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
算术运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 7:&lt;/span&gt; 算术运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;+&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;加法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $a + $b` 结果为 30。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;减法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $a - $b` 结果为 -10。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lowast;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;乘法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $a \* $b` 结果为  200。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;/&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;除法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $b / $a` 结果为 2。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;%&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;取余&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $b % $a` 结果为 0。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;赋值&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a=$b 将把变量 b 的值赋给 a。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;==&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;相等。用于比较两个数字，相同则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a == $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;!=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不相等。用于比较两个数字，不相同则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a != $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
注意：条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
关系运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 8:&lt;/span&gt; 关系运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-eq&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个数是否相等，相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -eq $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-ne&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个数是否不相等，不相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -ne $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-gt&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否大于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -gt $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-lt&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否小于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-ge&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否大于等于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -ge $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-le&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否小于等于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -le $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
布尔运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 9:&lt;/span&gt; 布尔运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;iexcl;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;非运算，表达式为 true 则返回 false，否则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ ! false ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-o&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;或运算，有一个表达式为 true 则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 20 -o $b -gt 100 ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-a&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;与运算，两个表达式都为 true 才返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 20 -a $b -gt 100 ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
逻辑运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 10:&lt;/span&gt; 逻辑运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;逻辑的 AND&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 100 &amp;amp;&amp;amp; $b -gt 100 ] 返回 false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;||&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;逻辑的 OR&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 100 || $b -gt 100 ] 返回 true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
注意：“|”，可通过 M-x org-entities-help &amp;lt;RET&amp;gt; 查看，Other &amp;gt; Misc
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
字符串运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 11:&lt;/span&gt; 字符串运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个字符串是否相等，相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a = $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;!=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个字符串是否相等，不相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a != $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-z&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测字符串长度是否为0，为0返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -z $a ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-n&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测字符串长度是否为0，不为0返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -n &quot;$a&quot; ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测字符串是否为空，不为空返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文件测试运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 12:&lt;/span&gt; 文件测试运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-b file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是块设备文件，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -b $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-c file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是字符设备文件，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -c $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-d file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是目录，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -d $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-f file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -f $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-g file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否设置了 SGID 位，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -g $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-k file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -k $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-p file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是有名管道，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -p $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-u file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否设置了 SUID 位，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -u $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-r file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否可读，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -r $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-w file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否可写，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -w $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-x file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否可执行，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -x $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-s file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否为空（文件大小是否大于0），不为空返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -s $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-e file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件（包括目录）是否存在，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -e $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-S&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;判断某文件是否 socket。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-L&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否存在并且是一个符号链接。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org79708c6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org79708c6&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.11&lt;/span&gt; 变量测试&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-11&quot;&gt;
&lt;p&gt;
变量测试主要在 Shell 中使用，其它绝大多数语言是没有这个概念的，通用度不高。而且变量测试比较复杂，在实际写脚本的过程中完全可以用其它方式来取代变量测试。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 13:&lt;/span&gt; 变量测试表&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;变量置换方式&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;y 没有设置&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;y 为空&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;y 设置值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y-变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:-变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y+变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:-变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y=变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y值不变&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y值不变&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:=变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y值不变&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y?变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;newValue 输出到标准错误输出&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:?变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;newValue 输出到标准错误输出&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;newValue 输出到标准错误输出&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre class=&quot;example&quot;&gt;
x=${y-4}
// 表示如果y不存在，那么x=4；如果y为空值，那么x为空值；如果y有值，那么x被赋y的值。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org62b7a1a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org62b7a1a&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.12&lt;/span&gt; 退出&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-12&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
退出状态码       
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 14:&lt;/span&gt; 退出状态码&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;状态码&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;0&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令成功结束&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般性未知错误&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不适合的shell命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;126&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令不可执行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;127&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;没找到命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;128&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;无效的退出参数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;128+x&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;与Linux信号x相关的严重错误&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;130&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;通过Ctrl+C终止的命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;255&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常范围之外的退出状态码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;example&quot;&gt;
$ echo $?
0
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
exit
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgd741565&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;'Hello, World'&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 5 
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
$ ./test 
Hello, World
$ echo $?
5
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
#+end_src
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org74ec572&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org74ec572&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.13&lt;/span&gt; 管道(Pipe)命令&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-13&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
选取命令: cut,grep
排序命令: sort,wc,uniq
双向重定向：tee
划分命令: tr,col,join,paste,expand
参数代换: split,xargs
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf7b6c41&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf7b6c41&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.14&lt;/span&gt; 正则表达式(Regular Expression)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-14&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 15:&lt;/span&gt; 正则表达式的基本组成部分&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;正则表达式&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;转义符，将特殊字符进行转义，忽略其特殊意义&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a\.b匹配a.b，但不能匹配ajb，.被转义为特殊意义&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;^&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配行首，awk中，^则是匹配字符串的开始&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;^tux匹配以tux开头的行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配行尾，awk中，$则是匹配字符串的结尾&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;tux$匹配以tux结尾的行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;.&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配除换行符\n之外的任意单个字符，awk则中可以&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配包含在[字符]之中的任意一个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;coo[kl]可以匹配cook或cool&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[^]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配[^字符]之外的任意一个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;123[^45]不可以匹配1234或1235，1236、1237都可以&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[-]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配[]中指定范围内的任意一个字符，要写成递增&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]可以匹配1、2或3等其中任意一个数字&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;?&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项1次或者0次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;colou?r可以匹配color或者colour，不能匹配colouur不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;+&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项1次或者多次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;sa-6+匹配sa-6、sa-666，不能匹配sa-不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lowast;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项0次或者多次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;co*l匹配cl、col、cool、coool等&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;()&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配表达式，创建一个用于匹配的子串&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ma(tri)?匹配max或maxtrix不支持()()()&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{n}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项n次，n是可以为0的正整数&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{n,}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;之前的项至少需要匹配n次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]{2,}匹配任意一个两位数或更多位数不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{n,m}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;指定之前的项至少匹配n次，最多匹配m次，n&amp;lt;=m&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]{2,5}匹配从两位数到五位数之间的任意一个数字不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;|&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;交替匹配 | 两边的任意一项ab(c&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;d)匹配abc或abd不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
参考：&lt;a href=&quot;https://man.linuxde.net/docs/shell_regex.html&quot;&gt;https://man.linuxde.net/docs/shell_regex.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org98149d9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org98149d9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.15&lt;/span&gt; 流程控制&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-15&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0991190&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org0991190&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.1&lt;/span&gt; if-then&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org96f71e6&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt; = zrg
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; grep $&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt; /etc/passwd
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The bash files for user $testuser are:&quot;&lt;/span&gt;
    ls -a /home/$&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt;/.b*
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;elif&lt;/span&gt; ls -d /home/$&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The user $testuser has a directory&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The user $testuser does not exist on this system.&quot;&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;test&amp;#21629;&amp;#20196;&amp;#25552;&amp;#20379;&amp;#20102;&amp;#22312;if-then&amp;#35821;&amp;#21477;&amp;#20013;&amp;#27979;&amp;#35797;&amp;#19981;&amp;#21516;&amp;#26465;&amp;#20214;&amp;#30340;&amp;#36884;&amp;#24452;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;test&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#21028;&amp;#26029;&amp;#19977;&amp;#31867;&amp;#26465;&amp;#20214;&amp;#65306;&amp;#25968;&amp;#20540;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#23383;&amp;#31526;&amp;#20018;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#25991;&amp;#20214;&amp;#27604;&amp;#36739;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
&lt;b&gt;if-then 的高级特性&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org4bafb1f&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;(( expression )) expression &amp;#21487;&amp;#20197;&amp;#26159;&amp;#20219;&amp;#24847;&amp;#30340;&amp;#25968;&amp;#23398;&amp;#36171;&amp;#20540;&amp;#25110;&amp;#27604;&amp;#36739;&amp;#34920;&amp;#36798;&amp;#24335;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=10
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt;(( $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; ** 2 &amp;gt; 90))
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        (( $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; = $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; ** 2))
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The square of $var1 is $var2.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org989f96a&quot;&gt;  &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/bash&lt;/span&gt;
  &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;[[ expression ]]&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt;[[ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;USER&lt;/span&gt; == r* ]]
  &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
          &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Hello $USER&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Sorry, I do not know you.&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;复合条件&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：
&lt;/pre&gt;

&lt;p&gt;
[condition1] &amp;amp;&amp;amp; [condition2]
[condition1] || [condition2]
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgbc266bd&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;testing compound comparisons&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-d $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;] &amp;amp;&amp;amp; [-w $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;/testing]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The file exists and you can write to it.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;I cannot write to the file.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgf0f7544&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf0f7544&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.2&lt;/span&gt; test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-2&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：
&lt;/pre&gt;

&lt;p&gt;
if test condition
then
commands
fi
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
如果 test 命令中列出的条件成立，退出并返回退出状态码0；如果条件不成立，退出并返回非零的退出状态码。
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgddfa4ca&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var&lt;/span&gt; = 10
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var&lt;/span&gt; -eq 5]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt; 
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The value $var are equal.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The value $var are different.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = baduser
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;USER&lt;/span&gt; != $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;This is not $var1&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Welcome $var&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; = baseall
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt; = hockey
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;\&amp;gt;&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt;] &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;gt;&amp;#31526;&amp;#21495;&amp;#38656;&amp;#35201;&amp;#36716;&amp;#20041;&amp;#65292;&amp;#38450;&amp;#27490;&amp;#35299;&amp;#37322;&amp;#25104;&amp;#36755;&amp;#20986;&amp;#37325;&amp;#23450;&amp;#21521;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$var2 is greater than $var3&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$var2 is less than $var3&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
特别说明：
1.test命令和测试表达式使用标准的数学比较符号来表示字符串比较，而用文本代码来表示数值比较。
2.比较测试时，大写字母被认为是小于小写字母，但sort命令恰好相反。
&lt;/pre&gt;


&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgb82ed85&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = testing
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; =&lt;span style=&quot;color: #CDC673;&quot;&gt;''&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-n $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var1' is not empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var1' is empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-z $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var2' is empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var2' is not empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org3eb6c4a&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;jump_directory&lt;/span&gt;=/home/arthur
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-d $&lt;span style=&quot;color: #FF8C00;&quot;&gt;jump_directory&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The $jump_directory directory exists.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The $jump_directory directory does not exists.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;比较&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-d file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并是一个目录&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-e file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-f file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并是一个文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-r file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并可读&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-s file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并非空&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-w file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并可写&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-x file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并可执行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-O file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并属当前用户所有&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-G file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并且默认组与当前用户相同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;file1 -nt file2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否比file2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;file1 -ot file2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否比file2旧&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8c183c9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8c183c9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.3&lt;/span&gt; case&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-3&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：
&lt;/pre&gt;

&lt;p&gt;
case $变量名 in
模式1)
命令序列1;;
模式2)
命令序列2;;
*)
默认执行的命令序列;;
esac 
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgd9fde42&quot;&gt;  &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/bash&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;case&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt;
        start | begin)
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;start something&quot;&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;begin something&quot;&lt;/span&gt;;;
        stop | end)
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;stop something&quot;&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;end something&quot;&lt;/span&gt;;;
        *)
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Ignorant.&quot;&lt;/span&gt;;;
&lt;span style=&quot;color: #FF1493;&quot;&gt;esac&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge37301b&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge37301b&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.4&lt;/span&gt; for&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-4&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：
&lt;/pre&gt;

&lt;p&gt;
for var in list
do
commands
done
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org964f8d6&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;basic for command&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; country&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; China America India Japen
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The next state is $country&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;another example of how not to use the for command&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.&amp;#20351;&amp;#29992;&amp;#36716;&amp;#20041;&amp;#23383;&amp;#31526;&amp;#65288;&amp;#21453;&amp;#26012;&amp;#32447;&amp;#65289;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;2.&amp;#20351;&amp;#29992;&amp;#21452;&amp;#24341;&amp;#21495;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; test&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; I don&lt;span style=&quot;color: #CDC673;&quot;&gt;\'&lt;/span&gt;t know if &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;this'll&quot;&lt;/span&gt; work
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;word:$test&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;using a variable to hold the list&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;China America India Japen&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot; Connecticut&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; country&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Welcome to $country&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;reading values from a file&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;file&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;states&quot;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20462;&amp;#25913;IFS&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#30340;&amp;#20540;&amp;#65292;&amp;#20351;&amp;#20854;&amp;#21482;&amp;#33021;&amp;#35782;&amp;#21035;&amp;#25442;&amp;#34892;&amp;#31526;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;=$&lt;span style=&quot;color: #CDC673;&quot;&gt;'\n'&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; state&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(cat $&lt;span style=&quot;color: #FF8C00;&quot;&gt;file&lt;/span&gt;)
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Visit beautiful $state&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;iterate through all the files in a directory&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; file&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;/* /etc/nginx/*
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-d &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file&quot;&lt;/span&gt;]
        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file is a directory.&quot;&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;elif&lt;/span&gt; [-f &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file&quot;&lt;/span&gt;]
        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file is a file.&quot;&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;C-style for loop&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; (( &lt;span style=&quot;color: #FF8C00;&quot;&gt;i&lt;/span&gt;=1; i &amp;lt;= 10; i++))
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The next number is $i&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;multiple variable&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; (( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt;=1; &lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt;=10;a &amp;lt;= 10; a++, b++))
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$a - $b&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;处理循环的输出&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
可以对循环的输出使用管道或进行重定向，通过在 done 命令之后添加一个处理命令来实现：
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org10643d4&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; file&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; /home/zrg/*
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
...
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt; &amp;gt; output.txt
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0e76d7d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org0e76d7d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.5&lt;/span&gt; while&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：
&lt;/pre&gt;

&lt;p&gt;
while test command
do
other commands
done
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgc67d72c&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;while command test&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=10
&lt;span style=&quot;color: #FF1493;&quot;&gt;while&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -gt 0 ]
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;
        &lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=$[ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; - 1 ]
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org7a9152a&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org7a9152a&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.6&lt;/span&gt; until&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-6&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
until 命令和 while 命令完全相反。
格式：
&lt;/pre&gt;

&lt;p&gt;
until test command
do
other commands
done
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org94e8aba&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;using the until command&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=100
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;until&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 0 ]
&lt;span class=&quot;linenr&quot;&gt;5: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;6: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;7: &lt;/span&gt;        &lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=$[ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -25 ]
&lt;span class=&quot;linenr&quot;&gt;8: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
循环处理文件数据-处理
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org8d0a239&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;changing the IFS value&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;IFS.OLD=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;=$&lt;span style=&quot;color: #CDC673;&quot;&gt;'\n'&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; entry&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(cat /etc/passwd)
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Values in $entry -&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        &lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;=:
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; value&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;entry&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$value&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#35813;&amp;#33050;&amp;#26412;&amp;#20351;&amp;#29992;&amp;#20102;&amp;#20004;&amp;#20010;&amp;#19981;&amp;#21516;&amp;#30340; IFS &amp;#30340;&amp;#20540;&amp;#26469;&amp;#35299;&amp;#26512;&amp;#25968;&amp;#25454;&amp;#65292;&amp;#31532;&amp;#19968;&amp;#20010; IFS &amp;#20540;&amp;#35299;&amp;#26512;&amp;#20986; /etc/passwd &amp;#25991;&amp;#20214;&amp;#20013;&amp;#30340;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#34892;&amp;#65292;&amp;#20869;&amp;#37096; for &amp;#24490;&amp;#29615;&amp;#25509;&amp;#30528;&amp;#23558; IFS &amp;#30340;&amp;#20540;&amp;#20462;&amp;#25913;&amp;#20026;&amp;#20882;&amp;#21495;&amp;#65292;&amp;#20801;&amp;#35768;&amp;#20320;&amp;#20174; /etc/passwd &amp;#30340;&amp;#34892;&amp;#20013;&amp;#35299;&amp;#26512;&amp;#20986;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#20540;&amp;#12290;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga3d4f27&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orga3d4f27&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.7&lt;/span&gt; break&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org930f841&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;--------------------------------&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36339;&amp;#20986;&amp;#21333;&amp;#20010;&amp;#24490;&amp;#29615;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.breaking out of a for loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; var1&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; 1 2 3 4 5
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The for loop is completed&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;2.breaking out of a while loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=1
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;while&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 10 ]
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The while loop is completed&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;--------------------------------&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36339;&amp;#20986;&amp;#20869;&amp;#37096;&amp;#24490;&amp;#29615;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;3.breaking out of an inner loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;(( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; = 1; a&amp;lt;4; a++))
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Outer loop: $a&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;31: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; = 1; b&amp;lt;100; b++))
&lt;span class=&quot;linenr&quot;&gt;32: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;33: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt;34: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;35: &lt;/span&gt;                        &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;36: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;37: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Inner loop: $b&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;38: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;39: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;40: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;---------------------------------&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;41: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36339;&amp;#20986;&amp;#22806;&amp;#37096;&amp;#24490;&amp;#29615;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;42: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;4.breaking out of an outer loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;43: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;(( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; = 1; a&amp;lt;4; a++))
&lt;span class=&quot;linenr&quot;&gt;44: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;45: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Outer loop: $a&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;46: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; = 1; b&amp;lt;100; b++))
&lt;span class=&quot;linenr&quot;&gt;47: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;48: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt;49: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;50: &lt;/span&gt;                        &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt; 2
&lt;span class=&quot;linenr&quot;&gt;51: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;52: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Inner loop: $b&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;53: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;54: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5dc4609&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5dc4609&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.15.8&lt;/span&gt; continue&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-15-8&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgbf6f783&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.using the continue command&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = 1; var1&amp;lt;15; var1++))
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -gt 5] &amp;amp;&amp;amp; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 10]
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;continue&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;2.improperly using the continue command in a while loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=1
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;while &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;while iteration: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;        [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 15 ]
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -gt 5] &amp;amp;&amp;amp; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 10]
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;continue&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Inside iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;        &lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = $[$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; +1]
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;3.continuing an outer loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;(( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; = 1; a&amp;lt;5; a++))
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Interation : $a&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; = 1; b&amp;lt;3; b++))
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; -gt 2] &amp;amp;&amp;amp; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; -lt 4]
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt;                        &lt;span style=&quot;color: #FF1493;&quot;&gt;continue&lt;/span&gt; 2
&lt;span class=&quot;linenr&quot;&gt;31: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;32: &lt;/span&gt;                &lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt;=$[$&lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt;+$&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt;]
&lt;span class=&quot;linenr&quot;&gt;33: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The result of $a * $b is $var3&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;34: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;35: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdeeba0e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdeeba0e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.16&lt;/span&gt; 处理用户输入和数据呈现&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-16&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org114127b&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org114127b&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.16.1&lt;/span&gt; 命令行参数&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbb3fb7e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgbb3fb7e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.16.2&lt;/span&gt; 数据呈现&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0caf295&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0caf295&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.17&lt;/span&gt; 控制脚本&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6b0d970&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6b0d970&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; Shell 高级&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org22d6632&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org22d6632&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; 函数&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge7289bf&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge7289bf&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; 图形化桌面的脚本编程&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcb72589&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgcb72589&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.2.1&lt;/span&gt; 创建文本菜单&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbb24ba5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgbb24ba5&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.2.2&lt;/span&gt; 制作窗口&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga7e9ce7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga7e9ce7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.3&lt;/span&gt; 其它 Shell&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1f22601&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1f22601&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 实用的脚本收集&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbf64f07&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgbf64f07&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.1&lt;/span&gt; 查找可执行文件&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org92c3176&quot;&gt;#!/bin/bash
# finding files in the PATH
IF=:
 for folder in $PATH
 do
  echo &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$folder:&quot;&lt;/span&gt;
  for file in $folder/*
  do
   if [-x $file]
   then
    echo &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file&quot;&lt;/span&gt;
   fi
  done
done
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org04cbd1e&quot;&gt;#!/bin/bash
# process new user accounts
input = &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;users.csv&quot;&lt;/span&gt;
while IFS=',' read -r userid name
do
        echo &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;adding $userid&quot;&lt;/span&gt;
        useradd -c &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$name&quot;&lt;/span&gt; -m $userid
done &amp;lt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$input&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge452df5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge452df5&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.2&lt;/span&gt; 编写简单的脚本实用工具&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd298736&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgd298736&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.1&lt;/span&gt; 归档&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge40e3ef&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge40e3ef&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.2&lt;/span&gt; 管理用户账户&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org217b5a0&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org217b5a0&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.3&lt;/span&gt; 检测磁盘空间&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org80795c6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org80795c6&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.3&lt;/span&gt; 创建与数据库、Web及E-Mail相关的脚本&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8cd7d01&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8cd7d01&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.4&lt;/span&gt; 发送消息&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge472606&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge472606&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.5&lt;/span&gt; 获取格言&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9a467c2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9a467c2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.6&lt;/span&gt; 编造借口&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1406659&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1406659&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.7&lt;/span&gt; 在当前目录及指定子目录深度下创建.gitignore文件&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;sh&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; dir&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`find ./ -mindepth 2 -maxdepth 4 -type d`&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;dir&lt;/span&gt;
        &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`touch $dir/.gitignore`&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;*&quot;&lt;/span&gt;&amp;gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;dir&lt;/span&gt;/.gitignore
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb765fad&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgb765fad&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.8&lt;/span&gt; 解决 dpkg: warning: files list file for package 'x' missing&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-8&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 1: &lt;/span&gt;&lt;/label&gt;&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; package&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(sudo apt install catdoc 2&amp;amp;1 |grep &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;warning: files list file for package'&quot;&lt;/span&gt; |grep -Po &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;[^'\n ]+'&quot;&lt;/span&gt; |grep -Po &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;[^']+&quot;&lt;/span&gt;);
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        sudo apt install --reinstall &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$package&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1d09bbe&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1d09bbe&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.9&lt;/span&gt; 删除大文件的前n行&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-9&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 2: &lt;/span&gt;示例：删除前10行&lt;/label&gt;&lt;pre class=&quot;src src-shell&quot;&gt;tail -n +10 old_file&amp;gt;new_file
mv new_file old_file
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4f335a1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4f335a1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.10&lt;/span&gt; 根据参数执行指定 PHP 脚本（消息队列rabbitmq）&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-10&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
消息队列：启用消费者
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;route_category&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$1&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$2&quot;&lt;/span&gt;         &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;expect_number&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$2&quot;&lt;/span&gt;         &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#39044;&amp;#35745;&amp;#21551;&amp;#29992;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327;&lt;/span&gt;

&lt;span style=&quot;color: #FF8C00;&quot;&gt;routes&lt;/span&gt;=(user store system)

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Check routes exists&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ &lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;!&lt;/span&gt; -n &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$route_category&quot;&lt;/span&gt; ] || [ &lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;!&lt;/span&gt; -n &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$number&quot;&lt;/span&gt; ]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#25509;&amp;#25910;&amp;#20004;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#21442;&amp;#25968;1&amp;#65306;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&amp;#65292;&amp;#21442;&amp;#25968;2&amp;#65306;&amp;#36816;&amp;#34892;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327;&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Check correctness of route category&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [[ &lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;!&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;${routes[@]}&quot;&lt;/span&gt; =~ &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$route_category&quot;&lt;/span&gt; ]]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#38750;&amp;#27861;&amp;#30340;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;If number less than 1, then let $number equal 1&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt; -lt 1 ]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#35686;&amp;#21578;&amp;#65306;&amp;#31532;&amp;#20108;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#20540;&amp;#19981;&amp;#33021;&amp;#23567;&amp;#20110;1&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;=1
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Start execute cumstomer command&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#21363;&amp;#23558;&amp;#21551;&amp;#29992;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;......&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;actual_number&lt;/span&gt;=0 &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#23454;&amp;#38469;&amp;#21551;&amp;#29992;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;while&lt;/span&gt; (($&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt; &amp;gt; 0)); &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
  php /www/test/think rabbit_receive &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$route_category&quot;&lt;/span&gt; &amp;amp;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;actual_number&lt;/span&gt;=actual_number+1
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#31532; $actual_number &amp;#20010; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#24050;&amp;#21551;&amp;#29992;&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;=number-1
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Get queue&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;total_number&lt;/span&gt;=&lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`ps -ef |grep rabbit_receive\ $route_category | wc -l`&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;total_number&lt;/span&gt;=total_number-1

&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;----------------------------------&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#23436;&amp;#25104; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#21551;&amp;#29992;&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#39044;&amp;#35745;&amp;#21551;&amp;#29992;&amp;#25968;&amp;#37327;&amp;#65306;$expect_number&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#23454;&amp;#38469;&amp;#21551;&amp;#29992;&amp;#25968;&amp;#37327;&amp;#65306;$actual_number&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#24403;&amp;#21069; $route_category &amp;#28040;&amp;#24687;&amp;#38431;&amp;#21015;&amp;#24635;&amp;#35745;&amp;#21551;&amp;#29992;&amp;#25968;&amp;#37327;&amp;#65306;$total_number&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;----------------------------------&quot;&lt;/span&gt;

&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
消息队列：Kill 启用消费者
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;route_category&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$1&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;kill_number&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$2&quot;&lt;/span&gt;    &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#35201;&amp;#26432;&amp;#27515;&amp;#30340;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#25968;&amp;#37327;&amp;#65288;&amp;#21487;&amp;#36873;&amp;#65289;&amp;#65292;&amp;#19981;&amp;#20256;&amp;#34920;&amp;#31034;&amp;#26432;&amp;#27515;&amp;#20840;&amp;#37096;&lt;/span&gt;

&lt;span style=&quot;color: #FF8C00;&quot;&gt;routes&lt;/span&gt;=(user store system)

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Check routes exists&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ &lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;!&lt;/span&gt; -n &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$route_category&quot;&lt;/span&gt; ]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#25509;&amp;#25910;&amp;#20004;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#21442;&amp;#25968;1&amp;#65306;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&amp;#65292;&amp;#21442;&amp;#25968;2&amp;#65288;&amp;#21487;&amp;#36873;&amp;#65289;&amp;#65306;&amp;#35201;&amp;#26432;&amp;#27515;&amp;#30340;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#25968;&amp;#37327;&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Check correctness of route category&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [[ &lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;!&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;${routes[@]}&quot;&lt;/span&gt; =~ &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$route_category&quot;&lt;/span&gt; ]]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#38750;&amp;#27861;&amp;#30340;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;ps&amp;#12288;-efw &amp;#26597;&amp;#30475;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243;&amp;#30340;&amp;#21629;&amp;#20196;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;grep -w rabbit_receive\ $route_category &amp;#24378;&amp;#21046; PATTERN &amp;#20165;&amp;#23436;&amp;#20840;&amp;#21305;&amp;#37197;&amp;#23383;&amp;#35789;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;grep -v grep &amp;#22312;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#36827;&amp;#31243;&amp;#20013;&amp;#21435;&amp;#38500;&amp;#21547;&amp;#26377;&amp;#20851;&amp;#38190;&amp;#23383;&amp;#8220;grep&amp;#8221;&amp;#30340;&amp;#36827;&amp;#31243;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;cut -c 9-15 &amp;#25130;&amp;#21462;&amp;#36755;&amp;#20837;&amp;#34892;&amp;#30340;&amp;#31532;9&amp;#20010;&amp;#23383;&amp;#31526;&amp;#21040;&amp;#31532;15&amp;#20010;&amp;#23383;&amp;#31526;&amp;#65292;&amp;#32780;&amp;#36825;&amp;#27491;&amp;#22909;&amp;#26159;&amp;#36827;&amp;#31243;&amp;#21495;PID&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;head -n $kill_number &amp;#25351;&amp;#23450;&amp;#21015;&amp;#20986;&amp;#35201;kill&amp;#30340;PID&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;xargs kill -9 xargs&amp;#21629;&amp;#20196;&amp;#26159;&amp;#29992;&amp;#26469;&amp;#25226;&amp;#21069;&amp;#38754;&amp;#21629;&amp;#20196;&amp;#30340;&amp;#36755;&amp;#20986;&amp;#32467;&amp;#26524;&amp;#65288;PID&amp;#65289;&amp;#20316;&amp;#20026;&amp;#8220;kill -9&amp;#8221;&amp;#21629;&amp;#20196;&amp;#30340;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#24182;&amp;#25191;&amp;#34892;&amp;#35813;&amp;#21629;&amp;#20196;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;----------------------------------&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ -n &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$kill_number&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;kill_number&lt;/span&gt; -gt 0 ]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
  ps -efw | grep -w rabbit_receive&lt;span style=&quot;color: #CDC673;&quot;&gt;\ &lt;/span&gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;route_category&lt;/span&gt; | grep -v grep | cut -c 9-15 | head -n $&lt;span style=&quot;color: #FF8C00;&quot;&gt;kill_number&lt;/span&gt; | xargs kill -9
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#24050; Kill $kill_number &amp;#20010;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF8C00;&quot;&gt;last_number&lt;/span&gt;=$(ps -efw | grep -w rabbit_receive&lt;span style=&quot;color: #CDC673;&quot;&gt;\ &lt;/span&gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;route_category&lt;/span&gt; | grep -v grep | cut -c 9-15 | wc -l)
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#21097;&amp;#20313; $last_number &amp;#20010; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
  ps -efw | grep -w rabbit_receive&lt;span style=&quot;color: #CDC673;&quot;&gt;\ &lt;/span&gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;route_category&lt;/span&gt; | grep -v grep | cut -c 9-15 | xargs kill -9
  &lt;span style=&quot;color: #FF8C00;&quot;&gt;all_kill_number&lt;/span&gt;=$(ps -efw | grep -w rabbit_receive&lt;span style=&quot;color: #CDC673;&quot;&gt;\ &lt;/span&gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;route_category&lt;/span&gt; | grep -v grep | cut -c 9-15 | wc -l)
  &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#24050;Kill $all_kill_number &amp;#20010; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#65292;&amp;#25152;&amp;#26377; $route_category &amp;#28040;&amp;#36153;&amp;#38431;&amp;#21015;&amp;#20840;&amp;#37096;Kill&amp;#23436;&amp;#25104;&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;----------------------------------&quot;&lt;/span&gt;

&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6bbd193&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6bbd193&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;5&lt;/span&gt; 参考资料&lt;/h2&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Shell" /><category term="Shell" /><summary type="html">1 认识 Shell Scripts 学习 Shell 的疑惑 如何启动命令行以及接下来做什么？ 如何使用 shell脚本来自动处理系统管理任务，包括从检测系统统计数据和数据文件到为你的老板生成报表？ Shell 简介 Shell 是一个用 C 语言编写的程序，Shell 既是一种命令语言，又是一种程序设计语言。 Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。 Shell 类型 /bin/bash /bin/tcsh /bin/dash /bin/csh /bin/sh /bin/zsh 执行 Shell 脚本 // 新增可执行权限 chmod +x test.sh // 作为可执行程序 ./test.sh // 作为解释器参数 /bin/sh test.sh 常见 Shell 操作终端 Linux 控制终端 Terminal GNOME Terminal Konsole Terminal Terminus Xterm XShell 理解 Shell 的父子关系 $ ps -f $ bash $ ps -f 输入命令之后，一个子 shell 就出现了。第二个 ps -f 是在子 shell 中执行的。可以从显示结果中看到两个 bash shell 程序在运行。 $ bash $ bash $ bash $ ps --forest 在上面例子中，bash 命令被输入了三次。实际上创建了三个子 shell。ps --forest 命令展示了这些子 shell 间的嵌套结构。可以使用 exit 命令退出子 shell $ exit 进程列表 $ pwd;ls;cd /etc;pwd 在命令之间加入“;，指定要依次执行的一系列命令 $ (pwd;ls;cd /etc;pwd) 使用括号包含命令，成为进程列表 查看是否生成了子 shell，使用： $ echo $BASH_SUBSHELL 子shell用法 // 在后台睡眠10s $ sleep 10&amp;amp; // 查看后台进程 $ ps -f or $ jobs -l //将进程列表置入后台 $ (sleep 2;echo $BASH_SUBSHELL;sleep 2)&amp;amp; // 创建备份 $ (tar -cf Rich.rar /home/rich;tar -cf My.tar /home/christine)&amp;amp; //协程：在后台生成一个子shell，同时在这个子shell中执行命令。 // 进行协程处理，使用 coproc 命令 $ coproc sleep 10 $ coproc My_Job{sleep 10; 理解 shell 的内建命令 外部命令 也被称为文件系统命令，是存在于bash shell之外的程序。ps 就是一个外部命令，可以使用 which 和 type 命令找到 $ which ps $ type -a ps 当外部命令执行时，会创建一个子进程，这种操作叫做衍生（forking）。 内建命令 内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和 shell 编译成一体，作为 shell 工具的组成部分存在。可以利用 type 命令来了解某个命令是否是内建的。 $ type cd cd is a shell builtin 要注意，有些命令有多种实现。既有内建命令也有外部命令。 $ type -a echo echo is a shell builtin echo is /bin/echo $ type -a pwd pwd is a shell builtin pwd is /bin/pwd 2 Shell 基础 2.1 Hello World #!/bin/bash ################ # Hello World # ################ # This script displays the date and who's #&amp;#33050;&amp;#26412;&amp;#29992;&amp;#36884;&amp;#35828;&amp;#26126;&amp;#21450;&amp;#20316;&amp;#32773;&amp;#31561;&amp;#20449;&amp;#24687;&amp;#25551;&amp;#36848; echo &quot;This's is a shell script.&quot; #&amp;#26174;&amp;#31034;&amp;#28040;&amp;#24687; echo -n &quot;The time and date are: &quot; #n&amp;#34920;&amp;#31034;&amp;#22312;&amp;#19968;&amp;#34892;&amp;#26174;&amp;#31034; echo &quot;Hello,World!&quot; # print &quot;Hello,World!&quot; date # print date. echo &quot;User info for userid: $USER&quot; #&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#65292;&amp;#29992;set&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#26597;&amp;#30475;&amp;#19968;&amp;#20221;&amp;#23436;&amp;#25972;&amp;#30340;&amp;#24403;&amp;#21069;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#21015;&amp;#34920;&amp;#12290; echo UID: $UID echo HOME: $HOME echo &quot;The cost of the item is \$15.&quot; #&amp;#32654;&amp;#20803;&amp;#38656;&amp;#35201;&amp;#20351;&amp;#29992;\&amp;#36716;&amp;#20041; days= 10 #&amp;#29992;&amp;#25143;&amp;#33258;&amp;#23450;&amp;#20041;&amp;#21464;&amp;#37327; echo $days # &amp;#26377;&amp;#20004;&amp;#31181;&amp;#26041;&amp;#27861;&amp;#21487;&amp;#20197;&amp;#23558;&amp;#21629;&amp;#20196;&amp;#36171;&amp;#32473;&amp;#21464;&amp;#37327; test= `date` #&amp;#29992;&amp;#19968;&amp;#23545;&amp;#21453;&amp;#24341;&amp;#21495;&amp;#25226;&amp;#25972;&amp;#20010;&amp;#21629;&amp;#20196;&amp;#22260;&amp;#36215;&amp;#26469; test= $(date) #&amp;#20351;&amp;#29992;$()&amp;#26684;&amp;#24335; today= $(date+%y%m%d) #today&amp;#21464;&amp;#37327;&amp;#34987;&amp;#36171;&amp;#20104;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#21518;&amp;#30340;date&amp;#21629;&amp;#20196;&amp;#30340;&amp;#36755;&amp;#20986;&amp;#12290; 2.2 变量 ############ # &amp;#23450;&amp;#20041;&amp;#21464;&amp;#37327; # ############ your_name=&quot;qinjx&quot; echo $your_name echo ${your_name} # &amp;#21464;&amp;#37327;&amp;#21517;&amp;#22806;&amp;#38754;&amp;#30340;&amp;#33457;&amp;#25324;&amp;#21495;&amp;#26159;&amp;#21487;&amp;#36873;&amp;#30340;&amp;#65292;&amp;#21152;&amp;#19981;&amp;#21152;&amp;#37117;&amp;#34892;&amp;#65292;&amp;#21152;&amp;#33457;&amp;#25324;&amp;#21495;&amp;#26159;&amp;#20026;&amp;#20102;&amp;#24110;&amp;#21161;&amp;#35299;&amp;#37322;&amp;#22120;&amp;#35782;&amp;#21035;&amp;#21464;&amp;#37327;&amp;#30340;&amp;#36793;&amp;#30028;&amp;#65292;&amp;#20363;&amp;#22914;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#24773;&amp;#20917;&amp;#65306; for skill in Ada Coffe Action Java; do echo &quot;I am good at ${skill}Script&quot; done # &amp;#21482;&amp;#35835;&amp;#21464;&amp;#37327; myUrl=&quot;https://www.google.com&quot; readonly myUrl myUrl=&quot;https://www.runoob.com&quot; :&amp;lt;&amp;lt;EOF &amp;#36816;&amp;#34892;&amp;#33050;&amp;#26412;&amp;#65292;&amp;#32467;&amp;#26524;&amp;#22914;&amp;#19979;&amp;#65306; /bin/sh: NAME: This variable is read only. EOF ############ # &amp;#21024;&amp;#38500;&amp;#21464;&amp;#37327; # ############ unset variable_name 2.3 字符串 ################ # Shell &amp;#23383;&amp;#31526;&amp;#20018; # ################ str='this is a string' your_name='zrg' str2=&quot;Hello, I know you are \&quot;$your_name\&quot;! \n&quot; echo -e $str :&amp;lt;&amp;lt;EOF &amp;#36755;&amp;#20986;&amp;#32467;&amp;#26524;&amp;#20026;&amp;#65306; Hello, I know you are &quot;runoob&quot;! EOF # &amp;#25340;&amp;#25509;&amp;#23383;&amp;#31526;&amp;#20018; # &amp;#20351;&amp;#29992;&amp;#21452;&amp;#24341;&amp;#21495;&amp;#25340;&amp;#25509; greeting=&quot;hello, &quot;$your_name&quot; !&quot; greeting_1=&quot;hello, ${your_name} !&quot; # &amp;#20351;&amp;#29992;&amp;#21333;&amp;#24341;&amp;#21495;&amp;#25340;&amp;#25509; greeting_2='hello, '$your_name' !' greeting_3='hello, ${your_name} !' # &amp;#33719;&amp;#21462;&amp;#23383;&amp;#31526;&amp;#20018;&amp;#38271;&amp;#24230; string=&quot;abcd&quot; echo ${#string} #&amp;#36755;&amp;#20986; 4 # &amp;#25552;&amp;#21462;&amp;#23376;&amp;#23383;&amp;#31526;&amp;#20018; string=&quot;runoob is a great site&quot; echo ${string:1:4} # &amp;#36755;&amp;#20986; unoo # &amp;#26597;&amp;#25214;&amp;#23376;&amp;#23383;&amp;#31526;&amp;#20018; # &amp;#26597;&amp;#25214;&amp;#23383;&amp;#31526; i &amp;#25110; o &amp;#30340;&amp;#20301;&amp;#32622;(&amp;#21738;&amp;#20010;&amp;#23383;&amp;#27597;&amp;#20808;&amp;#20986;&amp;#29616;&amp;#23601;&amp;#35745;&amp;#31639;&amp;#21738;&amp;#20010;)&amp;#65306; string=&quot;runoob is a great site&quot; echo `expr index &quot;$string&quot; io` # &amp;#36755;&amp;#20986; 4 2.4 数组 # &amp;#23450;&amp;#20041; array_name=(value0 value1 value2 value3) # &amp;#35835;&amp;#21462;&amp;#25968;&amp;#32452; value=${array_name[n]} # &amp;#20351;&amp;#29992; @ &amp;#31526;&amp;#21495;&amp;#21487;&amp;#20197;&amp;#33719;&amp;#21462;&amp;#25968;&amp;#32452;&amp;#20013;&amp;#30340;&amp;#25152;&amp;#26377;&amp;#20803;&amp;#32032; echo ${array_name[@]} # &amp;#33719;&amp;#21462;&amp;#25968;&amp;#32452;&amp;#30340;&amp;#38271;&amp;#24230; # &amp;#21462;&amp;#24471;&amp;#25968;&amp;#32452;&amp;#20803;&amp;#32032;&amp;#30340;&amp;#20010;&amp;#25968; length=${#array_name[@]} # &amp;#25110;&amp;#32773; length=${#array_name[*]} # &amp;#21462;&amp;#24471;&amp;#25968;&amp;#32452;&amp;#21333;&amp;#20010;&amp;#20803;&amp;#32032;&amp;#30340;&amp;#38271;&amp;#24230; lengthn=${#array_name[n]} 2.5 注释 单行注释：以 # 开头的行就是注释 多行注释： :&amp;lt;&amp;lt;EOF &amp;#27880;&amp;#37322;&amp;#20869;&amp;#23481;... EOF # &amp;#25110;&amp;#32773;&amp;#26159; :&amp;lt;&amp;lt;' &amp;#27880;&amp;#37322;&amp;#20869;&amp;#23481;... ' :&amp;lt;&amp;lt;! &amp;#27880;&amp;#37322;&amp;#20869;&amp;#23481;... ! 2.6 环境变量(Environment Parameter) 概念：环境变量（environment variable），用来存储有关 shell 会话和工作环境的信息。 全局环境变量和局部环境变量: // 查看全局变量 $ env or $ printenv // 查看某个全局环境变量 $ env HOME or $ echo $HOME // set 命令会显示为某个特定进程设置的所有环境变量，包括全局变量、局部变量以及用户自定义变量。 $ set 设置用户自定义变量 $ my_variable=Hello 注意：所有环境变量名均使用大写字母，这是 bash shell 的标准惯例。自己创建的局部变量或是 shell 脚本，请使用小写字母。变量名区分大小写。 $ my_variable=&quot;Hello World&quot; // 设置全局变量 $ export my_variable=&quot;I am Global now&quot; // 删除环境变量 $ unset my_variable 注意：如果要用到变量，使用$；如果要操作变量，不使用$。 PATH、PS1 环境变量 // 全局环境变量 $ PATH=$PATH:/opt/test/scripts // 自定义用户命令行的字符显示 PS1 默认提示符变量，如动态显示当前目录： $ export PS1=&quot;[\u@\h \w]&quot; Table 1: PS1 变量可使用的参数值 \d 代表日期，格式为weekday month date，例如：&quot;Mon Aug 1&quot; \H 完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux \h 仅取主机的第一个名字，如上例，则为fc4，.linux则被省略 \t 显示时间为24小时格式，如：HH：MM：SS \T 显示时间为12小时格式 \A 显示时间为24小时格式：HH：MM \u 当前用户的账号名称 \v BASH的版本信息 \w 完整的工作目录名称。家目录会以 ~代替 \W 利用basename取得工作目录名称，所以只会列出最后一个目录 \# 下达的第几个命令 \$ 提示字符，如果是root时，提示符为：# ，普通用户则为：$ \[ 字符&quot;[&quot; \] 字符&quot;]&quot; \! 命令行动态统计历史命令次数 PS2 是副提示符变量，默认值是''&amp;gt; ''。PS2一般使用于命令行里较长命令的换行提示信息。可自定义设置如下： $ export PS2=&quot;PS2 =&amp;gt; &quot; 另外，还有 PS3 和 PS4，因为这两个环境变量可能用得不多，所以在这就不介绍了，感兴趣的小伙伴可自行研究。 定位系统环境变量 登录时作为默认登录 shell 登录 shell 会从5个不同的启动文件里读取命令，其中 /etc/profile 是默认的 bash shell 主启动文件。 $HOME/.bash_profile $HOME/.bashrc $HOME/.bash_login $HOME/.profile 作为非登录 shell 的交互式 shell 作为非登录 shell 的交互式启动的，它不会访问 /etc/profile 文件，只会检查 HOME 目录中的 .bashrc 文件。 .bashrc 文件有两个作用：一是查看/etc目录下通用的 bashrc 文件；二是为用户提供一个定制自己的命名别名和私有脚本函数的地方。 作为运行脚本的非交互式shell 系统执行 shell 脚本时使用，不同的地方在于它没有命令提示符。bash shell 提供了 BASH_ENV 环境变量，当 shell 启动一个非交互式 shell 进程时，它会检查这个环境变量来查看要执行的启动文件。 在大多数发行版中，存储个人用户永久性 bash shell 变量的地方是 $HOME/.bashrc 文件。但如果设置了 BASH_ENV 变量，那么记住，除非它指向的是 $HOME/.bashrc，否则应该将非交互式 shell 的用户变量放在别的地方。 数组变量 // 环境变量作为数组使用 $ mytest=(one two three four five) $ echo ${mytest[2]} three $ echo ${mytest[*]} one two three four five //改变某个索引的值 $ mytest[2] = seven //删除某个索引的值和删除整个数组 $ unset mytest[2] $ unset mytest 环境变量配置文件 /etc/profile /etc/profile.d/*.sh ~/.bash_profile ~/.bashrc /etc/bashrc ~/.bash_logout ~/.bash_history 本地终端欢迎信息 登录后的欢迎信息 2.7 重定向(Redirect)输入和输出 Table 2: 重定向字符 0 标准输入 1 标准输出 2 标准错误输出 &amp;gt; 默认为标准输出重定向，与 &amp;gt;1 相同 2&amp;gt;&amp;amp;1 把标准输出重定向到标准输出 &amp;amp;&amp;gt;file 把标准输出和标准错误输出都重定向到 file 中 /dev/null 是一个特殊文件，所有重定向到它的东西都丢弃掉 输出重定向 // 标准输出重定向 $ date &amp;gt; test $ date &amp;gt;&amp;gt; test // 标准错误输出重定向 $ date 2&amp;gt;test $ date 2&amp;gt;&amp;gt;test // 正确输出和错误输出同时保存 $ date &amp;gt; test 2&amp;gt;&amp;amp;1 $ date &amp;gt;&amp;gt; test 2&amp;gt;&amp;amp;1 $ date &amp;amp;&amp;gt;test $ date &amp;amp;&amp;gt;&amp;gt;test $ date &amp;gt;&amp;gt;test1 2&amp;gt;&amp;gt;test2 输入重定向 // 输入重定向 $ wc &amp;lt; test //wc 命令，默认情况下，会输出3个值： 文本的行数 文本的词数 文本的字节数 // 内联输入重定向(inline input redirection) $ wc &amp;lt;&amp;lt; EOF shell 会用PS2环境变量中定义的次提示符来提示输入数据 2.8 通配符(Wildcard Character) shell通配符(wildcard) Table 3: shell 常见通配符 字符 含义 实例 &amp;lowast; 匹配 0 或多个字符 a*b a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。 ? 匹配任意一个字符 a?b a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。 [list] 匹配 list 中的任意单一字符 a[xyz]b a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。 [!list] 匹配 除list 中的任意单一字符 a[!0-9]b a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。 [c1-c2] 匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z] a[0-9]b 0与9之间必须也只能有一个字符 如a0b, a1b&amp;#x2026; a9b。 {string1,string2,&amp;#x2026;} 匹配 sring1 或 string2 (或更多)其一字符串 a{abc,xyz,123}b a与b之间只能是abc或xyz或123这三个字符串之一。 shell 特殊字符 shell 除了有通配符之外，由shell 负责预先先解析后，将处理结果传给命令行之外，shell还有一系列自己的其他特殊字符。 Table 4: shell 特殊字符 字符 说明 IFS 由 &amp;lt;space&amp;gt; 或 &amp;lt;tab&amp;gt; 或 &amp;lt;enter&amp;gt; 三者之一组成(我们常用 space )。 CR 由 &amp;lt;enter&amp;gt; 产生。 = 设定变量。 $ 作变量或运算替换(请不要与 shell prompt 搞混了)。 &amp;gt; 重导向 stdout。 * &amp;lt; 重导向 stdin。 * &amp;#xa0; 命令管线。 * &amp;amp; 重导向 file descriptor ，或将命令置于背境执行。 * ( ) 将其内的命令置于 nested subshell 执行，或用于运算或命令替换。 * { } 将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围。 ; 在前一个命令结束时，而忽略其返回值，继续执行下一个命令。 * &amp;amp;&amp;amp; 在前一个命令结束时，若返回值为 true，继续执行下一个命令。 * 两个竖线 在前一个命令结束时，若返回值为 false，继续执行下一个命令。 * &amp;iexcl; 执行 history 列表中的命令。* shell 转义符 Table 5: shell 转义符号 字符 说明 ‘’(单引号) 又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)。 “”(双引号) 又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替 \(反斜杠) 又叫转义，去除其后紧跟的元字符或通配符的特殊意义。 shell 解析脚本过程 2.9 位置参数(Positional Parameter) 特殊变量 Table 6: 位置参数 位置参数变量 说明 $n n为自然数。0代表命令本身，0代表命令本身，1到9代表第1到第9个参数（参数的值是执行该命令时，从9代表第1到第9个参数（参数的值是执行该命令时，从1开始依次输入的），十以上的参数要用大括号包含，如${10}。 $* 这个变量代表命令行中所有的参数（不包括$0），它把所有的参数当做一个整体对待。对其进行for循环遍历时，只会循环一次。 $@ 这个变量也代表命令行中所有的参数（不包括$0），它把所有的参数当做独立的个体对待。对其进行for循环遍历时，可循环多次。 $# 这个变量代表命令行中所有参数的个数（不包括$0）。 $$ 脚本运行的当前进程ID号 $! 后台运行的最后一个进程的ID号 $- 显示Shell使用的当前选项，与set命令功能相同。 $? 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。 $ 与 $@ 区别：* 相同点：都是引用所有参数。 不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 &quot; * &quot; 等价于 &quot;1 2 3&quot;（传递了一个参数），而 &quot;@&quot; 等价于 &quot;1&quot; &quot;2&quot; &quot;3&quot;（传递了三个参数）。 读取参数 #!/bin/bash # using one command line parameter echo &quot;&amp;#25191;&amp;#34892;&amp;#30340;&amp;#25991;&amp;#20214;&amp;#21517;&amp;#65306;$0&quot;; echo &quot;&amp;#31532;&amp;#19968;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#20026;&amp;#65306;$1&quot;; echo &quot;&amp;#31532;&amp;#20108;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#20026;&amp;#65306;$2&quot;; factorial=1 for ((number=1; number&amp;lt;=$1; number++)) do factorial=$[$factorial * $number] done echo &quot;The factorial of $1 is $factorial&quot; 2.10 运算符(Operational Character) 方法1：declare $ declare -i c=$a+$b $ echo $c 方法2：expr 或 let 运算工具 $ c=$(expr $a +$b) $ echo c 方法3：$((表达式)) 或 $[表达式] $ var1=$((1+5)) $ var2=$[$var1*2] // 使用 $ 和 [] 将数学表达式围起来 注意：bash shell数学运算符支持整数运算。z shell（zsh）提供了完整的浮点数算术操作。 浮点运算解决方案 使用内建的bash计算器：bc $ bc 3.44 / 5 0 scale = 4 // 浮点运算由scale控制，默认值为0 注意：-q 选项可以不显示冗长的欢迎信息 $ bc -q #!/bin/bash var1 = $(echo &quot;scale=4;3.44 / 5&quot; | bc) echo The answer is $var1 #!/bin/bash var1= 10.46 var2= 43.67 var3= 33.2 var4= 71 var5= $(bc &amp;lt;&amp;lt; EOF scale= 4 a1= ($var1*$var2) a2= ($var3*var4) a1+b1 EOF ) echo &quot;The final answer for this mess is $var5&quot; 运算符 算术运算符 Table 7: 算术运算符 运算符 说明 举例 + 加法 `expr $a + $b` 结果为 30。 - 减法 `expr $a - $b` 结果为 -10。 &amp;lowast; 乘法 `expr $a \* $b` 结果为 200。 / 除法 `expr $b / $a` 结果为 2。 % 取余 `expr $b % $a` 结果为 0。 = 赋值 a=$b 将把变量 b 的值赋给 a。 == 相等。用于比较两个数字，相同则返回 true。 [ $a == $b ] 返回 false。 != 不相等。用于比较两个数字，不相同则返回 true。 [ $a != $b ] 返回 true。 注意：条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。 关系运算符 Table 8: 关系运算符 运算符 说明 举例 -eq 检测两个数是否相等，相等返回 true。 [ $a -eq $b ] 返回 false。 -ne 检测两个数是否不相等，不相等返回 true。 [ $a -ne $b ] 返回 true。 -gt 检测左边的数是否大于右边的，如果是，则返回 true。 [ $a -gt $b ] 返回 false。 -lt 检测左边的数是否小于右边的，如果是，则返回 true。 [ $a -lt $b ] 返回 true。 -ge 检测左边的数是否大于等于右边的，如果是，则返回 true。 [ $a -ge $b ] 返回 false。 -le 检测左边的数是否小于等于右边的，如果是，则返回 true。 [ $a -le $b ] 返回 true。 布尔运算符 Table 9: 布尔运算符 运算符 说明 举例 &amp;iexcl; 非运算，表达式为 true 则返回 false，否则返回 true。 [ ! false ] 返回 true。 -o 或运算，有一个表达式为 true 则返回 true。 [ $a -lt 20 -o $b -gt 100 ] 返回 true。 -a 与运算，两个表达式都为 true 才返回 true。 [ $a -lt 20 -a $b -gt 100 ] 返回 false。 逻辑运算符 Table 10: 逻辑运算符 运算符 说明 举例 &amp;amp;&amp;amp; 逻辑的 AND [ $a -lt 100 &amp;amp;&amp;amp; $b -gt 100 ] 返回 false || 逻辑的 OR [ $a -lt 100 || $b -gt 100 ] 返回 true 注意：“|”，可通过 M-x org-entities-help &amp;lt;RET&amp;gt; 查看，Other &amp;gt; Misc 字符串运算符 Table 11: 字符串运算符 运算符 说明 举例 = 检测两个字符串是否相等，相等返回 true。 [ $a = $b ] 返回 false。 != 检测两个字符串是否相等，不相等返回 true。 [ $a != $b ] 返回 true。 -z 检测字符串长度是否为0，为0返回 true。 [ -z $a ] 返回 false。 -n 检测字符串长度是否为0，不为0返回 true。 [ -n &quot;$a&quot; ] 返回 true。 $ 检测字符串是否为空，不为空返回 true。 [ $a ] 返回 true。 文件测试运算符 Table 12: 文件测试运算符 操作符 说明 举例 -b file 检测文件是否是块设备文件，如果是，则返回 true。 [ -b $file ] 返回 false。 -c file 检测文件是否是字符设备文件，如果是，则返回 true。 [ -c $file ] 返回 false。 -d file 检测文件是否是目录，如果是，则返回 true。 [ -d $file ] 返回 false。 -f file 检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。 [ -f $file ] 返回 true。 -g file 检测文件是否设置了 SGID 位，如果是，则返回 true。 [ -g $file ] 返回 false。 -k file 检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。 [ -k $file ] 返回 false。 -p file 检测文件是否是有名管道，如果是，则返回 true。 [ -p $file ] 返回 false。 -u file 检测文件是否设置了 SUID 位，如果是，则返回 true。 [ -u $file ] 返回 false。 -r file 检测文件是否可读，如果是，则返回 true。 [ -r $file ] 返回 true。 -w file 检测文件是否可写，如果是，则返回 true。 [ -w $file ] 返回 true。 -x file 检测文件是否可执行，如果是，则返回 true。 [ -x $file ] 返回 true。 -s file 检测文件是否为空（文件大小是否大于0），不为空返回 true。 [ -s $file ] 返回 true。 -e file 检测文件（包括目录）是否存在，如果是，则返回 true。 [ -e $file ] 返回 true。 -S 判断某文件是否 socket。 &amp;#xa0; -L 检测文件是否存在并且是一个符号链接。 &amp;#xa0; 2.11 变量测试 变量测试主要在 Shell 中使用，其它绝大多数语言是没有这个概念的，通用度不高。而且变量测试比较复杂，在实际写脚本的过程中完全可以用其它方式来取代变量测试。 Table 13: 变量测试表 变量置换方式 y 没有设置 y 为空 y 设置值 x=${y-变量} x=newValue x为空 x=$y x=${y:-变量} x=newValue x=newValue x=$y x=${y+变量} x为空 x=newValue x=newValue x=${y:-变量} x为空 x为空 x=newValue x=${y=变量} x=newValue x为空 x=$y &amp;#xa0; y=newValue y值不变 y值不变 x=${y:=变量} x=newValue x=newValue x=$y &amp;#xa0; y=newValue y=newValue y值不变 x=${y?变量} newValue 输出到标准错误输出 x为空 x=$y x=${y:?变量} newValue 输出到标准错误输出 newValue 输出到标准错误输出 x=$y x=${y-4} // 表示如果y不存在，那么x=4；如果y为空值，那么x为空值；如果y有值，那么x被赋y的值。 2.12 退出 退出状态码 Table 14: 退出状态码 状态码 描述 0 命令成功结束 1 一般性未知错误 2 不适合的shell命令 126 命令不可执行 127 没找到命令 128 无效的退出参数 128+x 与Linux信号x相关的严重错误 130 通过Ctrl+C终止的命令 255 正常范围之外的退出状态码 $ echo $? 0 exit echo 'Hello, World' exit 5 $ ./test Hello, World $ echo $? 5 #+end_src 2.13 管道(Pipe)命令 选取命令: cut,grep 排序命令: sort,wc,uniq 双向重定向：tee 划分命令: tr,col,join,paste,expand 参数代换: split,xargs 2.14 正则表达式(Regular Expression) Table 15: 正则表达式的基本组成部分 正则表达式 描述 示例 \ 转义符，将特殊字符进行转义，忽略其特殊意义 a\.b匹配a.b，但不能匹配ajb，.被转义为特殊意义 ^ 匹配行首，awk中，^则是匹配字符串的开始 ^tux匹配以tux开头的行 $ 匹配行尾，awk中，$则是匹配字符串的结尾 tux$匹配以tux结尾的行 . 匹配除换行符\n之外的任意单个字符，awk则中可以 ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符 [] 匹配包含在[字符]之中的任意一个字符 coo[kl]可以匹配cook或cool [^] 匹配[^字符]之外的任意一个字符 123[^45]不可以匹配1234或1235，1236、1237都可以 [-] 匹配[]中指定范围内的任意一个字符，要写成递增 [0-9]可以匹配1、2或3等其中任意一个数字 ? 匹配之前的项1次或者0次 colou?r可以匹配color或者colour，不能匹配colouur不支持 + 匹配之前的项1次或者多次 sa-6+匹配sa-6、sa-666，不能匹配sa-不支持 &amp;lowast; 匹配之前的项0次或者多次 co*l匹配cl、col、cool、coool等 () 匹配表达式，创建一个用于匹配的子串 ma(tri)?匹配max或maxtrix不支持()()() {n} 匹配之前的项n次，n是可以为0的正整数 [0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]不支持 {n,} 之前的项至少需要匹配n次 [0-9]{2,}匹配任意一个两位数或更多位数不支持 {n,m} 指定之前的项至少匹配n次，最多匹配m次，n&amp;lt;=m [0-9]{2,5}匹配从两位数到五位数之间的任意一个数字不支持 | 交替匹配 | 两边的任意一项ab(c d)匹配abc或abd不支持 参考：https://man.linuxde.net/docs/shell_regex.html 2.15 流程控制 2.15.1 if-then #!/bin/bash testuser = zrg # if grep $testuser /etc/passwd then echo &quot;The bash files for user $testuser are:&quot; ls -a /home/$testuser/.b* echo elif ls -d /home/$testuser then echo &quot;The user $testuser has a directory&quot; else echo &quot;The user $testuser does not exist on this system.&quot; echo fi #test&amp;#21629;&amp;#20196;&amp;#25552;&amp;#20379;&amp;#20102;&amp;#22312;if-then&amp;#35821;&amp;#21477;&amp;#20013;&amp;#27979;&amp;#35797;&amp;#19981;&amp;#21516;&amp;#26465;&amp;#20214;&amp;#30340;&amp;#36884;&amp;#24452;&amp;#12290; #test&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#21028;&amp;#26029;&amp;#19977;&amp;#31867;&amp;#26465;&amp;#20214;&amp;#65306;&amp;#25968;&amp;#20540;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#23383;&amp;#31526;&amp;#20018;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#25991;&amp;#20214;&amp;#27604;&amp;#36739; if-then 的高级特性 #!/bin/bash # (( expression )) expression &amp;#21487;&amp;#20197;&amp;#26159;&amp;#20219;&amp;#24847;&amp;#30340;&amp;#25968;&amp;#23398;&amp;#36171;&amp;#20540;&amp;#25110;&amp;#27604;&amp;#36739;&amp;#34920;&amp;#36798;&amp;#24335;&amp;#12290; var1=10 if(( $var1 ** 2 &amp;gt; 90)) then (( $var2 = $var1 ** 2)) echo &quot;The square of $var1 is $var2.&quot; fi #!/bin/bash # [[ expression ]] if[[ $USER == r* ]] then echo &quot;Hello $USER&quot; else echo &quot;Sorry, I do not know you.&quot; fi 复合条件 格式： [condition1] &amp;amp;&amp;amp; [condition2] [condition1] || [condition2] #!/bin/bash # testing compound comparisons # if [-d $HOME] &amp;amp;&amp;amp; [-w $HOME/testing] then echo &quot;The file exists and you can write to it.&quot; else echo &quot;I cannot write to the file.&quot; fi 2.15.2 test 格式： if test condition then commands fi 如果 test 命令中列出的条件成立，退出并返回退出状态码0；如果条件不成立，退出并返回非零的退出状态码。 #!/bin/bash $var = 10 if [$var -eq 5] then echo &quot;The value $var are equal.&quot; else echo &quot;The value $var are different.&quot; fi $var1 = baduser if [$USER != $var1] then echo &quot;This is not $var1&quot; else echo &quot;Welcome $var&quot; fi $var2 = baseall $var3 = hockey if [$var2 \&amp;gt; $var3] #&amp;gt;&amp;#31526;&amp;#21495;&amp;#38656;&amp;#35201;&amp;#36716;&amp;#20041;&amp;#65292;&amp;#38450;&amp;#27490;&amp;#35299;&amp;#37322;&amp;#25104;&amp;#36755;&amp;#20986;&amp;#37325;&amp;#23450;&amp;#21521; then echo &quot;$var2 is greater than $var3&quot; else echo &quot;$var2 is less than $var3&quot; fi 特别说明： 1.test命令和测试表达式使用标准的数学比较符号来表示字符串比较，而用文本代码来表示数值比较。 2.比较测试时，大写字母被认为是小于小写字母，但sort命令恰好相反。 #!/bin/bash var1 = testing var2 ='' if [-n $var1] then echo &quot;The string '$var1' is not empty.&quot; else echo &quot;The string '$var1' is empty.&quot; fi if [-z $var2] then echo &quot;The string '$var2' is empty.&quot; else echo &quot;The string '$var2' is not empty.&quot; fi #!/bin/bash jump_directory=/home/arthur if [-d $jump_directory] then echo &quot;The $jump_directory directory exists.&quot; else echo &quot;The $jump_directory directory does not exists.&quot; fi 比较 描述 -d file 检查file是否存在并是一个目录 -e file 检查file是否存在 -f file 检查file是否存在并是一个文件 -r file 检查file是否存在并可读 -s file 检查file是否存在并非空 -w file 检查file是否存在并可写 -x file 检查file是否存在并可执行 -O file 检查file是否存在并属当前用户所有 -G file 检查file是否存在并且默认组与当前用户相同 file1 -nt file2 检查file是否比file2 file1 -ot file2 检查file是否比file2旧 2.15.3 case 格式： case $变量名 in 模式1) 命令序列1;; 模式2) 命令序列2;; *) 默认执行的命令序列;; esac #!/bin/bash case $action in start | begin) echo &quot;start something&quot; echo &quot;begin something&quot;;; stop | end) echo &quot;stop something&quot; echo &quot;end something&quot;;; *) echo &quot;Ignorant.&quot;;; esac 2.15.4 for 格式： for var in list do commands done #!/bin/bash # # basic for command for country in China America India Japen do echo &quot;The next state is $country&quot; done # another example of how not to use the for command # 1.&amp;#20351;&amp;#29992;&amp;#36716;&amp;#20041;&amp;#23383;&amp;#31526;&amp;#65288;&amp;#21453;&amp;#26012;&amp;#32447;&amp;#65289; # 2.&amp;#20351;&amp;#29992;&amp;#21452;&amp;#24341;&amp;#21495; for test in I don\'t know if &quot;this'll&quot; work do echo &quot;word:$test&quot; done # using a variable to hold the list list=&quot;China America India Japen&quot; list=$list&quot; Connecticut&quot; for country in $list do echo &quot;Welcome to $country&quot; done # reading values from a file file=&quot;states&quot; # &amp;#20462;&amp;#25913;IFS&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#30340;&amp;#20540;&amp;#65292;&amp;#20351;&amp;#20854;&amp;#21482;&amp;#33021;&amp;#35782;&amp;#21035;&amp;#25442;&amp;#34892;&amp;#31526; IFS=$'\n' for state in $(cat $file) do echo &quot;Visit beautiful $state&quot; done # iterate through all the files in a directory for file in $HOME/* /etc/nginx/* do if [-d &quot;$file&quot;] then echo &quot;$file is a directory.&quot; elif [-f &quot;$file&quot;] then echo &quot;$file is a file.&quot; fi done # C-style for loop # for (( i=1; i &amp;lt;= 10; i++)) do echo &quot;The next number is $i&quot; done # multiple variable for (( a=1; b=10;a &amp;lt;= 10; a++, b++)) do echo &quot;$a - $b&quot; done 处理循环的输出 可以对循环的输出使用管道或进行重定向，通过在 done 命令之后添加一个处理命令来实现： for file in /home/zrg/* do ... done &amp;gt; output.txt 2.15.5 while 格式： while test command do other commands done # while command test var1=10 while [ $var1 -gt 0 ] do echo $var1 var1=$[ $var1 - 1 ] done 2.15.6 until until 命令和 while 命令完全相反。 格式： until test command do other commands done 1: #!/bin/bash 2: # using the until command 3: var1=100 4: until [ $var1 -eq 0 ] 5: do 6: echo $var1 7: var1=$[ $var1 -25 ] 8: done 循环处理文件数据-处理 1: #!/bin/bash 2: # changing the IFS value 3: IFS.OLD=$IFS 4: IFS=$'\n' 5: for entry in $(cat /etc/passwd) 6: do 7: echo &quot;Values in $entry -&quot; 8: IFS=: 9: for value in $entry 10: do 11: echo &quot;$value&quot; 12: done 13: done 14: # &amp;#35813;&amp;#33050;&amp;#26412;&amp;#20351;&amp;#29992;&amp;#20102;&amp;#20004;&amp;#20010;&amp;#19981;&amp;#21516;&amp;#30340; IFS &amp;#30340;&amp;#20540;&amp;#26469;&amp;#35299;&amp;#26512;&amp;#25968;&amp;#25454;&amp;#65292;&amp;#31532;&amp;#19968;&amp;#20010; IFS &amp;#20540;&amp;#35299;&amp;#26512;&amp;#20986; /etc/passwd &amp;#25991;&amp;#20214;&amp;#20013;&amp;#30340;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#34892;&amp;#65292;&amp;#20869;&amp;#37096; for &amp;#24490;&amp;#29615;&amp;#25509;&amp;#30528;&amp;#23558; IFS &amp;#30340;&amp;#20540;&amp;#20462;&amp;#25913;&amp;#20026;&amp;#20882;&amp;#21495;&amp;#65292;&amp;#20801;&amp;#35768;&amp;#20320;&amp;#20174; /etc/passwd &amp;#30340;&amp;#34892;&amp;#20013;&amp;#35299;&amp;#26512;&amp;#20986;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#20540;&amp;#12290; 2.15.7 break 1: #!/bin/bash 2: # -------------------------------- 3: # &amp;#36339;&amp;#20986;&amp;#21333;&amp;#20010;&amp;#24490;&amp;#29615; 4: # 1.breaking out of a for loop 5: for var1 in 1 2 3 4 5 6: do 7: if [ $var1 -eq 5] 8: then 9: break 10: fi 11: echo &quot;Iteration number: $var1&quot; 12: done 13: echo &quot;The for loop is completed&quot; 14: # 2.breaking out of a while loop 15: var1=1 16: while [ $var1 -lt 10 ] 17: do 18: if [ $var1 -eq 5] 19: then 20: break 21: fi 22: echo &quot;Iteration number: $var1&quot; 23: done 24: echo &quot;The while loop is completed&quot; 25: # -------------------------------- 26: # &amp;#36339;&amp;#20986;&amp;#20869;&amp;#37096;&amp;#24490;&amp;#29615; 27: # 3.breaking out of an inner loop 28: for(( a = 1; a&amp;lt;4; a++)) 29: do 30: echo &quot;Outer loop: $a&quot; 31: for((b = 1; b&amp;lt;100; b++)) 32: do 33: if [ $var1 -eq 5] 34: then 35: break 36: fi 37: echo &quot;Inner loop: $b&quot; 38: done 39: done 40: # --------------------------------- 41: # &amp;#36339;&amp;#20986;&amp;#22806;&amp;#37096;&amp;#24490;&amp;#29615; 42: # 4.breaking out of an outer loop 43: for(( a = 1; a&amp;lt;4; a++)) 44: do 45: echo &quot;Outer loop: $a&quot; 46: for((b = 1; b&amp;lt;100; b++)) 47: do 48: if [ $var1 -eq 5] 49: then 50: break 2 51: fi 52: echo &quot;Inner loop: $b&quot; 53: done 54: done 2.15.8 continue 1: # 1.using the continue command 2: for((var1 = 1; var1&amp;lt;15; var1++)) 3: do 4: if [$var1 -gt 5] &amp;amp;&amp;amp; [$var1 -lt 10] 5: then 6: continue 7: fi 8: echo &quot;Iteration number: $var1&quot; 9: done 10: # 2.improperly using the continue command in a while loop 11: var1=1 12: while echo &quot;while iteration: $var1&quot; 13: [ $var1 -lt 15 ] 14: do 15: if [ $var1 -gt 5] &amp;amp;&amp;amp; [$var1 -lt 10] 16: then 17: continue 18: fi 19: echo &quot;Inside iteration number: $var1&quot; 20: var1 = $[$var1 +1] 21: done 22: # 3.continuing an outer loop 23: for(( a = 1; a&amp;lt;5; a++)) 24: do 25: echo &quot;Interation : $a&quot; 26: for((b = 1; b&amp;lt;3; b++)) 27: do 28: if [ $b -gt 2] &amp;amp;&amp;amp; [$a -lt 4] 29: then 30: continue 2 31: fi 32: var3=$[$a+$b] 33: echo &quot;The result of $a * $b is $var3&quot; 34: done 35: done 2.16 处理用户输入和数据呈现 2.16.1 命令行参数 2.16.2 数据呈现 2.17 控制脚本 3 Shell 高级 3.1 函数 3.2 图形化桌面的脚本编程 3.2.1 创建文本菜单 3.2.2 制作窗口 3.3 其它 Shell 4 实用的脚本收集 4.1 查找可执行文件 #!/bin/bash # finding files in the PATH IF=: for folder in $PATH do echo &quot;$folder:&quot; for file in $folder/* do if [-x $file] then echo &quot;$file&quot; fi done done #!/bin/bash # process new user accounts input = &quot;users.csv&quot; while IFS=',' read -r userid name do echo &quot;adding $userid&quot; useradd -c &quot;$name&quot; -m $userid done &amp;lt; &quot;$input&quot; 4.2 编写简单的脚本实用工具 4.2.1 归档 4.2.2 管理用户账户 4.2.3 检测磁盘空间 4.3 创建与数据库、Web及E-Mail相关的脚本 4.4 发送消息 4.5 获取格言 4.6 编造借口 4.7 在当前目录及指定子目录深度下创建.gitignore文件 #!/bin/sh for dir in `find ./ -mindepth 2 -maxdepth 4 -type d` do echo $dir `touch $dir/.gitignore` echo &quot;*&quot;&amp;gt;$dir/.gitignore done 4.8 解决 dpkg: warning: files list file for package 'x' missing Listing 1: for package in $(sudo apt install catdoc 2&amp;amp;1 |grep &quot;warning: files list file for package'&quot; |grep -Po &quot;[^'\n ]+'&quot; |grep -Po &quot;[^']+&quot;); do sudo apt install --reinstall &quot;$package&quot; done 4.9 删除大文件的前n行 Listing 2: 示例：删除前10行tail -n +10 old_file&amp;gt;new_file mv new_file old_file 4.10 根据参数执行指定 PHP 脚本（消息队列rabbitmq） 消息队列：启用消费者 #!/bin/bash route_category=&quot;$1&quot; # &amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216; number=&quot;$2&quot; # &amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327; expect_number=&quot;$2&quot; # &amp;#39044;&amp;#35745;&amp;#21551;&amp;#29992;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327; routes=(user store system) # Check routes exists if [ ! -n &quot;$route_category&quot; ] || [ ! -n &quot;$number&quot; ]; then echo &quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#25509;&amp;#25910;&amp;#20004;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#21442;&amp;#25968;1&amp;#65306;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&amp;#65292;&amp;#21442;&amp;#25968;2&amp;#65306;&amp;#36816;&amp;#34892;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327;&quot; exit fi # Check correctness of route category if [[ ! &quot;${routes[@]}&quot; =~ &quot;$route_category&quot; ]]; then echo &quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#38750;&amp;#27861;&amp;#30340;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&quot; exit fi # If number less than 1, then let $number equal 1 if [ $number -lt 1 ]; then echo &quot;&amp;#35686;&amp;#21578;&amp;#65306;&amp;#31532;&amp;#20108;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#20540;&amp;#19981;&amp;#33021;&amp;#23567;&amp;#20110;1&quot; number=1 fi # Start execute cumstomer command echo &quot;&amp;#21363;&amp;#23558;&amp;#21551;&amp;#29992;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;......&quot; actual_number=0 # &amp;#23454;&amp;#38469;&amp;#21551;&amp;#29992;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#25968;&amp;#37327; while (($number &amp;gt; 0)); do php /www/test/think rabbit_receive &quot;$route_category&quot; &amp;amp; let actual_number=actual_number+1 echo &quot;&amp;#31532; $actual_number &amp;#20010; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#24050;&amp;#21551;&amp;#29992;&quot; let number=number-1 done # Get queue total_number=`ps -ef |grep rabbit_receive\ $route_category | wc -l` let total_number=total_number-1 echo &quot;----------------------------------&quot; echo &quot;&amp;#23436;&amp;#25104; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#21551;&amp;#29992;&quot; echo &quot;&amp;#39044;&amp;#35745;&amp;#21551;&amp;#29992;&amp;#25968;&amp;#37327;&amp;#65306;$expect_number&quot; echo &quot;&amp;#23454;&amp;#38469;&amp;#21551;&amp;#29992;&amp;#25968;&amp;#37327;&amp;#65306;$actual_number&quot; echo &quot;&amp;#24403;&amp;#21069; $route_category &amp;#28040;&amp;#24687;&amp;#38431;&amp;#21015;&amp;#24635;&amp;#35745;&amp;#21551;&amp;#29992;&amp;#25968;&amp;#37327;&amp;#65306;$total_number&quot; echo &quot;----------------------------------&quot; 消息队列：Kill 启用消费者 #!/bin/bash route_category=&quot;$1&quot; # &amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216; kill_number=&quot;$2&quot; # &amp;#35201;&amp;#26432;&amp;#27515;&amp;#30340;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#25968;&amp;#37327;&amp;#65288;&amp;#21487;&amp;#36873;&amp;#65289;&amp;#65292;&amp;#19981;&amp;#20256;&amp;#34920;&amp;#31034;&amp;#26432;&amp;#27515;&amp;#20840;&amp;#37096; routes=(user store system) # Check routes exists if [ ! -n &quot;$route_category&quot; ]; then echo &quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#25509;&amp;#25910;&amp;#20004;&amp;#20010;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#21442;&amp;#25968;1&amp;#65306;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&amp;#65292;&amp;#21442;&amp;#25968;2&amp;#65288;&amp;#21487;&amp;#36873;&amp;#65289;&amp;#65306;&amp;#35201;&amp;#26432;&amp;#27515;&amp;#30340;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#25968;&amp;#37327;&quot; exit fi # Check correctness of route category if [[ ! &quot;${routes[@]}&quot; =~ &quot;$route_category&quot; ]]; then echo &quot;&amp;#38169;&amp;#35823;&amp;#65306;&amp;#38750;&amp;#27861;&amp;#30340;&amp;#36335;&amp;#30001;&amp;#32452;&amp;#21517;&amp;#31216;&quot; exit fi # ps&amp;#12288;-efw &amp;#26597;&amp;#30475;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243;&amp;#30340;&amp;#21629;&amp;#20196; # grep -w rabbit_receive\ $route_category &amp;#24378;&amp;#21046; PATTERN &amp;#20165;&amp;#23436;&amp;#20840;&amp;#21305;&amp;#37197;&amp;#23383;&amp;#35789; # grep -v grep &amp;#22312;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#36827;&amp;#31243;&amp;#20013;&amp;#21435;&amp;#38500;&amp;#21547;&amp;#26377;&amp;#20851;&amp;#38190;&amp;#23383;&amp;#8220;grep&amp;#8221;&amp;#30340;&amp;#36827;&amp;#31243; # cut -c 9-15 &amp;#25130;&amp;#21462;&amp;#36755;&amp;#20837;&amp;#34892;&amp;#30340;&amp;#31532;9&amp;#20010;&amp;#23383;&amp;#31526;&amp;#21040;&amp;#31532;15&amp;#20010;&amp;#23383;&amp;#31526;&amp;#65292;&amp;#32780;&amp;#36825;&amp;#27491;&amp;#22909;&amp;#26159;&amp;#36827;&amp;#31243;&amp;#21495;PID # head -n $kill_number &amp;#25351;&amp;#23450;&amp;#21015;&amp;#20986;&amp;#35201;kill&amp;#30340;PID # xargs kill -9 xargs&amp;#21629;&amp;#20196;&amp;#26159;&amp;#29992;&amp;#26469;&amp;#25226;&amp;#21069;&amp;#38754;&amp;#21629;&amp;#20196;&amp;#30340;&amp;#36755;&amp;#20986;&amp;#32467;&amp;#26524;&amp;#65288;PID&amp;#65289;&amp;#20316;&amp;#20026;&amp;#8220;kill -9&amp;#8221;&amp;#21629;&amp;#20196;&amp;#30340;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#24182;&amp;#25191;&amp;#34892;&amp;#35813;&amp;#21629;&amp;#20196; echo &quot;----------------------------------&quot; if [ -n &quot;$kill_number&quot; ] &amp;amp;&amp;amp; [ $kill_number -gt 0 ]; then ps -efw | grep -w rabbit_receive\ $route_category | grep -v grep | cut -c 9-15 | head -n $kill_number | xargs kill -9 echo &quot;&amp;#24050; Kill $kill_number &amp;#20010;&amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&quot; last_number=$(ps -efw | grep -w rabbit_receive\ $route_category | grep -v grep | cut -c 9-15 | wc -l) echo &quot;&amp;#21097;&amp;#20313; $last_number &amp;#20010; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&quot; else ps -efw | grep -w rabbit_receive\ $route_category | grep -v grep | cut -c 9-15 | xargs kill -9 all_kill_number=$(ps -efw | grep -w rabbit_receive\ $route_category | grep -v grep | cut -c 9-15 | wc -l) echo &quot;&amp;#24050;Kill $all_kill_number &amp;#20010; $route_category &amp;#28040;&amp;#36153;&amp;#32773;&amp;#38431;&amp;#21015;&amp;#65292;&amp;#25152;&amp;#26377; $route_category &amp;#28040;&amp;#36153;&amp;#38431;&amp;#21015;&amp;#20840;&amp;#37096;Kill&amp;#23436;&amp;#25104;&quot; fi echo &quot;----------------------------------&quot; 5 参考资料</summary></entry><entry><title type="html">Java 开发笔记</title><link href="http://localhost:4000/java/2021/01/31/java-notes/" rel="alternate" type="text/html" title="Java 开发笔记" /><published>2021-01-31T00:00:00+08:00</published><updated>2021-01-31T00:00:00+08:00</updated><id>http://localhost:4000/java/2021/01/31/java-notes</id><content type="html" xml:base="http://localhost:4000/java/2021/01/31/java-notes/">&lt;p&gt;
x
&lt;/p&gt;

&lt;div id=&quot;outline-container-org900f0ca&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org900f0ca&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; Java 概念&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgde20516&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgde20516&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 重写(override)和重载(overload)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;概念
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Override：子类中和父类中的方法声明一模一样。&lt;/li&gt;
&lt;li&gt;Overload：方法一样，参数或参数类型不一样。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;使用注意事项
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;父类中私有方法不能被重写&lt;/li&gt;
&lt;li&gt;子类重写父类方法时，访问权限不能更低&lt;/li&gt;
&lt;li&gt;父类静态方法，子类也必须通过静态方法进行重写。（算不上重写）&lt;/li&gt;
&lt;li&gt;推荐：重写时，最好声明一模一样。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2b606cb&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2b606cb&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; == vs equals&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;对于==，如果作用于基本数据类型的变量（byte,short,char,int,long,float,double,boolean ），则直接比较其存储的&quot;值&quot;是否相等；如果作用于引用类型的变量（String），则比较的是所指向的对象的地址（即是否指向同一个对象）。&lt;/li&gt;
&lt;li&gt;equals方法是基类Object中的方法，因此对于所有的继承于Object的类都会有该方法。在Object类中，equals方法是用来比较两个对象的引用是否相等，即是否指向同一个对象。&lt;/li&gt;
&lt;li&gt;对于equals方法注意：equals方法不能作用于基本数据类型的变量。如果没有对equals方法进行重写，则比较的是引用类型的变量所指向的对象的地址；而String类对equals方法进行了重写，用来比较指向的字符串对象所存储的字符串是否相等。其他的一些类诸如Double，Date，Integer等，都对equals方法进行了重写用来比较指向的对象所存储的内容是否相等。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0af0c65&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0af0c65&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 反射 &amp;amp; 范型&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;概念
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;反射：在日常生活中，通过放大镜可以看清楚物体的内部结构。在Java 中，反射机制就是起到放大镜的效果，可以通过类名，加载这个 类，显示出这个类的方法等信息。&lt;/li&gt;
&lt;li&gt;范型：在日常生活中，橡皮泥通过外力可以改变其形状，其形状是不固 定的。在Java中，通过泛型可以给开发带来方便，通过参数的指 定，可以改变其类型。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
使用范型的优缺点
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;使代码看起来灵活，代码量减少，容易管理 ，不容易产生错误；&lt;/li&gt;
&lt;li&gt;使用泛型在代码编译的时候能进行类型的检查并自动转换，使代码的运行效率得到提高；&lt;/li&gt;
&lt;li&gt;使用泛型在编译进行自动转换的时候出现了错误，会进行错误提示；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
-（缺点）在性能上不如数组快。
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1da7301&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1da7301&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.4&lt;/span&gt; 值传递 vs 引用传递&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;错误理解
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;值传递和引用传递，区分的条件是传递的内容，如果是个值，就是值传递。如果是个引用，就是引用传递。&lt;/li&gt;
&lt;li&gt;Java是引用传递&lt;/li&gt;
&lt;li&gt;传递的参数如果是普通类型，那就是值传递，如果是对象，那就是引用传递。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;实参和形参
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;形式参数：是在定义函数名和函数体的时候使用的参数,目的是用来接收调用该函数时传入的参数。&lt;/li&gt;
&lt;li&gt;实际参数：在调用有参函数时，主调函数和被调函数之间有数据传递关系。在主调函数中调用一个函数时，函数名后面括号中的参数称为“实际参数”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
值传递和引用传递
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;值传递（pass by value）是指在调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。&lt;/li&gt;
&lt;li&gt;引用传递（pass by reference）是指在调用函数时将实际参数的地址直接传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;举例：&lt;/b&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/value-example.png&quot; alt=&quot;value-example.png&quot; /&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;总结
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;值传递：会创建副本，在函数中无法改变原始对象。&lt;/li&gt;
&lt;li&gt;引用传递：引用传递不会创建副本，函数中可以改变原始对象。&lt;/li&gt;
&lt;li&gt;Java中其实还是值传递的，只不过对于对象参数，值的内容是对象的引用。可以说，Java中的传递只有值传递。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4c42cef&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4c42cef&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.5&lt;/span&gt; Class&amp;lt;T&amp;gt; vs Class&amp;lt;?&amp;gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9f20da1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9f20da1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.5.1&lt;/span&gt; 提前了解&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-5-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;使用大写字母A,B,C,D&amp;#x2026;&amp;#x2026;X,Y,Z定义的，就都是泛型，把T换成A也一样，这里T只是名字上的意义而已。&lt;/li&gt;
&lt;li&gt;？ 表示不确定的java类型&lt;/li&gt;
&lt;li&gt;T (type) 表示具体的一个java类型&lt;/li&gt;
&lt;li&gt;K V (key value) 分别代表java键值中的Key Value&lt;/li&gt;
&lt;li&gt;E (element) 代表Element&lt;/li&gt;
&lt;li&gt;?和T区别是：？是一个不确定类，？和T都表示不确定的类型 ，但如果是T的话，函数里面可以对T进行操作，比方 T car = getCar()，而不能用？ car = getCar()。&lt;/li&gt;
&lt;li&gt;Object和T不同点在于，Object是一个实打实的类,并没有泛指谁，可以直接给List中 add(new Object())&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfaf1e87&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgfaf1e87&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.5.2&lt;/span&gt; Class&amp;lt;T&amp;gt;，Class&amp;lt;?&amp;gt;区别&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-5-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Class是什么呢，Class也是一个类，但Class是存放上面String,List,Map&amp;#x2026;&amp;#x2026;类信息的一个类，有点抽象。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
如何获取到Class类呢，有三种方式:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;List&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt; = &lt;span style=&quot;color: #AF87FF;&quot;&gt;null&lt;/span&gt;;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Class&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;clazz&lt;/span&gt; = list.getClass();
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Class&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;clazz&lt;/span&gt; = Class.forName(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;com.lyang.demo.fanxing.People&quot;&lt;/span&gt;);
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Class&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;clazz&lt;/span&gt; = List.&lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
使用Class&amp;lt;T&amp;gt;和Class&amp;lt;?&amp;gt;多发生在反射场景下，如果我们不使用泛型，反射创建一个类是什么样的:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;People&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;people&lt;/span&gt; = (&lt;span style=&quot;color: #5FD7FF;&quot;&gt;People&lt;/span&gt;) Class.forName(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;com.lyang.demo.fanxing.People&quot;&lt;/span&gt;).newInstance();
&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#38656;&amp;#35201;&amp;#24378;&amp;#36716;&amp;#65292;&amp;#22914;&amp;#26524;&amp;#21453;&amp;#23556;&amp;#30340;&amp;#31867;&amp;#22411;&amp;#19981;&amp;#26159;People&amp;#31867;&amp;#65292;&amp;#23601;&amp;#20250;&amp;#25253;java.lang.ClassCastException&amp;#38169;&amp;#35823;&amp;#12290;&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;Class&amp;lt;T&amp;gt;&amp;#27867;&amp;#22411;&amp;#21518;&amp;#65292;&amp;#19981;&amp;#29992;&amp;#24378;&amp;#36716;&amp;#20102;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Test&lt;/span&gt; {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &amp;lt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;T&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;createInstance&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Class&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;clazz&lt;/span&gt;) &lt;span style=&quot;color: #FF1493;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;IllegalAccessException&lt;/span&gt;, &lt;span style=&quot;color: #5FD7FF;&quot;&gt;InstantiationException&lt;/span&gt; {
        &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; clazz.newInstance();
    }

    &lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;String&lt;/span&gt;[] &lt;span style=&quot;color: #FF8C00;&quot;&gt;args&lt;/span&gt;)  &lt;span style=&quot;color: #FF1493;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;IllegalAccessException&lt;/span&gt;, &lt;span style=&quot;color: #5FD7FF;&quot;&gt;InstantiationException&lt;/span&gt;  {
            &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Fruit&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;fruit&lt;/span&gt;= createInstance(Fruit .&lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt;);
            &lt;span style=&quot;color: #5FD7FF;&quot;&gt;People&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;people&lt;/span&gt;= createInstance(People.&lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt;);
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
结论：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Class&amp;lt;T&amp;gt;在实例化的时候，T要替换成具体类&lt;/li&gt;
&lt;li&gt;Class&amp;lt;?&amp;gt;它是个通配泛型，?可以代表任何类型，主要用于声明时的限制情况&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21487;&amp;#20197;&amp;#36825;&amp;#26679;&amp;#22768;&amp;#26126;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;clazz&lt;/span&gt;;
&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20294;&amp;#19981;&amp;#21487;&amp;#20197;&amp;#36825;&amp;#26679;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Class&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;clazz&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga9594db&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga9594db&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.6&lt;/span&gt; String vs StringBuffer vs StringBuilder&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-6&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;都是final类，都不允许被继承；&lt;/li&gt;
&lt;li&gt;String类长度是不可变的，StringBuffer和StringBuilder类长度是可以改变的；&lt;/li&gt;
&lt;li&gt;StringBuffer类是线程安全的，StringBuilder不是线程安全的；&lt;/li&gt;
&lt;li&gt;String类型和StringBuffer类型的主要性能区别：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;String是不可变的对象，因此每次在对String类进行改变的时候都会生成一个新的string对象，然后将指针指向新的string对象，所以经常要改变字符串长度的话不要使用string，因为每次生成对象都会对系统性能产生影响，特别是当内存中引用的对象多了以后，JVM的GC就会开始工作，性能就会降低；&lt;/li&gt;
&lt;li&gt;使用StringBuffer类时，每次都会对StringBuffer对象本身进行操作，而不是生成新的对象并改变对象引用，所以多数情况下推荐使用StringBuffer，特别是字符串对象经常要改变的情况；&lt;/li&gt;
&lt;li&gt;在某些情况下，String对象的字符串拼接其实是被Java Compiler编译成了StringBuffer对象的拼接，所以这些时候String对象的速度并不会比StringBuffer对象慢。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;StringBuilder是5.0新增的，此类提供一个与 StringBuffer 兼容的 API，但不保证同步。该类被设计用作 StringBuffer 的一个简易替换，用在字符串缓冲区被单个线程使用的时候（这种情况很普遍）。如果可能，建议优先采用该类，因为在大多数实现中，它比 StringBuffer 要快。两者的方法基本相同；&lt;/li&gt;
&lt;li&gt;使用策略：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;基本原则：如果要操作少量的数据，用String ；单线程操作大量数据，用StringBuilder ；多线程操作大量数据，用StringBuffer。&lt;/li&gt;
&lt;li&gt;不要使用String类的”+”来进行频繁的拼接，因为那样的性能极差的，应该使用StringBuffer或StringBuilder类，这在Java的优化上是一条比较重要的原则。&lt;/li&gt;
&lt;li&gt;StringBuilder一般使用在方法内部来完成类似”+”功能，因为是线程不安全的，所以用完以后可以丢弃。StringBuffer主要用在全局变量中。&lt;/li&gt;
&lt;li&gt;相同情况下，使用 StirngBuilder 相比使用 StringBuffer 仅能获得 10%~15% 左右的性能提升，但却要冒多线程不安全的风险。而在现实的模块化编程中，负责某一模块的程序员不一定能清晰地判断该模块是否会放入多线程的环境中运行，因此：除非确定系统的瓶颈是在 StringBuffer 上，并且确定你的模块不会运行在多线程模式下，才可以采用StringBuilder；否则还是用StringBuffer。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3424245&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org3424245&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.7&lt;/span&gt; 自动装箱、拆箱&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-7&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
什么是自动装箱、拆箱
简单一点说，装箱就是自动将基本数据类型转换为包装器类型；拆箱就是自动将包装器类型转换为基本数据类型。如下所示：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#33258;&amp;#21160;&amp;#35013;&amp;#31665;&lt;/span&gt;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;total&lt;/span&gt; = 99;

&lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#33258;&amp;#21160;&amp;#25286;&amp;#31665;&lt;/span&gt;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;totalprim&lt;/span&gt; = total;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
反编译class文件之后得到如下内容：
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
javap -c StringTest
&lt;/pre&gt;


&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;total&lt;/span&gt; = 99; 
&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25191;&amp;#34892;&amp;#19978;&amp;#38754;&amp;#37027;&amp;#21477;&amp;#20195;&amp;#30721;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#65292;&amp;#31995;&amp;#32479;&amp;#20026;&amp;#25105;&amp;#20204;&amp;#25191;&amp;#34892;&amp;#20102;&amp;#65306; &lt;/span&gt;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;total&lt;/span&gt; = Integer.valueOf(99);

&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;totalprim&lt;/span&gt; = total; 
&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25191;&amp;#34892;&amp;#19978;&amp;#38754;&amp;#37027;&amp;#21477;&amp;#20195;&amp;#30721;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#65292;&amp;#31995;&amp;#32479;&amp;#20026;&amp;#25105;&amp;#20204;&amp;#25191;&amp;#34892;&amp;#20102;&amp;#65306; &lt;/span&gt;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;totalprim&lt;/span&gt; = total.intValue();

&lt;span style=&quot;color: #CDC673;&quot;&gt;/**&lt;/span&gt;
&lt;span style=&quot;color: #CDC673;&quot;&gt; * &amp;#36827;&amp;#32780;&amp;#20197;Integer&amp;#20026;&amp;#20363;&amp;#65292;&amp;#20998;&amp;#26512;&amp;#28304;&amp;#30721;&lt;/span&gt;
&lt;span style=&quot;color: #CDC673;&quot;&gt; */&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Integer.valueOf&amp;#20989;&amp;#25968;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;valueOf&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i&lt;/span&gt;) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt;  i &amp;gt;= 128 || i &amp;lt; -128 ? &lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt;(i) : SMALL_VALUES[i + 128];
}

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Integer&amp;#30340;&amp;#26500;&amp;#36896;&amp;#20989;&amp;#25968;&amp;#65306;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;value&lt;/span&gt;;

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#23450;&amp;#20041;&amp;#20102;&amp;#19968;&amp;#20010;value&amp;#21464;&amp;#37327;&amp;#65292;&amp;#21019;&amp;#24314;&amp;#19968;&amp;#20010;Integer&amp;#23545;&amp;#35937;&amp;#65292;&amp;#23601;&amp;#20250;&amp;#32473;&amp;#36825;&amp;#20010;&amp;#21464;&amp;#37327;&amp;#21021;&amp;#22987;&amp;#21270;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;Integer&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;value&lt;/span&gt;) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;this&lt;/span&gt;.value = value;
}

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20256;&amp;#20837;&amp;#30340;&amp;#26159;&amp;#19968;&amp;#20010;String&amp;#21464;&amp;#37327;&amp;#65292;&amp;#23427;&amp;#20250;&amp;#20808;&amp;#25226;&amp;#23427;&amp;#36716;&amp;#25442;&amp;#25104;&amp;#19968;&amp;#20010;int&amp;#20540;&amp;#65292;&amp;#28982;&amp;#21518;&amp;#36827;&amp;#34892;&amp;#21021;&amp;#22987;&amp;#21270;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;Integer&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;string&lt;/span&gt;) &lt;span style=&quot;color: #FF1493;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;NumberFormatException&lt;/span&gt; {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;this&lt;/span&gt;(parseInt(string));
}

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;SMALL_VALUES[i + 128]&amp;#65292;&amp;#23427;&amp;#26159;&amp;#19968;&amp;#20010;&amp;#38745;&amp;#24577;&amp;#30340;Integer&amp;#25968;&amp;#32452;&amp;#23545;&amp;#35937;&amp;#65292;&amp;#20063;&amp;#23601;&amp;#26159;&amp;#35828;&amp;#26368;&amp;#32456;valueOf&amp;#36820;&amp;#22238;&amp;#30340;&amp;#37117;&amp;#26159;&amp;#19968;&amp;#20010;Integer&amp;#23545;&amp;#35937;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt;[] &lt;span style=&quot;color: #FF8C00;&quot;&gt;SMALL_VALUES&lt;/span&gt; = &lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt;[256];
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
小结：装箱的过程会创建对应的对象，这个会消耗内存，所以装箱的过程会增加内存的消耗，影响性能。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
进一步了解
在Integer的构造函数中，它分两种情况：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
i &amp;gt;= 128 || i &amp;lt; -128 =====&amp;gt; new Integer(i)
i &amp;lt; 128 &amp;amp;&amp;amp; i &amp;gt;= -128 =====&amp;gt; SMALL_VALUES[i + 128]
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
private static final Integer[] SMALL_VALUES = new Integer[256];
&lt;/pre&gt;


&lt;p&gt;
SMALL_VALUES本来已经被创建好，也就是说在i &amp;gt;= 128 || i &amp;lt; -128是会创建不同的对象，在i &amp;lt; 128 &amp;amp;&amp;amp; i &amp;gt;= -128会根据i的值返回已经创建好的指定的对象。下面举例说明：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Main&lt;/span&gt; {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;String&lt;/span&gt;[] &lt;span style=&quot;color: #FF8C00;&quot;&gt;args&lt;/span&gt;) {

        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i1&lt;/span&gt; = 100;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i2&lt;/span&gt; = 100;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i3&lt;/span&gt; = 200;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i4&lt;/span&gt; = 200;

        System.out.println(i1==i2);  &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;true&lt;/span&gt;
        System.out.println(i3==i4);  &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;false&lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;i1和i2会进行自动装箱，执行了valueOf函数，它们的值在(-128,128]这个范围内，它们会拿到SMALL_VALUES数组里面的同一个对象SMALL_VALUES[228]，它们引用到了同一个Integer对象，所以它们肯定是相等的。&lt;/li&gt;
&lt;li&gt;i3和i4也会进行自动装箱，执行了valueOf函数，它们的值大于128，所以会执行new Integer(200)，也就是说它们会分别创建两个不同的对象，所以它们肯定不等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;举例2:&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Main&lt;/span&gt; {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;String&lt;/span&gt;[] &lt;span style=&quot;color: #FF8C00;&quot;&gt;args&lt;/span&gt;) {

        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Double&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i1&lt;/span&gt; = 100.0;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Double&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i2&lt;/span&gt; = 100.0;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Double&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i3&lt;/span&gt; = 200.0;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Double&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i4&lt;/span&gt; = 200.0;

        System.out.println(i1==i2); &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;false&lt;/span&gt;
        System.out.println(i3==i4); &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;false&lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
看看上面的执行结果，跟Integer不一样，对于Integer，在(-128,128]之间只有固定的256个值，所以为了避免多次创建对象，我们事先就创建好一个大小为256的Integer数组SMALL_VALUES，所以如果值在这个范围内，就可以直接返回我们事先创建好的对象就可以了。
&lt;br /&gt;
但是对于Double类型来说，因为它在这个范围内个数是无限的。所以在Double里面的做法很直接，就是直接创建一个对象，所以每次创建的对象都不一样。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Double&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;valueOf&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;double&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;d&lt;/span&gt;) {
     &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Double&lt;/span&gt;(d);
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
下面我们进行一个归类：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Integer派别：Integer、Short、Byte、Character、Long这几个类的valueOf方法的实现是类似的。&lt;/li&gt;
&lt;li&gt;Double派别：Double、Float的valueOf方法的实现是类似的。每次都返回不同的对象。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;其他情况
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Boolean
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Main&lt;/span&gt; {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;String&lt;/span&gt;[] &lt;span style=&quot;color: #FF8C00;&quot;&gt;args&lt;/span&gt;) {

        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i1&lt;/span&gt; = &lt;span style=&quot;color: #AF87FF;&quot;&gt;false&lt;/span&gt;;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i2&lt;/span&gt; = &lt;span style=&quot;color: #AF87FF;&quot;&gt;false&lt;/span&gt;;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i3&lt;/span&gt; = &lt;span style=&quot;color: #AF87FF;&quot;&gt;true&lt;/span&gt;;
        &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;i4&lt;/span&gt; = &lt;span style=&quot;color: #AF87FF;&quot;&gt;true&lt;/span&gt;;

        System.out.println(i1==i2);&lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;true&lt;/span&gt;
        System.out.println(i3==i4);&lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;true&lt;/span&gt;
    }
}

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36820;&amp;#22238;&amp;#30340;&amp;#37117;&amp;#26159;true&amp;#65292;&amp;#20063;&amp;#23601;&amp;#26159;&amp;#23427;&amp;#20204;&amp;#25191;&amp;#34892;valueOf&amp;#36820;&amp;#22238;&amp;#30340;&amp;#37117;&amp;#26159;&amp;#30456;&amp;#21516;&amp;#30340;&amp;#23545;&amp;#35937;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;valueOf&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt;) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; b ? &lt;span style=&quot;color: #AF87FF;&quot;&gt;Boolean&lt;/span&gt;.TRUE : &lt;span style=&quot;color: #AF87FF;&quot;&gt;Boolean&lt;/span&gt;.FALSE;
}

&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21487;&amp;#20197;&amp;#30475;&amp;#21040;&amp;#23427;&amp;#24182;&amp;#27809;&amp;#26377;&amp;#21019;&amp;#24314;&amp;#23545;&amp;#35937;&amp;#65292;&amp;#22240;&amp;#20026;&amp;#22312;&amp;#20869;&amp;#37096;&amp;#24050;&amp;#32463;&amp;#25552;&amp;#21069;&amp;#21019;&amp;#24314;&amp;#22909;&amp;#20004;&amp;#20010;&amp;#23545;&amp;#35937;&amp;#65292;&amp;#22240;&amp;#20026;&amp;#23427;&amp;#21482;&amp;#26377;&amp;#20004;&amp;#31181;&amp;#24773;&amp;#20917;&amp;#65292;&amp;#36825;&amp;#26679;&amp;#20063;&amp;#26159;&amp;#20026;&amp;#20102;&amp;#36991;&amp;#20813;&amp;#37325;&amp;#22797;&amp;#21019;&amp;#24314;&amp;#22826;&amp;#22810;&amp;#30340;&amp;#23545;&amp;#35937;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;TRUE&lt;/span&gt; = &lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt;(&lt;span style=&quot;color: #AF87FF;&quot;&gt;true&lt;/span&gt;);

&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;FALSE&lt;/span&gt; = &lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Boolean&lt;/span&gt;(&lt;span style=&quot;color: #AF87FF;&quot;&gt;false&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
拆箱操作
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;num1&lt;/span&gt; = 400;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;num2&lt;/span&gt; = 400;
System.out.println(num1 == num2); &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;true&lt;/span&gt;
System.out.println(num1.equals(num2));  &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
equals 源码：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #AF87FF;&quot;&gt;@Override&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;boolean&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;equals&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Object&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;o&lt;/span&gt;) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; (o &lt;span style=&quot;color: #FF1493;&quot;&gt;instanceof&lt;/span&gt; Integer) &amp;amp;&amp;amp; (((&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt;) o).value == value);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
说明：指定equal比较的是内容本身，并且我也可看到 equals 的参数是一个Object对象，我们传入的是一个 int 类型，所以首先会进行装箱，然后比较。之所以返回 true，是由于它比较的是对象里面的 value 值。
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;num1&lt;/span&gt; = 100;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;num2&lt;/span&gt; = 100;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Long&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;num3&lt;/span&gt; = 200l;
System.out.println(num1 + num2);  &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;200&lt;/span&gt;
System.out.println(num3 == (num1 + num2));  &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;true&lt;/span&gt;
System.out.println(num3.equals(num1 + num2));  &lt;span style=&quot;color: #8B8878;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
说明：当一个基础数据类型与封装类进行==、+、-、*、/运算时，会将封装类进行拆箱，对基础数据类型进行运算。 对于num3.equals(num1 + num2)为false的原因，根据代码实现来说明。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #AF87FF;&quot;&gt;@Override&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;boolean&lt;/span&gt; &lt;span style=&quot;color: #87D700;&quot;&gt;equals&lt;/span&gt;(&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Object&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;o&lt;/span&gt;) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; (o &lt;span style=&quot;color: #FF1493;&quot;&gt;instanceof&lt;/span&gt; Long) &amp;amp;&amp;amp; (((&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Long&lt;/span&gt;) o).value == value);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
所以，对于num3.equals(num1 + num2)为false的原因就是类型不同。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
陷阱
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5FD7FF;&quot;&gt;Integer&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;integer100&lt;/span&gt;=&lt;span style=&quot;color: #AF87FF;&quot;&gt;null&lt;/span&gt;;
&lt;span style=&quot;color: #5FD7FF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;int100&lt;/span&gt;=integer100;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
这两行代码是完全合法的，完全能够通过编译的，但是在运行时，就会抛出空指针异常。其中，integer100为Integer类型的对象，它当然可以指向null。但在第二行时，就会对integer100进行拆箱，也就是对一个null对象执行intValue()方法，当然会抛出空指针异常。所以，有拆箱操作时一定要特别注意封装类对象是否为null。
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5afaddf&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org5afaddf&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; &lt;/h2&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="java" /><category term="Java" /><summary type="html">x 1 Java 概念 1.1 重写(override)和重载(overload) 概念 Override：子类中和父类中的方法声明一模一样。 Overload：方法一样，参数或参数类型不一样。 使用注意事项 父类中私有方法不能被重写 子类重写父类方法时，访问权限不能更低 父类静态方法，子类也必须通过静态方法进行重写。（算不上重写） 推荐：重写时，最好声明一模一样。 1.2 == vs equals 对于==，如果作用于基本数据类型的变量（byte,short,char,int,long,float,double,boolean ），则直接比较其存储的&quot;值&quot;是否相等；如果作用于引用类型的变量（String），则比较的是所指向的对象的地址（即是否指向同一个对象）。 equals方法是基类Object中的方法，因此对于所有的继承于Object的类都会有该方法。在Object类中，equals方法是用来比较两个对象的引用是否相等，即是否指向同一个对象。 对于equals方法注意：equals方法不能作用于基本数据类型的变量。如果没有对equals方法进行重写，则比较的是引用类型的变量所指向的对象的地址；而String类对equals方法进行了重写，用来比较指向的字符串对象所存储的字符串是否相等。其他的一些类诸如Double，Date，Integer等，都对equals方法进行了重写用来比较指向的对象所存储的内容是否相等。 1.3 反射 &amp;amp; 范型 概念 反射：在日常生活中，通过放大镜可以看清楚物体的内部结构。在Java 中，反射机制就是起到放大镜的效果，可以通过类名，加载这个 类，显示出这个类的方法等信息。 范型：在日常生活中，橡皮泥通过外力可以改变其形状，其形状是不固 定的。在Java中，通过泛型可以给开发带来方便，通过参数的指 定，可以改变其类型。 使用范型的优缺点 使代码看起来灵活，代码量减少，容易管理 ，不容易产生错误； 使用泛型在代码编译的时候能进行类型的检查并自动转换，使代码的运行效率得到提高； 使用泛型在编译进行自动转换的时候出现了错误，会进行错误提示； -（缺点）在性能上不如数组快。 1.4 值传递 vs 引用传递 错误理解 值传递和引用传递，区分的条件是传递的内容，如果是个值，就是值传递。如果是个引用，就是引用传递。 Java是引用传递 传递的参数如果是普通类型，那就是值传递，如果是对象，那就是引用传递。 实参和形参 形式参数：是在定义函数名和函数体的时候使用的参数,目的是用来接收调用该函数时传入的参数。 实际参数：在调用有参函数时，主调函数和被调函数之间有数据传递关系。在主调函数中调用一个函数时，函数名后面括号中的参数称为“实际参数”。 值传递和引用传递 值传递（pass by value）是指在调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。 引用传递（pass by reference）是指在调用函数时将实际参数的地址直接传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。 举例： 总结 值传递：会创建副本，在函数中无法改变原始对象。 引用传递：引用传递不会创建副本，函数中可以改变原始对象。 Java中其实还是值传递的，只不过对于对象参数，值的内容是对象的引用。可以说，Java中的传递只有值传递。 1.5 Class&amp;lt;T&amp;gt; vs Class&amp;lt;?&amp;gt; 1.5.1 提前了解 使用大写字母A,B,C,D&amp;#x2026;&amp;#x2026;X,Y,Z定义的，就都是泛型，把T换成A也一样，这里T只是名字上的意义而已。 ？ 表示不确定的java类型 T (type) 表示具体的一个java类型 K V (key value) 分别代表java键值中的Key Value E (element) 代表Element ?和T区别是：？是一个不确定类，？和T都表示不确定的类型 ，但如果是T的话，函数里面可以对T进行操作，比方 T car = getCar()，而不能用？ car = getCar()。 Object和T不同点在于，Object是一个实打实的类,并没有泛指谁，可以直接给List中 add(new Object()) 1.5.2 Class&amp;lt;T&amp;gt;，Class&amp;lt;?&amp;gt;区别 Class是什么呢，Class也是一个类，但Class是存放上面String,List,Map&amp;#x2026;&amp;#x2026;类信息的一个类，有点抽象。 如何获取到Class类呢，有三种方式: List list = null; Class clazz = list.getClass(); Class clazz = Class.forName(&quot;com.lyang.demo.fanxing.People&quot;); Class clazz = List.class; 使用Class&amp;lt;T&amp;gt;和Class&amp;lt;?&amp;gt;多发生在反射场景下，如果我们不使用泛型，反射创建一个类是什么样的: People people = (People) Class.forName(&quot;com.lyang.demo.fanxing.People&quot;).newInstance(); // &amp;#38656;&amp;#35201;&amp;#24378;&amp;#36716;&amp;#65292;&amp;#22914;&amp;#26524;&amp;#21453;&amp;#23556;&amp;#30340;&amp;#31867;&amp;#22411;&amp;#19981;&amp;#26159;People&amp;#31867;&amp;#65292;&amp;#23601;&amp;#20250;&amp;#25253;java.lang.ClassCastException&amp;#38169;&amp;#35823;&amp;#12290; // &amp;#20351;&amp;#29992;Class&amp;lt;T&amp;gt;&amp;#27867;&amp;#22411;&amp;#21518;&amp;#65292;&amp;#19981;&amp;#29992;&amp;#24378;&amp;#36716;&amp;#20102; public class Test { public static &amp;lt;T&amp;gt; T createInstance(Class&amp;lt;T&amp;gt; clazz) throws IllegalAccessException, InstantiationException { return clazz.newInstance(); } public static void main(String[] args) throws IllegalAccessException, InstantiationException { Fruit fruit= createInstance(Fruit .class); People people= createInstance(People.class); } } 结论： Class&amp;lt;T&amp;gt;在实例化的时候，T要替换成具体类 Class&amp;lt;?&amp;gt;它是个通配泛型，?可以代表任何类型，主要用于声明时的限制情况 // &amp;#21487;&amp;#20197;&amp;#36825;&amp;#26679;&amp;#22768;&amp;#26126; public Class&amp;lt;?&amp;gt; clazz; // &amp;#20294;&amp;#19981;&amp;#21487;&amp;#20197;&amp;#36825;&amp;#26679; public Class&amp;lt;T&amp;gt; clazz; 1.6 String vs StringBuffer vs StringBuilder 都是final类，都不允许被继承； String类长度是不可变的，StringBuffer和StringBuilder类长度是可以改变的； StringBuffer类是线程安全的，StringBuilder不是线程安全的； String类型和StringBuffer类型的主要性能区别： String是不可变的对象，因此每次在对String类进行改变的时候都会生成一个新的string对象，然后将指针指向新的string对象，所以经常要改变字符串长度的话不要使用string，因为每次生成对象都会对系统性能产生影响，特别是当内存中引用的对象多了以后，JVM的GC就会开始工作，性能就会降低； 使用StringBuffer类时，每次都会对StringBuffer对象本身进行操作，而不是生成新的对象并改变对象引用，所以多数情况下推荐使用StringBuffer，特别是字符串对象经常要改变的情况； 在某些情况下，String对象的字符串拼接其实是被Java Compiler编译成了StringBuffer对象的拼接，所以这些时候String对象的速度并不会比StringBuffer对象慢。 StringBuilder是5.0新增的，此类提供一个与 StringBuffer 兼容的 API，但不保证同步。该类被设计用作 StringBuffer 的一个简易替换，用在字符串缓冲区被单个线程使用的时候（这种情况很普遍）。如果可能，建议优先采用该类，因为在大多数实现中，它比 StringBuffer 要快。两者的方法基本相同； 使用策略： 基本原则：如果要操作少量的数据，用String ；单线程操作大量数据，用StringBuilder ；多线程操作大量数据，用StringBuffer。 不要使用String类的”+”来进行频繁的拼接，因为那样的性能极差的，应该使用StringBuffer或StringBuilder类，这在Java的优化上是一条比较重要的原则。 StringBuilder一般使用在方法内部来完成类似”+”功能，因为是线程不安全的，所以用完以后可以丢弃。StringBuffer主要用在全局变量中。 相同情况下，使用 StirngBuilder 相比使用 StringBuffer 仅能获得 10%~15% 左右的性能提升，但却要冒多线程不安全的风险。而在现实的模块化编程中，负责某一模块的程序员不一定能清晰地判断该模块是否会放入多线程的环境中运行，因此：除非确定系统的瓶颈是在 StringBuffer 上，并且确定你的模块不会运行在多线程模式下，才可以采用StringBuilder；否则还是用StringBuffer。 1.7 自动装箱、拆箱 什么是自动装箱、拆箱 简单一点说，装箱就是自动将基本数据类型转换为包装器类型；拆箱就是自动将包装器类型转换为基本数据类型。如下所示： //&amp;#33258;&amp;#21160;&amp;#35013;&amp;#31665; Integer total = 99; //&amp;#33258;&amp;#21160;&amp;#25286;&amp;#31665; int totalprim = total; 反编译class文件之后得到如下内容： javap -c StringTest Integer total = 99; // &amp;#25191;&amp;#34892;&amp;#19978;&amp;#38754;&amp;#37027;&amp;#21477;&amp;#20195;&amp;#30721;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#65292;&amp;#31995;&amp;#32479;&amp;#20026;&amp;#25105;&amp;#20204;&amp;#25191;&amp;#34892;&amp;#20102;&amp;#65306; Integer total = Integer.valueOf(99); int totalprim = total; // &amp;#25191;&amp;#34892;&amp;#19978;&amp;#38754;&amp;#37027;&amp;#21477;&amp;#20195;&amp;#30721;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#65292;&amp;#31995;&amp;#32479;&amp;#20026;&amp;#25105;&amp;#20204;&amp;#25191;&amp;#34892;&amp;#20102;&amp;#65306; int totalprim = total.intValue(); /** * &amp;#36827;&amp;#32780;&amp;#20197;Integer&amp;#20026;&amp;#20363;&amp;#65292;&amp;#20998;&amp;#26512;&amp;#28304;&amp;#30721; */ // Integer.valueOf&amp;#20989;&amp;#25968; public static Integer valueOf(int i) { return i &amp;gt;= 128 || i &amp;lt; -128 ? new Integer(i) : SMALL_VALUES[i + 128]; } // Integer&amp;#30340;&amp;#26500;&amp;#36896;&amp;#20989;&amp;#25968;&amp;#65306; private final int value; // &amp;#23450;&amp;#20041;&amp;#20102;&amp;#19968;&amp;#20010;value&amp;#21464;&amp;#37327;&amp;#65292;&amp;#21019;&amp;#24314;&amp;#19968;&amp;#20010;Integer&amp;#23545;&amp;#35937;&amp;#65292;&amp;#23601;&amp;#20250;&amp;#32473;&amp;#36825;&amp;#20010;&amp;#21464;&amp;#37327;&amp;#21021;&amp;#22987;&amp;#21270;&amp;#12290; public Integer(int value) { this.value = value; } // &amp;#20256;&amp;#20837;&amp;#30340;&amp;#26159;&amp;#19968;&amp;#20010;String&amp;#21464;&amp;#37327;&amp;#65292;&amp;#23427;&amp;#20250;&amp;#20808;&amp;#25226;&amp;#23427;&amp;#36716;&amp;#25442;&amp;#25104;&amp;#19968;&amp;#20010;int&amp;#20540;&amp;#65292;&amp;#28982;&amp;#21518;&amp;#36827;&amp;#34892;&amp;#21021;&amp;#22987;&amp;#21270;&amp;#12290; public Integer(String string) throws NumberFormatException { this(parseInt(string)); } // SMALL_VALUES[i + 128]&amp;#65292;&amp;#23427;&amp;#26159;&amp;#19968;&amp;#20010;&amp;#38745;&amp;#24577;&amp;#30340;Integer&amp;#25968;&amp;#32452;&amp;#23545;&amp;#35937;&amp;#65292;&amp;#20063;&amp;#23601;&amp;#26159;&amp;#35828;&amp;#26368;&amp;#32456;valueOf&amp;#36820;&amp;#22238;&amp;#30340;&amp;#37117;&amp;#26159;&amp;#19968;&amp;#20010;Integer&amp;#23545;&amp;#35937;&amp;#12290; private static final Integer[] SMALL_VALUES = new Integer[256]; 小结：装箱的过程会创建对应的对象，这个会消耗内存，所以装箱的过程会增加内存的消耗，影响性能。 进一步了解 在Integer的构造函数中，它分两种情况： i &amp;gt;= 128 || i &amp;lt; -128 =====&amp;gt; new Integer(i) i &amp;lt; 128 &amp;amp;&amp;amp; i &amp;gt;= -128 =====&amp;gt; SMALL_VALUES[i + 128] private static final Integer[] SMALL_VALUES = new Integer[256]; SMALL_VALUES本来已经被创建好，也就是说在i &amp;gt;= 128 || i &amp;lt; -128是会创建不同的对象，在i &amp;lt; 128 &amp;amp;&amp;amp; i &amp;gt;= -128会根据i的值返回已经创建好的指定的对象。下面举例说明： public class Main { public static void main(String[] args) { Integer i1 = 100; Integer i2 = 100; Integer i3 = 200; Integer i4 = 200; System.out.println(i1==i2); //true System.out.println(i3==i4); //false } } i1和i2会进行自动装箱，执行了valueOf函数，它们的值在(-128,128]这个范围内，它们会拿到SMALL_VALUES数组里面的同一个对象SMALL_VALUES[228]，它们引用到了同一个Integer对象，所以它们肯定是相等的。 i3和i4也会进行自动装箱，执行了valueOf函数，它们的值大于128，所以会执行new Integer(200)，也就是说它们会分别创建两个不同的对象，所以它们肯定不等。 举例2: public class Main { public static void main(String[] args) { Double i1 = 100.0; Double i2 = 100.0; Double i3 = 200.0; Double i4 = 200.0; System.out.println(i1==i2); //false System.out.println(i3==i4); //false } } 看看上面的执行结果，跟Integer不一样，对于Integer，在(-128,128]之间只有固定的256个值，所以为了避免多次创建对象，我们事先就创建好一个大小为256的Integer数组SMALL_VALUES，所以如果值在这个范围内，就可以直接返回我们事先创建好的对象就可以了。 但是对于Double类型来说，因为它在这个范围内个数是无限的。所以在Double里面的做法很直接，就是直接创建一个对象，所以每次创建的对象都不一样。 public static Double valueOf(double d) { return new Double(d); } 下面我们进行一个归类： Integer派别：Integer、Short、Byte、Character、Long这几个类的valueOf方法的实现是类似的。 Double派别：Double、Float的valueOf方法的实现是类似的。每次都返回不同的对象。 其他情况 Boolean public class Main { public static void main(String[] args) { Boolean i1 = false; Boolean i2 = false; Boolean i3 = true; Boolean i4 = true; System.out.println(i1==i2);//true System.out.println(i3==i4);//true } } // &amp;#36820;&amp;#22238;&amp;#30340;&amp;#37117;&amp;#26159;true&amp;#65292;&amp;#20063;&amp;#23601;&amp;#26159;&amp;#23427;&amp;#20204;&amp;#25191;&amp;#34892;valueOf&amp;#36820;&amp;#22238;&amp;#30340;&amp;#37117;&amp;#26159;&amp;#30456;&amp;#21516;&amp;#30340;&amp;#23545;&amp;#35937;&amp;#12290; public static Boolean valueOf(boolean b) { return b ? Boolean.TRUE : Boolean.FALSE; } // &amp;#21487;&amp;#20197;&amp;#30475;&amp;#21040;&amp;#23427;&amp;#24182;&amp;#27809;&amp;#26377;&amp;#21019;&amp;#24314;&amp;#23545;&amp;#35937;&amp;#65292;&amp;#22240;&amp;#20026;&amp;#22312;&amp;#20869;&amp;#37096;&amp;#24050;&amp;#32463;&amp;#25552;&amp;#21069;&amp;#21019;&amp;#24314;&amp;#22909;&amp;#20004;&amp;#20010;&amp;#23545;&amp;#35937;&amp;#65292;&amp;#22240;&amp;#20026;&amp;#23427;&amp;#21482;&amp;#26377;&amp;#20004;&amp;#31181;&amp;#24773;&amp;#20917;&amp;#65292;&amp;#36825;&amp;#26679;&amp;#20063;&amp;#26159;&amp;#20026;&amp;#20102;&amp;#36991;&amp;#20813;&amp;#37325;&amp;#22797;&amp;#21019;&amp;#24314;&amp;#22826;&amp;#22810;&amp;#30340;&amp;#23545;&amp;#35937;&amp;#12290; public static final Boolean TRUE = new Boolean(true); public static final Boolean FALSE = new Boolean(false); 拆箱操作 Integer num1 = 400; int num2 = 400; System.out.println(num1 == num2); //true System.out.println(num1.equals(num2)); //true equals 源码： @Override public boolean equals(Object o) { return (o instanceof Integer) &amp;amp;&amp;amp; (((Integer) o).value == value); } 说明：指定equal比较的是内容本身，并且我也可看到 equals 的参数是一个Object对象，我们传入的是一个 int 类型，所以首先会进行装箱，然后比较。之所以返回 true，是由于它比较的是对象里面的 value 值。 Integer num1 = 100; int num2 = 100; Long num3 = 200l; System.out.println(num1 + num2); //200 System.out.println(num3 == (num1 + num2)); //true System.out.println(num3.equals(num1 + num2)); //false 说明：当一个基础数据类型与封装类进行==、+、-、*、/运算时，会将封装类进行拆箱，对基础数据类型进行运算。 对于num3.equals(num1 + num2)为false的原因，根据代码实现来说明。 @Override public boolean equals(Object o) { return (o instanceof Long) &amp;amp;&amp;amp; (((Long) o).value == value); } 所以，对于num3.equals(num1 + num2)为false的原因就是类型不同。 陷阱 Integer integer100=null; int int100=integer100; 这两行代码是完全合法的，完全能够通过编译的，但是在运行时，就会抛出空指针异常。其中，integer100为Integer类型的对象，它当然可以指向null。但在第二行时，就会对integer100进行拆箱，也就是对一个null对象执行intValue()方法，当然会抛出空指针异常。所以，有拆箱操作时一定要特别注意封装类对象是否为null。 2</summary></entry><entry><title type="html">计算机书籍</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2021/01/30/books/" rel="alternate" type="text/html" title="计算机书籍" /><published>2021-01-30T00:00:00+08:00</published><updated>2021-01-30T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2021/01/30/books</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2021/01/30/books/">&lt;div id=&quot;outline-container-org6aaa811&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6aaa811&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 计算机体系结构&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;计算机体系结构(张晨曦版)&lt;/li&gt;
&lt;li&gt;计算机体系结构(量化研究方法)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfafdbd5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgfafdbd5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 计算机数学基础类&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;高等数学&lt;/li&gt;
&lt;li&gt;线性代数&lt;/li&gt;
&lt;li&gt;概率论与数理统计&lt;/li&gt;
&lt;li&gt;离散数学及其应用(Discrete Mathematics and Its Applications)&lt;/li&gt;
&lt;li&gt;离散数学教程(北大版)&lt;/li&gt;
&lt;li&gt;什么是数学&lt;/li&gt;
&lt;li&gt;具体数学：计算机科学基础&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7b06a7b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7b06a7b&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 电子技术基础类&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;模拟电子技术(童诗白版)&lt;/li&gt;
&lt;li&gt;数字逻辑与数字集成电路(清华版)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org53510f9&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org53510f9&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 计算机组成原理&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;计算机组成原理&lt;/li&gt;
&lt;li&gt;计算机组成-结构化方法&lt;/li&gt;
&lt;li&gt;计算机组成与设计硬件/软件接口&lt;/li&gt;
&lt;li&gt;微机原理与接口技术(陈光军版)&lt;/li&gt;
&lt;li&gt;Intel微处理器结构、编程与接口&lt;/li&gt;
&lt;li&gt;编程卓越之道卷1&lt;/li&gt;
&lt;li&gt;编程卓越之道卷2&lt;/li&gt;
&lt;li&gt;编码的奥秘&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga143465&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orga143465&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;5&lt;/span&gt; 计算机网络&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;图解HTTP，[日]上野宣/ 2014-4-15 / 人民邮电出版社&lt;/li&gt;
&lt;li&gt;图解TCP/IP&lt;/li&gt;
&lt;li&gt;计算机网络（第4版），[美]JamesF.Kurose/[美]KeithW.Ross/ 2009-11 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;TCP/IP详解（卷1/2/3），[美]W·RichardStevens/ 2000-4-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;计算机网络，谢希仁/ 电子工业出版社&lt;/li&gt;
&lt;li&gt;CCNA/CCNP&lt;/li&gt;
&lt;li&gt;用TCP/IP进行网际互联(第1/2/3卷)&lt;/li&gt;
&lt;li&gt;HTTP权威指南&lt;/li&gt;
&lt;li&gt;《计算机网络 自顶向下》&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org25ac142&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org25ac142&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;6&lt;/span&gt; 数据结构与算法&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-6&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;数据结构(清华版)&lt;/li&gt;
&lt;li&gt;数据结构与算法分析—C语言描述&lt;/li&gt;
&lt;li&gt;编程珠玑&lt;/li&gt;
&lt;li&gt;编程珠玑II&lt;/li&gt;
&lt;li&gt;算法导论&lt;/li&gt;
&lt;li&gt;计算机程序设计艺术卷1&lt;/li&gt;
&lt;li&gt;计算机程序设计艺术卷2&lt;/li&gt;
&lt;li&gt;计算机程序设计艺术卷3&lt;/li&gt;
&lt;li&gt;大话数据结构，程杰/清华大学出版社&lt;/li&gt;
&lt;li&gt;算法（第4版），塞奇威克(RobertSedgewick)/韦恩(KevinWayne)/ 2012-10-1 / 人民邮电出版社&lt;/li&gt;
&lt;li&gt;算法导论（第3版），(美)科尔曼 著 殷建平 译/机械工业出版社，不适合初学者&lt;/li&gt;
&lt;li&gt;数据结构与算法分析，[美]MarkAllenWeiss/ 2004-1-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;机器学习，周志华/清华大学出版社&lt;/li&gt;
&lt;li&gt;机器学习实战，[美]Peter Harrington/人民邮电出版社&lt;/li&gt;
&lt;li&gt;程序员代码面试指南：IT名企算法与数据结构题目最优解，左程云/ 2015-9 / 电子工业出版社&lt;/li&gt;
&lt;li&gt;程序员的数学&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf1abb16&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgf1abb16&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;7&lt;/span&gt; code&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-7&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;软件工程(Software.Engineering)&lt;/li&gt;
&lt;li&gt;软件工程：实践者的研究方法&lt;/li&gt;
&lt;li&gt;深入浅出面向对象分析与设计&lt;/li&gt;
&lt;li&gt;道法自然:面向对象实践指南&lt;/li&gt;
&lt;li&gt;面向对象分析与设计&lt;/li&gt;
&lt;li&gt;设计模式:可复用面向对象软件的基础&lt;/li&gt;
&lt;li&gt;head first设计模式&lt;/li&gt;
&lt;li&gt;软件架构的艺术&lt;/li&gt;
&lt;li&gt;设计模式，刘伟/清华大学出版社&lt;/li&gt;
&lt;li&gt;设计模式，[美]ErichGamma/RichardHelm/RalphJohnson/JohnVlissides/ 2000-9 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;重构—改善既有代码的设计&lt;/li&gt;
&lt;li&gt;敏捷软件开发：原则、模式与实践&lt;/li&gt;
&lt;li&gt;敏捷软件开发，[美]RobertC·Martin/ 2003-09-01 / 清华大学出版社&lt;/li&gt;
&lt;li&gt;测试驱动开发&lt;/li&gt;
&lt;li&gt;代码大全 2&lt;/li&gt;
&lt;li&gt;程序设计实践&lt;/li&gt;
&lt;li&gt;程序员修炼之道：从小工到专家&lt;/li&gt;
&lt;li&gt;卓有成效的程序员&lt;/li&gt;
&lt;li&gt;代码之美&lt;/li&gt;
&lt;li&gt;人月神话&lt;/li&gt;
&lt;li&gt;计算机程序的构造和解释&lt;/li&gt;
&lt;li&gt;观止-微软创建NT和未来的夺命狂奔&lt;/li&gt;
&lt;li&gt;代码优化：有效使用内存[美]克里斯·卡巴斯基&lt;/li&gt;
&lt;li&gt;编程高手箴言(梁肇新)&lt;/li&gt;
&lt;li&gt;游戏之旅-我的编程感悟(云风)&lt;/li&gt;
&lt;li&gt;剑指Offer，何海涛/ 2012-1 / 电子工业出版社&lt;/li&gt;
&lt;li&gt;编程珠玑，[美]JonBentley/ 2008-10 / 人民邮电出版社&lt;/li&gt;
&lt;li&gt;Head First 设计模式，[美]弗里曼/ 2007-9 / 中国电力出版社&lt;/li&gt;
&lt;li&gt;编程之美——微软技术面试心得，电子工业出版社&lt;/li&gt;
&lt;li&gt;大话设计模式，程杰/ 2007-12-1 / 清华大学出版社&lt;/li&gt;
&lt;li&gt;《重构 改善既有代码的设计》 需要一些经验，拔高内容&lt;/li&gt;
&lt;li&gt;程序员的自我修养:链接、装载与库&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2c5515e&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2c5515e&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;8&lt;/span&gt; 编程语言&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-8&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org88aa6ee&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org88aa6ee&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.1&lt;/span&gt; 汇编语言&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;汇编语言(王爽版)&lt;/li&gt;
&lt;li&gt;80X86汇编语言程序设计教程&lt;/li&gt;
&lt;li&gt;Intel汇编语言程序设计&lt;/li&gt;
&lt;li&gt;IBM PC汇编语言程序设计(国外版)&lt;/li&gt;
&lt;li&gt;高级汇编语言程序设计&lt;/li&gt;
&lt;li&gt;保护方式下的80386及其编程&lt;/li&gt;
&lt;li&gt;黑客反汇编揭秘&lt;/li&gt;
&lt;li&gt;Windows环境下32&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7c85102&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7c85102&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.2&lt;/span&gt; C/C++&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;C/C++语言程序设计 谭浩强&lt;/li&gt;
&lt;li&gt;《C Primer Plus》(第5版）中文版  买新版&lt;/li&gt;
&lt;li&gt;《C++ Primer》中文版，对C++语法有全面的了解&lt;/li&gt;
&lt;li&gt;《C++ Primer Plus》 更适合零基础学习&lt;/li&gt;
&lt;li&gt;The C programming language&lt;/li&gt;
&lt;li&gt;The C++ programming language，适合全面深入掌握C++。&lt;/li&gt;
&lt;li&gt;C和指针&lt;/li&gt;
&lt;li&gt;C专家教程&lt;/li&gt;
&lt;li&gt;C陷阱与缺陷&lt;/li&gt;
&lt;li&gt;c语言解惑&lt;/li&gt;
&lt;li&gt;C标准库&lt;/li&gt;
&lt;li&gt;C++标准程序库&lt;/li&gt;
&lt;li&gt;你必须知道的495个C语言问题&lt;/li&gt;
&lt;li&gt;C++编程思想2&lt;/li&gt;
&lt;li&gt;Essential C++&lt;/li&gt;
&lt;li&gt;C++程序设计语言&lt;/li&gt;
&lt;li&gt;C++语言的设计和演化&lt;/li&gt;
&lt;li&gt;Accelerated C++&lt;/li&gt;
&lt;li&gt;Effective C++，这本书适合在面试之前突击C++。&lt;/li&gt;
&lt;li&gt;Effective STL&lt;/li&gt;
&lt;li&gt;More Effective C++&lt;/li&gt;
&lt;li&gt;Exceptional C++&lt;/li&gt;
&lt;li&gt;More Exceptional C++&lt;/li&gt;
&lt;li&gt;C++设计新思维&lt;/li&gt;
&lt;li&gt;深度探索C++对象模型，深入了解C++对象的内部，比如虚函数的调用机制等。&lt;/li&gt;
&lt;li&gt;C++沉思录&lt;/li&gt;
&lt;li&gt;C++ Templates: The Complete Guide&lt;/li&gt;
&lt;li&gt;C++ FAQs&lt;/li&gt;
&lt;li&gt;泛型编程与STL&lt;/li&gt;
&lt;li&gt;STL源码剖析&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5693e6c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5693e6c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.3&lt;/span&gt; Java&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;《Java编程思想》（Thinking in Java）&lt;/li&gt;
&lt;li&gt;Java编程规范&lt;/li&gt;
&lt;li&gt;《Java核心技术》卷1卷2&lt;/li&gt;
&lt;li&gt;Effective Java，[美]JoshuaBloch/ 2009-1-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;深入理解Java虚拟机（第2版），周志明/ 2013-9-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;实战Java虚拟机，葛一鸣/ 2015-3 / 电子工业出版社出品方:博文视点&lt;/li&gt;
&lt;li&gt;Java编程的逻辑，马俊昌/ 2018-1-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;Java并发编程实战，BrianGoetz/TimPeierls/JoshuaBloch/JosephBowbeer/DavidHolmes/DougLea/ 2012-2 / 机械工业出版社华章公司&lt;/li&gt;
&lt;li&gt;Java并发编程的艺术，方腾飞/魏鹏/程晓明/ 2015-7-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;Java并发编程实战指南（核心篇），黄文海/ 2017-4 / 电子工业出版社出品方:博文视点&lt;/li&gt;
&lt;li&gt;看透Spring MVC，韩路彪/ 2016-1-1 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;深入分析Java Web技术内幕，许令波/ 2014-8-1 / 电子工业出版社&lt;/li&gt;
&lt;li&gt;Java核心技术（卷1，原书第10版），[美]凯.S.霍斯特曼（CayS.Horstmann）/ 2016-9 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;疯狂Java讲义，李刚/ 2008-10 / 电子工业出版社&lt;/li&gt;
&lt;li&gt;《Spring实战》&lt;/li&gt;
&lt;li&gt;《Spring Boot实战》&lt;/li&gt;
&lt;li&gt;《Spring技术内幕》 很难&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6dd4c08&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org6dd4c08&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.4&lt;/span&gt; PHP&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;跟着兄弟学PHP&lt;/li&gt;
&lt;li&gt;深入PHP-面向对象、模式与实践，[美]Matt Zandstra 著/人民邮电出版社&lt;/li&gt;
&lt;li&gt;PHP核心技术与最佳实践，列旭松 陈文/机械工业出版社&lt;/li&gt;
&lt;li&gt;PHP高级程序设计_模式、框架与测试&lt;/li&gt;
&lt;li&gt;Learning PHP Design Patterns&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org99f0897&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org99f0897&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.5&lt;/span&gt; Python&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;《Python核心编程》&lt;/li&gt;
&lt;li&gt;《Python&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0818428&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0818428&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.6&lt;/span&gt; Golang&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-6&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;《Go语言实战》 or《Go In Action》&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgec76db3&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgec76db3&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.7&lt;/span&gt; 前端技术&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-7&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;JavaScript 高级程序设计&lt;/li&gt;
&lt;li&gt;JavaScript权威指南.第六版&lt;/li&gt;
&lt;li&gt;深入浅出Nodejs&lt;/li&gt;
&lt;li&gt;深入理解ES6&lt;/li&gt;
&lt;li&gt;学习JavaScript数据结构与算法&lt;/li&gt;
&lt;li&gt;数据结构与算法JavaScript描述&lt;/li&gt;
&lt;li&gt;CSS权威指南-第三版&lt;/li&gt;
&lt;li&gt;JavaScript+DOM编程艺术&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org13eb173&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org13eb173&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;9&lt;/span&gt; 数据库&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-9&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org680008b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org680008b&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;9.1&lt;/span&gt; 数据库理论&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-9-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;数据库系统概念，AbrahamSilberschatz/HenryF.Korth/S.Sudarshan/ 2006-10-01 / 机械工业&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org45882a1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org45882a1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;9.2&lt;/span&gt; Redis&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-9-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Redis 实战，JosiahL.Carlson/ 2015-10 / 人民邮电出版社&lt;/li&gt;
&lt;li&gt;Redis 设计与实现，黄健宏/ 2014-6 / 机械工业出版社&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org15f22e9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org15f22e9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;9.3&lt;/span&gt; MySQL&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-9-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;MySQL必知必会，[英]BenForta/ 2009-1 / 人民邮电出版社，涵盖 《SQL必知必会》的内容&lt;/li&gt;
&lt;li&gt;高性能MySQL，BaronSchwartz/PeterZaitsev/VadimTkachenko/JeremyD.Zawodny/ArjenLent/DerekJ.Ballin/ 2010年1月 / 电子工业出版社&lt;/li&gt;
&lt;li&gt;MySQL技术内幕，姜承尧/ 2013-5 / 机械工业出版社&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgedec75b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgedec75b&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;10&lt;/span&gt; 操作系统&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-10&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0784841&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0784841&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;10.1&lt;/span&gt; Unix/Linux 操作系统&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-10-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;鸟哥的Linux私房菜（基础学习篇）&lt;/li&gt;
&lt;li&gt;鸟哥的Linux私房菜（服务器架设篇）&lt;/li&gt;
&lt;li&gt;Unix/Linux编程实践教程，BruceMolay/杨宗源/黄海涛/ 2004-10-1 / 清华大学出版社&lt;/li&gt;
&lt;li&gt;《Unix环境高级编程》&lt;/li&gt;
&lt;li&gt;Linux程序设计&lt;/li&gt;
&lt;li&gt;Unix网络编程卷1&lt;/li&gt;
&lt;li&gt;UNIX网络编程卷2&lt;/li&gt;
&lt;li&gt;UNIX编程艺术&lt;/li&gt;
&lt;li&gt;UNIX Shell范例精解&lt;/li&gt;
&lt;li&gt;深入理解计算机系统，RandalE.Bryant/DavidO'Hallaron/ 2004-5-1 / 中国电力出版社&lt;/li&gt;
&lt;li&gt;现代操作系统（第3版），[美]AndrewS·Tanenbaum/ 2009-7 / 机械工业出版社&lt;/li&gt;
&lt;li&gt;Linux多线程服务端编程，陈硕/ 2013-1-15 / 电子工业出版社&lt;/li&gt;
&lt;li&gt;操作系统概念&lt;/li&gt;
&lt;li&gt;现代操作系统&lt;/li&gt;
&lt;li&gt;链接器和加载器&lt;/li&gt;
&lt;li&gt;自己动手写操作系统&lt;/li&gt;
&lt;li&gt;操作系统设计与实现&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8cc2850&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8cc2850&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;10.2&lt;/span&gt; Window 操作系统&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-10-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Windows操作系统原理&lt;/li&gt;
&lt;li&gt;Inside Windows 2000&lt;/li&gt;
&lt;li&gt;深入解析Windows操作系统&lt;/li&gt;
&lt;li&gt;天书夜读：从汇编语言到Windows内核编程&lt;/li&gt;
&lt;li&gt;windows程序设计&lt;/li&gt;
&lt;li&gt;WINDOWS核心编程&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1da5720&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1da5720&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;10.3&lt;/span&gt; Linux/unix内核源代码和驱动程序&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-10-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Linux内核设计与实现&lt;/li&gt;
&lt;li&gt;LINUX内核源代码情景分析&lt;/li&gt;
&lt;li&gt;深入理解LINUX内核&lt;/li&gt;
&lt;li&gt;Linux内核完全注释&lt;/li&gt;
&lt;li&gt;Linux设备驱动程序&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1cdb12f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1cdb12f&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;10.4&lt;/span&gt; 编译原理&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-10-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;编译原理(清华第2版)&lt;/li&gt;
&lt;li&gt;编译原理及实践&lt;/li&gt;
&lt;li&gt;编译原理:原则,技术和工具&lt;/li&gt;
&lt;li&gt;现代编译原理-C语言描述&lt;/li&gt;
&lt;li&gt;高级编译器设计与实现&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9da0d9b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org9da0d9b&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;11&lt;/span&gt; 其他&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-11&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4ce1732&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4ce1732&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;11.1&lt;/span&gt; 人物传记&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-11-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;褚时健传&lt;/li&gt;
&lt;li&gt;史蒂夫乔布斯传&lt;/li&gt;
&lt;li&gt;浪潮之巅-吴军&lt;/li&gt;
&lt;li&gt;遥远的救世主-豆豆&lt;/li&gt;
&lt;li&gt;颠覆者-周鸿祎自传&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org08297d2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org08297d2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;11.2&lt;/span&gt; 鸡汤书&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-11-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;《鬼谷子》&lt;/li&gt;
&lt;li&gt;《墨菲定律》&lt;/li&gt;
&lt;li&gt;《羊皮卷》&lt;/li&gt;
&lt;li&gt;《狼道》&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Rengui Zhao</name></author><category term="软件工程" /><category term="计算机书籍" /><summary type="html">1 计算机体系结构 计算机体系结构(张晨曦版) 计算机体系结构(量化研究方法) 2 计算机数学基础类 高等数学 线性代数 概率论与数理统计 离散数学及其应用(Discrete Mathematics and Its Applications) 离散数学教程(北大版) 什么是数学 具体数学：计算机科学基础 3 电子技术基础类 模拟电子技术(童诗白版) 数字逻辑与数字集成电路(清华版) 4 计算机组成原理 计算机组成原理 计算机组成-结构化方法 计算机组成与设计硬件/软件接口 微机原理与接口技术(陈光军版) Intel微处理器结构、编程与接口 编程卓越之道卷1 编程卓越之道卷2 编码的奥秘 5 计算机网络 图解HTTP，[日]上野宣/ 2014-4-15 / 人民邮电出版社 图解TCP/IP 计算机网络（第4版），[美]JamesF.Kurose/[美]KeithW.Ross/ 2009-11 / 机械工业出版社 TCP/IP详解（卷1/2/3），[美]W·RichardStevens/ 2000-4-1 / 机械工业出版社 计算机网络，谢希仁/ 电子工业出版社 CCNA/CCNP 用TCP/IP进行网际互联(第1/2/3卷) HTTP权威指南 《计算机网络 自顶向下》 6 数据结构与算法 数据结构(清华版) 数据结构与算法分析—C语言描述 编程珠玑 编程珠玑II 算法导论 计算机程序设计艺术卷1 计算机程序设计艺术卷2 计算机程序设计艺术卷3 大话数据结构，程杰/清华大学出版社 算法（第4版），塞奇威克(RobertSedgewick)/韦恩(KevinWayne)/ 2012-10-1 / 人民邮电出版社 算法导论（第3版），(美)科尔曼 著 殷建平 译/机械工业出版社，不适合初学者 数据结构与算法分析，[美]MarkAllenWeiss/ 2004-1-1 / 机械工业出版社 机器学习，周志华/清华大学出版社 机器学习实战，[美]Peter Harrington/人民邮电出版社 程序员代码面试指南：IT名企算法与数据结构题目最优解，左程云/ 2015-9 / 电子工业出版社 程序员的数学 7 code 软件工程(Software.Engineering) 软件工程：实践者的研究方法 深入浅出面向对象分析与设计 道法自然:面向对象实践指南 面向对象分析与设计 设计模式:可复用面向对象软件的基础 head first设计模式 软件架构的艺术 设计模式，刘伟/清华大学出版社 设计模式，[美]ErichGamma/RichardHelm/RalphJohnson/JohnVlissides/ 2000-9 / 机械工业出版社 重构—改善既有代码的设计 敏捷软件开发：原则、模式与实践 敏捷软件开发，[美]RobertC·Martin/ 2003-09-01 / 清华大学出版社 测试驱动开发 代码大全 2 程序设计实践 程序员修炼之道：从小工到专家 卓有成效的程序员 代码之美 人月神话 计算机程序的构造和解释 观止-微软创建NT和未来的夺命狂奔 代码优化：有效使用内存[美]克里斯·卡巴斯基 编程高手箴言(梁肇新) 游戏之旅-我的编程感悟(云风) 剑指Offer，何海涛/ 2012-1 / 电子工业出版社 编程珠玑，[美]JonBentley/ 2008-10 / 人民邮电出版社 Head First 设计模式，[美]弗里曼/ 2007-9 / 中国电力出版社 编程之美——微软技术面试心得，电子工业出版社 大话设计模式，程杰/ 2007-12-1 / 清华大学出版社 《重构 改善既有代码的设计》 需要一些经验，拔高内容 程序员的自我修养:链接、装载与库 8 编程语言 8.1 汇编语言 汇编语言(王爽版) 80X86汇编语言程序设计教程 Intel汇编语言程序设计 IBM PC汇编语言程序设计(国外版) 高级汇编语言程序设计 保护方式下的80386及其编程 黑客反汇编揭秘 Windows环境下32 8.2 C/C++ C/C++语言程序设计 谭浩强 《C Primer Plus》(第5版）中文版 买新版 《C++ Primer》中文版，对C++语法有全面的了解 《C++ Primer Plus》 更适合零基础学习 The C programming language The C++ programming language，适合全面深入掌握C++。 C和指针 C专家教程 C陷阱与缺陷 c语言解惑 C标准库 C++标准程序库 你必须知道的495个C语言问题 C++编程思想2 Essential C++ C++程序设计语言 C++语言的设计和演化 Accelerated C++ Effective C++，这本书适合在面试之前突击C++。 Effective STL More Effective C++ Exceptional C++ More Exceptional C++ C++设计新思维 深度探索C++对象模型，深入了解C++对象的内部，比如虚函数的调用机制等。 C++沉思录 C++ Templates: The Complete Guide C++ FAQs 泛型编程与STL STL源码剖析 8.3 Java 《Java编程思想》（Thinking in Java） Java编程规范 《Java核心技术》卷1卷2 Effective Java，[美]JoshuaBloch/ 2009-1-1 / 机械工业出版社 深入理解Java虚拟机（第2版），周志明/ 2013-9-1 / 机械工业出版社 实战Java虚拟机，葛一鸣/ 2015-3 / 电子工业出版社出品方:博文视点 Java编程的逻辑，马俊昌/ 2018-1-1 / 机械工业出版社 Java并发编程实战，BrianGoetz/TimPeierls/JoshuaBloch/JosephBowbeer/DavidHolmes/DougLea/ 2012-2 / 机械工业出版社华章公司 Java并发编程的艺术，方腾飞/魏鹏/程晓明/ 2015-7-1 / 机械工业出版社 Java并发编程实战指南（核心篇），黄文海/ 2017-4 / 电子工业出版社出品方:博文视点 看透Spring MVC，韩路彪/ 2016-1-1 / 机械工业出版社 深入分析Java Web技术内幕，许令波/ 2014-8-1 / 电子工业出版社 Java核心技术（卷1，原书第10版），[美]凯.S.霍斯特曼（CayS.Horstmann）/ 2016-9 / 机械工业出版社 疯狂Java讲义，李刚/ 2008-10 / 电子工业出版社 《Spring实战》 《Spring Boot实战》 《Spring技术内幕》 很难 8.4 PHP 跟着兄弟学PHP 深入PHP-面向对象、模式与实践，[美]Matt Zandstra 著/人民邮电出版社 PHP核心技术与最佳实践，列旭松 陈文/机械工业出版社 PHP高级程序设计_模式、框架与测试 Learning PHP Design Patterns 8.5 Python 《Python核心编程》 《Python 8.6 Golang 《Go语言实战》 or《Go In Action》 8.7 前端技术 JavaScript 高级程序设计 JavaScript权威指南.第六版 深入浅出Nodejs 深入理解ES6 学习JavaScript数据结构与算法 数据结构与算法JavaScript描述 CSS权威指南-第三版 JavaScript+DOM编程艺术 9 数据库 9.1 数据库理论 数据库系统概念，AbrahamSilberschatz/HenryF.Korth/S.Sudarshan/ 2006-10-01 / 机械工业 9.2 Redis Redis 实战，JosiahL.Carlson/ 2015-10 / 人民邮电出版社 Redis 设计与实现，黄健宏/ 2014-6 / 机械工业出版社 9.3 MySQL MySQL必知必会，[英]BenForta/ 2009-1 / 人民邮电出版社，涵盖 《SQL必知必会》的内容 高性能MySQL，BaronSchwartz/PeterZaitsev/VadimTkachenko/JeremyD.Zawodny/ArjenLent/DerekJ.Ballin/ 2010年1月 / 电子工业出版社 MySQL技术内幕，姜承尧/ 2013-5 / 机械工业出版社 10 操作系统 10.1 Unix/Linux 操作系统 鸟哥的Linux私房菜（基础学习篇） 鸟哥的Linux私房菜（服务器架设篇） Unix/Linux编程实践教程，BruceMolay/杨宗源/黄海涛/ 2004-10-1 / 清华大学出版社 《Unix环境高级编程》 Linux程序设计 Unix网络编程卷1 UNIX网络编程卷2 UNIX编程艺术 UNIX Shell范例精解 深入理解计算机系统，RandalE.Bryant/DavidO'Hallaron/ 2004-5-1 / 中国电力出版社 现代操作系统（第3版），[美]AndrewS·Tanenbaum/ 2009-7 / 机械工业出版社 Linux多线程服务端编程，陈硕/ 2013-1-15 / 电子工业出版社 操作系统概念 现代操作系统 链接器和加载器 自己动手写操作系统 操作系统设计与实现 10.2 Window 操作系统 Windows操作系统原理 Inside Windows 2000 深入解析Windows操作系统 天书夜读：从汇编语言到Windows内核编程 windows程序设计 WINDOWS核心编程 10.3 Linux/unix内核源代码和驱动程序 Linux内核设计与实现 LINUX内核源代码情景分析 深入理解LINUX内核 Linux内核完全注释 Linux设备驱动程序 10.4 编译原理 编译原理(清华第2版) 编译原理及实践 编译原理:原则,技术和工具 现代编译原理-C语言描述 高级编译器设计与实现 11 其他 11.1 人物传记 褚时健传 史蒂夫乔布斯传 浪潮之巅-吴军 遥远的救世主-豆豆 颠覆者-周鸿祎自传 11.2 鸡汤书 《鬼谷子》 《墨菲定律》 《羊皮卷》 《狼道》</summary></entry><entry><title type="html">数据分析-学习笔记</title><link href="http://localhost:4000/python/2021/01/23/python-getting-started-tutorial/" rel="alternate" type="text/html" title="数据分析-学习笔记" /><published>2021-01-23T00:00:00+08:00</published><updated>2021-01-23T00:00:00+08:00</updated><id>http://localhost:4000/python/2021/01/23/python-getting-started-tutorial</id><content type="html" xml:base="http://localhost:4000/python/2021/01/23/python-getting-started-tutorial/">&lt;div id=&quot;outline-container-orgfd27eca&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgfd27eca&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 学习准备&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4fd40ef&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4fd40ef&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 学习大纲&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Linux 基础学习（阅读书籍推荐《鸟哥的Linux私房菜：基础学习篇》，也可以参考我写的小册子：&lt;a href=&quot;https://zhaorengui.github.io/linux/2018/08/06/using-debian/&quot;&gt;Debian GNU/Linux&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;使用 Python 进行数据分析&lt;/li&gt;
&lt;li&gt;应用实例&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgea5e6ae&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgea5e6ae&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 课程安排&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
注意：选项后面的数字表示课时
&lt;/pre&gt;

&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Python 基础入门（25课时）
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Python 简介和环境搭建（2）&lt;/li&gt;
&lt;li&gt;Python 基础语法（1）&lt;/li&gt;
&lt;li&gt;Python 数据类型（4）&lt;/li&gt;
&lt;li&gt;Python 流程控制语句（2）&lt;/li&gt;
&lt;li&gt;Python 迭代器与生成器（1）&lt;/li&gt;
&lt;li&gt;Python 函数（1）&lt;/li&gt;
&lt;li&gt;Python 数据结构（2）&lt;/li&gt;
&lt;li&gt;Python 模块（1）&lt;/li&gt;
&lt;li&gt;Python 输入和输出（1）&lt;/li&gt;
&lt;li&gt;Python 文件操作（2）&lt;/li&gt;
&lt;li&gt;Python 错误和异常（1）&lt;/li&gt;
&lt;li&gt;Python 面向对象（3）&lt;/li&gt;
&lt;li&gt;Python 命名空间与作用域（1）&lt;/li&gt;
&lt;li&gt;Python 标准库（1）&lt;/li&gt;
&lt;li&gt;Python 实例精讲（3）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Python 进阶（22课时）
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Python 正则表达式（2）&lt;/li&gt;
&lt;li&gt;Python CGI 编程（2）&lt;/li&gt;
&lt;li&gt;Python MySQL（3）&lt;/li&gt;
&lt;li&gt;Python MongoDB（3）&lt;/li&gt;
&lt;li&gt;Python 网络编程（2）&lt;/li&gt;
&lt;li&gt;Python SMTP 邮件发送（2）&lt;/li&gt;
&lt;li&gt;Python 多线程（2）&lt;/li&gt;
&lt;li&gt;Python XML 解析（2）&lt;/li&gt;
&lt;li&gt;Python JSON 解析（2）&lt;/li&gt;
&lt;li&gt;Python web 框架：uWSGI（2）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Linux 操作系统（22课时）
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Linux 简介与安装（2）&lt;/li&gt;
&lt;li&gt;Linux 常用命令（6）&lt;/li&gt;
&lt;li&gt;Linux VIM&lt;/li&gt;
&lt;li&gt;Linux 系统管理（8）&lt;/li&gt;
&lt;li&gt;Linux 服务管理（6）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Python 数据分析（30课时）
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;数据分析介绍（0.5）&lt;/li&gt;
&lt;li&gt;jupyter 和 conda 的应用（1）&lt;/li&gt;
&lt;li&gt;matplotlib 绘图（6）&lt;/li&gt;
&lt;li&gt;numpy（4）&lt;/li&gt;
&lt;li&gt;pandas-series（1）&lt;/li&gt;
&lt;li&gt;pandas-dataFrame（2）&lt;/li&gt;
&lt;li&gt;统计方法和离散化（2）&lt;/li&gt;
&lt;li&gt;数据合并和分组聚合（3）&lt;/li&gt;
&lt;li&gt;pandas-时间序列（1）&lt;/li&gt;
&lt;li&gt;pandas-案例
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;PM2.5（1）&lt;/li&gt;
&lt;li&gt;豆瓣电视（1）&lt;/li&gt;
&lt;li&gt;互联网金融项目（3）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb801466&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgb801466&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 认识操作系统(Operating System)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8d165dc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8d165dc&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.3.1&lt;/span&gt; OS 作为接口的示意图&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-1&quot;&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/os-01.png&quot; alt=&quot;os-01.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4c66d20&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4c66d20&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.3.2&lt;/span&gt; 不同应用领域主流 OS&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;桌面 OS
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;MacOS&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;服务器 OS
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Windows Server&lt;/li&gt;
&lt;li&gt;Linux::
安全稳定，占有率高&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;嵌入式 OS
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Windows SE::
基本上没人用了&lt;/li&gt;
&lt;li&gt;Linux::
主流&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;移动设备 OS
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb6147a3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgb6147a3&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.3.3&lt;/span&gt; 虚拟机&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-3-3&quot;&gt;
&lt;p&gt;
虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;虚拟系统生成全新虚拟镜像，具有真实操作系统完全一样的功能。&lt;/li&gt;
&lt;li&gt;独立安装软件、保存数据，不对真正的操作系统产生任何影响。&lt;/li&gt;
&lt;li&gt;操作系统与虚拟操作系统能灵活切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1681b19&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1681b19&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.4&lt;/span&gt; 软件准备&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2702e83&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org2702e83&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.4.1&lt;/span&gt; Google Chrome&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-4-1&quot;&gt;
&lt;p&gt;
当下最流行的浏览器。
常用快捷键: 
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Google-Chrome：Help&amp;gt;Help Center&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhaorengui.github.io/software/2021/02/28/google-chrome-keyboard-shurtcuts/&quot;&gt;https://zhaorengui.github.io/software/2021/02/28/google-chrome-keyboard-shurtcuts/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc4a5e77&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc4a5e77&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.4.2&lt;/span&gt; Cygwin&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-4-2&quot;&gt;
&lt;p&gt;
Cygwin是一个可原生运行于Windows系统上的POSXI兼容环境。具体参见资料：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/56692626&quot;&gt;Cygwin是什么&lt;/a&gt;  
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orged41963&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orged41963&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.4.3&lt;/span&gt; IDE(Integrated Development Environment): PyCharm&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfec5c09&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgfec5c09&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;1.4.4&lt;/span&gt; Git&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-1-4-4&quot;&gt;
&lt;p&gt;
版本控制软件
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge216653&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge216653&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.5&lt;/span&gt; 励志公式&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1.01^365 = 37.78
0.99^365 = 0.03
&lt;/pre&gt;

&lt;p&gt;
积硅步以致千里，积怠惰以致深渊。
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
1.02^365 = 1377.41
0.98^365 = 0.0006
&lt;/pre&gt;

&lt;p&gt;
只比你努力一点的人，其实已经甩你很远。
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
1.01^3 * 0.99^2 &amp;lt; 1.01
&lt;/pre&gt;

&lt;p&gt;
三天打鱼，两天晒网，终将一无所获。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org89db8ea&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org89db8ea&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; Python 入门&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org899ac5e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org899ac5e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; Python 简介&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Python 是一种解释型、面向对象、动态数据类型的高级程序设计语言。&lt;/li&gt;
&lt;li&gt;官方宣布于 2020 年 1 月 1 日， 停止 Python 2 的更新。Python 2.7 被确定为最后一个 Python 2.x 版本。&lt;/li&gt;
&lt;li&gt;特点
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;易于学习、易于阅读、易于维护&lt;/li&gt;
&lt;li&gt;丰富的库，且是跨平台的，可移植&lt;/li&gt;
&lt;li&gt;可扩展&lt;/li&gt;
&lt;li&gt;可嵌入&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;官网：&lt;a href=&quot;https://www.python.org/&quot;&gt;https://www.python.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基础教程参考：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3school.com.cn/p.asp#python&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-tutorial.html&quot;&gt;Python 3 菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1ex411x7Em?from=search&amp;amp;seid=10686282289125873067&quot;&gt;Python从入门到精通教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1ex411x7Em?p=1&quot;&gt;bilibili：Python从入门到精通教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;入门练习：&lt;a href=&quot;https://learnxinyminutes.com/docs/python/&quot;&gt;https://learnxinyminutes.com/docs/python/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfe25e7e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgfe25e7e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; Python 环境搭建&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org90d1174&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org90d1174&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.1&lt;/span&gt; &lt;b&gt;Windows&lt;/b&gt;&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;打开 Python 官网后，下载 Windows 版本的 Python 软件包，一般就下载 “Windows installer (64-bit)”。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装时，注意勾选 Add Python 3.x to PATH，安装完成后，可以通过按 Win+R 键，输入 cmd 调出命令提示符，输入 python 来验证。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 查看 Python 版本
&amp;gt; python -V
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;菜单》打开IDLE(Python)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
在 Windows 设置环境变量,在命令提示框中(cmd) : 输入
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
path=%path%;C:\Python 
// 按下&quot;Enter&quot;。
注意: C:\Python 是Python的安装目录。
&lt;/pre&gt;

&lt;p&gt;
//
也可以参照 Python 3 菜鸟教程，通过右键点击&quot;计算机&quot;，然后点击&quot;属性&quot;来设置。
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc46351f&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc46351f&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.2&lt;/span&gt; &lt;b&gt;Unix &amp;amp; Linux&lt;/b&gt;&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
源码方式安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# tar -zxvf Python-3.6.1.tgz
# cd Python-3.6.1
# ./configure
# make &amp;amp;&amp;amp; make install
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;包管理工具安装
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Debian/Ubuntu
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install python3
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
RedHat/CentOS
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo yum install python3
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Mac
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ brew install python3
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;环境变量配置
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
bash
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim ~/.bash_profile
PATH=&quot;$PATH:/usr/local/bin/python&quot; 
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
zsh(Mac)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim ~/.zshrc
PATH=&quot;/usr/local/bin/python:$PATH&quot;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0b163d1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org0b163d1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.3&lt;/span&gt; 执行 Python 程序的三种方式&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;解释器：python/python3&lt;/li&gt;
&lt;li&gt;交互式：ipython&lt;/li&gt;
&lt;li&gt;IDE：PyCharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc161c92&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc161c92&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; Python 基本语法&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd387858&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgd387858&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.1&lt;/span&gt; 基础语法&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5640fb5&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org5640fb5&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.1&lt;/span&gt; 编码&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-2-3-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;默认情况下，Python 3 源码文件以 UTF-8 编码，所有字符串都是 unicode 字符串。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org352de91&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org352de91&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.2&lt;/span&gt; 标识符&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5dd99ab&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org5dd99ab&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.3&lt;/span&gt; 保留字&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8ef56a8&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org8ef56a8&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.4&lt;/span&gt; 注释&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org64f6adb&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org64f6adb&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.5&lt;/span&gt; 语法格式&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-2-3-1-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;行与缩进&lt;/li&gt;
&lt;li&gt;多行语句&lt;/li&gt;
&lt;li&gt;同一行显示多条语句&lt;/li&gt;
&lt;li&gt;空行&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf483c13&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgf483c13&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.6&lt;/span&gt; import 与 from&amp;#x2026;import&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc3319d8&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgc3319d8&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.1.7&lt;/span&gt; 命令行参数&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf7e3d25&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf7e3d25&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.2&lt;/span&gt; 基本数据类型&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-2&quot;&gt;
&lt;p&gt;
Python3 中有六个标准的数据类型：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Number&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;List&lt;/li&gt;
&lt;li&gt;Tuple&lt;/li&gt;
&lt;li&gt;Set&lt;/li&gt;
&lt;li&gt;Dictionary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
其中，不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）；可变数据（3 个）：List（列表）、Dictionary（字典）、Set（集合）。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgca592ac&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgca592ac&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.2.1&lt;/span&gt; Number&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgefeb957&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgefeb957&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.2.2&lt;/span&gt; String&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org71dcd58&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org71dcd58&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.2.3&lt;/span&gt; List&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org046b784&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org046b784&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.2.4&lt;/span&gt; Tuple(元组)&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2ebb87b&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org2ebb87b&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.2.5&lt;/span&gt; Set(集合)&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org45dbb93&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org45dbb93&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.2.6&lt;/span&gt; Dictionary&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf1fd0f1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf1fd0f1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.3&lt;/span&gt; 运算符&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2b72592&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org2b72592&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.4&lt;/span&gt; 流程控制语句&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3d50460&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org3d50460&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.3.4.1&lt;/span&gt; 练习题：输入某年某月某日，判断这一天是这一年的第几天？&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-2-3-4-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;-*- coding: utf-8 -*-&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;@Date   : 2021/02/10&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;@Time   : 19:30&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;@Author : zrg&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#38656;&amp;#27714;:&amp;#36755;&amp;#20837;&amp;#26576;&amp;#24180;&amp;#26576;&amp;#26376;&amp;#26576;&amp;#26085;&amp;#65292;&amp;#21028;&amp;#26029;&amp;#36825;&amp;#19968;&amp;#22825;&amp;#26159;&amp;#36825;&amp;#19968;&amp;#24180;&amp;#30340;&amp;#31532;&amp;#20960;&amp;#22825;&amp;#65311;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#24605;&amp;#36335;:&amp;#20197;5&amp;#26376;20&amp;#26085;&amp;#20026;&amp;#20363;&amp;#65292;&amp;#24212;&amp;#35813;&amp;#20808;&amp;#25226;&amp;#21069;&amp;#22235;&amp;#20010;&amp;#26376;&amp;#30340;&amp;#21152;&amp;#36215;&amp;#26469;&amp;#65292;&amp;#28982;&amp;#21518;&amp;#20877;&amp;#21152;&amp;#19978;20&amp;#22825;&amp;#21363;&amp;#26412;&amp;#24180;&amp;#30340;&amp;#31532;&amp;#20960;&amp;#22825;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29305;&amp;#27530;&amp;#24773;&amp;#20917;: &amp;#22914;&amp;#26524;&amp;#24180;&amp;#20221;&amp;#20026;&amp;#38384;&amp;#24180;&amp;#19988;&amp;#36755;&amp;#20837;&amp;#26376;&amp;#20221;&amp;#22823;&amp;#20110;2&amp;#26102;&amp;#38656;&amp;#32771;&amp;#34385;&amp;#22810;&amp;#21152;&amp;#19968;&amp;#22825;&lt;/span&gt;

&lt;span style=&quot;color: #FF8C00;&quot;&gt;year&lt;/span&gt; = &lt;span style=&quot;color: #FF1493;&quot;&gt;int&lt;/span&gt;(&lt;span style=&quot;color: #FF1493;&quot;&gt;input&lt;/span&gt;(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Year:&quot;&lt;/span&gt;))
&lt;span style=&quot;color: #FF8C00;&quot;&gt;month&lt;/span&gt; = &lt;span style=&quot;color: #FF1493;&quot;&gt;int&lt;/span&gt;(&lt;span style=&quot;color: #FF1493;&quot;&gt;input&lt;/span&gt;(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Month:&quot;&lt;/span&gt;))
&lt;span style=&quot;color: #FF8C00;&quot;&gt;day&lt;/span&gt; = &lt;span style=&quot;color: #FF1493;&quot;&gt;int&lt;/span&gt;(&lt;span style=&quot;color: #FF1493;&quot;&gt;input&lt;/span&gt;(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Day:&quot;&lt;/span&gt;))

&lt;span style=&quot;color: #FF8C00;&quot;&gt;sum_day&lt;/span&gt; = 0 &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#31532;&amp;#20960;&amp;#22825;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;leap_year&lt;/span&gt; = 0 &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#38384;&amp;#24180;&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;&amp;#20803;&amp;#32452;&amp;#23450;&amp;#20041;&amp;#22825;&amp;#25968;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#22914;&amp;#26524;&amp;#36755;&amp;#20837;&amp;#30340;&amp;#26376;&amp;#20221;&amp;#26159;1&amp;#26376;&amp;#20221;&amp;#65292;&amp;#21017;&amp;#30452;&amp;#25509;&amp;#35745;&amp;#31639;day&amp;#21363;&amp;#21487;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#22914;&amp;#26524;&amp;#36755;&amp;#20837;&amp;#30340;&amp;#26376;&amp;#20221;&amp;#26159;2&amp;#26376;&amp;#20221;&amp;#65292;&amp;#21017;&amp;#35201;&amp;#20808;&amp;#35745;&amp;#31639;&amp;#20986;1&amp;#26376;&amp;#20221;&amp;#30340;&amp;#22825;&amp;#25968;&amp;#65292;&amp;#21363;&amp;#20026;31&amp;#22825;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20197;&amp;#27492;&amp;#31867;&amp;#25512;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1  2   3   4   5    6    7    8    9    10   11   12&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;months&lt;/span&gt; = (0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334)

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26681;&amp;#25454;&amp;#36755;&amp;#20837;&amp;#30340;&amp;#26376;&amp;#20221;&amp;#65292;&amp;#35745;&amp;#31639;&amp;#20986;&amp;#21069;&amp;#20960;&amp;#20010;&amp;#26376;&amp;#30340;&amp;#22825;&amp;#25968;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; 0 &amp;lt; month &amp;lt;= 12:
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;sum_day&lt;/span&gt; = months[month - 1]
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;:
    &lt;span style=&quot;color: #FF1493;&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;&amp;#36755;&amp;#20837;&amp;#30340;&amp;#26376;&amp;#20221;&amp;#26377;&amp;#35823;&quot;&lt;/span&gt;)

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21028;&amp;#26029;&amp;#26159;&amp;#21542;&amp;#20026;&amp;#38384;&amp;#24180;:&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.&amp;#33021;&amp;#34987;400&amp;#25972;&amp;#38500; &amp;#25110;&amp;#32773;&amp;#26159; 2.&amp;#33021;&amp;#34987;4&amp;#25972;&amp;#38500;&amp;#24182;&amp;#19988;&amp;#19981;&amp;#33021;&amp;#34987;100&amp;#25972;&amp;#38500;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; year % 400 == 0 &lt;span style=&quot;color: #FF1493;&quot;&gt;or&lt;/span&gt; (year % 4 == 0 &lt;span style=&quot;color: #FF1493;&quot;&gt;and&lt;/span&gt; year % 100 != 0):
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;leap_year&lt;/span&gt; = 1

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#21028;&amp;#26029;&amp;#22914;&amp;#26524;&amp;#26159;&amp;#38384;&amp;#24180;&amp;#24182;&amp;#19988;&amp;#36755;&amp;#20837;&amp;#30340;&amp;#26376;&amp;#20221;&amp;#22823;&amp;#20110;2&amp;#21017;&amp;#22312;&amp;#24635;&amp;#30340;&amp;#22825;&amp;#25968;&amp;#19978;&amp;#21152;1&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; leap_year == 1 &lt;span style=&quot;color: #FF1493;&quot;&gt;and&lt;/span&gt; month &amp;gt; 2:
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;sum_day&lt;/span&gt; += day + 1
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;:
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;sum_day&lt;/span&gt; += day

&lt;span style=&quot;color: #FF1493;&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;It is the {sum_day}th day.&quot;&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd7e4f6c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgd7e4f6c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.5&lt;/span&gt; &lt;b&gt;迭代器与生成器&lt;/b&gt;&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf5223c9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf5223c9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.6&lt;/span&gt; 函数&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc121311&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc121311&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.7&lt;/span&gt; Python 数据结构&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org63e9e3a&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org63e9e3a&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.8&lt;/span&gt; 输入输出&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5da1e6d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5da1e6d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.9&lt;/span&gt; 文件操作&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6d6ccd8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org6d6ccd8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; Python 错误和异常&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org21621fe&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org21621fe&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; Python 面向对象&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5e655c0&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5e655c0&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.5.1&lt;/span&gt; 什么是面向对象？&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4b6a975&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4b6a975&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.5.2&lt;/span&gt; 类和对象&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc369e14&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc369e14&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.5.3&lt;/span&gt; 方法重写&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbc6a5a4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgbc6a5a4&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.5.4&lt;/span&gt; 继承&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org81d2841&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org81d2841&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.5.5&lt;/span&gt; 命名空间/作用域&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5ceec47&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5ceec47&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.6&lt;/span&gt; Python 标准库&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org09acf8e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org09acf8e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.1&lt;/span&gt; OS 模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org10b6814&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org10b6814&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.2&lt;/span&gt; 文件通配符：glob 模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org778a9c6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org778a9c6&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.3&lt;/span&gt; 命令行参数：以链表形式存储于 sys 模块的 argv 变量&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge899a3b&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge899a3b&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.4&lt;/span&gt; 正则匹配：re模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org055f22d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org055f22d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.5&lt;/span&gt; 数学：math 模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge3e9388&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge3e9388&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.6&lt;/span&gt; 网络通信模块：urllib&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-6-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc09d89e&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgc09d89e&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.6.6.1&lt;/span&gt; socket&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4a84383&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org4a84383&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.6.6.2&lt;/span&gt; smtplib&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf14a901&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf14a901&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.7&lt;/span&gt; 多线程：_thread 和 threading 模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc1b826c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc1b826c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.8&lt;/span&gt; datetime 模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org22472f0&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org22472f0&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.9&lt;/span&gt; 数据压缩：zlib，gzip，bz2，zipfile，和 tarfile 等模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1aa99f9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org1aa99f9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.10&lt;/span&gt; 性能度量：timeit&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org31368df&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org31368df&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.11&lt;/span&gt; 测试模块：doctest模块&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org191f8ff&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org191f8ff&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.12&lt;/span&gt; XML&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge176472&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge176472&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.6.13&lt;/span&gt; JSON&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org133c989&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org133c989&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.7&lt;/span&gt; Python CGI 编程&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0259ba0&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0259ba0&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.8&lt;/span&gt; Python 数据库操作&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-8&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0d97c16&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org0d97c16&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.8.1&lt;/span&gt; SQL 入门&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-8-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0c5cbea&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org0c5cbea&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.1.1&lt;/span&gt; 简介&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-2-8-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;SQL 是用于访问和处理数据库的标准的计算机语言。&lt;/li&gt;
&lt;li&gt;&lt;b&gt;什么是 SQL？&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SQL 指结构化查询语言&lt;/li&gt;
&lt;li&gt;SQL 使我们有能力访问数据库&lt;/li&gt;
&lt;li&gt;SQL 是一种 ANSI(美国国家标准化组织) 的标准计算机语言&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;SQL 能做什么？&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SQL 面向数据库执行查询&lt;/li&gt;
&lt;li&gt;SQL 可从数据库取回数据&lt;/li&gt;
&lt;li&gt;SQL 可在数据库中插入新的记录&lt;/li&gt;
&lt;li&gt;SQL 可更新数据库中的数据&lt;/li&gt;
&lt;li&gt;SQL 可从数据库删除记录&lt;/li&gt;
&lt;li&gt;SQL 可创建新数据库&lt;/li&gt;
&lt;li&gt;SQL 可在数据库中创建新表&lt;/li&gt;
&lt;li&gt;SQL 可在数据库中创建存储过程&lt;/li&gt;
&lt;li&gt;SQL 可在数据库中创建视图&lt;/li&gt;
&lt;li&gt;SQL 可以设置表、存储过程和视图的权限&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;RDBMS
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;RDBMS 指的是关系型数据库管理系统。&lt;/li&gt;
&lt;li&gt;RDBMS 是 SQL 的基础，同样也是所有现代数据库系统的基础，比如 MS SQL Server, IBM DB2, Oracle, MySQL 以及 Microsoft Access。&lt;/li&gt;
&lt;li&gt;RDBMS 中的数据存储在被称为表（tables）的数据库对象中。表是相关的数据项的集合，它由列和行组成。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbc1d607&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgbc1d607&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.1.2&lt;/span&gt; SQL 语法&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-2-8-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;数据库表
&lt;br /&gt;
一个数据库通常包含一个或多个表。每个表由一个名字标识（例如“客户”或者“订单”）。表包含带有数据的记录（行）。
&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
SQL 语句
&lt;br /&gt;
在数据库上执行的大部分工作都由 SQL 语句完成。示例：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-sql&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;SELECT&lt;/span&gt; LastName &lt;span style=&quot;color: #FF1493;&quot;&gt;FROM&lt;/span&gt; Persons
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;注意事项：&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SQL 对大小写不敏感！&lt;/li&gt;
&lt;li&gt;SQL 语句后面的分号？分号是在数据库系统中分隔每条 SQL 语句的标准方法，这样就可以在对服务器的相同请求中执行一条以上的语句。某些数据库系统要求在每条 SQL 命令的末端使用分号。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
SQL DML 和 DDL
&lt;br /&gt;
可以把 SQL 分为两个部分：数据操作语言 (DML) 和 数据定义语言 (DDL)。
&lt;br /&gt;
SQL (结构化查询语言)是用于执行查询的语法。但是 SQL 语言也包含用于更新、插入和删除记录的语法。
&lt;br /&gt;
查询和更新指令构成了 SQL 的 DML 部分：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SELECT - 从数据库表中获取数据&lt;/li&gt;
&lt;li&gt;UPDATE - 更新数据库表中的数据&lt;/li&gt;
&lt;li&gt;DELETE - 从数据库表中删除数据&lt;/li&gt;
&lt;li&gt;INSERT INTO - 向数据库表中插入数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;br /&gt;
SQL 的数据定义语言 (DDL) 部分使我们有能力创建或删除表格。我们也可以定义索引（键），规定表之间的链接，以及施加表间的约束。如下所示：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;CREATE DATABASE - 创建新数据库&lt;/li&gt;
&lt;li&gt;ALTER DATABASE - 修改数据库&lt;/li&gt;
&lt;li&gt;CREATE TABLE - 创建新表&lt;/li&gt;
&lt;li&gt;ALTER TABLE - 变更（改变）数据库表&lt;/li&gt;
&lt;li&gt;DROP TABLE - 删除表&lt;/li&gt;
&lt;li&gt;CREATE INDEX - 创建索引（搜索键）&lt;/li&gt;
&lt;li&gt;DROP INDEX - 删除索引&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge1d082b&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orge1d082b&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.1.3&lt;/span&gt; SQL 语句&lt;/h5&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-2-8-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;SELECT 语句&lt;/li&gt;
&lt;li&gt;DISTINCT&lt;/li&gt;
&lt;li&gt;WHERE 子句&lt;/li&gt;
&lt;li&gt;AND &amp;amp; OR 运算符&lt;/li&gt;
&lt;li&gt;ORDER BY 子句&lt;/li&gt;
&lt;li&gt;INSERT INTO 语句&lt;/li&gt;
&lt;li&gt;UPDATE 语句&lt;/li&gt;
&lt;li&gt;DELETE 语句&lt;/li&gt;
&lt;li&gt;TOP 子句&lt;/li&gt;
&lt;li&gt;LIKE 操作符和通配符&lt;/li&gt;
&lt;li&gt;IN 操作符&lt;/li&gt;
&lt;li&gt;BETWEEN 操作符&lt;/li&gt;
&lt;li&gt;Alias（别名）&lt;/li&gt;
&lt;li&gt;JOIN &amp;amp; INNER JOIN &amp;amp; LEFT JOIN &amp;amp; RIGHT JOIN &amp;amp; FULL JOIN&lt;/li&gt;
&lt;li&gt;UNION &amp;amp; UNION ALL&lt;/li&gt;
&lt;li&gt;SELECT INTO&lt;/li&gt;
&lt;li&gt;CREATE DATABASE 语句&lt;/li&gt;
&lt;li&gt;CREATE TABLE 语句&lt;/li&gt;
&lt;li&gt;约束 (Constraints)
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;NOT NULL&lt;/li&gt;
&lt;li&gt;UNIQUE&lt;/li&gt;
&lt;li&gt;PRIMARY KEY&lt;/li&gt;
&lt;li&gt;FOREIGN KEY&lt;/li&gt;
&lt;li&gt;CHECK&lt;/li&gt;
&lt;li&gt;DEFAULT&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CREATE INDEX 语句&lt;/li&gt;
&lt;li&gt;DROP Index/Table/DataBase&lt;/li&gt;
&lt;li&gt;ALTER TABLE 语句&lt;/li&gt;
&lt;li&gt;VIEW（视图）&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7616066&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org7616066&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.1.4&lt;/span&gt; SQL 数据类型&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd9626c1&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgd9626c1&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.1.5&lt;/span&gt; SQL 函数&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd565563&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgd565563&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.8.2&lt;/span&gt; MySQL&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-8-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc32ae3d&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;orgc32ae3d&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.2.1&lt;/span&gt; mysql-connector 驱动&lt;/h5&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org546a2fc&quot; class=&quot;outline-5&quot;&gt;
&lt;h5 id=&quot;org546a2fc&quot;&gt;&lt;span class=&quot;section-number-5&quot;&gt;2.8.2.2&lt;/span&gt; PyMySQL 驱动&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4edf30b&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4edf30b&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.8.3&lt;/span&gt; MongoDB&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org68c781c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org68c781c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.9&lt;/span&gt; Python 常见 Web 框架&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-9&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9abd25e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9abd25e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.9.1&lt;/span&gt; uWSGI&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge781279&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge781279&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.9.2&lt;/span&gt; Django&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org80982c1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org80982c1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.9.3&lt;/span&gt; Flask&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgce990a5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgce990a5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 使用 Python 数据分析&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org83c32c4&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org83c32c4&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 参考资料&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;data science community：&lt;a href=&quot;https://www.kaggle.com/&quot;&gt;https://www.kaggle.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg,cfn</name></author><category term="python" /><category term="Python" /><category term="Python3" /><category term="数据分析" /><summary type="html">1 学习准备 1.1 学习大纲 Python Linux 基础学习（阅读书籍推荐《鸟哥的Linux私房菜：基础学习篇》，也可以参考我写的小册子：Debian GNU/Linux） 使用 Python 进行数据分析 应用实例 1.2 课程安排 注意：选项后面的数字表示课时</summary></entry><entry><title type="html">代码</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/10/06/code-4/" rel="alternate" type="text/html" title="代码" /><published>2020-10-06T00:00:00+08:00</published><updated>2020-10-06T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/10/06/code-4</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/10/06/code-4/">&lt;blockquote&gt;
  &lt;p&gt;设计精良的模块和设计糟糕的模块的唯一最大区别，就是对其他模块隐藏本模块内部数据和其他实现细节的程度。——Joshua Bloch&lt;/p&gt;

  &lt;p&gt;The single most important factor that distinguishes a well-designed module from a poorly designed one is the degree to which the module hides its internal data and otherimplementationdetails from other modules. —Joshua Bloch&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>zrg</name></author><category term="软件工程" /><category term="Thinking" /><summary type="html">设计精良的模块和设计糟糕的模块的唯一最大区别，就是对其他模块隐藏本模块内部数据和其他实现细节的程度。——Joshua Bloch The single most important factor that distinguishes a well-designed module from a poorly designed one is the degree to which the module hides its internal data and otherimplementationdetails from other modules. —Joshua Bloch</summary></entry><entry><title type="html">代码</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/10/06/code-5/" rel="alternate" type="text/html" title="代码" /><published>2020-10-06T00:00:00+08:00</published><updated>2020-10-06T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/10/06/code-5</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/10/06/code-5/">&lt;blockquote&gt;
  &lt;p&gt;If you give someone a program, you will frustrate them for a day; if you teach them how to program, you will frustrate them for a lifetime. （如果你交给某人一个程序，你将折磨他一整天；如果你教某人如何编写程序，你讲折磨他一辈子。） – 摘自程杰《大话数据结构》&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>zrg</name></author><category term="软件工程" /><category term="Thinking" /><summary type="html">If you give someone a program, you will frustrate them for a day; if you teach them how to program, you will frustrate them for a lifetime. （如果你交给某人一个程序，你将折磨他一整天；如果你教某人如何编写程序，你讲折磨他一辈子。） – 摘自程杰《大话数据结构》</summary></entry><entry><title type="html">编程</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/09/10/code-3/" rel="alternate" type="text/html" title="编程" /><published>2020-09-10T00:00:00+08:00</published><updated>2020-09-10T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/09/10/code-3</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/09/10/code-3/">&lt;blockquote&gt;
  &lt;p&gt;每个人都应该学习一门编程语言。学习编程教你如何思考，就像学法律一样。学法律并不一定要为了做律师，但法律教你一种思考方式。学习编程也是一样，我把计算机科学看成是基础教育，每个人都应该花1年时间学习编程。——史蒂夫·乔布斯（Steven Paul Jobs）&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>zrg</name></author><category term="软件工程" /><category term="Thinking" /><summary type="html">每个人都应该学习一门编程语言。学习编程教你如何思考，就像学法律一样。学法律并不一定要为了做律师，但法律教你一种思考方式。学习编程也是一样，我把计算机科学看成是基础教育，每个人都应该花1年时间学习编程。——史蒂夫·乔布斯（Steven Paul Jobs）</summary></entry><entry><title type="html">重构</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/25/code-2/" rel="alternate" type="text/html" title="重构" /><published>2020-08-25T00:00:00+08:00</published><updated>2020-08-25T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/25/code-2</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/25/code-2/">&lt;blockquote&gt;
  &lt;p&gt;Interestingly, if programmers work with a substantial portion of the code, rather than just a few lines, the chance of making acorrect modification improves.
Specifically, as the number of lines changed increases from one to five lines, the chance of making a bad change increases. After that, the chance of making a bad change decreases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/thinking-1.png&quot; alt=&quot;The number of code line&quot; /&gt;&lt;/p&gt;</content><author><name>zrg</name></author><category term="软件工程" /><category term="Thinking" /><summary type="html">Interestingly, if programmers work with a substantial portion of the code, rather than just a few lines, the chance of making acorrect modification improves. Specifically, as the number of lines changed increases from one to five lines, the chance of making a bad change increases. After that, the chance of making a bad change decreases.</summary></entry><entry><title type="html">Docker Notes</title><link href="http://localhost:4000/docker/2020/08/12/docker-notes/" rel="alternate" type="text/html" title="Docker Notes" /><published>2020-08-12T00:00:00+08:00</published><updated>2020-08-12T00:00:00+08:00</updated><id>http://localhost:4000/docker/2020/08/12/docker-notes</id><content type="html" xml:base="http://localhost:4000/docker/2020/08/12/docker-notes/">&lt;p&gt;
My email address: zrg1390556486@gmail.com
&lt;/p&gt;

&lt;div id=&quot;outline-container-org3e12039&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3e12039&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 简介 Introduction&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdc71ad2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdc71ad2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 什么是 Docker？&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！
无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdb422aa&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdb422aa&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 为什么要使用 Docker?&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;更高效的利用系统资源&lt;/li&gt;
&lt;li&gt;更快速的启动时间&lt;/li&gt;
&lt;li&gt;一致的运行环境&lt;/li&gt;
&lt;li&gt;持续交付和部署&lt;/li&gt;
&lt;li&gt;更轻松的迁移&lt;/li&gt;
&lt;li&gt;更轻松的维护和扩展&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
对比传统虚拟机总结
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;特性&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;容器&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;虚拟机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;启动&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;秒级&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;分钟级&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;硬盘使用&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般为 MB&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般为 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;性能&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;接近原生&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;弱于&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;系统支持量&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;单机支持上千个容器&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般几十个&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org61fe82d&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org61fe82d&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 基本概念&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
镜像(Image)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
Docker 镜像，就相当于是一个 root 文件系统。比如官方镜像 ubuntu:18.04 就包含了完整的一套 Ubuntu 18.04 最小系统的 root 文件系统。

Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
分层存储
Docker 利用了 &lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt; 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
镜像构建时，会一层层构建，前一层是后一层的基础。在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
容器(Container)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。

容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。

每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;仓库(Repository)
&lt;b&gt;Docker Registry&lt;/b&gt; &lt;br /&gt;
&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/repository/registry.html&quot;&gt;Docker Registry&lt;/a&gt; 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。
&lt;br /&gt;
&lt;b&gt;Docker Registry 公开服&lt;/b&gt; &lt;br /&gt;
开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc879d25&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc879d25&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 常见操作&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5f955ac&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5f955ac&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; image&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;$ docker search ubuntu
$ docker pull ubuntu:18.04 // &amp;#33719;&amp;#21462;&amp;#38236;&amp;#20687;
$ docker images
$ docker image ls -a // &amp;#26174;&amp;#31034;&amp;#21253;&amp;#25324;&amp;#20013;&amp;#38388;&amp;#23618;&amp;#38236;&amp;#20687;&amp;#30340;&amp;#25152;&amp;#26377;&amp;#38236;&amp;#20687;
$ docker image rm xxx
$ docker history nginx:v2 // &amp;#26597;&amp;#30475;&amp;#38236;&amp;#20687;&amp;#20869;&amp;#30340;&amp;#21382;&amp;#21490;&amp;#35760;&amp;#24405;
$ docker system df // &amp;#26597;&amp;#30475;&amp;#38236;&amp;#20687;&amp;#12289;&amp;#23481;&amp;#22120;&amp;#12289;&amp;#25968;&amp;#25454;&amp;#21367;&amp;#25152;&amp;#21344;&amp;#29992;&amp;#30340;&amp;#31354;&amp;#38388;
$ docker image prune // &amp;#21024;&amp;#38500;&amp;#34394;&amp;#24748;&amp;#38236;&amp;#20687;(dangling image)&amp;#65288;&amp;#26082;&amp;#27809;&amp;#26377;&amp;#20179;&amp;#24211;&amp;#21517;&amp;#65292;&amp;#20063;&amp;#27809;&amp;#26377;&amp;#26631;&amp;#31614;&amp;#65292;&amp;#22343;&amp;#20026; &amp;lt;none&amp;gt;&amp;#65289;
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
// 修改、提交镜像（Modify and commit image）
$ docker run -t -i training/sinatra /bin/bash // 先使用下载的镜像启动容器。记下容器ID

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc7cdafb&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc7cdafb&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 参考资料 References&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/&quot;&gt;Docker — 从入门到实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="docker" /><category term="Docker" /><summary type="html">My email address: zrg1390556486@gmail.com</summary></entry></feed>